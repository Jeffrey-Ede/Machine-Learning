(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     92054,       1751]
NotebookOptionsPosition[     90623,       1723]
NotebookOutlinePosition[     90970,       1738]
CellTagsIndexPosition[     90927,       1735]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractFeatures", "[", "img_", "]"}], ":=", 
    RowBox[{
     RowBox[{"NetReplacePart", "[", 
      RowBox[{"featureNet", ",", 
       RowBox[{"\"\<Input\>\"", "\[Rule]", 
        RowBox[{"NetEncoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Image\>\"", ",", 
           RowBox[{"ImageDimensions", "[", "img", "]"}], ",", 
           RowBox[{"\"\<MeanImage\>\"", "\[Rule]", "meanIm"}]}], "}"}], 
         "]"}]}]}], "]"}], "[", "img", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"createTransferNet", "[", 
     RowBox[{"net_", ",", "content_Image", ",", "styleFeatSize_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dims", "=", 
        RowBox[{
         RowBox[{"Prepend", "[", "3", "]"}], "@", 
         RowBox[{"Reverse", "@", 
          RowBox[{"ImageDimensions", "[", "content", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"NetGraph", "[", 
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Image\>\"", "\[Rule]", 
           RowBox[{"ConstantArrayLayer", "[", 
            RowBox[{"\"\<Array\>\"", "\[Rule]", 
             RowBox[{"RandomReal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], ",", "dims"}], 
              "]"}]}], "]"}]}], ",", 
          RowBox[{"\"\<imageFeat\>\"", "\[Rule]", 
           RowBox[{"NetReplacePart", "[", 
            RowBox[{"net", ",", 
             RowBox[{"\"\<Input\>\"", "\[Rule]", "dims"}]}], "]"}]}], ",", 
          RowBox[{"\"\<content\>\"", "\[Rule]", "contentLoss"}], ",", 
          RowBox[{"\"\<style\>\"", "\[Rule]", "styleLoss"}], ",", 
          RowBox[{"\"\<tv\>\"", "\[Rule]", "tvLoss"}]}], "|>"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Image\>\"", "\[Rule]", "\"\<imageFeat\>\""}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<imageFeat\>\"", ",", 
             RowBox[{"NetPort", "[", "\"\<ContentFeature\>\"", "]"}]}], "}"}],
            "\[Rule]", "\"\<content\>\""}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<imageFeat\>\"", ",", 
             RowBox[{"NetPort", "[", "\"\<StyleFeature\>\"", "]"}]}], "}"}], 
           "\[Rule]", "\"\<style\>\""}], ",", 
          RowBox[{"\"\<Image\>\"", "\[Rule]", "\"\<tv\>\""}]}], "}"}], ",", 
        RowBox[{"\"\<StyleFeature\>\"", "\[Rule]", "styleFeatSize"}]}], 
       "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"removeNoise", "[", 
   RowBox[{"contentImg_", ",", " ", "styleImg_", ",", " ", 
    RowBox[{"wContent_:", "6.", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "5"}]}]}], ",", " ", 
    RowBox[{"wStyle_:", "0.5", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "14"}]}]}], ",", 
    RowBox[{"wNeighbours_:", "20."}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Import", " ", "feature", " ", "extracting", " ", "part", " ", "of", " ",
       "VGG", " ", "neural", " ", "net", " ", "trained", " ", "on", " ", 
      "millions", " ", "of", " ", "images"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vgg", "=", 
      RowBox[{
      "NetModel", "[", "\"\<VGG-16 Trained on ImageNet Competition Data\>\"", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"featureNet", "=", 
      RowBox[{"Take", "[", 
       RowBox[{"vgg", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\"\<relu4_1\>\""}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Layer", " ", "that", " ", "minimises", " ", "content", " ", "loss", 
       " ", "between", " ", "the", " ", "input", " ", "and", " ", 
       "synthesised", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"contentLoss", "=", 
      RowBox[{"NetGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"MeanSquaredLossLayer", "[", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<LossContent\>\"", "]"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Layer", " ", "that", " ", "minimises", " ", "style", " ", "loss", " ", 
       "between", " ", "the", " ", "style", " ", "and", " ", "synthesised", 
       " ", "image"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"gramMatrix", "=", 
      RowBox[{"NetGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FlattenLayer", "[", 
           RowBox[{"-", "1"}], "]"}], ",", 
          RowBox[{"TransposeLayer", "[", 
           RowBox[{"1", "\[Rule]", "2"}], "]"}], ",", 
          RowBox[{"DotLayer", "[", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[Rule]", "3"}], ",", 
          RowBox[{"1", "\[Rule]", 
           RowBox[{"2", "\[Rule]", "3"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"styleLoss", "=", 
      RowBox[{"NetGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"gramMatrix", ",", "gramMatrix", ",", 
          RowBox[{"MeanSquaredLossLayer", "[", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", "1"}], 
          ",", 
          RowBox[{
           RowBox[{"NetPort", "[", "\"\<Target\>\"", "]"}], "\[Rule]", "2"}], 
          ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "3"}], ",", 
          RowBox[{"3", "\[Rule]", 
           RowBox[{"NetPort", "[", "\"\<LossStyle\>\"", "]"}]}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Layer", " ", "that", " ", "minimises", " ", "differences", " ", 
       "between", " ", "neighbouring", " ", "pixels"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"l2Loss", " ", "=", " ", 
      RowBox[{"NetGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ThreadingLayer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#1", "-", "#2"}], ")"}], "^", "2"}], "&"}], "]"}], ",", 
          RowBox[{"SummationLayer", "[", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], ",", 
            RowBox[{"NetPort", "[", "\"\<Target\>\"", "]"}]}], "}"}], 
          "\[Rule]", 
          RowBox[{"1", "\[Rule]", "2"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"tvLoss", "=", 
      RowBox[{"NetGraph", "[", 
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<dx1\>\"", "\[Rule]", 
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"\"\<Padding\>\"", "\[Rule]", "\"\<Fixed\>\""}]}], 
            "]"}]}], ",", 
          RowBox[{"\"\<dx2\>\"", "\[Rule]", 
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"\"\<Padding\>\"", "\[Rule]", "\"\<Fixed\>\""}]}], 
            "]"}]}], ",", 
          RowBox[{"\"\<dy1\>\"", "\[Rule]", 
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"\"\<Padding\>\"", "\[Rule]", "\"\<Fixed\>\""}]}], 
            "]"}]}], ",", 
          RowBox[{"\"\<dy2\>\"", "\[Rule]", 
           RowBox[{"PaddingLayer", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"\"\<Padding\>\"", "\[Rule]", "\"\<Fixed\>\""}]}], 
            "]"}]}], ",", 
          RowBox[{"\"\<lossx\>\"", "\[Rule]", "l2Loss"}], ",", 
          RowBox[{"\"\<lossy\>\"", "\[Rule]", "l2Loss"}], ",", 
          RowBox[{"\"\<tot\>\"", "\[Rule]", 
           RowBox[{"TotalLayer", "[", "]"}]}]}], "|>"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<dx1\>\"", ",", "\"\<dx2\>\""}], "}"}], "\[Rule]", 
           "\"\<lossx\>\""}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<dy1\>\"", ",", "\"\<dy2\>\""}], "}"}], "\[Rule]", 
           "\"\<lossy\>\""}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<lossx\>\"", ",", "\"\<lossy\>\""}], "}"}], "\[Rule]", 
           RowBox[{"\"\<tot\>\"", "\[Rule]", 
            RowBox[{"NetPort", "[", "\"\<LossTV\>\"", "]"}]}]}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"meanIm", "=", 
      RowBox[{
       RowBox[{"NetExtract", "[", 
        RowBox[{"featureNet", ",", "\"\<Input\>\""}], "]"}], "[", 
       RowBox[{"[", "\"\<MeanImage\>\"", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"decoder", "=", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"\"\<MeanImage\>\"", "\[Rule]", "meanIm"}]}], "}"}], "]"}]}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"trainingdata", "=", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<ContentFeature\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"extractFeatures", "[", "contentImg", "]"}], "}"}]}], ",", 
        RowBox[{"\"\<StyleFeature\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"extractFeatures", "[", "styleImg", "]"}], "}"}]}]}], 
       "|>"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"net", "=", 
      RowBox[{"createTransferNet", "[", 
       RowBox[{"featureNet", ",", "contentImg", ",", 
        RowBox[{"Dimensions", "@", 
         RowBox[{"First", "@", 
          RowBox[{"trainindata", "[", "\"\<StyleFeature\>\"", "]"}]}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Define", " ", "the", " ", "relative", " ", "importance", " ", "of", 
       " ", "the", " ", "loss", " ", "terms"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"perPixel", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", 
         RowBox[{"Apply", "[", 
          RowBox[{"Times", ",", 
           RowBox[{"ImageDimensions", "[", "contentImg", "]"}]}], "]"}]}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lossSpec", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<LossContent\>\"", "\[Rule]", 
         RowBox[{"Scaled", "[", "wContent", "]"}]}], ",", 
        RowBox[{"\"\<LossStyle\>\"", "\[Rule]", 
         RowBox[{"Scaled", "[", "wStyle", "]"}]}], ",", 
        RowBox[{"\"\<LossTV\>\"", "\[Rule]", 
         RowBox[{"Scaled", "[", 
          RowBox[{"wNeighbours", "*", "perPixel"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"trainedNet", "=", 
      RowBox[{"NetTrain", "[", 
       RowBox[{"net", ",", "trainingdata", ",", "lossSpec", ",", 
        RowBox[{"LearningRateMultipliers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Image\>\"", "\[Rule]", "1"}], ",", 
           RowBox[{"_", "\[Rule]", "None"}]}], "}"}]}], ",", 
        RowBox[{"TrainingProgressReporting", "\[Rule]", 
         RowBox[{"Function", "[", 
          RowBox[{"Image", "[", 
           RowBox[{"ColorConvert", "[", 
            RowBox[{
             RowBox[{"decoder", "[", 
              RowBox[{"#Weights", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Image\>\"", ",", "\"\<Array\>\""}], "}"}], "]"}],
               "]"}], ",", "\"\<Grayscale\>\""}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"MaxTrainingRounds", "\[Rule]", "300"}], ",", 
        RowBox[{"BatchSize", "\[Rule]", "1"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<ADAM\>\"", ",", 
           RowBox[{"\"\<InitialLearningRate\>\"", "\[Rule]", "0.05"}]}], 
          "}"}]}], ",", 
        RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"decoder", "[", 
       RowBox[{"NetExtract", "[", 
        RowBox[{"trainedNet", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Image\>\"", ",", "\"\<Array\>\""}], "}"}]}], "]"}], 
       "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.726913243376151*^9, 3.726913273680238*^9}, {
   3.7269133484748864`*^9, 3.726913394241829*^9}, {3.7269134454593163`*^9, 
   3.726913451260016*^9}, {3.726913534128227*^9, 3.726913611221797*^9}, {
   3.7269136704498215`*^9, 3.7269137012487693`*^9}, {3.726913819701271*^9, 
   3.7269138345737686`*^9}, {3.726914256811018*^9, 3.7269142660697813`*^9}, {
   3.7269147769923096`*^9, 3.726914791015956*^9}, {3.7269148812828655`*^9, 
   3.7269148965761786`*^9}, {3.7269190071899304`*^9, 3.726919041888375*^9}, {
   3.7269197171429253`*^9, 3.7269197212233596`*^9}, {3.7269197636009912`*^9, 
   3.72691977101009*^9}, {3.726919933330954*^9, 3.72691996053572*^9}, {
   3.726920181213187*^9, 3.7269202394914045`*^9}, {3.726920314121786*^9, 
   3.726920315992093*^9}, {3.72692036126336*^9, 3.7269203813575644`*^9}, {
   3.7269206326985693`*^9, 3.7269206344857063`*^9}, {3.7269218978801*^9, 
   3.7269219008990064`*^9}, {3.7269220766716356`*^9, 3.726922145907838*^9}, {
   3.726922256125615*^9, 3.726922272404787*^9}, {3.726922447913312*^9, 
   3.726922466834606*^9}, {3.726922542885811*^9, 3.7269225768951864`*^9}, {
   3.7269226259289427`*^9, 3.7269226365711236`*^9}, {3.726923163772648*^9, 
   3.72692317696146*^9}, {3.7269233634258127`*^9, 3.726923400963558*^9}, 
   3.7269235824123926`*^9, {3.726923740373539*^9, 3.7269237833704786`*^9}, {
   3.7269238230223484`*^9, 3.726923826190241*^9}, {3.726923881207841*^9, 
   3.726923899566903*^9}, {3.726924024185004*^9, 3.7269240641934314`*^9}, {
   3.726926272965739*^9, 
   3.7269262749012985`*^9}},ExpressionUUID->"fc41920b-2e7e-4c36-a4cd-\
c271b5b2b1ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgAug", " ", "=", 
   RowBox[{"ImageResize", "[", 
    RowBox[{
     RowBox[{"ColorConvert", "[", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJy0vGdYVGm2Njzv9+v9+f74ruubOTPdreTKOexdu/auvSvnnCM5FTnnICCI
gCgiYEAQMaGiCIgimHPO2uY2dNvaandr5+F76Jk5k+xz5szMu7ykoHZx8az1
rHWHZxcsTMixpPw/v/rVrwr+N/hgiS/B8/Pjy6z/B3xhzy5IT81OTlJnFyan
JucLE+Zf9qv/9Yf/kfS4KMqHC0l0cgyXR+XweDKpRIVCdAxFxXwWm4ZiKE+i
EWE8QgjJjJhIISBzMAwTclRKrV7nchrlaq3eZVc69Q4rbtDIDTqtzqgmTGa/
Sy1VWPX2UEFysLSiZPmSZW319Zl5RYsqKloLc1LTSqrKssxaq8ESn5Ls9hs0
WlggNaM4gcgwnQJVqBQmkxKWGTAJgqg9crmE4PK5KC6QaA06hVTIlUFsqw4W
EDIdjsASKpVA+QgCvpvPojBYIjYnjk5lsIUCIYUZwxKQY6KpFGZkJJtEjqGS
IiIjoxZSYmNiYsgf/u4/KB9F00i//W0UlUmLIwn5IkIqE3A5kFyiVUhkAgJD
IQ6hx0WQ1KRQKFGMzUNRkZCQojIFLNVqrWqlWg7rLSavyxK0GnV6k0qutOj1
NoNGr7erFEqj0+tOyytJyS2vaqloKM9LK60vqu9MsyV4i0sqAxqrU+9LSgga
tBqbWqJXyWBMLpZrMLHSaLLbjWKzRmeSCXVqhQHVSWFUQGULhGKJRqpGJGpC
JoNgCNXoxDiXLsZRLiKBMREmh2ERgsBcAYfBZPIYEUyhkBGzMCoiOi46dkFc
ZEREZASFFPFhXFxsHI0eFRER/bvfRn7w64UfktlMOp3FYdI5KiGTg/N5cpsM
4suEAjaXkDMFHEJhhthsmA8TEhSVYIRSDuM4ptCrtVIBG1Wl2pxmnVRNGNQS
iVaOQ0qlwqa2mJVqs83jdev0obzy8prFhdkJoayS5uoMryuQk+13uy1Oh9Nt
tBt1BqtKolMgbBRjiaUmtpjQmAiNTKrFrQYIVchUuEyCy7lMVMxGxJhKjgvk
GgJiw4hYJBXjLFQthYUwLMDlKM6GRAgzLpbNo3FgPu2jOK6QFvsfC363YEEU
6Xf/328WLIz4KC56YVQMdUEMhR3zm5hYCjn6d1Fk0C8xTCZVwCEJxHwhAxJB
CqNcKoVEPCokpoPmEIpgcI2AWVxUBmZDgOMCBJEprTKzEWeI1GqdzqjAZYhR
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
nd19eVmljYvqy/zBxMKCzFBqfWE4vaw4tTI1sSiruK6ocmnb6jV773/5zee3
nzx48OCzTz8+e/n49LVP/nb8v5v7Bvy7MrJi1eq2vr2btk2MbN7S1VJTUFO5
OKuwpCwnobAou27V2p4VTS3NPZv396ydGN05MXNs6sDEwNZlzUUVJTnJmeFg
OC/TG/L7s9KTMzMdTpXaAOyYWa3x+DUiGo1HlXBJXBFbzAK6BoV5wM2yWEIy
jUQHmi9qAUkYE/lrShRHwuEwGASB8zBA/biIr9SbNG5gZkLerOzs7Nrc9KRg
Wk5iYW19e8vGnjVd3Z0l5XVlbQ1Vae60NIAE9bkpRXWZvuqCwnBGZUNTeWfr
wP7Lx57Nvbn15Onth199d/fetRs3P7v9+V9l//D13HdPvvv+3umVPSuXLNs1
un9ycmr3zo4VTU2LG3LjC6qXZucUFZW19Q+0tG1ds7l3Ys/2gYkTZ66ePHT+
4+nJ/iUVxeVFxVml+cHEzDDwhgG3058VtDpdWo0zqFVrtW6jSAEzBXFMMAEY
zhICEctlMEHyAABiI5mxUTHUqJgYFo1GYjGZkIgt4EgkAr6EkKuMdrMpZLfp
7YkZoaSMjOrm+tys8uqi/KS83uZlq3o71/d3LG3v6SgvbFvZlJ0YSinKr8hK
LaxKzQhXlJYsqmkqra1YvHLX7IVvf/jiyOkzt948f/vy8dt39x7en8/6jyJw
7sWnVz9+9/jqnXvHJ2vaWju6tx46dvDCid0bBnvKq2uX1IerssuKUwobq7s7
V3f2jEyP7tq9fXTfvhdvz++fujy7afO6lq720vj8iuaMtPyyLIDC3hS7U2e2
hgNGW8Bj1lkdWgmhVGhYcXFcGAYWUIRx57kPODyYoADWp8TGRMYBGchjoEIB
KqHT2JBILJagOr3eGkryJgTMhvjMjJRkf05WVU5NUXlRVU1OVfuizv7126cO
bB3efu5IW2tPdXVzRXFKODspBLR4bnJCSXZpc03TkoK6puEtx+9+e/X80VMP
f9Y9r7765scfH33z7bdv/pD984unL17df+nCmct7duxavHpJ68ZT104eOHJ2
3+49G5samuraK7LTKysaGpZ1r+tcuX7b5JEzB2YuHty1Y/+5k/uPnNm9ddvQ
6GR/W3k4rbqwvL46Pb+gODWYmuc225P8/vigQiU3OnQKKQSwjkxnC3ARoDqw
yQI+jnL4Ujk55iMGTSiII1MYNBpHRECQhM+BwIMK2D2N3WZQe4DDSQdKJj0x
kF9VXdTUWL6orTa3srN155ndR66+vvnkxO0r43v62zr7elry0wtDQLGVhDNT
CtKqKjvKVzWuatm299qT80ePXfn0xz/t918Q39zLs4entu+4ePH0zZOTGzYB
PFl//NmNa2du3j59+/GZgVWNS+sbSyp+BSapoa2+uXNocGT88q2v564PDQ33
jxwbP7J90+TkxKmNFVWJhVVFTfUF4dr6qpyCsrKQMyPBk5GhlFqkRr9VI4cQ
MkXARVg0AQRLYYjNgjGxSCBE4mjs+Rsj4Eshi0amIpBMSUAwJMcgQq4waKwW
hyfZE1+SnBHOTK1ub2hZUl/dVFZcV1neMbD3+Nmjn809+uTbb949e7qrZ+XQ
QGfl0ozkyvjE0vzy/LKCkqWd5a11q5Z3TJ07vO/Avb+XPHPfnn/09tbtB/tO
ffz4yefH9+zs3TrUunbk4dznNx/8oTlure3sqiwrLFm2tqOltmt175oNA+t6
hx9/PTd3ZlvbpvH9m45M7T6y5/ChtbUV2YW1lRWF+eVLVrUsyk9PNbtyk/xp
fonebVFrNDKTXiagclAeiSYTq+UIj8zkCSkCAY9DpTPoFDKZxpMIhTwqQwBk
LxuToYRCLJdYzSZLwGVzpueWZeSkZtY0Ny1tbKvKySssaixvaFq5Y3z68o0f
nvz0/buf5t6c29rf09G9oq0lu6SwtLC5vaO5oXXFmtLSruHB9XuOT5988p70
575/+c33nz///MbL3386N/fo4sOprSM7js68Ahf++IJzA4ubG5c1l3d0rmlZ
tLZ3cNPE+raulfueAed4sn9F/5aRmb1bt09MjG5Z1Vna0lC0qKJmMXAGWalJ
iXZ/WlV8yG21uOxqA6RTEXoFXwRTYjgiAQ8DPc6OYUBSBDgfKpklIMXSWDCF
IeLxRDBNOH9OLFEgPMTu83sDaW5fOKO2ojS7umYxQLqy+qr6xorGhqWrNm3Z
cfbZD3deXrv/1bePbu9ZvaqntmtN57Lq8prS4kVtZZUtjb3dq1Ys2b53fMfY
x3d/el/+f45vHl45evXjO7dO3zx78y+evj3Qvby3s7m1pb1zSUXTpp3De1dt
bmnaeffN5aNje0bHRoa2bVyxYdOW5Wu7GlvbGqtrs/ILy+qyc8rSvbm+nNyc
0nyH3atXiuVqVIBIEEJAo/MFdDYMMUXsBXEwhIkYvFg6n0GLimJwyWQywuNQ
qEwWjcWCEBFsMnmszuRsX1ZhZnF7Y01lZf2qNW2Ll3W1Lm7p6hnZtGXryPit
h0+uXP/qy7lXJ65N79zeOdzT1dpdnJtZWdvX2VXXXNu0ePfIwVunJmcefvZf
pz/3/bUjl5+9m7v2+MeHb/9SG21e17thZVtjT0PT0rqu7Tt3Dw709iyfuvTl
k1OnNmzoGR4c2tG5YfsgKHRLa93iQjAqlSVlRenVaca03JzmrKrUkN+mUhjV
BqsOgyU8FsRGICaPM38vNJrKYXFhOkLlkehAA5ABM5AYJAGfL5ThECIQIQqT
xeHwZ+bm5WaFs+tr6uvK6tt6ly4d6sipLmjtWrd919TY5Kk7h+99Ozf37vWD
+4cHWgc2dW9YtbKkZHHZkpaVDXWVxcX1Ww5eeXR396mv/5v05+5cmrky9/n1
k8D8zX3756ffXuvuaG9bXFNfUrOkekV//5qWhu6RwZkHL+c++3isa9mGTX2r
27vWL63p3dLbVrGieVF1ZnlNZ3V5TrojPiW/ICuc4LS65IjSKbZadBBfLMVp
PDIHotO5HA5MZouB1RHFkTkUDofNpSMiMZXGwxGpQiCRKRCpUmbPSgXUs6au
uSyrsn5RY1Hpiv5N6/uWLmlcvmblnpHNWyf3HTp57cX3c998/dnjA2P9jeu3
btzU19HQ2DHYs6hteXVLc3vLisMnX37z6bP/pvvnfvz0/pnXP/345d/W6fX5
LcvbW2raV67vWtyycaS7t7l55dSpu8AuPzt3YP1Q/9oVfeXda5obNo0Ojaxe
1FLdUFa8qKu8vLDAFcpwBtwpmQUJVgUOGVFcopSLlJiIyuPzUDGdzmFzmBBQ
QZBIwJcC88NmcLgAAOkcAIBiCFUplUq9MeDLzEnM7hruaKmsK8mvra1s7lq7
oqqqedWW8R0bxjePHz48uvf43bt37jy5fmB//7rBwe2b1qys7Wzq7mgtq1ux
euO6gQ2br9x/++17U/6b+OwesEh/9+wXxzetWtHX3712yYqli4fHelev6e4Z
mboNCPTy3uN7hoe6Ghqa1q9fP7JhoGfntsqCwuJF8aXNZdmZCYnJLk+mz5ua
6fcoUZ1SJQeAJsJxAZMjRthsNg+iMcXi+bMdJlMCCeN4bBadJQZ2hy7kC0Ri
ASE3OL3x7uyskrKly7YM9i6pa1sFdr55UUtdTXXj2oHBZWv6Vx/ZvX7s8Imx
I2cvfLJ3z9EjN49OrRvduHlwxfqtg41tbW19W/Zt3bbj6rv3pPWe+Onde6ty
fcfm3jXdA8M9jYt+1T+yaeeyno27R/YDcrxz+/T4yNrWnnXLh3ZNbd7Q27qi
p7mmZlFeWkFJBfDpwYyC9KwEb2ZmcapTP//mIjmBsoU4xObBAjqdxmOCRzGL
I0E4MmYUjSnggFGAFAp2TCwLeCMYUXnjE8MpgOdqlo9OnxwbGQCl37l+c3dj
TsWizhV9NbU17Wv6Ngzs2LZ3YuuWyVO7Np68fG580/qR8QNnjvTs3tK/sqWt
Dyx9vP/aP5L8L8X3X04Nr24fHFq1fnldTeeqvo07t63oXLvx8O13P31+7fzM
2Pqm5p6Bmenxvt6lHfVN9TXlZXmpaWV1a3MzAvaQy+t0+fKy/Akmo11nxREB
G5OLgfCjc2IYNAqVwhVxIZYY7D4HExNCAZgEjMlncTBIiCJqVzgxPy8biIpF
faO92+9ODy9evHVi9+CK0tLS4g1ruhfVtw4OD23bsGtq28be9ZumRnaMHpka
7Vp38MDFp68OzO7b27emc/X24R07By//K/nP3Tg41LVp48Y1wxs2rNq0eu34
+u0bNw4NbT9/4fyr+zfOn9jVs65v2+DY1r6Oru7lLRWpxQ1VCZXFzY1lVZmO
JHPA5QqnxHu8VrXJplGpRLgQxmUYlyKg0vlCOoXF5fPFQhTiwbCIzwbtIBKy
GcARIDKp2GE3u4uygOkKL1rc1jW8f3/7ss6VvS0r+xuXVFcvXl6T07V66fqR
oS2nzuzesXlo/67DJ3fNjG3ZOXpsz8ePv304O71nx85VvTtHJvefefOv5b9l
S//awd7e/v7h7q7hkTVrN+zav3XzmVMnLrz58sH12zPd69cMLe9du6F7w0Bn
XU5NfUNFWWVOS0NhWk52yB1KSw4lGk0+nUZhVWpRCYHJ+cz590hzERwWCmis
edDXS9hkJvC/fDEi47D5Qr4QIhRSqdSdllJYGe7sbV6ya3bmzHT/6tXLl9Uv
bq5p6ehoaagqaVpWuWPbiYP7Dh2fPH7w2syBg4dO7R8Z3XX4/rcPnl87umd8
pm/b1o2bNx0/9g8N/y/Ghb1t2/t7W7s71y5Z1js0vGXDwIHBTePHL5y//fzV
zUcPj6+b2DW0bsO25d09fRVpZW3FZXnFFVXVS4oqEpKS/WkpFo3VlpSiwhQa
k0SCEbiAQ+JjOgEwuTwZxOJzaTyFF6VTeSyEBbMhQIcQgsCQVK/RSIOB+PLK
+s7+lRvHbn9+58LmTdvbGxbVZRW1NC5ubG5p7G5btmHizOzI7sG9s0eOT80c
mzp/Yu/IntP35z49d2R688GpXQdmtk6MbDn95b+U/+3D63qWr+rr7ATaemjT
QO/w+PTY3isPb526/8n957dffXXm3MzU3hN717Y1161oAG6zqbQkp7KutqUo
PSUpEEi0SbXOvFSz1qDWqTBEiItgBibhMSEeg4dxRGwahQY4kcWE+EImhcEj
UAYT4UEauUaisadmlmXWLF+9bOXu409vn79+e2K0b8O6FYvr6juaV7Uv7h5a
3Nq36ezEhqnxPXumTt65A7z7w5PbT70EBP7lhR2dO/bNHJ4ZOTx7+fqjfyn/
O5emp3YObFrauXZ979TQ0r4N+++fPvng3Cc3XnzyydwPr19eOnP+4OTFA4M9
nfWrOpq6l3W2FKXlFhRVZIaTslL9QAUF/KEkk8uukuJSHlnAlrKkqEAA1J0A
5vOYXA4fkqFMBGJJUJjDwwAMoDBLrdMbfOGcUEFO88DWqZGJc9c+/fz5432T
E5MHduwa37hh3eqOnIJl3as37dwysH7mwJ7jVz/+/OGDL764efXQ8ddvv3v0
8OrlXeOjw7PT+6ev3D/2Ptv3j8R3c7ffvLxx49jhXfsml6/dugX0fkvt0Iap
O/dmz9x9dPX5/Gu+eXnp8unZE6d2r2tsH+hs7m5uaK5trQ4HsvOq8sI56f60
cEayy2k1Oq0SkZjA2CKCwFA20HgMPo3LpdCYGERCCSYm5InlAqEQRwmYIxQh
MlUgv2JRflJ+784D14/MnH8+9/m9q3tO37ty/MLLawcG1netWNJU27J2ZPO2
mVOHpo/e+fzt42NXHz2+cv3oqc+/vHXu1JUT00eGdu2eOj177M6dq/9U9s9f
fPXkzKO7V68cmJqZHexp2z8+ND60fH3P6r3nTl67+ezL1z/n//2bOw8uPnp+
+3h/Xfvw+pWtLcUN1a2tmeGWqsK8rPzsnAJ/UsDhUNrsFi1BKHG2UAYLuWSA
cBQuogeFYCEYJBCK5s85eRSYL4QhiUpG54hMhkygubPztt28eWny6K25uTdP
P71z+9HdR9ef3rk4279i1Zru1oGeLXv6+qYPX/v6s6+/fnbvxo2710/svzr3
7uKx2TPnxiYmdo1fPHz4yfOnT/+ZrX9x7+nX33355fP7D8/d2Dexfc+Oo9tX
rRrYvnzJ6tHZ6+ev3H/37Q/zL/x27sH5Yy+f3jnY39zc09vdsnRRUWvPotLq
2pKU7HBKKLcB+AB3WsCk0wogLSqGIFiMCkSwBOazCamQx4/jYzgXBfT3868W
sllCEVetVEkUDltyTWNJxdJdn9w/Njl99wvwo9599eDU/Ch/NjF6YO+BXesG
O7ZsGu4eXDd99TVw9j+8fPPqxe0jZ4Av/+LM1bPTO0eGD5w5f/Phy1fP/gn8
f/b7//z084s3ru2d3DO5a3rHlnVbetcMHZ889uizT39483b+LOnHuZdHDr16
fuLwSFvn6jX9Hc21bV0rWhrrK4sy8sJJ4az6cp/T4Mt0a8VCAkNEIlzBZcMq
HgtmsXhsIVfIEojFVpxHiJQIHVcJILEYFESuMDrCubU12fWbD917MLl0+MG8
J/vmj6dW72aPn79/7uSejeuXLB/ee/7i6T/29+tHzx4/vzO/efe+n7t0YGpq
4tTpq69/mP+++fjVP5z8m7+ySr//6pPD40O79wzvPDzZ1wMoZ3T7iVN3Xvz4
9uebx1/88PXNa3fvnz4wtra5vXegt375ypVdrcAOLsnIzcsuyqxIC6S5HWa3
VCZRYbhGr1cwBRqlgk8Ho0+iUxCEzWcgGKzGcLFYpgKyQCZFxGKF1pWTV1jb
0L118tzp2d0z8yfV/+nL3t26+urd+eNbduwd2zo5c+feX3qbPyn4n94d2Xvt
zOVbd7+ae/6eG33/ddz/Gx/w1fkjN87v2z57fH//8Njs2OzAnr33X/3h0rP7
3/1w7NiJmaOzx3Zv6m3qHlm9ZtOqjrbV3bUFOZnFaYWFyeH0RIPGiMuVGv38
7zJiEJMwIQQm5glgOpcrR6hsJqRSmXBUPn8vnM4X6zUitcrqTE7ILWtuWN7R
2bd95+XXP37zp8X8+PMp1qsjJ3euXbV5ZOby0x/en8Slo1dfXr/w+s2PP77/
+vvjB/Dq5z/8tQX++vzM6cePD+8bnZ7cPDU1Mjmze8PW/W9++Aa47rkfz8/9
eOz8hYN7Z09N7l7Z0DM+unH36pHBZS1VGWnhqoKUVH/ImxgwKXEpR4KJRGwB
ymSJCLlIwmfA9EguPO99ORIVIZchhFKuUknkWo0aRY1GjS+tctHSuvYVrc07
d5/988bOvfv054e7J3YPb9s5eerTL34hk+dXnnz7zS9c++V4N/d3xwTP7718
9Nmz+7M7tmzpG9mxcffw8MGjW47efvPJy69+/OLTi68fn7lw4ezR2enxiR1d
qwbXr+nvXbl8aU5RU25BSmZuRk5ist2ptxgxCOWjQoFILpUJxDLA/AIWLY7B
5TFAt0MwLgXKWCKRaKQSnQbhSHRmt8uftbimoWPtkuGhoX1/TuTx569/XubX
F4+cPDU7cu6Xdve7728/e3p97l+Tfn+IT794+/LWw6mJw7tHRw+MjW1cP7tj
x9aDl2/eeXzvyqWHr65em5iYHJ88enTLysbB9fUd3W0drV2LGsuqC8Lh3GS/
1W9WaRQumUSqgOUqnkAFw1Ipi8LicEQMNoXC4BKEGoOlPBmBEYQCkauNPESv
1tjMwWB4cWtX+9KpDVtO/qeC+e5PZPbd0y9unjh+8sH3v7TqV3PPXjz5q4Os
fzJ+/P3TuScfH53ZNXvi4OHx/WPbR3ZtP7R999TJ/cfu3Hz06u3taxdmTx28
Pnly//oVq4dW1dasWN9Q2ViYk7WoNtfv8nhMbpNc7ZKhRhkhlYiB6KOLEB5H
iIgEdDKJwRWgYh0OYQyBCBVgEIuHSlUGvcpidoQSC+s6mltbO3vGT9z/83L+
vKM/3tl3+O6nv7Ts0y9+evXv2H0Qb7589vDSrqPThw4d2tV/8tihI0ARzo6t
HR87eOHq/Senpw+fPH/t3NThHVN9mwa6SxYvWlEdzstLTSyuzvUbnWajzaxU
YxK92iGFUEI473QxQg7In0Pn8mCEx+PrcRYGYE+FM1GYgWp1iNJsNCaE6pZ3
butq7xvsmXj8p5P7vwLmtw/OnX3vkT6I13ePPJr7n4//e+LHd+9++PaT87cP
XZ7df3Ji5Oje2YnpI/sOjvdt3jIyNnb4wPGZ7dduPjl7YOfE6RN7t24YXNze
0FKdleLPKs5P8PgDwYBCo9W6NSqlSWeAUFTAZTBgPgwjEIfDE2ISQsYXa8Qi
EUqINVqADXzYYNBZ9LjSmVHQtGZ1R13rJqAB3vythH/7+OXNL58+v/zg/QV4
8mj/5Tdz/9ip138X8xP22f0bN2Yvnjl0YHrvob0zu4/vHl7bPbppw5pVBzaN
jE6fOnn6k/GJXefGNg4P9nYvK69tKA7mlZcXBqxGu9tmMCicfqMDZK+2KsUc
gUjIEEoUfAGXwoPFsJSAJQqxyqxUGmxKlVRuwpUOc4rDaHemlBQv7lu1bNWa
3rufvpn75tsXb/+8pudvr524eOXWpSsnd75H3H/91ddzF794Off27y/9E/HD
6y8efPLi3vWzb68cOnLl8KVDu3ZO9a4anBzcvK5nw+hI+8pVa7YemJqd3T+9
u7utcvGyttqGqqTUgoLcnFyLwWRUanQKhVKlMGvlECphcyUA5xGRXMRgUdgi
pgjXCARqPaHHZGaDRKuRqwnMaNPoPRZXsKK0pG7J1rHNm8/Pt/3jzx/+eU1v
vz20b3LvoYMz+/Zf+XsEePXT3O/PPX/0yT+h+98T3zx78+zJg0/v7b955sz9
b+9fmpgZnBjfNTa2c2vf7qE1y/q7O9pX93ev2DjW1V3evKy0rrFqUWVmVn5W
UlZWvMOcEDSrbBiGwDa9UotyaXyFWijkQ2xYEhvDhHGlAEPFZrNMK0V0Bolc
hYswmdShUdqlgdSKhpXDs2dGxh++nefkL/4Kye/v27l9+/DhfVOzd569d8zn
S/Y/Uj6/HF9999Prc8/OXrtz49z95wePHhw5MLZ10/B4T8/QZMfa1RtXrO/c
MNTbvm71yqUdZeHyqpL0rJLcvOLSnIzUdJ8t6HCZLHq5VqohpFKpViQQEiJE
jKEwxuLz+AIxT6XleNVaswKSmbRiTCdR6q1Wi8ziDKYGy5dNXTkzc/Xvp/jF
J5+O7hgeHd8/MXntxdwXc39Pgl/8W7BvPn4eomc375368vWhM3eOHZg6On3s
+OoVB8YH1q3fsW318q6evpXtS5cv6aqrWVGX4cwpSs/NLs7OywnmZgWSElJs
DtADBqVFRegMWkwlQ/givlquhAUQIoNxHMXkMEcLo6BBIBPQgTql3eTxWgmr
zxUIZK/de/bI+Wd/v6bvrj8+M7Z91+Ej5z6+8N5FA2fy3e/fe+WfiC/mSffJ
mcvnTjy6c/XyuSvT+2aB8ZjaM7iyfXjXsvbu/o1bO9oal7ZU1vUuzqqqC+eX
1ZaEi0rDeXZrUiFof7teaySMKE5YMIlZxWPzVTIYYRMKESKRYEJMI9XiMhno
C7larlZLcLlKqzI4naY0V+nuQ9cvvO+exHcvX2zbPrhm5uCRs/+2LH8xfpj7
6Zvvvv720vEjl+/fvHry0t2pPeOT03u2Tgz0Da0a6epq6xza2tNc3dHZXtTQ
WZJXnJSQX5OVmltcEW925Lq1uNaqnv+rHGwebtDiVg3EUIvE82ecShEiFAt4
UqPEoMRVWq3ZJMY0ZgyD5Vqf0+5wGj0F3VMXX71/jO/u2zE8vO3QsTP/19MH
8e73v//ihzcnbz94fX//gZNnzk3vO3P4zInRXRsnBjZtHGxfsmFyoG1xW+eK
jJaW+uzkpILFJZlpBfk5aZbU7JDC7DJYHB61HJVoZDgmkYsJEcQXiHC+3CQV
SsSEVo1q5VqZUitV6hQ6lRZBZTq9xRxyeXzhrsug+b++9wdL8tPzv7QmT67v
Hj126cF7huN98Ysq+R+I33//9uuPv/v+7pnjZ68/Prp/76UTF+4ePnR5ZlPP
uqmxrVvXrOnsHh7bumzR/NsOikuq0oobS2oKC/NCqSkeW8Bvs7hsepNbgyjk
SpMUkWCEDOFBECGVqewaWAjJZQSiVWOIQG3C1KjIoRUodWa1XGP3OC3B7pPg
57+594eb8d9//hdM98PdF6dmjl/4twic/zp+mHv+Yu7Ht3NvHl+78+LSw5nx
y5dnz50YGh2f2jGyZWLfwOqu3lXrBvt6uvpbhte0Nzbk5xeGCzKqi1IKs5Jd
hpBL5wxpvRa9TgZLwXArcRyDYJFErZHJMalYJEYxjGdGDEaFViUh5LjKJFU6
TEbcYHWqAumLR4ET/+Tn8+u37/7ay3z94pOHJw//Qyj/rxbpjwcMz19dfXzx
2andV766OTq+c8f40RNnTu7csnNsy8ia1d0rBlurm1p7Omvr87JzMwryqzIL
8jPsdlPQl5LssNg8ZpNJJpUSRh1GoEIIkygICYEqhMDz8CRClUo3/zdHNGrg
+xQY4D6zxmRy2BKLc5t3fT/37tb9d99/Ovf3au7tiRv/7Xsa/hT/Bpj8Yu71
zVtPPr1y++mVG1P7T09PHjq7bXTy7IWTo5uHt4xN9Xf8qr+uftGSyrzKioqa
8uxwVorX63DZEhIN2pBVhmkNSpNYbRLzMBYEsRGYUCkxLkuMQWqxRqnXA2zU
yzVGvRbV2gENOt1BR1Zxcd3ymXu3do/cf/2+jX4z+/l7nn1/7r9wSPQ/i3d3
nt5/+vTh6dOHps8fO7x9fP+qzvFj5/cOrl41unXvxrXbexuWrBxasqx3eWl1
UU5SSrIvNTPFl+qyG8wWFRdXKfUaJWgBPYSbcB1OyHBCFMsWyQ1Go07tces1
RsIMTKBOr5La3ImZ6Y6E3MT04o6x7d2rz723he/ce/aPFeDHf8MpwM8BlvH8
0Zuz5y9dmTp4YHTi2PT0rkNj+4/v3Dw+uW10cPW6weENy9t6e+pqqutLkwMe
V0J+WkZGatBrcTptVqvZ77QpLSaLQKKXSzEpKiUgJgtIXW9ArzOYYLFWigoI
ndaulJlUZmdSMJwaX1jftHZ444H338C/dPTG3f9isX/V8v8KAfwxAP38NPf2
08sPL5y9d/vU4T1bRmaOHd25f/bQnsEde4ZWjR8bWbdq846+zub25sVdVUXJ
bk9OYX6qN5zrCpqd4XirSWfMMBj1Tj+BqREY18hRDBcTCoM34LRoVXyWRIMw
eRIjqlRoHU6tNWhLysgqyiqu6Fg1/f4T3Otnn/zS4d//jXj1el6I3H95/8r9
K6fP7z0yPjF19fiO8dl93fUD27et3H3i6PTaTZs39PUuWjKwdvWS0qKUlvaG
/JTMDJdTa04M6o0Wq8Oq1RjMOlwlVcilGjUuFf//1L1le1xnsjaaH3LOl/c6
e797Zs+ETJIsamZmZmZQt9QtZmZmhhYzM1pMtsiyBUaZZGb3admZmSSTTJKJ
42TufEic6IpWrfVU1V34MJAwDhoJ8gKc90ICznjDsSAfH18Em8+hkXgymVkn
MfqZE/MHru3/s6V7fe/K3vcz1T+Gj+gnXzif3Lh4Y8oxttgysba6NN4xmFfb
2+WorGzp7W2uGJyYb8opLUqJr0gODg812bUck07FI6DYHAINi0CgvYlkuA+a
Dj5z1g16HgoAU8BAFBoPAWMxIDgW5TIEVCwCRaHgsCQSg+dns/n5Rwf4ReUO
3/2hk/7i5aOfIdhHlH3/7YlSPd9ZP1od6Fq9NLC0vdbXMdndXFTU2tJV0zQ8
2jK6ut1bUVmZlxAdHxmrCwtJsYVZgv0VNKWaicXiCWAkDYJCYhieJ7s7vRGe
EAgShUUjsRQKA44n0hlkNMzNA4AjIKkkIpMr8jMbJHp/qzGzeuzqD3iANz9D
to9i+P+Bt0/evDze3tham1uZnZi7eGWxZ6K3baK9tK27vnFsau1w9+Dh7nBt
e2lJaHRcREpCSkSkn0kfZ5AqFWIchc9HokgwXxge64n0gqPRSAjBGwJx2UQs
m8+g4ahAFIkI8wUAGQwMkckTK9Uag46pMwVrAlOLJo7uf2RR/i08dPGAV3eu
X9q6uz3Us9453rv+cHyoe+HC7Ojo1PLRk/tX7z87vt5cO9leURyZnFOS6B+S
lhpuDQsPESh5Eh6TzWESz6DA3igYCA5HACBgGAwCwNJpFDgZAIecRqCQSDQS
TGaRKTyOQqZVKLRKg9pgMSdUFZe2TvwyL3ZSofqbefhor+6BSwGOnFdXLu6u
Lq4cDIzt7axsDI5MzE30Tq+fGOObN549PZoebGstLSgrzc1LMcWGJgZYgmNc
/oAv5RIJZDoBhsWc94V7IXAEdy8vMNIDS2PyiUgQBAZw8zx1HoIjwylEHoYq
YIt5fB1LLDNZZBEZOcmZpQ0dR79clncfU/+d7+cl7t+7c+vm3tjmtScDy3tr
Y9e3l7eWllfaRp68f7ind5xbUy7f0DngqO2Iii6wxYdbY1LSU7KNVgmNSERh
XPEwGEnA4yhEJPQ8GAJy+QQ6m43ygiHBJyvsYFgCXSfn0YQigUBl4uitAX5y
fWxGckRmalrPxOTyzsaHEtWbR++crx78VFPrCQv4iHrz+IRIPH345Ojti/XD
vbXBjd31y48eTi9dura2sfPhWW5vO5/M1TVVOTp6O5ZrI9MSozPDyytLq+rT
ogLYFDLVFea4Q6AUGIWIRpLxNDgMAcJCURTUZ754EhFBJ6IZNIaUTsIreHSu
3GzxUxl0Kl1ESnZ8XlxiQkV3w8RFF/2aXby4sbG59/jhvR+JgP7+Xn4eQ/yF
eP7CdapeXL93uLm4d2V1c3j3aPf44T/41u2RuqbBgcG18dnpRFtaRlppRcPI
eFNqgl4q1fJ5cBwJh8edHHQqjUqHIhgolM8ply/wweMZqJNtRRyyAA9jC9lK
lVLizzPoBX5BytDwxIKM6Oysgqb+wenRkf6BucsbjaMHV8b2HnwEavdL8eqd
S9ef3rn96v7SjcuLL44eXB7cuvH3lvnj5fGenpHJkfnx2UsV8anp6UkFZV1T
3TmJeiqNLqAgcDQmA3zuazc0FEWGw5AEGh7oBoTA3d18wQgik04jkukYAhzL
YyjlBhlDpVf727WB4ZHJ0THJKblNbY0DrY2jY8OdHe3L+xv9a3d/9Ck/Tvr/
n/DiQ0bq0aM7O3fvb2zO33C+XdpY2P9Hsv3V4sHWwsW9uw/2Hj+5NNiTmRKQ
5RgcHu6vSdSz+BI+Hk9msCgIEBSOxuEJBCSYgUACYCQIEgYlIFFMNhFLJGJw
TCIeLXRxZ65MY9NJVcGhYdHJkSFZjtqc7NqGPkddf1/LwOr64c71H5Ly+fFv
KP8HHD/aXT267ty9dvjk4Yu96zePvv0fb24d3HGpw8Oj51vT9cHRQXk1ra1N
3c3pyXKhSCniMRhUPAwOgWGBcAgIDwejKVQiGe/pCyfAMSgCjyQmE8gkGo/G
U3BYHK2/RiywRsfGJUTEh0aVV1Xn5dUODg3W119aXd4+PL5278n351g/AV6/
fXj/2Ol6yx8ikxePv6uED/ad9w+en8xkrE1V2bOTCnLqanr6uqrjdXKlRqnk
uUguAuwGg4MxWAKHgMQyGAgEDAj0hIKQRDqZIxMw6BQWhaNiSbUKmT1CpwkI
j0+Jy8vNSyjKbaquGOsZGGseHr04e/nGa+fxrW+HBt8fav6NcPLKvx1fPnz1
LTfzdvfuzvbmo7cnOfjtibq0uJDc7JymuYnl7rJIkUFKoAkocBAEgyFQUBgA
lkDFYPEwIAgMBnuBcTg6mckRMaQCJZct0WpM2iB9aLQtOMQWYwnOqq4vKSnI
L2mq6W0anB1dXN062ncen/zqb9WFTw79s7u/C1U8/OYgPj14cLF75n3W+u3t
0aKijMio3NaVkdHpubZCfxVLQCNx4b5MPB6NpRBwSDRTjMACz54F41AYLADH
ZLoCAiqBK2QIZHy1VuUfZPKz2W2BibFhiYWlpUl5FcU9U0MdS6sbAyNXjo7e
Hl9/9J0v8d4cXvvksr//1YffUK39zd7R7W+azjfq60qKczpG55eHxgbailJM
LC4FTyIwhAQ8mUWhgjxxQhoeA/Ty9fFB01DeYA4FhgUgoRQOXynnsvgyi95P
zvNLiovJSE/KyisrqOhsG1m+s/no8qM7W6+O7zqfvH7x5sQg3/nG4/8kIfrt
cPvp/vs8y9snK32zWxvHJ0fx9cJQtaO2tb13bmiqe6pOF2pTcmQiIYkrpLJE
dBQM6kvkKXBEuBcABMCIoe4+dCJTgCOw8CSWWE5kcMTyQEVgUHhkSHhcam5u
elZx8/jk6Pj22vpD5+O7d96cSPvh1J2w/Xc/2gzyG+D7VZl3zvmDa7dO+hT2
byz1rU6Ozdx953zzbHlpYrC2uLCwan54tL0mzBQWKjEbNBwSi8WgY+E4LARB
JpGQUAgEhiGwMd5YOoXE4FBpBJJITibxdAaL1RRmTIlISS3Ir8zNLi/oW52e
X1udf/7qb4Kf4K3zyaMPFvijlT1/OW4vXz26efLNX9y4eXF05cLq/afX1u7f
3L481F5akJreWt/Q2VlfnJ6ikxl0PAmV5HL0UAYUi8ZTqUg0zgsCITJIACSN
RONqiCgSTcTkM5lGe4Q9zpiRGBCUl55TVl1aWzW1eW174crx33oB/hYSPn35
MVJ8vw63DjZeflC/JwcL66sPTirn9+/uDGQXthXnJFe11OXVNcbbzHqVVCQW
MchyIgpPYZFwZCkFz4SBIQgKyRtOgqMZLJGALdTp1VxTmNUeaDJao9KTM7Kz
s/Nz86vbepfWbr3a2Xv7He/z5KPV+n8d/t5r63z18MHND3b5XmVed3NjVW93
V316QlyIzmQO8dPQqDwtB4clkClMPotKwFLREASejCXi8QQICsZk0Zg6fz+t
wd8UGGowhiYkRyVlhcUV5WcXOca2bjifPrr3neTuH0L27+LV/u7+/oPb7946
H7a293Q7MksqS4tLEu3JsRZbsF3BhAoUGBgeTyeRcWQ+jEjwwuNQMBidjmez
yAQShczw02tlEkWg3d9iT4y3hddWpBXmdtU0tkxee/W7H/Sfg+s3F1cPTxjQ
xebO5snhvuHO4pyE0Oj0zCB7QoiBR6SzaVwcm0smYulKFA2DYSKhKAAeyyJQ
6DwaiUyms7kWhcViigyISkhOS6vNz8rL63W0rQxd/R3o7r+BB3d3ht5zkdWJ
iem+S5uXLjiKYyJiQiPUwdGJyUY6nSYQE3yxGByPzCQKKBgSDogj0mhqCgEv
UalZLJpSwQ2OMlnt5tTsotzUtNTshOoOR+/K7uHv6OF/AQ4XZqfe94jvbFxa
6Bnu6htuayjNTou3Gm2BMSnhAVIBX8Qh4aRMqRhH4LFxWByCycES6Xw8ka6T
6yUiOZ2uDUqI9NPGZ8XnJxeUVZQO1Tb1rxz9zIz/D+HnTwD8ajy/uL728P2C
naO97aW+VkdxiyO/Ma0gPsKmCww2xVvVMhZRisLQRTIuiU4lEmBoLBJPoTLY
rPfbZGUCjZ4nDkxKSk9MTi9paCotzMxvLy4Z/Gzr08nwa/BqZ+7C0o6Lmh7f
ffWkt7e7v39uvjS+pDg92KxNjZUHWiQnC9gxaDJFysdx6BwiBcFAk5kEEodM
Y5FEHK7KHGSO9wuMikpLKamtLigqq+4vqR3c/HWjbH/Hb34SHswNjW/vv3p4
wgufjo83T/XOTDSmxyTYZEkJGQmB0RF8AZdFIZM4cCiVLRbSqFQsFYWi4jEc
Jp1KZ8h5JK3eEqK1R2XmFRblFJfktwwMtQwf/LpJ1k+Jmebx3f1b7y3AzbHe
WsfawmpGSkS4zhASnRKiNCjlPAaBwqaRXSEfS6M30EhUNpPM4grE7CCFi/1o
1CptoDEsMDyxuKogp3FkaqCruqnj1n+E6zvB/fWBrtXrH6KxmfaGiqrpm1uO
yrzEYINZYwvUmWRsDo5CcOk61hfHVKqpAi6Dy6TScWQym6flkxlCjcZfHRCd
mJZSUe9ob+sbGBzpG1vb+b3F+tnYuLK4vv9Nze5GS0lu145zt7u+Li3SGuun
NsZGWDhcMg2MwDGILCKDLtIqeHy1UcKVcyU8xmcKIU+n19nVptjElIyqnsbh
tubZjtnhuesfp6H3U+D2ygPn3q1v5g8uVTYNzR7sdo+lZ9piY+IMppgsf6FY
xYAjYAgCg8WVimVsgUqrl5OlFpVex5XKLPbwoBizOTg8ILups72vtWjpctf0
5Sd/QKL7w3jnvPLS+fjSN39aGL7Q23HxsLO5KCc2NdzPEhQbrFbKpDw2mIBE
kRgapesUKEwcmZqFFBo1SrlErtOaXJGvLT8tOrGpvbu5uG5qe2X52qcM738d
Xjxz7j7Y/NC2c/PFra6epuWbexNDdalx1iCdKakgwiJgSjgELAXFFdOwZiU3
KMJPqZCrRQy5VStUKHQ6oy3EPzouLT2ztKEov7p1cmb9eO/3luoX4e39+e33
//DkcKGnfWBpfnt1oDU/2c8QFlfZUWBlU5gMAptB52FxdJVebzVKZDSWxqgK
0EkFKpVe5hev1QcFxMVktXYVOEo7L1zaffkJmh0/Jjbn3pu/1w8W6wcqWrau
zbTXttWlmIyhWY25CRYZjwkD0YQyLYKG0CnNNrVUxtFotGaVTqvz05n0loiY
oPCcorjMhsziirLKydXdO79jbuffwKsrWx/M3+s7s5fG51cOtqYLC/NSYv2M
fjmhVj+eiI5HEig8nUDIkLs+v0oTYAsMVlsUQpFYqAkwGYITQ6Izq1Kyc9Jb
RjoHR2Z29n/iF/6R8Orlm9sH178pTBxeWF9eHlrYurrgqMyIjrFFhCoNeoVU
SEYRXIEunMjhaXQygVIXaFSYFAabhssNCDYGJ6clZpUkpjU1d7SNju3e3p3/
SD18nwYPn1y7t/uhOv9wsaC7c2BwePLKXHtVbmZCZHSkRS9xBXs0l+8jQcEI
klyrY7HoKn+xSK7XqiRchjk4ND8xMLcoOSajuKepuW9m8/7j3yen/2/j6pXr
i6uPXWbw0lZ7a01Tx0B5/+pQXkFpSmSUxRgYwBG46B+WQSXg0UhSfABfqfWP
iTAqeUaDn1WtVtnjUlIC4vMigxOLarpG1z5lm99Hwcvji5c31haP3zjfjbR2
z402dPf2TQ5Up6cXZCeFRFiUQoGIgSFgaCQKkYDABYdplTKNQK2lSQMN/gEh
AaFx9rCM2IKK1Jysko6WC794gP13x7MXN46uHC6fZMMX+wcu9le1jveP9RRF
xSWGxcZHG0VMlpDJ4iFRCiYcBiYEh+mlKrtBZJFawtRGS3yaX3xEXFZKYklq
cXnF4PTaz+7y/sPgpfPVq6sHGycf7u7K7GxTfenIynJrRlx8akZMWESwic1h
MYhEIoGE8oITsQkWo1JiCjCZtUEBav/4SP/IxCRbYFhkXEZRy+Lwwvp/TNT3
d7ie+Pnd/a2T7787cX16rGdsvG+yrTw1KTM3wmox+gl5NAQERsCAETBfIC44
0Kbga6VCtUStU9giTFpLcGRMZGRmjsMxNDMx+XsL8+/gtdN5a3lvZf/17ura
/au7Mxe7O0tLM5OTYhPCrQYRh0OFouBgOBBGROFRsNCoWClHLCGplVq91l9J
1Qb7+SeFRofVNbW1r6z+J/n9f+DV88PRmc2Fke2LO3cPN2fHq0sLi0sbc1Lj
QvRWsZBH4OFICG+QN5XAIFMCE1LkSqNEIOMqxVqxVqDWiSyJheWJ5Y6BnrnF
X5Hw/P3wcvXeXnXT5o27rq93Z3emu6Clq6m8ubaqPE6vNxhd0T4RCibAUCeX
VWKxmhCbWKoXcHVUjpQqEusMcnZgVHJ+Q6Gjo2do8z8m6P0HXjrXRq+uzq0s
H9zef/fm6kB7Y2lWTX1ZbnlOSpZByuWKhUwChcAAM2Bfu6ORGFOQkqMxmlRc
voDHE5hDEqwSeVRqaVVGdcds169aXvi74cbA4pWV5fcB4IPhxpLyhsL8grpc
h6M82iLl0hlsEopCwkJIWK+vMFxcYLiIqbKY5Vq5kC62htlCzdrg4sKk+Jji
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
JSokJbu8vrup/48p//Obzhc393b2r8wvrkxdGJ2bbm2qHe8vr8zJrikrTE+K
twaFafxtSoVNL5ZpxCwMgYJDUdmuv2Ph3l7ecCzEC+AB8PFF+KQGKnUaCUuq
sAQHmYwBSr7J4qfW2JKjo0qKatobHI2bn2is8Zfhzq2H9/ceXr66dHV3eH6w
r39ypKqwpaU+NyemojYjPCzMGG0NsWj9tXKVxmhWCtgMOpXCEYpoUB8Y+Ky7
J9DzawDijBcYDUqyinVGrVRutAebtEabWKy3mgySgOiI1Pzqhpa2mtLOkd9n
ovFf4JnrgV4ebO3f3LlxuHtxYW6oob3WZfqqGkcdJdWF+fGZGeGh2uBwhSXQ
ojYYQ80iJpfGIpNZFDYNdc7D09fHF3z+v4Hn3c+DsOfCAnh+/jyeUqsP0CtN
WjNHpVZKdZEFsbFJBeXDszWjXdOrmz/9SJ8SJ6mee6+cd/cPt6ZWB9fnFi+u
DY8O93d3NPZ1tuWUtleWpSfG+vsFBkQGBwca9Eatgs/E46k0Ch9PhJzy9DoN
wkAg3me/Pu/l4+Zl0olVUhiNypZbJCyzlseTWqgsa2hIiCsCymlpbRltGR9b
uHTv373G47fB6727+7u7lzbmFtZWNpaG+xfne6pr20pqW/vasxy1jblB6QGW
2GBrRJg9xE/5mYRDwxOFHAKNQsIQAOCzbiA4BOntccYT7unmZpTxNAouGcui
avhiIYXCFOnEAo01NiQ0KyevuKm6rKOnrfXi0taD31vmb3D7pCR5eefyvZ3Z
rd3L2y4HMDw+MNxaUVZbWtXYXVWZllvWVZNfGh+eGh9mDbNoQ+QCPpPFZCp5
ZD6LSoYjgUiUDwiDhbsD4BDPc+fVJq5IqWDzeFwqV6egKcTGYLuf2moPs8UU
5Za3l1ZXFxU09o9Nffbjuw4+KU6s8YO9w8fO+YnLyzs7KxdXprvbm2raO1ty
MmuqczJjsxMKC3MKE6KDY+KkYp3MIOZqGLwAMYeGoLHYPiAUFoEFARBIKMgN
fg4CQoUpVWKxkK/galUypdx1/Olig1amtBo1yfGFuWVFeSW5dY6hnrm5odvO
P0ww8PLk6tD1ydXLt9d2JhZHB7tbHd2FufnJMaF52fGp2Q11JVExgcpgFUut
02u0YiRRISRTsCA2AoRFgj3PekN9vaDeXgAgGAzzEyikZJpczRIppSIxiyvn
MmT+OllkgH9GaHh+YVZJal1zS/3I/PTQ4uyNn9UM9NTpPMkbv/utOmdePnTp
4tH0pY35gfm1hY7+3s6B7DRHVVJCeoolpiCvuNrRXFuRGmYwCth6i79NbgkW
iahUAQeP46B9sRC4tw8C4AHyPXXOxQN8AWq+noMj0IQyk4gk4EmlNIFFb1VK
QzOtkUFR+ZlpOfl1/V0tPX2DnSMz69d+zkKf+/efve8Ze+f8KKsfv4/PTsbs
3x3P7F4aXpu40DnYMznjiC9uSgtNy86OT0soLM9NK0tLy0qOMvnLzYHBakGo
XSKgcl1iMsVKCgoGxvqePfP16bNnzwJOnfMBqf0tcgaNwDOqOXgekyHVKzUS
o1xljw2MCfOLjopNyUytzikuK27sHpmb2Xr60xWBRye73x89ff1+d7Hz0cef
mHu/jHRjoq93dr1/anpqvKu7MM8xXJednxObXlxS4ahLToiNTslICIqICrIa
lHptrNLGooplCqFMxOeQ3DFoV/QPdjt7HuoJhJw1BKqVZCrfxBcImXQRj6ti
8zgGf4M8xG5JVOuDggJsmVVdjXV1nd1Tc6sbyytHP1kTdEUn705S0y+fO2//
FjPhx85Xzvs78zMTjf39deMXRsodbXld7V1dVakJ+bUV9WUNCYkJiUkhYcbI
gIRwu87qHxRoonFUfHOoncslU1EYDAQMgniegQB9MAjfEIPMriDzVUQ0iS6R
i2RKmVRstQcEROpk1uDA8PiA4Ljqhsq24aay/rn52Z66+ZV/fQS+XzL86J2z
9x4/cd6/c/vKwkJp58RES11K+XBrWXpZXfdIVnJRXlp5XVm/o6Y4NjAgODQy
IS3EGpcYquUwxGKFUWUQibBEGtgXCoX6+nqfOXsOhPS2Mel8toCvY+EZQqbI
JOMoNQp1iEkbq1WERAf6JUTF5Dn6G6ZGHOV9E7NdI5cuzv54SuDpiWL+Q+rX
P/Q+fjWeO189urf7eGl8sGnhwlRrYV1tRVNFRb6jxhHvOvQx1VMNvV31Gbmx
YYnhkRkZCZEp8Wk2iVyvU3LEYgmbxaYjAFgCBgSAent7eoI9DCoulu+ixyyi
RsgVqMQqjd4klwaE2HT+6lCzOS4+py41I7qlOaO9e2ig7+L66MLVJ0c/FBO+
O3m0p84HL05uCfmwkef183ePPt73P/G+rlf64s729t7m9bX5sYGxto628rr8
/Krcxqb87MzoiOzy6qrxjpLG4YbK1DBbcGBUfmx0lCkuVqkWa5g8Po8nYpK5
JASU4O15zuPMedcbcPfn0rAsHpVOY0hZQoFMpNIKNVady25Y7RpVYkJ6ZlRB
bXFxQ81Qa72jfuLWxsjK7vHG3p0X/zT5/uj1I+eTe861Rwfvl/OcLH874Ywu
h/H4o8ZPr+88nFo8PNy+uLs+XlFe2VyWV9pU19Fa1pqUnV7c3NjcW1Vc09Pk
qC9KDA+IL6iuTQrSqGV8voat1iu4Qg0bDYHCuIhz5zxBnj5gKESroRP4bK6a
I+AxuRw5S6wWMiU6i90WYDdII9OjU0PjSlLTc6oyyyoHq+ZGXdHW/OLexg8U
Rt+9feM8unvn1p27R2+Onr83+998+zcvn7x/Wb/+KJzU9J9c252/sDjZMzIy
0FtR2jJY5Gh0OOpyiztK8loqi+pbR5sr+lscdUVRSRH+lrSC6uRYlUolF0jZ
Bj8FlSnkAAAoLAPkBnD3AQBxUFCAlirlMAgysVDGI1IYbJlaxpK5qKBZLjNp
gsLjYwsKCxKS0rNyq/qGB3uaR2ZWu2eWL35HAb6x8dcevbv5+smj93Le+Dv5
eU8FPhoVOti7dX1rcWd2dGp1eWqwLzu7fKG9pqu8IimrLK+qoKSqs7Ghb62z
uNWRmJUQkWALisvNyooONVsNUp1GJZDRSGq1GEuDE0EwNBiAAgN9kHa1kSvk
sKQSOoeCwhJcOsBgio0arpTHVfD9reH+8VnZSek5xYU1HVNTjpLKpgvLq1e3
Dh7fffmtedinztcvH7+8/7cY6d3x0a1vLjS+9ezjtcW8vnX/7pWNK3enF4cc
U3OTuU1t1eXFZdk5hRnV1WW15cX5FfWlk6UnF5K2pWdmpSXFBxls6fFpyQF2
pUhjtWj5SlcsZBSyGGgc3BsAAIOg7kBwYKSfRiIgCqVcHp8g4gkVPCGZr1PI
NGyKxObvHxZpS4j2T3GFQU21rjAjs7Cku29uZmz39dvjqx+e6uW75y7T9/ab
FXwf+OGLb7Gek3//5sQ1PHn6a/ngk6N7R9eWNzdaOtsnxxurGtodVWUV+XlN
zT3NHWWFpZ01tcuXWkoyC7s6arOz0sMiLMaEiPjk9MTIKKVFpNabbQoDXygm
IDB4MBzgdhYIA/gA1Doemy8g4sliIwNLoJDJVBiSKROxzGqx2GxPTowPigoI
tBU0l1QUVTpqi/ILW1sH1ua2r934cKgfOG+9uvv+cvuPdN/Tv8T+/ac3N2d3
lvrbxjoHGgvr6svKS0obGjoH2tuyMkqbOnvHphYGSrvrCvtzc8JS7TZZWFxO
TmKkVa6XaKgKm0rJ5Er5dAIdD0VAAEAgwOMcUizh4BkUOpbIFxMgaCaFROQI
RYESoVbhMoXmQP+o8JgoY3xadlZdWlF5S3ddT0f/6PLSzNDqg2cPHzuf3378
6Pjpo5ffdwa/0bjY67t72/uz8ytjDcNdTdWOhoGG/rSchuGxhcWxtoqauYa+
5obphYtTNaVl2S6bkBTjH5OYlZ1hMQhpdInObDeIGCypQkzDYVAojDcEcOb0
VxCmREUnc9lYBJWKg0FpXCSSKeQp+HwRiye1ylQqa7jGEJwSkZSck5JWWFM/
MOqoq5vsHZpbvbpzY3Vy4daDo0dP7z89+ulndz7+CFTgYGnSJX9LeffyQEWF
o6Siuii9ZerixfmLc/MDDd2N/R31Q5dXhyrKqvJToiKDIgJSg/XhMUaFy/kH
mVVqFlul53EwHCmdgASc9gGfBwIwDIaQL+YzcUg0Go+AIQV4DI0vZlEZdKpE
oXV5AaUmPCIjOTg2KjSmqCg3v3+8qrl3Ymrr2sXl7cOd0YuXr2/sOh/e+1TZ
ofu3djZ3tsemh9taW3s6mmtyIzO75nfn1pYXNgY7y+tHx3sbOjZGMgur0lKz
/UNiMqOiUuNCooLjlHx/Px4NxxSTiSwCWcXFnTkHOgsEQbxwRBWfLMX7IFB0
Bg0PxImIOJZIqhIpxWKaTsTnai0R4WEmW0R8fnRiYUZiSll5QV2to71/5sKl
ve0r00uzV492b50YvZ/sFH//9X91PPzo0vyV7c2NsY5SR1F3R11OUl5zx2dL
s6MbO9OjlR0z4+OT3WPNGUU1lY21GdaQ8NjsglilNipKqDAZFRwWU0LC4OBU
LpNx6swZX9/zwPPn2XKVi/uhSBwmhY5HUBl4BAknPrk90CoUk8zBAeaYMGt4
XFReTmZ4cl10aWVDS1FOUdtQzej6ytLM/NTlg9ubT37WjMyL9z/1a8dpVrbX
tw4P9qfqixu7eju78uuaV+YWJ+aGFiYurY72jh0ezfUPdRZkF9SOVsQGmSOz
CzICggwBOpZMwmazaGQCgemielAaCejuAQJ4u7ufo8sYNCKewpXRsTwSAk1m
cJhohlYhkAn0YhFbJdIHmq2RSSmxUbGGiKi4hMT8hvz09Kqm9r6OyrbOnavr
+z9zx/GbDyT47a+cqLj34ubVqdlL/bX99R2VtSkZ7Z1b25uLG7NDncs704Nz
948u9YxN95SVFvfUhoVHxtqiLWEZATq50CyXUNAUGpXJUkmoMBQK5ePhef7M
qbPncGgmDoPGc2UiNpsCguKYTCaPxWCxWQqtyqwQ6WwmrdocYjKF6CMyk2Ls
oXmV+SWljY621o6S9pG1pc0rP3Pr37vbv07wv+Pg8upo60R/T/tARUlKWcPs
1bVb964/u7J263B5fObag/m+memhgtS8wprkuKTw6CBFfIZWxpOZzTIeni8n
MKV8LB4JAUPgbq4Y6OszAC8EHIkBAlEoXxKNiQCg0BQ8hUKkEWl0ukDEscik
ygClSSFT6PRRwbFxoQFpEYlp1XUt7c2NlXNTuwNbq7evH3/KGbkn6/Nz841t
9RXVM521JVmtSwcHrsDw3eu7N25emh1fnquvblwYzk1NickNi4oJCjeabEaD
SmuyqVQcGZ9JIkl5ZCIGAASAoZ54tzOnfYBEIt4d4FJ6GJzJArCZCDyNTxMy
GSQsTSSQi4xCttFPZPLTGSItlrjk+JwEc0p2SYGjKLe0bXJheHBx/8nty7/t
ttvv4t2F/qGVicE2h6PA9VdF4/7dyy7mdfzy9s7BysWZuZ6Opq6ZzpqS3KiE
2JhYq8mstVuNgcGhIRo5X8jikBlcCotNokI9vEA+XkD3z9xBHBIcTedhkDwi
FQ3HQgFgKpdMY1CZYhZTyjMYFCRRULi/zRgUZAgLS0iIj7ZZ03OKcpPSaicW
ZobbllbW7n3SIaEbI1evzPQPdDnKCstyyjunruwfXHPemT1c3rq62N0+48hq
aayqqk+LSUxKzE6w+KmVepFOpTSFmfhsBoNCY5IwJDLc67z3eSjUzRN6FuCJ
IQDxVB4Yy8T7oAgwFBDFR8PZdAaT6XKVErlMqtVozX46hdmoDwq0hKeE+/v7
p5UUtg5M7qzPX5ufv/OJe+Sf724sT1wYmxho6ih38bH1w5XB+1cujbWN3r41
2N890NZaX1JQnRUeExORkxXlHx5kD1LL/BVqvdEgZhAIPBYZTSBjvOFgEsjr
jLcPHAPBubgwEXAaCYUA4FAKHoDnnlybhkdzmQQyBc8zmBRchkpI1vD1Op0h
PjMuPighLDWnZWZte21va+mTL0R7tz7SM9rd01VfM9lW2NwxPriyMD+x0Dcy
ub44MNTY5GgeTI6Li7Mbw1LKcvxCIgKjbZmhQVqtUmuVYalospaFRyHIeASL
AvJ19/LwhOEpsLNuKCAcDfJC4TBYAInKQSFgICaajYdTsDQwmcFQqVRahdru
Z7UEBsYn5MVktFc2D18and647rz7KaKe72JvvK2lty4ypb3DUT8w1DnSuzZ/
eaB1faJjbKGnpaCqtTs3Nj8jNjq1viBaZVf4+YWlJidY/TSaIOPJzS5KKe3k
lh8IGw8GQF2vAIiGQYE+JLQvFUEgSuhIoA+VBALgmS47iCIwIDAMBsoy60wi
i8LfFhFgjbQXVFXXdk/1TK9PX9r4my//lFOSb/eHOipKS8KzagorGgb6Dg97
hoZHJpvW18amu3qrMoor27ILHJWJ0UWlKTYlV60MC0uMi9aLlCyDWuoX6KcQ
CVhsCtgbggZ6In09Ud4YCBwLpqMIGCIUSQIDfMBkIBBNQWJwJCaGwMK5QgGZ
UMxTKqQSg9FgUGVWjDX19k6trD5+fnPv9bfF/0SD0s9WW3vbW6rTwlMSaxsa
R+9e7mrqr+oc2TmcHRgd6ympauhOya7KqSlvzI2J0Eu0tuDQyIiAeJVSLOcy
JcF+EhqWzacjvL2xCBT03DkAEALEIBFwGAyGhkBRJ/flIuFeEAyKhidR0GQE
lkjEEeg8rsBkkAk1Rr+A4srqjIKB5Z3vrwP6jVpE/sm8vLnd11BXllOcn1Oe
W5BaUL8+XtFc1doxvL2zOjrdX15Zkp9fmJ2WVNgw7CiLNPgnxVkCIkLj0/34
ZKZCqDAoeEgCCUWDe8BAaCwMAfABoEAoNJhPgiGZeCyASECex2AwPj4QEAhO
ROLIEBgOiSJJFHqZQWn0s0faMsobKhsm1r/j8F3+78X+b9Ag8fbBSeb4zYdc
60mn/1Pn0c3JtrympuTk9ILy2rzoouGb/ekFJTUDc6uzfb2NpcVZZclpRY1l
9ujC4ua8QIE9tyRKYQ6OtXIZJJZGzjUKuWyyL5pFYNOoeIA3DOLh4Q2AY2BE
LAqNh6PPw7lEKAKFxOLQIAiRhGIwQAgCjUXSqrUqls4vJCUnIS2peXDl4bXv
FHefX3+yP73/0VnA23fH70/ZwyfHV58571+9unTjzuqlnrbKtOLAqIiwuNys
xNKqnraY1Mqk5on2qdHOiszC9Pjs1orRgoS0grLcmFBDdFxCjJ5r1AUqmUwR
XYrjshlUmDeQxCAx6CAfdyAE7gsBg30gCNcxx5MIRDaH7AOGeIPAHmAGFkZj
i4hMEotAEensQqkpNDglNauypKxn97vZ79fHV28sjv+cDMgvwbd2Kr/ZuOa8
dfvK0c7C1vz6ZHtldkFeWlJ8ekpuXm2Bo7owu6CxuH1168Z2S0p2QlRWftOI
I8UcnZYbGRpiC7FZLByxLVTIEnPJIjqGIoKC4AgUgUpC0rxPwTBe7j4QMAgK
wZ5sfaa6jADc29vzlAcGhMIBfdAsjYpMF3GkVE2wUKlWWFMKmqvLm/svLn+3
Je7Vk+XFVx/fAPw9XXTt4Nbb45Vbd9/dvDmz1FddUZSbl54QmJKR1tRUWVSc
kdw01ds1ffv+hdqq9Jik2Oz6Yocj0mX2Q8KDAwLMGr1EbDHy+GwmjUok4LgI
KBiPJ2HhcIyPGwRz1h0OhWGhaCQOC4YSEN4wFBYC80QLGDQYCoGkCMlksoRP
4YvCA8z6AFtxSXdZ/cTope9ffPpiZ/u3bBIcv3Ht2tHxSZj95P7OWFdDY0ZS
tH9oaVhKcmVWfmFE4fDi7OzU/FBNRllCkC2htKKrqKkoLDExzt8eEhQV7KeR
BZg4aoGAjpBzXRGArzcBT6NgXXoPpyPP+8DASBjQCwpHwqFeKNcf0DQgnIcX
0yA4JJJM5zGJVAKRr7HKtQqzvaCiq39sfPP7R/2+887V3zICWnrwN/fy4tHx
zkJTXmFKTFRGbnhQdl5MWmFls2NtqqGpsiY3J8YcJE+sHOxLSS2x2WKirIYQ
c0haoEmpUfAlSj6exJJy6BQEnU4Ho9AQABDNAPu4Y9EAMAwIhmKReBQaDSdi
iEgsHYvCQBAILJJEEbDJPBZXLmfp7aGp5fUDB4/2/pnyHd/+mVfh/iDaf8kP
P32yXleWmBQWExMdFR6eWZCYUNxS2tde0JldkJrkrw+uq5yd70vNLw21x4T6
qzQKPx1PqhdzCVohHkEhMskwJAeHQtFxCKjbqfMo7/PeJ87fFwn3Po3EiRls
GoZLx7tcgxeQREahoUhXqMgyyHgivcwa7F88NTdz/Yce6uH++rWfoj8fzT7M
lRaFhRcUJqWGh8aV5MQnJObWFpWXlFaWl2SnZNS2XdqYrUhOjwi3WILMSqFa
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
ssLy40PiQqKSC4sqF4+uX9ld/Imqyd5j58WrfdUNPX2tTY6sIL1BxFX6BRjF
bAZVxGNSIWQ8AQ7DUigYFJlEoRAIUAiKikehcDgyluo6IHQKHnIWRsZAoBCX
13f70u2vn//1rOdpN7cvTn35p//7xef//dWpLwk4FNwHSaL4ws55unsi8Dg0
EHju3HkMFuYJgXt5eaJhUBgaR1ZIwkoSk0sLysJzx9a+6fbcO7iw8/jGwd0r
GzNjnakZ+ZF55Y6G4onZ2Y1nO0sXxzqGHO193TUJsSVl5Rmh9vCk9LSUpLAw
W1xkRlleZkXd0ubo2vUXf0sY/RgtPv7/2zrvJznrO8/7x/0Hrso+g6QJnfvp
p5+cc46dc5gOk7NmRmGkGY1AEiggiSAkQMgGASbKIEy0iWYNGAzYwCbbu+uy
1958t1e3d7uuurPvO3t1dXd117+oStXqmuf7eX/e7/fr6VH3P/3k26+9+8x3
37jr2NrBrf0La0v7V+cWaiHQvOOUwlwuyPcalVLZK5UcS/DqrZpjlEOrVgLU
V/J93Q49SxIUJgvGm0VSMYJMgMVPxsZG9nw1QhJwYHkyjbsSrpksWADTcA2B
VTVNNGTdZ1i76Jma4Bbai5urR68+e+Wxc1ef++QvfvYfd79g+s//81//6pe/
+vF7T9x46bm7jm6e2Hn0+iOXn3/vnc9/8/tfffjUszffevvll59+/u4zl66c
OX9k8+iJzeO3bR08d3x76/x9x+6576HHXvvs8y/+ApS93/7bHZX/752zf/n9
P/z882+98sv3bz57+8bi8vLU4uywM9ObHJRqxbBUCBUlVytXi+VGWHKDXlUt
tBxf8jtOaBSrjYqta6JbMRyGwGCKSFMklkzHQegnKHj861/fNwqhVLpeYGlK
oDhGVnVTCk3SDcEV503XDAKF0ZScxdgmS+UGnc7hhx68fv+VJ1588aVnPvwv
v/8P//gnf/fbX/z60xceuv/0w2cOH9pYuv3kXae/8cI7L3/+97/7/O3vfvD9
P3z9O4/cePq5B7/5+EMXD9++tXViZ/vA0TM7B3buB1p4+L5rr/zV7/7px+//
w+//9b//5h//8T/9P3dP//V3APi//PjmW++98u6jT5w+s7UwO9kYDHU3n6/n
h2U7qHXy9XJYqYKGVq4bVkErhqJvGlaxpNui6muB7Ia2IwoyDmO0jaXSEAIl
kgiaoSk0GR1NwRSEIvVQEcHMWdHRJC90NQHnDUkmJddXgRIYRZSBEmjaqjYa
q+cuXH7y5mvPfvvZp777R59/8vM/+fXHH3z/29cuX7xw4d6D57ZWDpy448T5
b1578v2/+/u//PSjV9588y8eefiBex49e+ahM8dO7GzsHN7aPnD8jpM7d9xz
4cS5c1cuPPmjX/7zTz771W9++w9//dc/++nf/F8G+D9P4Ffvv/rqMy++8tSz
1+7aOLaytjLRaPUrlpdzSg3L9AtdoPBcoRqYcqnp6DLru25ZUW2TA09xSZrj
HUNmcU4kSFoWUQjGETQeo6B0Np2AMiRBkngspZiy7hZcVWMEnpNokI2GZIgc
pytu4OiqRHIqqyp6qRH095998OEn3/r0pe89++4ff/Hh9z/+q1+8/8yVy5cu
n7r9/PH9G5vbx87c/eCFy9duvPXRRx988dm7H7/32btPXL104fjF2zYPHDy0
dO7C/PrqzuadR0+duff00Qvnrly5duOj9z/9+Ldg9X/3Zz/brQT//N/+z3fR
/+nPPnzhuUduPHbqm2dOHtneP7/7xbXrkzU97zf6IbDsWr8X+E61VzH9fMkr
27rv+HVDKXqamXcdCUtnVNeiKFbgDQSUXQRD0EQcyQAdJFIUlUGS46mRhCSr
PJULDU6SRDmbkTRVUUXV8RTFzTGsLOK4LZh+rp4vTG6fu3rjux988sWbT37w
0z/+5PM3fv7r9x978PLjD2wuHlppre2cPXX0zMV7Hnzsh+++9fYfffjRH7/7
4/defer6xTN3nd7ZnpmZXNg8tj63dObwyubObSeO37554dSJCxcf+fIn//ab
BH/72c//8tf/8ref/uJ/5+rfffHJD79z+ZmHL9157OhgstGbGQynGu1eu5wP
9Kk+F3q50nQlbDcbjWoAPL/YNB0QXhwuhr4h2SphMGSGU01P5CmaQWIQh1Ma
mkT4bIbEIDyTjkaTaSaZEkkhK5bzhmKwBC/BhKB7MiPxOgXOBaVlI5uUFTYE
6BT2Nq+89eWffPLpJ9957Zc/fvulN9748PNXnvvej148ef6Ok8cOnjl74u7b
Dh559OoLz978wR9+/uoXH378w7duvP/mN85u75w42ugN51YWVg7PndnYWD1y
6sjGbRvHt2Yvnrr6vVff2w3TL3742Sev/9kvXv3pr/9XGvzz2zdvPHPzxsUr
F44sDyeq1cZEa9DstsulXrtW7PccHpQWJ6h0Ws1W0wlVPV8WBU8wZdK1rcBx
GYGSAcVInuNKCKyyGCryMQZFaGB/UAZOZWL79qEkk80A/XPFQtHjiVRK5HCC
pQVGFESSVlVTJTgGw9Xdz8nhxXJ7+dj1N2++9NEPP/zBR2//4OY3nvjg7W89
/c5nV49t3Xfhyomzp3ZuO7D/jke/8/obz9380Udfvv7B916+fuONtx+5f+vk
4RNLvQNHT60vrJ88MLu+uLJ5fPvw9NrS9ulr99xx56Wn3vmbv/n0/ee/e/NH
L3/79Q9/+V9/u2sD//rl9cduvnDpzs3VxflKMVfodCfKk7V2N8yXgkq/6ed1
TQvlAHRzJ18ISrrZNMAPK+uqHoDAthWVEjUzSzKmJQs4pgoMhTNoJh3PpJLJ
VCyVjMVTSCoVSUCOb0uOohd1JE2mxVRa5DSWE2hW4kQxDQmsyKm8k5NlwbFb
3bUHXnjwgW/e+/gLTz32zQdvvPTBa8/deO7qA9dff/bSpYd3trbmdu56/o1X
X37z9S9+/vF7L9x44+Ub71y/68TC4bnV/tThk9ubW9u3bxw4vHjoxPHzZw+v
nzh9+dzxc0dXrzx8340nH3/2nSdeevHJp9/++Ge///1P/+X3v/nG/dcunTux
ODnVaTTz9U61Pz89MPxCuWzmmr2G5Gm8ZYjFui0beVMzJN/VRZFFGUzy5DDv
6a7OUPRXZA2UPpaiJeD6KM8jyUQ0kcwkkBQMZyJxKI1kYMszcEERwRMJ+CsQ
lqZ4gcykMTFkcSyVEFwerIVpaIaCytVib+fOhalzX7n40P1nz5x8+unv3nzq
obuvP/P0lccfefaee86d2Dxy9sHHrz598+Yn33vpjXcee/vl5x56aPvQ0uzS
9sLMxvrs3P7lhY21qeHq8vLhrbXlnWN3ndw+uXXq3LmZI/dceOlbD939zAvP
vPrWr3/2p5//+INXQEk+tX10ebM9NddtzgGRV+od22lMlAu1Qa+gKb7vS3ot
DHOFiqUoul0sugrNMiRLMbIIlpjPQigqiXwaZwUWS2QyGIeCgaMZhMrAaCyT
HtkXS8OxqOlLtCkTtEgRHMtSwP9YIgPDPNgABcVoVshkRMV0VYq3g0J140jv
yO078zsn7r90x8lz17796qPXn3/tkatn7n3+4uGtE+fuvXr3AzdefeW5N25+
/6MXn37xy3fuPX7b4kJ9ZnttdmJmanF5a2bm+OGl25bW1zePHzl6avX4wSNL
J3cOrq6dv/PM/RfuuvPRazdef+lbzz37wuP3XDl/defo0dmV2dnViUGzMT3R
MMuFUh4EfVBvt4qe5QeGJgGzCxxRzfOuVSzaiizRvMpSCCmpIkskYc6WiCwi
gyjAMjAo/TBMkv/2BzQ+vm/vvgSWQURd0TWJIXCUJERJCE1UwaEsiSFphGKy
SfAUTJA0BCUI2cyVc0uLK+vL7ZXj995/YuvU+acfe+Mnn738jYe/+diVA5vb
J849fuXitR989PL159748vP3nnjtw0d2jqwsr04P1+rzU+X6zNzGYre0NLc+
s3//2tbW0bnZhaW5udVjKzubh2Y3tu++69Qdp+984NzJnYvH1m47dvnS8aMb
Uwv9xcVm0Q9ajaIBQFRTLNO1LCeU9JznyarpBpKjCQrtBK4qB5qkiYzMEwin
cJwEpXFJJERBIMgoTIIORCXhrJRNIOksnBiPJFNZKBMTGUGSDYUiSNVgJFpk
WJbBMDgKgoLORFMoDIkUz0cJnmAV1dJz+Xqh31k+efq+e06dvvfat/7wz9+6
8fDl+5++fOrM/u0z91+6cO3F1x979nvv/Omn33/g+sWtIxvbcyvHDiw1Jpul
2sLhjUNLXnV9/+6HERxaWppbXFid6i/N7T96eGZl+tDt2wdPHrrz9KlDO8eW
tg6s3ra5sXy4PTHdXOnVC06jGebyxTDnWOX87puUXgDAl9ctUVQli2bYkm8J
gmPwMs+RDMkAC3f8bBKiBV6iUDyRRbMYjlOZbBqm4pk4iuEYlEAjqSwmCzSv
C6joOxRFsEwmS5A4hwOLpDBADIoBloWnswiWRjmjUHRyZq1R6S3NHz17fG3u
7N333fzBE1ePXbr25PXNA9NbJ2+/8+gDVy/cc/rGmx88f+Xiie3FweShqf7i
WqvV6XQnh4uL3YMTyyvr61Ot3nKvNxysrbbbk5snN49OzizsB9Zw5MjmgbVD
ICIPrw+PHR3OTk1NzkysTJbzfskP8uUwXwFeX3ELs3Wr5FoGixGSqYgqj0k2
rfAkxTAEzKtpXA5kxaqIOEKhFEFQCJxBOASmWBVKQtlYAkpDkejXE8DfKNhj
SFfCEMY0yRSEYmgkvUsJGAqOhwNr5Bkooii0SqMYYRTLruMX892F45tHjh86
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

          "], {{0, 256}, {256, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImagePadding->{{0., 0.}, {0., 0.}},
        ImageSizeRaw->{256, 256},
        PlotRange->{{0., 256.}, {0., 256.}},
        PlotRangePadding->Automatic], ",", "\"\<Grayscale\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"471", ",", "236"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bilat", " ", "=", " ", 
   RowBox[{"Image", "[", 
    RowBox[{"BilateralFilter", "[", 
     RowBox[{"imgAug", ",", "2.5", ",", "0.5"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"img", " ", "=", 
  RowBox[{"removeNoise", "[", 
   RowBox[{"imgAug", ",", "bilat"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.72691904667431*^9, 3.7269190502018986`*^9}, {
  3.726919102868828*^9, 3.726919132981172*^9}, {3.7269192021687965`*^9, 
  3.726919207814446*^9}, {3.7269192517757077`*^9, 3.72691930764069*^9}, {
  3.726919352327017*^9, 3.7269193710564327`*^9}, {3.7269195277592316`*^9, 
  3.7269195542286296`*^9}, {3.7269198180462866`*^9, 3.726919819406112*^9}, {
  3.726920040681329*^9, 
  3.7269200428155756`*^9}},ExpressionUUID->"76a49f7d-1061-4d6b-ad94-\
0cb9b86fbc4c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.726926262726904*^9, 
  3.7269262791331606`*^9}},ExpressionUUID->"814399ac-7cba-4e4d-a249-\
cf8510dea4f9"],

Cell[BoxData[
 PaneSelectorBox[{False->GridBox[{
    {
     FrameBox[
      StyleBox["\<\"\[WarningSign]\"\>", "Message",
       StripOnInput->False,
       FontSize->35],
      ContentPadding->False,
      FrameMargins->{{0, 0}, {0, 0}},
      FrameStyle->None,
      StripOnInput->False], GridBox[{
       {
        TagBox[GridBox[{
           {
            TagBox["\<\"Message: \"\>",
             "SummaryItemAnnotation"], "\[InvisibleSpace]", 
            
            TagBox["\<\"The specified color space \
\\!\\(\\*TagBox[\\\"\\\\\\\"Grayscale\\\\\\\"\\\", Function[Short[Slot[1], \
5]]]\\) and the number of channels \\!\\(\\*TagBox[\\\"3\\\", \
Function[Short[Slot[1], 5]]]\\) are not compatible.\"\>",
             "SummaryItem"]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxItemSize->{"Columns" -> {6.5, All}},
          GridBoxSpacings->{"Columns" -> {{0}}}],
         "SummaryItem"]},
       {
        TagBox[GridBox[{
           {
            TagBox["\<\"Tag: \"\>",
             "SummaryItemAnnotation"], "\[InvisibleSpace]", 
            TagBox["Image",
             "SummaryItem"]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxItemSize->{"Columns" -> {6.5, All}},
          GridBoxSpacings->{"Columns" -> {{0}}}],
         "SummaryItem"]}
      },
      AutoDelete->False,
      BaseStyle->{
       ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
        3, ShowSyntaxStyles -> False},
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
   },
   AutoDelete->False,
   BaselinePosition->{1, 1},
   GridBoxAlignment->{"Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
  True->GridBox[{
    {
     FrameBox[
      StyleBox["\<\"\[WarningSign]\"\>", "Message",
       StripOnInput->False,
       FontSize->35],
      ContentPadding->False,
      FrameMargins->{{0, 0}, {0, 0}},
      FrameStyle->None,
      StripOnInput->False], GridBox[{
       {
        TagBox[GridBox[{
           {
            TagBox["\<\"Message: \"\>",
             "SummaryItemAnnotation"], "\[InvisibleSpace]", 
            
            TagBox["\<\"The specified color space \
\\!\\(\\*TagBox[\\\"\\\\\\\"Grayscale\\\\\\\"\\\", Function[Short[Slot[1], \
5]]]\\) and the number of channels \\!\\(\\*TagBox[\\\"3\\\", \
Function[Short[Slot[1], 5]]]\\) are not compatible.\"\>",
             "SummaryItem"]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxItemSize->{"Columns" -> {6.5, All}},
          GridBoxSpacings->{"Columns" -> {{0}}}],
         "SummaryItem"]},
       {
        TagBox[GridBox[{
           {
            TagBox["\<\"Tag: \"\>",
             "SummaryItemAnnotation"], "\[InvisibleSpace]", 
            TagBox["Image",
             "SummaryItem"]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxItemSize->{"Columns" -> {6.5, All}},
          GridBoxSpacings->{"Columns" -> {{0}}}],
         "SummaryItem"]}
      },
      AutoDelete->False,
      BaseStyle->{
       ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
        3, ShowSyntaxStyles -> False},
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
   },
   AutoDelete->False,
   BaselinePosition->{1, 1},
   GridBoxAlignment->{"Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
  Dynamic[Typeset`open$$],
  ImageSize->Automatic]], "Input",
 CellChangeTimes->{
  3.726921995344144*^9},ExpressionUUID->"14518064-751c-40c1-8a51-\
434052adc01f"],

Cell[BoxData[""], "Input",ExpressionUUID->"8a74141d-b68a-41a4-87f3-f36984e6755a"],

Cell[BoxData["img"], "Input",
 CellChangeTimes->{{3.7269285161020794`*^9, 
  3.7269285166215267`*^9}},ExpressionUUID->"9999765f-a4c1-48cb-ad72-\
a5e7e482e4b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"preprocess", "[", "img_", "]"}], ":=", 
   RowBox[{"ColorConvert", "[", 
    RowBox[{"img", ",", "\"\<Grayscale\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.726918072361847*^9, 
  3.7269181324698424`*^9}},ExpressionUUID->"7cc0f1f6-9997-40b5-a429-\
b01a56d049b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgParam", "[", 
   RowBox[{"img_", ",", " ", "style_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "param", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"noise", " ", "=", " ", 
      RowBox[{"Variance", "[", 
       RowBox[{"img", "-", "style"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"ImageData", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"get", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nRow", ",", "nCol", ",", "nChannel"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"d", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"i", "+", "j"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nRow"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "nCol"}], "}"}]}], "]"}]}]}]}], ";", 
     RowBox[{"fw", "=", 
      RowBox[{"Fourier", "[", 
       RowBox[{"d", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"param", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"fudgeFactor", "=", "100"}], ";", "\[IndentingNewLine]", 
     RowBox[{"abs", "=", 
      RowBox[{"fudgeFactor", "*", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", 
         RowBox[{"Abs", "@", "fw"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Image", "[", 
      RowBox[{"abs", "/", 
       RowBox[{"Max", "[", "abs", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"imgParam", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["UnsignedInteger8",{{{212, 212, 212}, {212, 212, 212}, {211, 
       211, 211}, {212, 212, 212}, {212, 212, 212}, {204, 204, 204}, {208, 
       208, 208}, {207, 207, 207}, {255, 255, 255}}, {{214, 214, 214}, {212, 
       212, 212}, {214, 214, 214}, {217, 217, 217}, {202, 202, 202}, {197, 
       197, 197}, {198, 198, 198}, {198, 198, 198}, {215, 215, 215}}, {{237, 
       237, 237}, {218, 218, 218}, {218, 218, 218}, {201, 201, 201}, {166, 
       166, 166}, {160, 160, 160}, {156, 156, 156}, {159, 159, 159}, {198, 
       198, 198}}, {{239, 239, 239}, {196, 196, 196}, {159, 159, 159}, {96, 
       96, 96}, {19, 19, 19}, {11, 11, 11}, {16, 16, 16}, {16, 16, 16}, {91, 
       91, 91}}, {{122, 122, 122}, {19, 19, 19}, {31, 31, 31}, {22, 22, 22}, {
       0, 0, 0}, {7, 7, 7}, {7, 7, 7}, {7, 7, 7}, {11, 11, 11}}, {{94, 94, 
       94}, {86, 86, 86}, {15, 15, 15}, {13, 13, 13}, {7, 7, 7}, {9, 9, 9}, {
       13, 13, 13}, {3, 3, 3}, {8, 8, 8}}, {{99, 99, 99}, {96, 96, 96}, {31, 
       31, 31}, {8, 8, 8}, {18, 18, 18}, {19, 19, 19}, {23, 23, 23}, {5, 5, 
       5}, {26, 26, 26}}, {{127, 127, 127}, {122, 122, 122}, {120, 120, 
       120}, {82, 82, 82}, {21, 21, 21}, {4, 4, 4}, {21, 21, 21}, {81, 81, 
       81}, {84, 84, 84}}, {{125, 125, 125}, {120, 120, 120}, {92, 92, 92}, {
       76, 76, 76}, {43, 43, 43}, {35, 35, 35}, {34, 34, 34}, {39, 39, 39}, {
       79, 79, 79}}}], {{0, 9}, {9, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->Automatic,
    ImageSizeRaw->{9, 9},
    PlotRange->{{0, 9}, {0, 9}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["UnsignedInteger8",{{{212, 212, 212}, {212, 212, 212}, {211, 
       211, 211}, {212, 212, 212}, {212, 212, 212}, {204, 204, 204}, {208, 
       208, 208}, {207, 207, 207}, {255, 255, 255}}, {{214, 214, 214}, {212, 
       212, 212}, {214, 214, 214}, {217, 217, 217}, {202, 202, 202}, {197, 
       197, 197}, {198, 198, 198}, {198, 198, 198}, {215, 215, 215}}, {{237, 
       237, 237}, {218, 218, 218}, {218, 218, 218}, {201, 201, 201}, {166, 
       166, 166}, {160, 160, 160}, {156, 156, 156}, {159, 159, 159}, {198, 
       198, 198}}, {{239, 239, 239}, {196, 196, 196}, {159, 159, 159}, {96, 
       96, 96}, {19, 19, 19}, {11, 11, 11}, {16, 16, 16}, {16, 16, 16}, {91, 
       91, 91}}, {{122, 122, 122}, {19, 19, 19}, {31, 31, 31}, {22, 22, 22}, {
       0, 0, 0}, {7, 7, 7}, {7, 7, 7}, {7, 7, 7}, {11, 11, 11}}, {{94, 94, 
       94}, {86, 86, 86}, {15, 15, 15}, {13, 13, 13}, {7, 7, 7}, {9, 9, 9}, {
       13, 13, 13}, {3, 3, 3}, {8, 8, 8}}, {{99, 99, 99}, {96, 96, 96}, {31, 
       31, 31}, {8, 8, 8}, {18, 18, 18}, {19, 19, 19}, {23, 23, 23}, {5, 5, 
       5}, {26, 26, 26}}, {{127, 127, 127}, {122, 122, 122}, {120, 120, 
       120}, {82, 82, 82}, {21, 21, 21}, {4, 4, 4}, {21, 21, 21}, {81, 81, 
       81}, {84, 84, 84}}, {{125, 125, 125}, {120, 120, 120}, {92, 92, 92}, {
       76, 76, 76}, {43, 43, 43}, {35, 35, 35}, {34, 34, 34}, {39, 39, 39}, {
       79, 79, 79}}}], {{0, 9}, {9, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->Automatic,
    ImageSizeRaw->{9, 9},
    PlotRange->{{0, 9}, {0, 9}}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.726917523265307*^9, 3.726917596051956*^9}, {
  3.726917683223534*^9, 3.7269177055758853`*^9}, {3.7269177567091184`*^9, 
  3.726917794747281*^9}, {3.726918041962126*^9, 3.7269180544923916`*^9}, {
  3.7269181918587084`*^9, 3.7269182104031487`*^9}, {3.726918568681322*^9, 
  3.7269186594657383`*^9}, {3.7269187139656105`*^9, 3.726918755723807*^9}, {
  3.726918805858684*^9, 3.72691888017914*^9}, {3.726918916930147*^9, 
  3.7269189461928716`*^9}},ExpressionUUID->"d5d9ce7f-74bd-4d6b-9d86-\
c2a3a8daa847"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJITih1b9i67tvKc
vTNXFlN6/kn7xWdNQ/sMTtlfC6y5Zlx31N5UYH/ZOf0HcBomDlMH07e/7oDv
z30n7bUK1Wpk9p2y123q3tz19Jw9S4Lfn6SvN+1Nr7Fwf4l9ZH//6XvTO8x3
7aX3zNFOOXfFflb0+i0Z66/a827lnx9qesk+Ik00w+voWfvC2veb1j86Z9+/
f3r06Rvn7Pd3rr9c63PDvrOOwfZ50G37mbpL2842PrJfrj6vdfvqS/ZLUv3/
zTxxxj6d16K6SO2i/aWti00DDa/ZFzw4fFB09017OY31J5uU79jfiTFOvq/6
0P6b6ieNa3pv7A/P1Nl4Tvyl/VTFWt+b3Y/tExenhP3LuGVvz6Whs0zxmv0J
B+Xtr/Y/sP/75raKRvlD++bSiz9X/X1oX9lg5CZY8cyeAQw+2CvO2CRT8/CV
ve8Ps9iib0/tTaWElD8deWgv895O6t69h3BzYHyYPEw9TD/MPJj5MPtg9sP8
BXMfzL0w98P8A/MfzL8w/8PCAxbOsPCChR8sPGHhCwtvWPjD4gMWP7B4h8Uf
LD5h8QuLb1j8w9IDLH3A0gsA90VLsA==
      "], {{0, 9}, {9, 0}}, {0., 1.}, ColorFunction -> GrayLevel], 
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None], 
     Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {9, 9}, PlotRange -> {{0, 9}, {0, 9}}, ImageSize -> 300],
   StyleBox["\"Magnitude spectrum\"", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7269188405261188`*^9, 
  3.72691888202561*^9}},ExpressionUUID->"6738e94b-2e6a-409a-bdc9-\
13f766e52d01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Variance", "[", 
  RowBox[{"ColorConvert", "[", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["UnsignedInteger8",{{{212, 212, 212}, {212, 212, 212}, {211, 
        211, 211}, {212, 212, 212}, {212, 212, 212}, {204, 204, 204}, {208, 
        208, 208}, {207, 207, 207}, {255, 255, 255}}, {{214, 214, 214}, {212, 
        212, 212}, {214, 214, 214}, {217, 217, 217}, {202, 202, 202}, {197, 
        197, 197}, {198, 198, 198}, {198, 198, 198}, {215, 215, 215}}, {{237, 
        237, 237}, {218, 218, 218}, {218, 218, 218}, {201, 201, 201}, {166, 
        166, 166}, {160, 160, 160}, {156, 156, 156}, {159, 159, 159}, {198, 
        198, 198}}, {{239, 239, 239}, {196, 196, 196}, {159, 159, 159}, {96, 
        96, 96}, {19, 19, 19}, {11, 11, 11}, {16, 16, 16}, {16, 16, 16}, {91, 
        91, 91}}, {{122, 122, 122}, {19, 19, 19}, {31, 31, 31}, {22, 22, 
        22}, {0, 0, 0}, {7, 7, 7}, {7, 7, 7}, {7, 7, 7}, {11, 11, 11}}, {{94, 
        94, 94}, {86, 86, 86}, {15, 15, 15}, {13, 13, 13}, {7, 7, 7}, {9, 9, 
        9}, {13, 13, 13}, {3, 3, 3}, {8, 8, 8}}, {{99, 99, 99}, {96, 96, 
        96}, {31, 31, 31}, {8, 8, 8}, {18, 18, 18}, {19, 19, 19}, {23, 23, 
        23}, {5, 5, 5}, {26, 26, 26}}, {{127, 127, 127}, {122, 122, 122}, {
        120, 120, 120}, {82, 82, 82}, {21, 21, 21}, {4, 4, 4}, {21, 21, 21}, {
        81, 81, 81}, {84, 84, 84}}, {{125, 125, 125}, {120, 120, 120}, {92, 
        92, 92}, {76, 76, 76}, {43, 43, 43}, {35, 35, 35}, {34, 34, 34}, {39, 
        39, 39}, {79, 79, 79}}}], {{0, 9}, {9, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{9, 9},
     PlotRange->{{0, 9}, {0, 9}}], ",", "\"\<Grayscale\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7269179188731394`*^9, 3.7269179293884487`*^9}, 
   3.7269179826756644`*^9, {3.726918017549992*^9, 
   3.7269180297760963`*^9}},ExpressionUUID->"afc626bc-269a-4d3a-b3b9-\
ae5b7d2828b3"],

Cell[BoxData["0.11015916955017302`"], "Output",
 CellChangeTimes->{{3.7269180050536375`*^9, 
  3.7269180308701506`*^9}},ExpressionUUID->"7549c12d-d7b3-4797-8a2d-\
d128d06bde06"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"decoder", " ", "=", " ", 
  RowBox[{"NetDecoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", 
     RowBox[{"\"\<MeanImage\>\"", "\[Rule]", "meanIm"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.726922993018538*^9, 
  3.726923012256261*^9}},ExpressionUUID->"70d0e7fe-1fb2-4147-9d9f-\
d0513a80d23e"]
},
WindowSize->{776, 843},
WindowMargins->{{Automatic, 92}, {Automatic, 61}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 15528, 361, 1226, "Input",ExpressionUUID->"fc41920b-2e7e-4c36-a4cd-c271b5b2b1ca"],
Cell[16089, 383, 59160, 983, 123, "Input",ExpressionUUID->"76a49f7d-1061-4d6b-ad94-0cb9b86fbc4c"],
Cell[75252, 1368, 154, 3, 28, "Input",ExpressionUUID->"814399ac-7cba-4e4d-a249-cf8510dea4f9"],
Cell[75409, 1373, 3941, 107, 47, "Input",ExpressionUUID->"14518064-751c-40c1-8a51-434052adc01f"],
Cell[79353, 1482, 81, 0, 28, "Input",ExpressionUUID->"8a74141d-b68a-41a4-87f3-f36984e6755a"],
Cell[79437, 1484, 159, 3, 61, "Input",ExpressionUUID->"9999765f-a4c1-48cb-ad72-a5e7e482e4b1"],
Cell[79599, 1489, 320, 8, 28, "Input",ExpressionUUID->"7cc0f1f6-9997-40b5-a429-b01a56d049b6"],
Cell[CellGroupData[{
Cell[79944, 1501, 6127, 122, 309, "Input",ExpressionUUID->"d5d9ce7f-74bd-4d6b-9d86-c2a3a8daa847"],
Cell[86074, 1625, 1856, 37, 336, "Output",ExpressionUUID->"6738e94b-2e6a-409a-bdc9-13f766e52d01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87967, 1667, 2111, 37, 42, "Input",ExpressionUUID->"afc626bc-269a-4d3a-b3b9-ae5b7d2828b3"],
Cell[90081, 1706, 177, 3, 32, "Output",ExpressionUUID->"7549c12d-d7b3-4797-8a2d-d128d06bde06"]
}, Open  ]],
Cell[90273, 1712, 346, 9, 28, "Input",ExpressionUUID->"70d0e7fe-1fb2-4147-9d9f-d0513a80d23e"]
}
]
*)

