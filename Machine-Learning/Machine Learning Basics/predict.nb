(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2294291,      44753]
NotebookOptionsPosition[   2248769,      44004]
NotebookOutlinePosition[   2249146,      44020]
CellTagsIndexPosition[   2249103,      44017]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "1.3"}], ",", " ", 
     RowBox[{"2", "\[Rule]", "2.4"}], ",", " ", 
     RowBox[{"3", "\[Rule]", "4.4"}], ",", " ", 
     RowBox[{"4", "\[Rule]", "5.1"}], ",", " ", 
     RowBox[{"6", "\[Rule]", "7.3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7257923048737464`*^9, 
  3.725792377820754*^9}},ExpressionUUID->"d0762d23-5975-4a0a-826b-\
3139bd7b3461"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257923818434615`*^9},ExpressionUUID->"5f1848d5-6ce9-41c7-a172-\
a2ce936d56de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", "1.5", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7257923847620535`*^9, 
  3.725792390175481*^9}},ExpressionUUID->"31eb5b84-5109-40a7-8ea1-\
13410924adb5"],

Cell[BoxData["2.0439193722052895`"], "Output",
 CellChangeTimes->{
  3.7257923913733215`*^9},ExpressionUUID->"37739548-4561-4af7-9088-\
f1c7b2896613"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dist", " ", "=", " ", 
  RowBox[{"p", "[", 
   RowBox[{"1.5", ",", " ", "\"\<Distribution\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725792413320285*^9, 
  3.7257924438643484`*^9}},ExpressionUUID->"86558606-465f-4456-a981-\
41bf1c56456e"],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"2.0439193722052895`", ",", "0.369989042935302`"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7257924504213123`*^9},ExpressionUUID->"09028d29-e766-4581-8366-\
f40847690140"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"dist", ",", " ", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "6"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725792455450232*^9, 3.7257924800341067`*^9}, {
  3.7257925422238255`*^9, 
  3.72579254274975*^9}},ExpressionUUID->"907ef51a-d9da-4d69-a30d-\
5f881cb3c052"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c8V/8X/tibj5EoZBaiomz3njehJWQ1ZUbkS2RVshJFCZHQQLKyIrO4
dpTskJG914comT+/v+7red3Xed7POc99n3OuiJWz4TVqEonER0ci/f95xUem
Y3t7m/ggFeNxNi5M9dfSCfLvlW2i85CTyYNb4aoWdta64zPbxKEsJe6WnAjV
awZxNY1d2wSz0vn4iptRqk6ijAWxOdvEjSxBtdOn4lX960aij5pvE28cmaa/
aKapprDHn7cr3yKw/043R9NWq1JeM/U2eW8SOh+8PNNf/FHNSN/dcb96jWhl
OJsssmKthvkNSDoprxKbfkPahadq1Zy6HrIIla4QtdWHqJlvi6jX8lkP5tP9
JhbFRM8VO/ipr12XYItfXyJKLhGSobb+6odKJlQCFpeI5myn/eASoP7iouMz
g/4lonCt7FlTYaD6jTh3nbmPS0TtfpyRXyhEnVPgYeZ+myVi45zmtStFUepm
+7K8YqsWiRrb5icJ3enqkc7O7/yKFwnTSqpE0cvv1esIuTa77EViUvKhxejv
TPUjFoUHFeMWiSyTMqUkxVx1mkTiV5vLIrE3fCauyOijuvKiP0up3SJha+d+
+LN/gbqjhpZyotkikd7QtUBXWajeOVQf4Xxqkag/1+xyybNEPV20TYtVZJEY
0/C62DpEqHtb9/5NW6UQ68tbT+wXq9X1k0cztFsohKIhU1TUfL266Nic2XAq
hbj/PF8rSqJZfUXiL9nXl0I0yLU6s7q0q+eeZYt7aU8hmooV2ERnfqg7uIuJ
lRpRiBi2/NDsj93qEq9UMrswCkETL/3jblev+mCNvsLKAQrhEMNMun91QD1u
9lo5FxeFOFTru5/x/ZB6huRqmMXqAlHTZ5+xMjaiLuwlnhjfuEB4fDekVNqN
q0d/McjvTFgg1gwF1zhVptSZd9+r5XRfIATs3rU8s55V97NN79I9tUBwF2a9
E1xaUFcNIywcji4QM3z3Vw0WKeorBT+mggUXiNb7kdrXVxfVHeioN6oW54ld
Nx4/e6O4rC4hy/dgsHee2HNmv/A75xX1QeND7Fu184Sv/oMbup/+qJskXxJW
iZsnIhTWB2fD/qmTG2+mmwbOE/xS5dba/OvqX38Hybs5zRP76iWOkj5tqKPj
+Vo5mvPEtLqoAZcECVt3aPjeKDNPmCe8eqspSIUVRg6YTvPOE9zjZD0BcWrs
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
zjcW/vGqA/eOVf7FwcaBOp+/kKintOO8r0z+Yrs5UMshhdJfKW34iNAojYkA
B0qZlvLKYWrDcxNcyY4iHOinZa7WbZdW/HTyU6m4gxyI5T/3feb6Lfju/UKK
H45woBj1m1NWIc34aGqmZr0CB9ItWs1u82nCfd43XP4DHGjXvJU7jX8jnpdH
E2ZozIGMomPPvRupx32PRcbZX+RAdls/3zxlr8d1C4VT/a5yIAHTXDcT9AUf
L8Eqsq9zoHkh18GXRbV4vlpjY+1/HIjv27O1wo0a3K/s0s8+Vw7EERYa2n+i
Bt9b6bnEfI8Dfdq19F/EQhU+qUm/LRLAgbJO3p2vOlOFF9ZEsagEc6D9onxH
TmVV4gb1H8TtIjhQ3Y2rMxm+FXhg84xp9bsdvaoFxa2ln/Fz5+5Y92RwIPmg
FZMS4hMu1M54czGHA9XfKMVGG0vx4k6JR/tKOZDiKbOqta1i/MGFj9GKBAdC
64LVtmLFuGGPZtLZGg5kpixTwqtfhM/2m3+628SBJvjn/p3/VICXmM9/iWzn
QIYuAY5e6x/xoCHvjvTuHf+ipZnXNT7iwmOxc13DHCjHmO3e+aE83GS2fd+x
vxzotFLkMp9NLi7qZCVzZoMDnZe+d+XH2xx81dNL4AOJjMy+94ycfZSN1/6j
l6qnI6P4Ewel7t7MxDNV9XKMGMnoxjjnyyiX93jk3WiFAWYy6qeLstO9m4Gb
b4pp/uEgo0lrb3QnNQ3XwW/U+3ORUUu2iJNdQyou45unx7aLjAR2P+QeWkrB
/5E0LovvIaPijb5Jn8vv8Ge0V90Mxcmo4yGmv+ydhK9a71Zo3U9GY9HBNTTd
ifjV6pYVfSkyUrrAWZOonIhLBxz3PHuIjEqy5eXamBLw8KENpcYjZGQR7ivO
v/wa/4MKV08fJaN5PdLr079e4VXbkndOKu/EU8opCU3xuKT5sOoXVTLS9vmX
I90Rh4eVx69rY2S077FWo+pwLH7pHvu945pk9PVqz2or7wt8ae23L65LRoaU
7HcRPVH4hUtZqEyPjGQWTkj8FojCy0tsqdTPkdGFYvfMn9ee4SFePwNUTHfy
u3Z9/yXmSJzSFXm8+AIZef/2ex1yLQI3VdKlVbpMRodTqtj+qwvHRf6UPzhm
QUb6Ob++sck9xYNMvHTyrciI9DTfuporDJ/9KMcgf42MxDbytB22HuPFt5If
HnYgI0F0RF9lKQQ3WHwUKu1GRpeD0pIPHw/GCw2O66Z7kJHjkcpL2TeCcIHc
DVbJ22Rk1GvP/zn+AT7p5Bwm4UNGj4RiQvw4A3G9Jkn9ZD8yutr60KXU9D7+
UXaYQ+w+Gc1Gq6Q9SgrA/WaNI4QfklEef6gG7Vl/fPwMu+GbEDLyk7t2XfO9
H677/guX0BMyuv8v/pQahx/O56AatTeSjOTzY38fbL6H50zsi+F9SUZMuWCc
mX4b5znx83z0azL619Q9/qjIC7+TEsnHk0hGwxx9duQmT1znGl0cZwoZSe3R
nJng9sAza8ovhaft+ONrwZ+q6Y5ziXvt5XhPRrt7dtnMeLnhv4anX7LmktHJ
J5Il/9ZccS3NZLPQPDJyUbl4X0vHFc9INBNiLtjx4/u52l0vXHAPi5Y3DKU7
8e7NHDZ6N3H2XwVJ1DVkdPrZEe2Q7Rt4COu9e0V1ZGQHQnEafQ44vZrWBccG
MrrOyit7u8Ye34xpY+tsIqMrmEhmRoEd7lUXOxnSSkbBEdNpzWW2+PKyRTV0
kFHA3prSr83X8NlzC17pP3f8M487Wc1hg1/3KzS62kdGzPNJxUyYNT6afe8Q
9wAZlepwjhW5WuG9LKyj3qNkxJaZlUf1xwL/Wiupb7BARpJXV2v7U6/gOssL
UnRLZCR8ptdr2/MyXiVaRFu6TEa34rvMzI0v4SW+2qVia2QUu//f2eXDF/Bj
2azR3Rtk5KWewKx56Dye29fu/GSbjPyzvRm2FU3xNBUrib+0nMjiqkHXfltj
XPy6FCmTgRMtVV0P+RZqhCc8p/RYMHMix2tXlg1LDfEXv33Cv3JwopzDtGPv
jpzDg7Pi11/t4UT6vK8285Z0ceo+q05DQU7UHSy7OF9yBvdhlv7AIMyJuO8H
GNGFncY97IptXSQ4USg1Rl9y6SS+FO2rsV+SE0lnm2dcNTyBO9XoCPRKcyKH
MEu6BWMd3FbkR6vWEU50wYArkfu2Fj6s/zLznzwnmjEv9e2IPY5f9bEOzlbg
RJ+Mura6qzVxk95FdT41TrTvfxWTdzyWfxfHrSKrrnF3Z5OGrFRGbtf3cigp
ESozhCTJSKWf7NGtoaxkhZSMIruSkKRQpOyEMpMkKSkjj+fP83qd8T7nfD5P
/k5t2apD77wunPNVDwMu5+JpmV6Krn7eHpq+G4P5d0dQ8E0tmppKsTXbu8Qf
MhKg5MmitxkrEE9NMNjEkcVvrLqdzg+Y+nb6AAa9j++NVcpp0PJ5j+vlzDHY
l5wUclJOnV67Yndg7CEM1PPj8SZ9VTpNY6WVvh0GmAiUJzpvo0WdO7bN22Og
ZWUq8jVyK409d/py1BmDqLSWk/GzKjRHQMhBTS8MKEFI5nRRpAt/jP99ehqD
GTu1/nBagbZ3try56ywGiSsMzL9Ky9PVxpvHDvhhsNa8YDiAV44+WZsc1R2A
wRsWN18T/0ZaWnO5mkPw0v2ir65GazbQwWt7gzzYGFwyWT41YbyOVknYvX76
AgZv9SMKvc7J0p8ESl/5XcYgqSJ0Jj53LQ3TlxmXojC49Wg8z0tOhl6s256b
kYTBgolK04kZcTqfumMin4LBdO+mWp7nYrRd0crfhWlL9cp5VbI3ROmq5BGo
ysAgU0pcfMFjDe2xcv/IziwMSvvNVOuPM2nJ85URr3MwOLRn5WGW52o60D2u
o+s+BmZDBmecE0laeWDR73AhBn9U26YPPCHoPvMTMiPFGMxtf+9i/BmnadB1
+/kIg+wFzIfTCqP/4ZOcwjUYmJepc4upCtH5Fw5lx9ViYDewuoHxR4C2m39p
KFa3tE/AnL5kAz9dNZyaINeIgYKKhNSOaD7aw3oFKniDgcAj02YHNi8t2Xxm
QO0dBnxgExbLXk4HlO1V2tGBgWG5U/6RTB5aUelRS0MXBg7BAzKKtdx0z621
PiYfMKgqpbXMx7loKuJvje0nDJT1hx8YWnDS87bZlj5jS/kC+DiH+ALKa8H/
/RvHQOP35YhvH+aQjX5gBvs7BhZ2Dd/23p1FFSpmE7G/MDhT2Mi72fUPcsus
viYys6QXNTW5ezYzSFxUUTP9LwaN3JEeYda/kT839/n7/zAI2zX9wvvsL6To
47FJlRMHUbMDh+5f+4l6xt+/KefGoa6wpzqofApRHYUi9Xw49Fg90nSU/YHG
DcSf7hPAwXLVCp4Sp0mU8vSCU7sQDr8Grf/TtvmO5nLsCgZwHHzHN45OFIyj
6vFOj5sMHA5ZJzjuN/uKwlVMlW3WLNUbzt4v4x9DeNmO++0SOEyoc1YX3f6M
uuYq3GKlcRgv048eCxtBadrqisayOKhrZl73OjWM5OvkcuvlcJhfO7aZ13sQ
TfLfdmUr4JDbGcA3fWEAPdwnJq+rjEPIvo4V3zP7kU6H0N0n23BIO5H/YQXn
J7Rc9IKLjzoO8n5/W0/79qFGWw45NU0cXHRiQW5ZL7IcnsrKp3HYuUoomdrX
jSQ3uTmf0MGhWvWYg4DAezTkNrxebicOC0ImNgKdncjzV+edW3twIBoqSz8k
tSPV7aZOdoY43DFYr2wX1YZm/V7Jihkv8fx97+gd04rCuStvxx3EYWv77geM
x++Qob66o6kFDnLmJzdd6n2L8IgCGWFrHNb3DXkdFXyLUvHb6RcO46DKWaPw
UbgJOZqL2e90xEHBxyvQPfM1kkuOk+I8ikMwV0fZFqNXqFTmQpqvKw79HPoz
m5vqkO9RDjsNdxzWSpKzYxkvEdw9J/HLc6l/nDDee/EFeq3iluLujcPwjQ3f
a32fo+gzw4fkfXCYDCoSCgivQeZldmKffXEwPbZ812TqMzSgbZpsH7wULyif
KvnwFOWEvbKSCMMhx7/aN8agCnnU7RDpZuOwvTfwcV1jBfq7Tz3xQAQO7bF3
VNJ5y1FVbIHFqkgcSCI4IbKqDJ3vkGM2RePQTealurEfoVV2YvG74nH4vm40
YFb7Aeq4FWfGnbSUXzPxQWdrKUoZFmJU38Bh2/ANRvaWErTRnSNO89bSP14Y
l+w3K0LjhecO/M7AoUXbaLOnTyEq/jWFl2Th4I3+idwzLEC0/3CMYt4Sf1sj
PQx5iKfazvRLPg73byU8dOm8h15xd63KKsKhIObgz8ygu8g84lWU1KMlfVQW
1nznzEbizTuMex7jENehG+bcnYkG8ErhpAocUu41+7g+u4Pckwuu4jU4jP6q
tT9QdhsVzydfqKld0uv4oofq61voj114yKm6JT9wu+kmfUlHobK23i2NOIi/
+jgafjUN1bF3e4Y248B/7vj88hWpSHB02/GtLTicPlci7pNwA8Xn8dvGduKw
Q8Z2Q9KXRPRB+Le5bjcOi3oxoUm5CUjaq99kqgcH6f1xXfIB8ShXrWzn/gEc
RJoE9QQN49BkQgbNNbzE3ytk8Uf/GlKfjdxe/BkH3RXzl/NMYlF11VFF/NuS
P8pkhhbY0WiZjOmGmu84HBclFL46RiGDMEr61BQO6KDSvdY3V1GbPkG2zOAw
ENrafKX/MhK5908odBYHzoV8cd/wS8hOcIx36wIO/+RMShOpi+jL2+q5GC4C
NFgF+8Xfs5HytrxpnWUENEi73/xZeR6duZ7w/QcvAc6nbdo/Foahf1Yeg6ZC
BBwf7yrTrgpBOyqsejlXEeDY/8zFrTMYXZTU6yzCCRD/uhBK/wlC+KDYa2wN
AYj/rlHZa39kocf74pkoAZGMZpWSA34oJXuqykuCAH3798XhE+fQRreG4ndr
CdDR2X1dyOo/5PamNC9kPQE8CR8F+DaeRcUq6Vlb5AgQbaW1XXi8ETV9NjlG
iQDX4mpvy7FTKMTCMU5HhYDebpfPgT+80MvHRpE/thIwoi1CaCzzQiaB60JN
txNw1yBQsPGmB7r+aaU/pxYBffX84scF3FG37px3ESJggfytfCHiBDrK23Ic
20GAkcXkPfTCBd07XnnkmR4B2c7/8f3wP4YmX+fYeu0m4BKjQdpazxn5RgeZ
vjMi4PQRqXiOZU7o6ZTr3hATArj9TqsVzToiHjNzvS0HCGDckFizsOCAIkWU
NGMsCdAryZ8ukbdHrX5rtukcIsDnqLzLg0w7tKaPW+mHLQGqDiu6Nwjaoozb
3dKmRwjY8QI3F2Jao1Gel6KczgRYj2G9Jx9bIuVjRWSRCwHtpmHzre4WqEzh
Ih/mQQAZW6rLscIMbWljNsWeJODqqa79tzkOonv+2THkaQLmt5Sa8y07gFKb
Xoqu8SHAv1lX8ckWU7T6rPnHJF8CihQ4tn62NEHRkiMZYgEEGLdV9GxiGKNQ
z2VKUqEEnDLmMPq92hDNM6//SD9PQPJds12XSwyQd/W6h2svEBBjGZ3q7LAH
uWA7tTdcIeDlo17P0m+7UP/jVu6cSAJy5y7uTXmlh6wdj9RviiHgRc91h7IH
O5FRSaipUjwBtmfZlR9KdNHLQ/jqgkQCarim3dNe6CDgud2tcoOAaqzRU2AQ
0FazZ0dU0wlYvNCjaxlAo7wFE7mHtwnwG+J8nDNDofVZn8Y1MgnYp+DwXJKt
hdbMLHpr3Vvi80mPaG3fjmJuRrEq8wiw//CtyypBA/HvllqkCwjIkbVoveai
jhYS6Yu6pQR08Af6SWuoorM6bwxrHxKQzlH/km/bNjT5xRbb9XjJP4HCMs1a
W9EAKyB5TxUB1xdr2P5eKujQoODh19UE3Lo+h06zNqO2iBRZo+cEKCblOnBk
K6G6nid5JvUEdO3IsNR9Io+Avder5RUB9x/ppAo5bELlSh/UDjYRMJzcEMFc
I4fyAmerLFoIEEu96RP9cD3asPFy2Ps2Aj4I8Ua5p6xDN5tFdh/qJKDEZvkl
p2hZFCut+c6uh4CQLzezBm7KIIGG+uuf+ghoHvvKkC6XRue9LK0d+wmI0u92
eflUCv1X89/g0ZElf+nHpp5NEEeTrrw5n0cJeNs1xndeRgy5Eglux78SoJ5+
4LhjlQiycXo47TZJQJDg5qBBRSbqENxVPjFFwBjT7sTreQYyftAeeHJ66V4a
OneEekiku3ya98wsARavrY1SX+DoSf75xul5Ag4uBBkFv8GQqgUZ898iASeO
Mdo/D65CG3O2ifrxkJCxXGJv8hFhlG7yvG9+OQmfrPl/72wRRKJ/92cEriCB
dyjIxcxMAAkanFIMFSbh6pUGx5txfOjGs5UCLIyEFL8ZJz1VXiSvef/LD4IE
9eoTJjafl6E9cqNZDiIkbH3QXVsUxo26brLZIuIkKKy+L/nPlQu5MGWd3kmS
4Lwn7WK7AycKX24no7OOhCcW1yOSp/9RjMC5xT8bSBD1jv/8RH2BujOd2Fe4
iQRXke2uxdFzVM1Q6w3pzSS88Nw4+OzSH8rUxsu3awsJ9uxMNesNM9SnVmGr
aFUSdpfI+NR2TFOLNXtWc7BImPY3n6vx+ElJFp9v9dQm4WJ2TdmjPT8o6tbT
6I87SZA7xzU6Vj1BWUfPGhkbkBD30GNIxuor5ROkJvDUmISsZ4WpSSajVLzH
yXplMxIEfr6tFk4dph7Y5rLTrElIOG47eVBtkGozHNEVtichAOdN1sT6qSkt
GY7AoyTojkQktu7vo1Yp2FR+cyXBbVO5/4OJbkpZNMHX9iQJbfMJl46PdVKG
K1o0mrxJ2KLrOBKs1U6d+CM4TfmRgHu/PZrb1ULldIR6ioeTsHEI+Ty930QN
lf75MhdNwvv+EAkPqzpK5pqH04cbJPyJjTny2rqGsvMa6ivPIuEO32a3He0V
1LfRkMpTd0nYWXkke1j2CeVvL5Uin0eCu6Lm7oyIx1SysbVVchEJhw0++dWn
P6Q6ld62nqsgQZ7F9nOpKqKSv2IB3E9JODXbiPY8L6Ts7h7YcPUZCe80Qv6W
5xZQQ+s6fdJfkvCFj6vfQzePmhLrk6h7S4KIUWluo38WJcg/fowcJqHhVMDY
hGsKpTPCO58vxIDauiuXVgeFUzx39mRuX8WAkZ7y2uHtbKreIWJfDc6AOP7I
+p8856l9vcK32pkMePjm0sOW5hDKpo2xa16GARIKW5qcN/tTZ2tko/eoM0CU
c5cS7w0vKjdNe92Q3VK/L9f2NqBD1ITvT14HBwbIXDbIJIusKBWL7K+9Rxjw
McEmOY9lST1cubKk04UB3xuTpz9GmFHVwX06r08xQHJn/8FKXlOqwzHgcHE4
A3rmVM4JU3oU18YnycH5DKhssrzUb6dCWRaoYxL/luYd/H7as5WL8mPfCum5
txo2Fkqdu1WbppUzKnFD2JAJgldSsptHtLTOp7Lt+/YxgUt7ZZRQr6aW/f5v
6/NNmUDxTdRhfzW0mBUVhUYWTBBwn42sS1DVCo869PKKIxO8axsdeuyUtZzU
k37wn2OCtTdT4qKPtJb0eXI3bxYTfGc3FgUpcmvNb/cX6sxhwunJO5snKzm1
ur4NtmTlMkE2dKs225VDK8qixHZXERPWfRqcuCY6z/onv/80u4IJkRZa/fxx
v1g976LSuFuZYFYllczLNcIqC5850trOhCeqiSLFlkOsOK3DmzK6mOABkgOq
zQOsvZnKpbp9THi54+0aP/wTq9ynqSHkCxNWcdbp0Gc6WfFKalGm40zoINhf
w/LaWV4DKQdlvv+f55rjGt42lpyh28fqX0yw1PtRICXyjsXD2XYneoYJc4nF
IVyJzaxPD7Rc7WeZkFFy9OQqlSZWhWvGZpUFJvDYuzll/n7FSpASmF5cZMKM
ZKSE3mg963/QM38D
       "]]},
     Annotation[#, "Charting`Private`Tag$33019#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7257924810010214`*^9, 
  3.725792546134009*^9},ExpressionUUID->"38125cf0-8325-46dc-8280-\
2d23cf1a19c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"1.5", ",", " ", "5.2", ",", " ", 
    RowBox[{"-", "3.2"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.725792586428882*^9, 
  3.725792599911046*^9}},ExpressionUUID->"25360d31-bf31-4123-9772-\
556c0e7b3d80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.0439193722052895`", ",", "6.518918591849529`", ",", 
   RowBox[{"-", "3.640538892967445`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257926032844725`*^9},ExpressionUUID->"7fb931b9-6757-4b58-9a5f-\
5958e1d3783e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"p", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2"}], ",", "8"}], "}"}], ",", " ", 
     RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}], ",", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"List", " ", "@@@", " ", "trainingset"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725792706230587*^9, 
  3.72579274904268*^9}},ExpressionUUID->"006968a6-aa16-4048-bf7b-\
9363a59d735e"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVxXs00wscAPBtIrRiK2ZeP9uvdp3bWUgnxer3pSQ6igqr1fGoLnVLF6uc
wtHJI5c8yjN2pTwOViqJW81vHuWxzCpyu/S4wphHaq1N6Hfv/eNzPqyw03uP
UUgkku9//l8tcukiCALPDxO2CC+RpfmfDvSdVhP4N+X674MXyNJN7nHv348R
+P5Tn9dvE5KlCSNSDd5D4PTYyHLaMbLUeK0PO7GYwDOuRKTe2UGWspsOXSC5
EHhi0yHfcSOy1O/lRS458gd+coXnG0E2SSo2eJ5DGVrAqe4SQbIrgZvl2nQd
Fc7hT6ixZoHW87hvCKM+bcc3fBMh76Js1+I+y3/NrLBX444cx99+JKjxaYn2
rnvmJ3x286eZw4oZfPTd8RrJ1gmcNHSVOLdOifO8Ay/qwofxRDeDcu2Lt7ir
auqMR9gAfoOFsM/ay/CY8yXhWxqf4qTJ8HNMVhHGG3933fV5BaZTptSlES8w
hq4L8eyVY4aCazOdNR+wxQKDpcP9g1gJVVLl4DCOFSiK/vGvHsFWtSqT89bO
YjkDwQe5X1VYknFbW+OcGsvv7v+++uMsVtPrfb2cqcP+6GQF8XhfMX7IswQP
zgI2kPqUlCPQYrzuyogl0wQWwha7pTR/xzjRiqZOCgUsE1RtTcpF7GCFkwNr
Sg+u/t0w41lDgg0q/9XBP/ThQXIX5QGfAkd3l2ZpDAwhkpYmAZUe6B67aERT
RqAwVklFIn1wdst6s3Z+GchGvp1gblgKRlWFUtnYcjgqDywpajUEnnU2t73T
BMrX8M1V0cYwneOg92LCFOIP67scMKBClInoa+dbGhCU/TcKHy+H4EnrUucx
Otg2abKHIkxAF1if1D2xElSVrNzSOFMwLzESqgZXQZE9c8mfATRQpPAt44fN
IO/6Lx2hdnT4K5zUWjhgDsG5h+VUJR1aHq+5/aGDAYvbK+ZKm1eCV8O2PcXP
LWB81CO2NXUV7L3Mmn+HM6Fqi5NVT6gZSG1yAvI6LOF+8hlaONccEqoP3OuT
WEFGwJFdehpzSI88FQp11uA6VFad2sOAZ3Rxo22DDWzYt1FQXGABkhiaXUq1
LVAuWjkVRDNhuL5sXch9BEo31vjkeVuCsD4InAV2cHkos5FNtwJbw2Wq8312
4Lm5fWfhpBXIr5Zp54NYsDtlD1f00BrKC0eSW16ygCNICiiPt4G4HIs1NrvY
8HLM6Oa1AFs4KHWwv9/Dhu6wUXc6gkCPY8uTdC8U3i6p0uWxETDZnPqq1huF
2cqIOiYHAX93X5VsFwpmk5PWLC4Cff5vGFQ/FEJivmgd3BA4JUbDMvgoaC8R
t32DEIib2Wdx5TgKqyuYlmlZCPwsHovJTEfBxWtQQb2GwMkH4t/vXEHBZ6Ik
NTsfgTtPosvkWSic5tppCkQItBo4Na/IReFRA0dRWYtA90/ezKwSFPyeOae0
dyBw4lZtc9ZtFI5EaHg7ZQiIa6P66+pQOGvcqJbJETh0Xn+x9x4KxbtdQ1/1
IxDV3sY0fYjC2GvgDX9EIHZ0UJjdjMJcLEV9TInAo+my9LtSFKhW7dUTKgQW
NOE3Fa0orA/2Ynz+jAANOLhpBwqeZCO5UIPA3p1T/Y5dKPBvdSfpdAjoMRIX
/WQonPDMcItbQOA1P1YvqgeFeKXvF4JAwCJ0q2VOLwr/ApgHRuw=
        "]]},
      Annotation[#, "Charting`Private`Tag$33124#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., 1.3}, {2., 2.4}, {3., 4.4}, {4., 5.1}, {6., 
       7.3}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 8}, {-2.1891875375407137`, 9.905403919329316}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725792755503728*^9},ExpressionUUID->"9f17a633-d49f-4366-a8b9-\
0611d90ee9e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.3", ",", " ", "\"\<P\>\""}], "}"}], "\[Rule]", "1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.8", ",", " ", "\"\<Q\>\""}], "}"}], "\[Rule]", "2.5"}], ",",
      " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.9", ",", " ", "\"\<Q\>\""}], "}"}], "\[Rule]", "3"}], ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.2", ",", " ", "\"\<P\>\""}], "}"}], "\[Rule]", "1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.2"}], ",", " ", "\"\<P\>\""}], "}"}], "\[Rule]", 
      RowBox[{"-", "4.2"}]}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.3", ",", " ", "\"\<Q\>\""}], "}"}], " ", "\[Rule]", "2"}]}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257928679485826`*^9, 3.725792921507267*^9}, {
  3.725792972445148*^9, 
  3.725793073772731*^9}},ExpressionUUID->"ed5ee368-391c-4a0b-925f-\
74db757b0986"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257930791137776`*^9},ExpressionUUID->"59cc3822-a95a-4ab3-b137-\
8444226c5e63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"1.8", ",", " ", "\"\<Q\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257932283774385`*^9, 
  3.7257932606627684`*^9}},ExpressionUUID->"b4329c07-a0f6-4175-821a-\
f36dd34744c5"],

Cell[BoxData["2.499999973339059`"], "Output",
 CellChangeTimes->{
  3.725793262095233*^9},ExpressionUUID->"2b9145f9-1bfc-4055-b153-\
bd1d30363fed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"1.8", ",", " ", 
    RowBox[{"Missing", "[", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257932696995535`*^9, 
  3.7257932794165525`*^9}},ExpressionUUID->"4b55431a-8572-4ffd-af10-\
954d3a615d84"],

Cell[CellGroupData[{

Cell[BoxData[{"2.499999973339059`", "\[IndentingNewLine]", 
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"2.3", ",", " ", "\"\<Q\>\""}], "}"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7257932926409307`*^9, 
  3.7257933133524466`*^9}},ExpressionUUID->"ea34ca63-a90a-4ccb-806c-\
b140565af092"],

Cell[BoxData["2.499999973339059`"], "Output",
 CellChangeTimes->{
  3.7257933144391737`*^9},ExpressionUUID->"24c2e6e8-f34d-4c05-a2d6-\
62bbeb01cd67"],

Cell[BoxData["2.9999999372160047`"], "Output",
 CellChangeTimes->{
  3.725793314445693*^9},ExpressionUUID->"0d6930c9-1cc6-405c-bd97-\
ff5cb1b10248"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"{", 
    RowBox[{"2.3", ",", " ", "\"\<Q\>\""}], "}"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7257932926409307`*^9, 
  3.725793325767729*^9}},ExpressionUUID->"42f64b06-e023-4619-990e-\
676a26594745"],

Cell[BoxData["2.9999999372160047`"], "Output",
 CellChangeTimes->{
  3.725793327358821*^9},ExpressionUUID->"c0685898-ec34-409c-98c2-\
14a1c0a2f6cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"2.3", ",", " ", 
    RowBox[{"Missing", "[", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.725793331753443*^9, 
  3.7257933409503565`*^9}},ExpressionUUID->"5031c71c-c647-41ef-ac35-\
3970787cd5b3"],

Cell[BoxData["2.9999999372160047`"], "Output",
 CellChangeTimes->{
  3.725793341991496*^9},ExpressionUUID->"85974879-d106-443c-939c-\
9f44b4095a3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", " ", "\"\<P\>\""}], "}"}], "\[Rule]", "1"}], ",", 
      " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.8", ",", " ", "\"\<Q\>\""}], "}"}], "\[Rule]", "2.5"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.9", ",", " ", "\"\<Q\>\""}], "}"}], "\[Rule]", "3"}], ",", 
      " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.2", ",", " ", "\"\<P\>\""}], "}"}], "\[Rule]", "1"}], ",", 
      " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.2"}], ",", " ", "\"\<P\>\""}], "}"}], "\[Rule]", 
       RowBox[{"-", "4.2"}]}], ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.3", ",", " ", "\"\<Q\>\""}], "}"}], " ", "\[Rule]", 
       "2"}]}], "}"}], ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725793362467639*^9, 
  3.725793367929984*^9}},ExpressionUUID->"fe0647a6-5c9d-488a-9c94-\
4f64664f2bb0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257933714400053`*^9},ExpressionUUID->"c0dde251-ec5b-4f2b-83d8-\
796eaa421949"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"1.8", ",", " ", "\"\<Q\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.725793386010254*^9, 
  3.725793399343817*^9}},ExpressionUUID->"56e6c605-6ac6-44ae-b0c1-\
4359b17f8d23"],

Cell[BoxData["3.0362224605037134`"], "Output",
 CellChangeTimes->{
  3.7257934003104067`*^9},ExpressionUUID->"272811c5-db0a-4a5d-9f31-\
d8060e470d30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"1.8", ",", " ", 
    RowBox[{"Missing", "[", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257934056431894`*^9, 
  3.725793413867139*^9}},ExpressionUUID->"c7e0e2d1-6344-464e-b264-\
55703756f793"],

Cell[BoxData["2.511151857168721`"], "Output",
 CellChangeTimes->{
  3.725793414561702*^9},ExpressionUUID->"38b4e1f8-931b-4fcc-b23e-\
1982ae6565bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzDwyQZ9qfv3+BenV0dO7fvw80EySCZNSx48c37tu36cABYtDmAwe2
HDy4cefO2zdvAvVqa2ujmfnv3z8g2dLcvD8//2hxMTHocHHxsfLyWampq7ds
AerV1NTEaubkiRP/19f/b24mFrW1nS8rW7tnDx4zJ/T1fa+p+dvQQAz6DSSb
m48UF6/dtQu/mT9rav43NBCDgMYCnXp01MxRM0fNxDDzW03Nn4YGYtAvINnc
fJiQmRP7+//X1v5vbCQWtbScKylZu3s3HjM7OzomlZZOq6oiEs2sra3Pydmy
fTtWMyHg0+fPLz9+fEUKev3hw+dPn4B6cZXz5IHfv39T10xgoAFrNKq7E81M
IPfbt28/KQOfP38GkpA6TkJCgkIXIgNjY2Ng/Q5siuhQAwBdqK+vDzTt+fPn
wKbIfeqBly9fAuMLAPAQtVI=
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "40.2`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNlr1v2kAYxhEsHSvxIYYunXFhYOnasWuq/gGJSqMuVDGQQj5sjIeIDNki
ZUyGDFmiyFIyZMiWsUJKq5JQsK0KYmwwoqF8276+tpOItkoaY6vqI/vku3v9
83N3r873dO79zFu3y+VKPIJiZvbDCxyfzbx6DJXX8cS7+Xjszct4MjYfw5/P
eaDxyfWtP7vdbp/P5/V6ffYEhEAg4PF4JEny+/3IOYXDYZZl4ROKogyHQ+Vu
jUcjuO4JAPV6PSgxDOM4DpjAh+rfTWi67uoEV1A+hGlCyoVC5exsdNPkCJMr
lT5T1Pn2do3nVds+b40Vd3evkskqSRb39hqXl+qvvZaZhsR6/dvqKiKIQSbD
EcQ5w8j1+nhiOFMwwVhxf7+fTqNcDmWz3VSqlMuVj49bkmS+ORwMrDJBTUGo
EASiKC2b1ckk2V5Y+JrPcycnsiwPjBgsFLLEHCtKiWF+JJOIpgGrk2karaw0
U6nKxgZ/egoxYQwzc/5BTGMtmrVaGTgkCW6RgdXAME3LicSngwMIeGY950eq
Wjk8vLqxCliAd9Ppi52ddreLrM+nmatStcqurcGQ9SmlKHV5uZzPS6KoquoU
TJML+QNW24uL+mQSRG1piS0UoGcw1brrSMOMJAj8+jpY/Z7JfGEYM/+nyM9J
LISWjo5aOH6xtdXp95F9JsyqpsmNxsfNTYnnb9vtMK/JCLVaLWTwnWL+KUeY
v+3P/63Pf8+EKvz1hvbU6XSgDBl7XTAYtOlwUtFoFPY6OIpgTggcRiIRoAmC
AEcRzjmJogg59hOzA7zn
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "8.9`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztls9P2mAYxwlcdlz4FQ677AyBA5ddd9zVZX+AZszsopFSECsRSogxRhO9
GG5iTDyqB2M8mCxejHoh0QAOR9mgBToYQ352tG/3UJQgFmTR0+I37ZP3bZ98
3u/TPv3xemxy5JNSoVBgLyCMjLre2u2j7vcvYfJhAvs8PmH7+G7CYRu32d+M
qeDgq5u9NVYqlVqtVqPRaPsLzuog6vUaadIvR6/Xq1QqlmV1Op04nNhIpHh+
PjjHbDYnEglYgud5juN4OTWbTcTz9Wbz8vCQstsTPh+dSiFBgOM9mbVaDaLJ
ZKIoCpjAh+n9RRFCEFvA/X1melr0+epu9+XGRp3jREFAd5PBFcTBzDawynGx
7e2fLpfo9QokKc7NZQmCOj1Ftwn/wJTyr6vV6NbWL6cTHCKfD7AiSQoEEV9e
LrCseBc7jM9iqRRdXy8BkCRvgF4vguj3lzDs684ON3zt0tKFfD66tlbF8Y5D
1AbC2O+HjZmdpS8uWj5vrfZlCgIElqajKyv1DhAuo8RpAT0e3uWCO1XE8XAw
2OC4B3xKQIaiYouLf2ZmxECgxQFvBMFh2LXTyXo8dCDwY3WV2tyMHxykw2Gh
64rdZ0LDQQ3peDy5sCACkCCqU1N5HE95vcmlpWQolNzb+35ywlxd/a5UGqKM
upnwTMG4iVD67CyC44zD8W1+Ph4MJnd3U8fHmVgsn81WoMV7+gz6U6pLlqlW
q2GcoqgvoRB9dJSNxQoMUy6XwQyS4/S05YDaG7Vao14XevLaHEmynMFMoVNI
uz2GgDzIlH3en5nPzP+VCVP46nGPE7wiIBqNRmAaDIZHOuyW1WqF7zv8ipie
QuDQYrEALZPJwK8I9XTK5XLwEvsLsLCr/A==
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "11.`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlk1L40AYx0t72eNCX+hhL55b2kMve93jXpX9AIpV9hKl0SYVsWo9eRY/
gJeCoigexIA3vZVdxIWIkcYubWMb3ZYGk06dTHzarEF3PUgmePIPGfLM8Pzm
Py/JzNDY1PCE3+fzsR+gGB7lvmQyo7mRjxB8Y9jvk0x6/Cszk55MZz6PBaDy
09+n/+73+0OhUDAYDNEJCJFIJBAINJvNcDhseadEIlEul6ELjDFCCNNJ13Uo
4/G4LMvABD6ElA7BFZTvzBeZEKq1WltR1Gq1cXVVlyTj7o6SiXq90va2yPP1
+fn63JwyPX22vt69v7cIcckcJBrd7kWxqPG8tbxsFQq32ax0fEzj08Zqui5u
bv7JZq2lJZLPX66s3KgqNJGX3L5qjQaJumGIW1t97OKinsudF4vIsqn/Yl+5
7naigZC4s3MzO2stLCj5vHx62m8yTXdMB9vFWNzbu+V5zHHS2lq703GaXDCd
SUCmKe7vtziuzXGXgmBCJQ3TycL4/OBAZdlKoXBdqZDnVt0wHyfhQhB+M4y0
saE/364uv83BeAErHx2JLFstlczHvtwz7cEC1jRlQfi5utpptWh9PsH2CBEP
D3/s7jqbivK/ZC8NJuTXyYlSq3nC/J/vLdPRGzAhhFMP0UnTNChjsRgwo9Eo
pcOnSqVScL7DVSTuhcBhMpkEmqIocBWRvVOj0YCd8AD5PteR
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "4.9`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztVrFOwlAUJe3iaEIhDC7ONDCwuDq6YvwAiNi4YNJnERMNTV/obOIXaOIu
xNERBwcS20kdaAIDgZXQpKHt87QhYEIcoAxKPDm9uffc5vQuffftFs/yJ1ws
FiNbCPnCxb4sFy4Pt1EclcmpVC4dH5TPS1JJ3ivyEHemT5BzHCcIQjweF6IB
Dslkkuf54XCYSCTY+pDJZDqdDj7huq7jOG402LaNKIqiZVnwhD/KiBNiKsRN
8vR/wK+a0x6PPy3ro9d773ZnRAkRrWU9Pc9DfG23ryXpoVq9U5T7kEhQQkRr
9tpSni+m+VypMF1nlM6p6xDRWtHTMB4JcSl1VNUNGSSUQkRrZc8mIZgNbixk
kFDa/PfcdM8GIT6lE1X1QwYJpY0Ini3DeJJlpmmsVptT0yC2VvV8M80rRbmt
1280bUaUEN+W/4+m8P2J5zkLhMgWjrs/es6jxNZzomE0GiGm02l4plKpiBN+
Ry6Xw37HVURcBzBhNpuFW7/fx1XEWh8GgwE24BcWJYkV
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "13.6`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlj1v2lAUhhEsHSvxIYYunUEwsHTt2DVVf0Ci0qgLKISkJnYIOAxRlAxe
SPYsDNmIooiBuVIkMsSKWyFsh6QiUFq5GBtM/NFjO41IUTHBqEPVV9dX91o+
z33tc67t5wvxuXdOh8Ox/AS6ufkPLxOJ+dTrpzB5E1t+vxiLvn0VS0YXo4kX
Cy44+ezu0MdOp9Pj8bjdbo89AcHn87lcrlar5fV6tdkpFArRNA1LyLIsSZJs
T6IoQh8MBhmGASbwYWrTIbiC/j/zn2GqIEVRZflBU5SpmaOxDxdTp/PJCQJT
qdCl0tXR0Zdi8fL4uFYuX9dqPRP4C2vJNA2IkvS5VGJ2dr5lMj8wjEeQLoJ0
Uiluff0Gx6v7+yxJ3hu1YBrA7+32R4Jor67KGKal01o2q+G43mCQyWgYNkBR
FkEqxaIZYulzIMvU4SG3tHQHMTnDzTyJYQyCsOfnENLv98cz+zxP53IQq/6G
GiFLKEoXCnpIrzeeKXU6dQjBcXVjYwxTzWYHGHZ5cKAzRdGCKUkXe3u3CKLl
cn+yqhqLQsqq5bLlvZtld0VRZ5AgwG5uqqPP08hXKx4/JYhutztJjuAaqPU6
RVH5/E0yKa+tafAQzAY1kE6LKyssipKQR46bsD7vJQjCNUlShcIngqC3t9mt
reru7kU+Xz05+Vqv35q7zKi9x75DIFLRN70hGAztSXXifTSF/gITpvDVk+yJ
53noA4EAMP1+v02Hw4pEIvB9h1+R4CwEDsPhMNAajQb8ijCzU7PZhEr4CefI
kAI=
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "15.6`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJytls9P2mAYxwlcdlwUlcMuO0vw4GXXHXd12R+gmTNLDEugYpWUX+/FqIk/
ookHDxpj4ODFk5p4MIuJ4aRxMzgUShjIWhxEitRC23dPiywsNKMVv4En79v0
/bzf532ft+3rkS9Dn8wmk8n9AsLQ8ORbl2t46v1L6Hxwuj+POUc/vnMSo2Oj
rjcjFrj46vGvtM1ms9Vq7e7utjbU09PT19dnNSgg9Pb2WiwWlmWBgFslSRoX
dcjhcCSTSZhCFEVBEMSGkrHY181N0aAqlQpEu91O0zQwgQ9dZRpZhvBjby8+
M8PxvCGH4AqiBhPjmiTF1tYYkkydnyuT6F4ETaasmiyUShmEeJK8jESkhvOn
M1VL9OlpkaJkkkzPzRU4TqXqwv6HGdvZ4SkK+/23Pl8iGtWfvvZ6yvI9bPrq
am16GiNUmZy8DodrWG9dtTJrNWV0Lp3OIYS9XmBKkP78fD6f12lVg1mtQrw+
Oir6fDgQkAMBHAyyFJU6OcH6rLYypaoCTYTDkDIOhRQmpE8QdCTCq2XWdqda
mTAGqii9vCySJDAVq8Gg7PXSs7P5mxs96WswMf55cZEDmt8PtMf0EWI9nnQ0
KuP2haqx7xinDg8LqkmFVv8hJBDE9fY2r662fiY8o6BdqlZTW1sPbjdwcINZ
N5xA6Hc2i9tZbWWy2Wx6YUGmKKnJZz39W4KA9Ntu/D/Mri5lMc/O4uPjGE4Q
+ERI2aA6ORSqwdnf2ODVIYZ83rHs1e5uYmkpMzVVdrkUOCQeCklqoSYpqsAw
+pmP9QllD+Ri8Vc8ntzfjy0uAvx+YqIOv4NCPT42yhTVs1kXtO7LZZamrwAO
zr3eisfzfWVFaLpHF/Pvc75pc6H1IAhMJnN5cPBtfR2yeAqzAxlmyrLR8w5d
eOsJnYnjOIj9/f3AtNlsHWbdrMHBQXi/w6eI/TkEDgcGBoCWy+XgU4R+PjEM
Ayv/B+bgj7c=
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "14.7`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztljtrwlAUx0WXjgUfOHTp7Gtw6dqxq6UfQKmVLha1MYkBJ0c3UQQdHN38
BGLpqGMpCJYkvkksNT4SEhuTnpq2FAoVjYODf24O9+ZcfvfPIbn3ngbufDdG
g8EQO4Lg86Pn0agfvzyGwVU4dhsKB68vwvfBUDB6FjDBy5Ov57NvNBotFovZ
bLboExBsNpvJZGJZ1mq1qruT2+0mSRKWkGVZkiRZnwRBgOh0OimKAibwYajT
IbiCeGDuA1P5o62ZynIJTYX2DflZQ12lRFHczudCVeeKMhHF8XzO8fx0sRCA
qqU299ml6ZdqlS6X24VCJ5vtZTLQOrlcu1SiKhWq0ZhMpzDN4XCsZWrlImn6
EUWnGCZi2DuCyAiioOgyHoeOhCACQXQjkYd8HmZ6XC7t31zrE+rfqtVa2Ww3
lWII4hXDxonEG46PcHyYTLbT6adi8bleh5muDeu5kGWO45jBoE+SvWaz32wO
aHrEsnOeX66ym9Zzrfbtmz8wD8x/mDCEU0/Sp9lsBlHbQ+x2u06Hv+X1emEP
gauIcxcChx6PB2jD4RCuItTuxDAMbI8fqPfkfA==
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "3.8`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJyllstPGlEUh41uutQghkU33QqNVjfddtmtTf8ATa3pRo3KG4QBDDHGjRFX
btRo1OjKGDfGGOMjsVFjbWTCa0B5yEMoIq+ZYW4Pd5BaQJH25DLcmXvmm3PP
/d0z86ZnoOtrfV1d3fArOHR1yz8MDXUrPzXCyef+4W99/b1fPvaP9Pb1Dr3v
aYCLrwu/fL++vr65uVkgEDTXbnCXUCBoEYmaBIKmxsaWlpaGhoZQKCQUCtF/
Gk07trd9FxfQfSuRuFwueBzLstlsln2xMTSNWJZD6DYate/uOozGS6nUeXYG
Q62trRRFARP4cPqSiDiOQ7kcdO4Zhjo+tlssYYUiNzzsnZkJxmJwXSKR1MYE
IHgi5LFabbOzNxoNI5cjkympUjmXl5P4WTUzEbrx+62Li369Pq1QIJ0OGY2c
Xh/TaiEDHHaozuS4wj9CsXjcurHhIYiUSoW0WmQwcASBoKnVN0ajz+3OvSRO
7AOWSCadBwc2szkBMwUaj9Lr840gWKXSPTWVYBgmm32GyT3QkpnM9fm5dXo6
MjKCRkf/oIqNIDIaDbmyAhPJZjIVmcVlhWEfSdrm5rwyGQeTNRpLaXzT6eIa
jf3wMH9LOl3O5MODJwauruxrax6dLgPhAQ1SVxGo13NarU+nCwWDcGO2bO4c
jvM2FrNtbrohdVJpcVkrR/jAtE1NpXEwj5mwZ6F/n07b9vedExNxpRJpNHla
efbKGq1WX66t8QopiTN2ff0DaCoVCzRwfnqyJS0ql3vOzyswhcK41/tzbCwJ
UqkFCMlxAzYa5UXyFxPPHTJJrq/7tVoGVpnXc1Xm6OilxUIzTAUmXiMIHsao
01PH5OSdTJaX4vMBw4aSyWBBuQdVlzNhH/A7MRIOg5C8ajXCsnwSazCEpFI/
ST7DLGieFzzHeU5ObBMT96Aog6GChPDRYTLFIxFUjVnYStii4TC5uuqHhQMx
lKSXIHIqFTk7m8H7sSqzUI4wGUo/BQGbzfnKhlGFIE2mu8FBamfncd2pwiyS
sUVuby8XFoJKZQ6SbDDk8PL5FIobknzs9iLmI6MRchwduczmgoYJwj4+HsPb
/J+ZvAUDAXJ+PgSvjIEBamkphSFPMeE0lQKX5wxKWY5lf6VStr2971IpubWV
ommomUWHRCIBR7FYDEyRSFQ1wlJ7KNrl1tnZCe93+BSR1GRi8buOjrb29rLL
4ra2NqAFAgH4FKFqNJfTCcFUHAoGg6Dw372lAMM=
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "34.7`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5LM38+/fvTxzo39+/
pJr5798/IDlhwoSeuroJTU3IaGJzc0d19bz584EKgHFEqpn9vb3/qqv/19ej
oIaGdxUVU+fMIc/MCX19P2pq/jU0oKDGxpeVldPmziXbzJ81NUCHoaDGxlcj
wMyJ/f3/amuBhqCgpqb3VVXT580jz8zO9vYnJSVAV6GgqqprhYUTp08nz8wV
K1ZMnjUL6E1kBHThpOnTt2zeDFTw/ft34s0kEpCRN/GUcn9Jz5u0c+eomQNr
JpALzAU/KQOfP38Gktra2kAzJSQkKHQhMjA2NgbW78CmiA41ANCF+vr6QNOe
P38ObIrcpx54+fIlsHwAAPpIpAw=
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "10.8`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5aubwMPMfBPz9i0D/
/pFtJkjv37/Y3YTNZCLdCTTxw/fvL548eXL9+sNLlx5fu/b80aN3X7/+Jted
z+/du75w4ZO+vhetra+bm183NgLJl62tT7q7b8+f/+DSpd+oviBo5qdPn3bU
1HwrL/9dVva/svJ/Tc3/2loQWVkJFPleWbmruPjJ48fQICLOTGB43T9//ta0
ac+bm9/U1X2oq/tYW/uxru5tXd2LpqabEyfePHLk12+UMCAyPH/8+/f6/fsn
N2/eP3367tGj90+denz9+qs3b35gizuizMSRZnDJkp8+wQCryuGXN0fNJMNM
IBdY6/2kDHz+/BlIamtrA82UkJCg0IXIwNjYGFi/A5siOtQAQBfq6+sDTXv+
/DmwKXKfeuDly5fAjAYATMPjNg==
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "4.`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5aiZ9zMQfv3///h0k
7jx2/PjGffs2HTiAjDYfOLDl4MENu3ffuH4dqObfv39EmglR2dLcvD8//2hx
MTI6Ulx8rKxseUbGvGXLsPoLv5mTJ078X1//v7kZHbW2Pq6sXLxhAxlmTujr
+15T87ehARn9AZJNTdfKyhatW0eemT9rav43NCCjf0CyqenGqJnD18yJ/f3/
amv/Nzaio+bmu+Xli9avJ8PMzvb2JyUlryorkdFLIFldfTQvb/7KlWSYuWLF
ismzZk2bOxcZTZ87d8a8eROmTj144ABQDWbpRIdyCcgF1no/YeAbXvD9+/ef
2MDnz5+BpLa2NtBMCQkJCl2IDIyNjYH1O7ApokMNAHShvr4+0LTnz58DmyL3
qQdevnwJjGgAzeFxDw==
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "16.1`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5XM389+/ff2REmZn/
MEyAiFLozh9//rx/9erzs2dfnj79+OLFtx8/KHLnv39fv3y5sHr1jdbWR7W1
T2pq7rW0XJk16+WDB8gOJd7Mf3//AsmbO3e+LC7+X1//v6kJgr6VlFzq7//x
/Ts5ZoLFL+/Y8aCw8H9t7f+Ghv+NjUD0obj44rRpv8DmkOP3//+BeeTm/v3X
J0wA+vphc/P1jo6zCxe+ffkSEjLkmQnS+v//92/ffnz+/PPz5+9fvvzEUE+y
mVjTEoVmEgFGzRw1cwiZCeQCc/RPysBnYLb9+VNbWxtopoSEBIUuRAbGxsbA
+h3YFNGhBgC6UF9fH2ja8+fPgU2R+9QDL1++BFZeAJ4w6wU=
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "3.3`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5hM389w+EcAG8sljN
/AdTDzT9569f34Hg61cQ+vYNyP2NbDKRZv4Gafr2/fvL27cfHjhwa/HiG1Om
XO/tBaHJk28tXPhg9+6XN258+fqVeHcC7X7x9OmluXMfVlV9Liz8W1Hxv7b2
f309CNXV/a2s/FJY+LSi4vrMmc/u3QM7Ft21yGYC0z+Q/en79ytz5nzMz//f
2vq/ufl/U9O/xkY4AnJBgi0tv0pK7k6d+uHLF0xjMc388vPnnRUrPhUVgbQD
EdCchgYEghkL9MKFSZM+f/uGGaqYfgeCD+/f31i37n5j4/uiol+VlSC/19WB
UG3t76qqj0VF92tqLi9a9OrFC+LjHUj+/vv3/atXj8+fv7Vhw7X5869Mn35l
2rSrc+feXLv20alTb589+/n7N1YDcZqJ5J2/EPTvHxSBIxEKiE9LQytvjpo5
aiZlZgK5wFrvJ2Xg8+fPQFJbWxtopoSEBIUuRAbGxsbA+h3YFNGhBgC6UF9f
H2ja8+fPgU2R+9QDL1++BJbVAP/Xw6g=
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "8.3`"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5aiaymf/+/fuLFwy4
O3///g0kHz96dOTcuWOXLh29eBENHblw4dq1aySZCRFZsGzZzIyMLaWlm4qL
0dDa/PzmpiZI+JBk5uING55WVf1vbf3f3IyOGhomT5xIhpmL1q27Vlb2p6np
d0PDH1T0raZmQl8feWbeKCv739T0r6HhPyr6OQLMvErt8ATFe2Ul9nivrycz
3pcv783KWlJevqi0FA3NLShobWkhyUxIPnr39u2NBw9uPH5849EjNHT94cOn
T59iNQ2XmTQtl/CDQeJOKpoJ5AJrvZ+Ugc+fPwNJbW1toJkSEhIUuhAZGBsb
A+t3YFNEhxoA6EJ9fX2gac+fPwc2Re5TD7x8+RKYPADMC4/x
         "], {{0, 28}, {28, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{28, 28},
       PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "12.6`"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725793552754344*^9, 
  3.7257935528024783`*^9}},ExpressionUUID->"0c71c43f-283d-498d-946b-\
053e77da7353"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["15", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257935686350555`*^9},ExpressionUUID->"0b3a1bd5-9e51-4477-b08f-\
9a27842ffc4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzDwyQZ9qfv3+BenV0dO7fvw80EySCZNSx48c37tu36cABYtDmAwe2
HDy4cefO2zdvAvVqa2ujmfnv3z8g2dLcvD8//2hxMTHocHHxsfLyWampq7ds
AerV1NTEaubkiRP/19f/b24mFrW1nS8rW7tnDx4zJ/T1fa+p+dvQQAz6DSSb
m48UF6/dtQu/mT9rav43NBCDgMYCnXp01MxRM0fNxDDzW03Nn4YGYtAvINnc
fJiQmRP7+//X1v5vbCQWtbScKylZu3s3HjM7OzomlZZOq6oiEs2sra3Pydmy
fTtWMyHg0+fPLz9+fEUKev3hw+dPn4B6cZXz5IHfv39T10xgoAFrNKq7E81M
IPfbt28/KQOfP38GkpA6TkJCgkIXIgNjY2Ng/Q5siuhQAwBdqK+vDzTt+fPn
wKbIfeqBly9fAuMLAPAQtVI=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "40.2`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJzNlr1v2kAYxhEsHSvxIYYunXFhYOnasWuq/gGJSqMuVDGQQj5sjIeIDNki
ZUyGDFmiyFIyZMiWsUJKq5JQsK0KYmwwoqF8276+tpOItkoaY6vqI/vku3v9
83N3r873dO79zFu3y+VKPIJiZvbDCxyfzbx6DJXX8cS7+Xjszct4MjYfw5/P
eaDxyfWtP7vdbp/P5/V6ffYEhEAg4PF4JEny+/3IOYXDYZZl4ROKogyHQ+Vu
jUcjuO4JAPV6PSgxDOM4DpjAh+rfTWi67uoEV1A+hGlCyoVC5exsdNPkCJMr
lT5T1Pn2do3nVds+b40Vd3evkskqSRb39hqXl+qvvZaZhsR6/dvqKiKIQSbD
EcQ5w8j1+nhiOFMwwVhxf7+fTqNcDmWz3VSqlMuVj49bkmS+ORwMrDJBTUGo
EASiKC2b1ckk2V5Y+JrPcycnsiwPjBgsFLLEHCtKiWF+JJOIpgGrk2karaw0
U6nKxgZ/egoxYQwzc/5BTGMtmrVaGTgkCW6RgdXAME3LicSngwMIeGY950eq
Wjk8vLqxCliAd9Ppi52ddreLrM+nmatStcqurcGQ9SmlKHV5uZzPS6KoquoU
TJML+QNW24uL+mQSRG1piS0UoGcw1brrSMOMJAj8+jpY/Z7JfGEYM/+nyM9J
LISWjo5aOH6xtdXp95F9JsyqpsmNxsfNTYnnb9vtMK/JCLVaLWTwnWL+KUeY
v+3P/63Pf8+EKvz1hvbU6XSgDBl7XTAYtOlwUtFoFPY6OIpgTggcRiIRoAmC
AEcRzjmJogg59hOzA7zn
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "8.9`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztls9P2mAYxwlcdlz4FQ677AyBA5ddd9zVZX+AZszsopFSECsRSogxRhO9
GG5iTDyqB2M8mCxejHoh0QAOR9mgBToYQ352tG/3UJQgFmTR0+I37ZP3bZ98
3u/TPv3xemxy5JNSoVBgLyCMjLre2u2j7vcvYfJhAvs8PmH7+G7CYRu32d+M
qeDgq5u9NVYqlVqtVqPRaPsLzuog6vUaadIvR6/Xq1QqlmV1Op04nNhIpHh+
PjjHbDYnEglYgud5juN4OTWbTcTz9Wbz8vCQstsTPh+dSiFBgOM9mbVaDaLJ
ZKIoCpjAh+n9RRFCEFvA/X1melr0+epu9+XGRp3jREFAd5PBFcTBzDawynGx
7e2fLpfo9QokKc7NZQmCOj1Ftwn/wJTyr6vV6NbWL6cTHCKfD7AiSQoEEV9e
LrCseBc7jM9iqRRdXy8BkCRvgF4vguj3lzDs684ON3zt0tKFfD66tlbF8Y5D
1AbC2O+HjZmdpS8uWj5vrfZlCgIElqajKyv1DhAuo8RpAT0e3uWCO1XE8XAw
2OC4B3xKQIaiYouLf2ZmxECgxQFvBMFh2LXTyXo8dCDwY3WV2tyMHxykw2Gh
64rdZ0LDQQ3peDy5sCACkCCqU1N5HE95vcmlpWQolNzb+35ywlxd/a5UGqKM
upnwTMG4iVD67CyC44zD8W1+Ph4MJnd3U8fHmVgsn81WoMV7+gz6U6pLlqlW
q2GcoqgvoRB9dJSNxQoMUy6XwQyS4/S05YDaG7Vao14XevLaHEmynMFMoVNI
uz2GgDzIlH3en5nPzP+VCVP46nGPE7wiIBqNRmAaDIZHOuyW1WqF7zv8ipie
QuDQYrEALZPJwK8I9XTK5XLwEvsLsLCr/A==
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "11.`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztlk1L40AYx0t72eNCX+hhL55b2kMve93jXpX9AIpV9hKl0SYVsWo9eRY/
gJeCoigexIA3vZVdxIWIkcYubWMb3ZYGk06dTHzarEF3PUgmePIPGfLM8Pzm
Py/JzNDY1PCE3+fzsR+gGB7lvmQyo7mRjxB8Y9jvk0x6/Cszk55MZz6PBaDy
09+n/+73+0OhUDAYDNEJCJFIJBAINJvNcDhseadEIlEul6ELjDFCCNNJ13Uo
4/G4LMvABD6ElA7BFZTvzBeZEKq1WltR1Gq1cXVVlyTj7o6SiXq90va2yPP1
+fn63JwyPX22vt69v7cIcckcJBrd7kWxqPG8tbxsFQq32ax0fEzj08Zqui5u
bv7JZq2lJZLPX66s3KgqNJGX3L5qjQaJumGIW1t97OKinsudF4vIsqn/Yl+5
7naigZC4s3MzO2stLCj5vHx62m8yTXdMB9vFWNzbu+V5zHHS2lq703GaXDCd
SUCmKe7vtziuzXGXgmBCJQ3TycL4/OBAZdlKoXBdqZDnVt0wHyfhQhB+M4y0
saE/364uv83BeAErHx2JLFstlczHvtwz7cEC1jRlQfi5utpptWh9PsH2CBEP
D3/s7jqbivK/ZC8NJuTXyYlSq3nC/J/vLdPRGzAhhFMP0UnTNChjsRgwo9Eo
pcOnSqVScL7DVSTuhcBhMpkEmqIocBWRvVOj0YCd8AD5PteR
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "4.9`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztVrFOwlAUJe3iaEIhDC7ONDCwuDq6YvwAiNi4YNJnERMNTV/obOIXaOIu
xNERBwcS20kdaAIDgZXQpKHt87QhYEIcoAxKPDm9uffc5vQuffftFs/yJ1ws
FiNbCPnCxb4sFy4Pt1EclcmpVC4dH5TPS1JJ3ivyEHemT5BzHCcIQjweF6IB
Dslkkuf54XCYSCTY+pDJZDqdDj7huq7jOG402LaNKIqiZVnwhD/KiBNiKsRN
8vR/wK+a0x6PPy3ro9d773ZnRAkRrWU9Pc9DfG23ryXpoVq9U5T7kEhQQkRr
9tpSni+m+VypMF1nlM6p6xDRWtHTMB4JcSl1VNUNGSSUQkRrZc8mIZgNbixk
kFDa/PfcdM8GIT6lE1X1QwYJpY0Ini3DeJJlpmmsVptT0yC2VvV8M80rRbmt
1280bUaUEN+W/4+m8P2J5zkLhMgWjrs/es6jxNZzomE0GiGm02l4plKpiBN+
Ry6Xw37HVURcBzBhNpuFW7/fx1XEWh8GgwE24BcWJYkV
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "13.6`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztlj1v2lAUhhEsHSvxIYYunUEwsHTt2DVVf0Ci0qgLKISkJnYIOAxRlAxe
SPYsDNmIooiBuVIkMsSKWyFsh6QiUFq5GBtM/NFjO41IUTHBqEPVV9dX91o+
z33tc67t5wvxuXdOh8Ox/AS6ufkPLxOJ+dTrpzB5E1t+vxiLvn0VS0YXo4kX
Cy44+ezu0MdOp9Pj8bjdbo89AcHn87lcrlar5fV6tdkpFArRNA1LyLIsSZJs
T6IoQh8MBhmGASbwYWrTIbiC/j/zn2GqIEVRZflBU5SpmaOxDxdTp/PJCQJT
qdCl0tXR0Zdi8fL4uFYuX9dqPRP4C2vJNA2IkvS5VGJ2dr5lMj8wjEeQLoJ0
Uiluff0Gx6v7+yxJ3hu1YBrA7+32R4Jor67KGKal01o2q+G43mCQyWgYNkBR
FkEqxaIZYulzIMvU4SG3tHQHMTnDzTyJYQyCsOfnENLv98cz+zxP53IQq/6G
GiFLKEoXCnpIrzeeKXU6dQjBcXVjYwxTzWYHGHZ5cKAzRdGCKUkXe3u3CKLl
cn+yqhqLQsqq5bLlvZtld0VRZ5AgwG5uqqPP08hXKx4/JYhutztJjuAaqPU6
RVH5/E0yKa+tafAQzAY1kE6LKyssipKQR46bsD7vJQjCNUlShcIngqC3t9mt
reru7kU+Xz05+Vqv35q7zKi9x75DIFLRN70hGAztSXXifTSF/gITpvDVk+yJ
53noA4EAMP1+v02Hw4pEIvB9h1+R4CwEDsPhMNAajQb8ijCzU7PZhEr4CefI
kAI=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "15.6`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJytls9P2mAYxwlcdlwUlcMuO0vw4GXXHXd12R+gmTNLDEugYpWUX+/FqIk/
ookHDxpj4ODFk5p4MIuJ4aRxMzgUShjIWhxEitRC23dPiywsNKMVv4En79v0
/bzf532ft+3rkS9Dn8wmk8n9AsLQ8ORbl2t46v1L6Hxwuj+POUc/vnMSo2Oj
rjcjFrj46vGvtM1ms9Vq7e7utjbU09PT19dnNSgg9Pb2WiwWlmWBgFslSRoX
dcjhcCSTSZhCFEVBEMSGkrHY181N0aAqlQpEu91O0zQwgQ9dZRpZhvBjby8+
M8PxvCGH4AqiBhPjmiTF1tYYkkydnyuT6F4ETaasmiyUShmEeJK8jESkhvOn
M1VL9OlpkaJkkkzPzRU4TqXqwv6HGdvZ4SkK+/23Pl8iGtWfvvZ6yvI9bPrq
am16GiNUmZy8DodrWG9dtTJrNWV0Lp3OIYS9XmBKkP78fD6f12lVg1mtQrw+
Oir6fDgQkAMBHAyyFJU6OcH6rLYypaoCTYTDkDIOhRQmpE8QdCTCq2XWdqda
mTAGqii9vCySJDAVq8Gg7PXSs7P5mxs96WswMf55cZEDmt8PtMf0EWI9nnQ0
KuP2haqx7xinDg8LqkmFVv8hJBDE9fY2r662fiY8o6BdqlZTW1sPbjdwcINZ
N5xA6Hc2i9tZbWWy2Wx6YUGmKKnJZz39W4KA9Ntu/D/Mri5lMc/O4uPjGE4Q
+ERI2aA6ORSqwdnf2ODVIYZ83rHs1e5uYmkpMzVVdrkUOCQeCklqoSYpqsAw
+pmP9QllD+Ri8Vc8ntzfjy0uAvx+YqIOv4NCPT42yhTVs1kXtO7LZZamrwAO
zr3eisfzfWVFaLpHF/Pvc75pc6H1IAhMJnN5cPBtfR2yeAqzAxlmyrLR8w5d
eOsJnYnjOIj9/f3AtNlsHWbdrMHBQXi/w6eI/TkEDgcGBoCWy+XgU4R+PjEM
Ayv/B+bgj7c=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "14.7`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztljtrwlAUx0WXjgUfOHTp7Gtw6dqxq6UfQKmVLha1MYkBJ0c3UQQdHN38
BGLpqGMpCJYkvkksNT4SEhuTnpq2FAoVjYODf24O9+ZcfvfPIbn3ngbufDdG
g8EQO4Lg86Pn0agfvzyGwVU4dhsKB68vwvfBUDB6FjDBy5Ov57NvNBotFovZ
bLboExBsNpvJZGJZ1mq1qruT2+0mSRKWkGVZkiRZnwRBgOh0OimKAibwYajT
IbiCeGDuA1P5o62ZynIJTYX2DflZQ12lRFHczudCVeeKMhHF8XzO8fx0sRCA
qqU299ml6ZdqlS6X24VCJ5vtZTLQOrlcu1SiKhWq0ZhMpzDN4XCsZWrlImn6
EUWnGCZi2DuCyAiioOgyHoeOhCACQXQjkYd8HmZ6XC7t31zrE+rfqtVa2Ww3
lWII4hXDxonEG46PcHyYTLbT6adi8bleh5muDeu5kGWO45jBoE+SvWaz32wO
aHrEsnOeX66ym9Zzrfbtmz8wD8x/mDCEU0/Sp9lsBlHbQ+x2u06Hv+X1emEP
gauIcxcChx6PB2jD4RCuItTuxDAMbI8fqPfkfA==
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "3.8`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJyllstPGlEUh41uutQghkU33QqNVjfddtmtTf8ATa3pRo3KG4QBDDHGjRFX
btRo1OjKGDfGGOMjsVFjbWTCa0B5yEMoIq+ZYW4Pd5BaQJH25DLcmXvmm3PP
/d0z86ZnoOtrfV1d3fArOHR1yz8MDXUrPzXCyef+4W99/b1fPvaP9Pb1Dr3v
aYCLrwu/fL++vr65uVkgEDTXbnCXUCBoEYmaBIKmxsaWlpaGhoZQKCQUCtF/
Gk07trd9FxfQfSuRuFwueBzLstlsln2xMTSNWJZD6DYate/uOozGS6nUeXYG
Q62trRRFARP4cPqSiDiOQ7kcdO4Zhjo+tlssYYUiNzzsnZkJxmJwXSKR1MYE
IHgi5LFabbOzNxoNI5cjkympUjmXl5P4WTUzEbrx+62Li369Pq1QIJ0OGY2c
Xh/TaiEDHHaozuS4wj9CsXjcurHhIYiUSoW0WmQwcASBoKnVN0ajz+3OvSRO
7AOWSCadBwc2szkBMwUaj9Lr840gWKXSPTWVYBgmm32GyT3QkpnM9fm5dXo6
MjKCRkf/oIqNIDIaDbmyAhPJZjIVmcVlhWEfSdrm5rwyGQeTNRpLaXzT6eIa
jf3wMH9LOl3O5MODJwauruxrax6dLgPhAQ1SVxGo13NarU+nCwWDcGO2bO4c
jvM2FrNtbrohdVJpcVkrR/jAtE1NpXEwj5mwZ6F/n07b9vedExNxpRJpNHla
efbKGq1WX66t8QopiTN2ff0DaCoVCzRwfnqyJS0ql3vOzyswhcK41/tzbCwJ
UqkFCMlxAzYa5UXyFxPPHTJJrq/7tVoGVpnXc1Xm6OilxUIzTAUmXiMIHsao
01PH5OSdTJaX4vMBw4aSyWBBuQdVlzNhH/A7MRIOg5C8ajXCsnwSazCEpFI/
ST7DLGieFzzHeU5ObBMT96Aog6GChPDRYTLFIxFUjVnYStii4TC5uuqHhQMx
lKSXIHIqFTk7m8H7sSqzUI4wGUo/BQGbzfnKhlGFIE2mu8FBamfncd2pwiyS
sUVuby8XFoJKZQ6SbDDk8PL5FIobknzs9iLmI6MRchwduczmgoYJwj4+HsPb
/J+ZvAUDAXJ+PgSvjIEBamkphSFPMeE0lQKX5wxKWY5lf6VStr2971IpubWV
ommomUWHRCIBR7FYDEyRSFQ1wlJ7KNrl1tnZCe93+BSR1GRi8buOjrb29rLL
4ra2NqAFAgH4FKFqNJfTCcFUHAoGg6Dw372lAMM=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "34.7`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5LM38+/fvTxzo39+/
pJr5798/IDlhwoSeuroJTU3IaGJzc0d19bz584EKgHFEqpn9vb3/qqv/19ej
oIaGdxUVU+fMIc/MCX19P2pq/jU0oKDGxpeVldPmziXbzJ81NUCHoaDGxlcj
wMyJ/f3/amuBhqCgpqb3VVXT580jz8zO9vYnJSVAV6GgqqprhYUTp08nz8wV
K1ZMnjUL6E1kBHThpOnTt2zeDFTw/ft34s0kEpCRN/GUcn9Jz5u0c+eomQNr
JpALzAU/KQOfP38Gktra2kAzJSQkKHQhMjA2NgbW78CmiA41ANCF+vr6QNOe
P38ObIrcpx54+fIlsHwAAPpIpAw=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "10.8`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5aubwMPMfBPz9i0D/
/pFtJkjv37/Y3YTNZCLdCTTxw/fvL548eXL9+sNLlx5fu/b80aN3X7/+Jted
z+/du75w4ZO+vhetra+bm183NgLJl62tT7q7b8+f/+DSpd+oviBo5qdPn3bU
1HwrL/9dVva/svJ/Tc3/2loQWVkJFPleWbmruPjJ48fQICLOTGB43T9//ta0
ac+bm9/U1X2oq/tYW/uxru5tXd2LpqabEyfePHLk12+UMCAyPH/8+/f6/fsn
N2/eP3367tGj90+denz9+qs3b35gizuizMSRZnDJkp8+wQCryuGXN0fNJMNM
IBdY6/2kDHz+/BlIamtrA82UkJCg0IXIwNjYGFi/A5siOtQAQBfq6+sDTXv+
/DmwKXKfeuDly5fAjAYATMPjNg==
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "4.`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5aiZ9zMQfv3///h0k
7jx2/PjGffs2HTiAjDYfOLDl4MENu3ffuH4dqObfv39EmglR2dLcvD8//2hx
MTI6Ulx8rKxseUbGvGXLsPoLv5mTJ078X1//v7kZHbW2Pq6sXLxhAxlmTujr
+15T87ehARn9AZJNTdfKyhatW0eemT9rav43NCCjf0CyqenGqJnD18yJ/f3/
amv/Nzaio+bmu+Xli9avJ8PMzvb2JyUlryorkdFLIFldfTQvb/7KlWSYuWLF
ismzZk2bOxcZTZ87d8a8eROmTj144ABQDWbpRIdyCcgF1no/YeAbXvD9+/ef
2MDnz5+BpLa2NtBMCQkJCl2IDIyNjYH1O7ApokMNAHShvr4+0LTnz58DmyL3
qQdevnwJjGgAzeFxDw==
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "16.1`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5XM389+/ff2REmZn/
MEyAiFLozh9//rx/9erzs2dfnj79+OLFtx8/KHLnv39fv3y5sHr1jdbWR7W1
T2pq7rW0XJk16+WDB8gOJd7Mf3//AsmbO3e+LC7+X1//v6kJgr6VlFzq7//x
/Ts5ZoLFL+/Y8aCw8H9t7f+Ghv+NjUD0obj44rRpv8DmkOP3//+BeeTm/v3X
J0wA+vphc/P1jo6zCxe+ffkSEjLkmQnS+v//92/ffnz+/PPz5+9fvvzEUE+y
mVjTEoVmEgFGzRw1cwiZCeQCc/RPysBnYLb9+VNbWxtopoSEBIUuRAbGxsbA
+h3YFNGhBgC6UF9fH2ja8+fPgU2R+9QDL1++BFZeAJ4w6wU=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "3.3`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5hM389w+EcAG8sljN
/AdTDzT9569f34Hg61cQ+vYNyP2NbDKRZv4Gafr2/fvL27cfHjhwa/HiG1Om
XO/tBaHJk28tXPhg9+6XN258+fqVeHcC7X7x9OmluXMfVlV9Liz8W1Hxv7b2
f309CNXV/a2s/FJY+LSi4vrMmc/u3QM7Ft21yGYC0z+Q/en79ytz5nzMz//f
2vq/ufl/U9O/xkY4AnJBgi0tv0pK7k6d+uHLF0xjMc388vPnnRUrPhUVgbQD
EdCchgYEghkL9MKFSZM+f/uGGaqYfgeCD+/f31i37n5j4/uiol+VlSC/19WB
UG3t76qqj0VF92tqLi9a9OrFC+LjHUj+/vv3/atXj8+fv7Vhw7X5869Mn35l
2rSrc+feXLv20alTb589+/n7N1YDcZqJ5J2/EPTvHxSBIxEKiE9LQytvjpo5
aiZlZgK5wFrvJ2Xg8+fPQFJbWxtopoSEBIUuRAbGxsbA+h3YFNGhBgC6UF9f
H2ja8+fPgU2R+9QDL1++BJbVAP/Xw6g=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "8.3`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5aiaymf/+/fuLFwy4
O3///g0kHz96dOTcuWOXLh29eBENHblw4dq1aySZCRFZsGzZzIyMLaWlm4qL
0dDa/PzmpiZI+JBk5uING55WVf1vbf3f3IyOGhomT5xIhpmL1q27Vlb2p6np
d0PDH1T0raZmQl8feWbeKCv739T0r6HhPyr6OQLMvErt8ATFe2Ul9nivrycz
3pcv783KWlJevqi0FA3NLShobWkhyUxIPnr39u2NBw9uPH5849EjNHT94cOn
T59iNQ2XmTQtl/CDQeJOKpoJ5AJrvZ+Ugc+fPwNJbW1toJkSEhIUuhAZGBsb
A+t3YFNEhxoA6EJ9fX2gac+fPwc2Re5TD7x8+RKYPADMC4/x
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "12.6`"}]}], "}"}], 
    ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257935754301186`*^9, 
  3.7257935912215147`*^9}},ExpressionUUID->"e67cb5c6-9de6-4bdf-9f52-\
6dee10904117"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["15", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725793595162763*^9},ExpressionUUID->"101a2ab1-9b65-4487-b2a5-\
8672e343c1d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlV1L21AYx7v1YrvcR9i+xW53uVvHPoCyTnbTQU2bpDFNQRSpiHqjKAVR
bwTxShCUgIJ4IxibZo19T+vWztqkb+t7m3bPyJRS1zSzKXjhwz+Hk1z8znn+
ec553ox9Hfn83GAwTLyEYWQUfWexjOIfXsHLR/PEl3Gz6dN7M2IaN1nejhnh
4+u/z5/5UKPdbivjMOKJ/8S/i0ajwdF0Pp8fBr/Val0eHSVtNtbtLpfLuvMj
Hk/Mbm87nTkM8+7u1ut1HfnJWMxPUS2KAj7oGkUhF8hIF35GkjiXq0GSClyR
gOOQ0eD8UqnErq5WCKITDoJcAhSVEIRB+GCyd2cnj2FdcEVNh4ObnZVE8WF8
WZZ5mk6h6D/hiiAvdnm5WCw+gB9mmDiOq8AVFXCc3d6u1Wr/xU9Eo4Hbaumr
GxT1HRxAvhr5YCkYC/Zq5IOuMCx0dqaFD2ayKyv3C6avQiR5FQyq88FGMLNX
wahLdjh809PpVEqFz5+f+6emklYrXAJdB0qLapOT7NJSoVDoxYcjn8vlEvF4
6OTEs7XlXVwMO50/EQQy0vg7inY7u7lZrVbV6+fOrmw2+0MQgsfHFxsb3MJC
hKKuEQRqUu69nGSzcXt7zWazL78rYFeZTOZ7OByg6Yv19W/z81GSTCHIr3vL
JTAscHoKbgzSvyqViiRJUDP+w0PG7fbNzQkEcWO1gkVwO0UIIsbzOvZHaDqi
KMZ5/nJ/n1lb410uZmbmhdGoF78zwBm4eNPp9LPH1N8fM394MaSdd8ZvsJau
Jg==
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFABikFsmoL///9DSFqAUfNHzaeP+d++fbtz9eqnT59oYT7Q2DMTJrwqLd3R
2Pj9+3eqm3999+6PFRX/Gxrel5df27WLuub/+PHjSl8f0HAIArKBIlQ0//Xr
14+qq+HmA9lAESqa/+jWrZclJXDzgbEAFKGi+fdOnfoADnwIArKBIlQ0//aR
Ix+RzAeygSJDyP20Dn9apx9ap38gAOZZYM6FBD4wLxNpOPHmA8scYMkDDPnT
/f0kFXHEl59AY4HlJ7AUJd5wkswnD4yaP2o+VcynHaCRy5EBANZ9U00=
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSize->{32, 32},
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFABikFsmoL///9DSFqAUfNHzR81f9T8wWZ+A9GAbPP/E4FGzaed+TSNX2qB
UfNHzR81nw7m0w7QyOXIAAA3PjVp
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSize->{32, 32},
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257936044522767`*^9, 
  3.7257936045018463`*^9}},ExpressionUUID->"f3cec7b2-f42c-4540-bbfa-\
caaa365ad367"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "14.100000017223584`", ",", "11.700000025274665`", ",", 
   "12.75000004579776`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257936074106665`*^9},ExpressionUUID->"ae62d46a-f8fe-4b30-86bf-\
2c742026e4d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlV1L21AYx7v1YrvcR9i+xW53uVvHPoCyTnbTQU2bpDFNQRSpiHqjKAVR
bwTxShCUgIJ4IxibZo19T+vWztqkb+t7m3bPyJRS1zSzKXjhwz+Hk1z8znn+
ec553ox9Hfn83GAwTLyEYWQUfWexjOIfXsHLR/PEl3Gz6dN7M2IaN1nejhnh
4+u/z5/5UKPdbivjMOKJ/8S/i0ajwdF0Pp8fBr/Val0eHSVtNtbtLpfLuvMj
Hk/Mbm87nTkM8+7u1ut1HfnJWMxPUS2KAj7oGkUhF8hIF35GkjiXq0GSClyR
gOOQ0eD8UqnErq5WCKITDoJcAhSVEIRB+GCyd2cnj2FdcEVNh4ObnZVE8WF8
WZZ5mk6h6D/hiiAvdnm5WCw+gB9mmDiOq8AVFXCc3d6u1Wr/xU9Eo4Hbaumr
GxT1HRxAvhr5YCkYC/Zq5IOuMCx0dqaFD2ayKyv3C6avQiR5FQyq88FGMLNX
wahLdjh809PpVEqFz5+f+6emklYrXAJdB0qLapOT7NJSoVDoxYcjn8vlEvF4
6OTEs7XlXVwMO50/EQQy0vg7inY7u7lZrVbV6+fOrmw2+0MQgsfHFxsb3MJC
hKKuEQRqUu69nGSzcXt7zWazL78rYFeZTOZ7OByg6Yv19W/z81GSTCHIr3vL
JTAscHoKbgzSvyqViiRJUDP+w0PG7fbNzQkEcWO1gkVwO0UIIsbzOvZHaDqi
KMZ5/nJ/n1lb410uZmbmhdGoF78zwBm4eNPp9LPH1N8fM394MaSdd8ZvsJau
Jg==
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFABikFsmoL///9DSFqAUfNHzaeP+d++fbtz9eqnT59oYT7Q2DMTJrwqLd3R
2Pj9+3eqm3999+6PFRX/Gxrel5df27WLuub/+PHjSl8f0HAIArKBIlQ0//Xr
14+qq+HmA9lAESqa/+jWrZclJXDzgbEAFKGi+fdOnfoADnwIArKBIlQ0//aR
Ix+RzAeygSJDyP20Dn9apx9ap38gAOZZYM6FBD4wLxNpOPHmA8scYMkDDPnT
/f0kFXHEl59AY4HlJ7AUJd5wkswnD4yaP2o+VcynHaCRy5EBANZ9U00=
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSize->{32, 32},
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFABikFsmoL///9DSFqAUfNHzR81f9T8wWZ+A9GAbPP/E4FGzaed+TSNX2qB
UfNHzR81nw7m0w7QyOXIAAA3PjVp
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSize->{32, 32},
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257936125634685`*^9, 
  3.7257936126146083`*^9}},ExpressionUUID->"2d145dc7-0431-4e23-8c04-\
673872775cde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "14.100000017223584`", ",", "11.700000025274665`", ",", 
   "12.75000004579776`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.72579361345445*^9},ExpressionUUID->"36934829-e827-47ac-a1aa-83a8dbac9886"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzDwyQZ9qfv3+BenV0dO7fvw80EySCZNSx48c37tu36cABYtDmAwe2
HDy4cefO2zdvAvVqa2ujmfnv3z8g2dLcvD8//2hxMTHocHHxsfLyWampq7ds
AerV1NTEaubkiRP/19f/b24mFrW1nS8rW7tnDx4zJ/T1fa+p+dvQQAz6DSSb
m48UF6/dtQu/mT9rav43NBCDgMYCnXp01MxRM0fNxDDzW03Nn4YGYtAvINnc
fJiQmRP7+//X1v5vbCQWtbScKylZu3s3HjM7OzomlZZOq6oiEs2sra3Pydmy
fTtWMyHg0+fPLz9+fEUKev3hw+dPn4B6cZXz5IHfv39T10xgoAFrNKq7E81M
IPfbt28/KQOfP38GkpA6TkJCgkIXIgNjY2Ng/Q5siuhQAwBdqK+vDzTt+fPn
wKbIfeqBly9fAuMLAPAQtVI=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "40.2`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJzNlr1v2kAYxhEsHSvxIYYunXFhYOnasWuq/gGJSqMuVDGQQj5sjIeIDNki
ZUyGDFmiyFIyZMiWsUJKq5JQsK0KYmwwoqF8276+tpOItkoaY6vqI/vku3v9
83N3r873dO79zFu3y+VKPIJiZvbDCxyfzbx6DJXX8cS7+Xjszct4MjYfw5/P
eaDxyfWtP7vdbp/P5/V6ffYEhEAg4PF4JEny+/3IOYXDYZZl4ROKogyHQ+Vu
jUcjuO4JAPV6PSgxDOM4DpjAh+rfTWi67uoEV1A+hGlCyoVC5exsdNPkCJMr
lT5T1Pn2do3nVds+b40Vd3evkskqSRb39hqXl+qvvZaZhsR6/dvqKiKIQSbD
EcQ5w8j1+nhiOFMwwVhxf7+fTqNcDmWz3VSqlMuVj49bkmS+ORwMrDJBTUGo
EASiKC2b1ckk2V5Y+JrPcycnsiwPjBgsFLLEHCtKiWF+JJOIpgGrk2karaw0
U6nKxgZ/egoxYQwzc/5BTGMtmrVaGTgkCW6RgdXAME3LicSngwMIeGY950eq
Wjk8vLqxCliAd9Ppi52ddreLrM+nmatStcqurcGQ9SmlKHV5uZzPS6KoquoU
TJML+QNW24uL+mQSRG1piS0UoGcw1brrSMOMJAj8+jpY/Z7JfGEYM/+nyM9J
LISWjo5aOH6xtdXp95F9JsyqpsmNxsfNTYnnb9vtMK/JCLVaLWTwnWL+KUeY
v+3P/63Pf8+EKvz1hvbU6XSgDBl7XTAYtOlwUtFoFPY6OIpgTggcRiIRoAmC
AEcRzjmJogg59hOzA7zn
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "8.9`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztls9P2mAYxwlcdlz4FQ677AyBA5ddd9zVZX+AZszsopFSECsRSogxRhO9
GG5iTDyqB2M8mCxejHoh0QAOR9mgBToYQ352tG/3UJQgFmTR0+I37ZP3bZ98
3u/TPv3xemxy5JNSoVBgLyCMjLre2u2j7vcvYfJhAvs8PmH7+G7CYRu32d+M
qeDgq5u9NVYqlVqtVqPRaPsLzuog6vUaadIvR6/Xq1QqlmV1Op04nNhIpHh+
PjjHbDYnEglYgud5juN4OTWbTcTz9Wbz8vCQstsTPh+dSiFBgOM9mbVaDaLJ
ZKIoCpjAh+n9RRFCEFvA/X1melr0+epu9+XGRp3jREFAd5PBFcTBzDawynGx
7e2fLpfo9QokKc7NZQmCOj1Ftwn/wJTyr6vV6NbWL6cTHCKfD7AiSQoEEV9e
LrCseBc7jM9iqRRdXy8BkCRvgF4vguj3lzDs684ON3zt0tKFfD66tlbF8Y5D
1AbC2O+HjZmdpS8uWj5vrfZlCgIElqajKyv1DhAuo8RpAT0e3uWCO1XE8XAw
2OC4B3xKQIaiYouLf2ZmxECgxQFvBMFh2LXTyXo8dCDwY3WV2tyMHxykw2Gh
64rdZ0LDQQ3peDy5sCACkCCqU1N5HE95vcmlpWQolNzb+35ywlxd/a5UGqKM
upnwTMG4iVD67CyC44zD8W1+Ph4MJnd3U8fHmVgsn81WoMV7+gz6U6pLlqlW
q2GcoqgvoRB9dJSNxQoMUy6XwQyS4/S05YDaG7Vao14XevLaHEmynMFMoVNI
uz2GgDzIlH3en5nPzP+VCVP46nGPE7wiIBqNRmAaDIZHOuyW1WqF7zv8ipie
QuDQYrEALZPJwK8I9XTK5XLwEvsLsLCr/A==
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "11.`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztlk1L40AYx0t72eNCX+hhL55b2kMve93jXpX9AIpV9hKl0SYVsWo9eRY/
gJeCoigexIA3vZVdxIWIkcYubWMb3ZYGk06dTHzarEF3PUgmePIPGfLM8Pzm
Py/JzNDY1PCE3+fzsR+gGB7lvmQyo7mRjxB8Y9jvk0x6/Cszk55MZz6PBaDy
09+n/+73+0OhUDAYDNEJCJFIJBAINJvNcDhseadEIlEul6ELjDFCCNNJ13Uo
4/G4LMvABD6ElA7BFZTvzBeZEKq1WltR1Gq1cXVVlyTj7o6SiXq90va2yPP1
+fn63JwyPX22vt69v7cIcckcJBrd7kWxqPG8tbxsFQq32ax0fEzj08Zqui5u
bv7JZq2lJZLPX66s3KgqNJGX3L5qjQaJumGIW1t97OKinsudF4vIsqn/Yl+5
7naigZC4s3MzO2stLCj5vHx62m8yTXdMB9vFWNzbu+V5zHHS2lq703GaXDCd
SUCmKe7vtziuzXGXgmBCJQ3TycL4/OBAZdlKoXBdqZDnVt0wHyfhQhB+M4y0
saE/364uv83BeAErHx2JLFstlczHvtwz7cEC1jRlQfi5utpptWh9PsH2CBEP
D3/s7jqbivK/ZC8NJuTXyYlSq3nC/J/vLdPRGzAhhFMP0UnTNChjsRgwo9Eo
pcOnSqVScL7DVSTuhcBhMpkEmqIocBWRvVOj0YCd8AD5PteR
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "4.9`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztVrFOwlAUJe3iaEIhDC7ONDCwuDq6YvwAiNi4YNJnERMNTV/obOIXaOIu
xNERBwcS20kdaAIDgZXQpKHt87QhYEIcoAxKPDm9uffc5vQuffftFs/yJ1ws
FiNbCPnCxb4sFy4Pt1EclcmpVC4dH5TPS1JJ3ivyEHemT5BzHCcIQjweF6IB
Dslkkuf54XCYSCTY+pDJZDqdDj7huq7jOG402LaNKIqiZVnwhD/KiBNiKsRN
8vR/wK+a0x6PPy3ro9d773ZnRAkRrWU9Pc9DfG23ryXpoVq9U5T7kEhQQkRr
9tpSni+m+VypMF1nlM6p6xDRWtHTMB4JcSl1VNUNGSSUQkRrZc8mIZgNbixk
kFDa/PfcdM8GIT6lE1X1QwYJpY0Ini3DeJJlpmmsVptT0yC2VvV8M80rRbmt
1280bUaUEN+W/4+m8P2J5zkLhMgWjrs/es6jxNZzomE0GiGm02l4plKpiBN+
Ry6Xw37HVURcBzBhNpuFW7/fx1XEWh8GgwE24BcWJYkV
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "13.6`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztlj1v2lAUhhEsHSvxIYYunUEwsHTt2DVVf0Ci0qgLKISkJnYIOAxRlAxe
SPYsDNmIooiBuVIkMsSKWyFsh6QiUFq5GBtM/NFjO41IUTHBqEPVV9dX91o+
z33tc67t5wvxuXdOh8Ox/AS6ufkPLxOJ+dTrpzB5E1t+vxiLvn0VS0YXo4kX
Cy44+ezu0MdOp9Pj8bjdbo89AcHn87lcrlar5fV6tdkpFArRNA1LyLIsSZJs
T6IoQh8MBhmGASbwYWrTIbiC/j/zn2GqIEVRZflBU5SpmaOxDxdTp/PJCQJT
qdCl0tXR0Zdi8fL4uFYuX9dqPRP4C2vJNA2IkvS5VGJ2dr5lMj8wjEeQLoJ0
Uiluff0Gx6v7+yxJ3hu1YBrA7+32R4Jor67KGKal01o2q+G43mCQyWgYNkBR
FkEqxaIZYulzIMvU4SG3tHQHMTnDzTyJYQyCsOfnENLv98cz+zxP53IQq/6G
GiFLKEoXCnpIrzeeKXU6dQjBcXVjYwxTzWYHGHZ5cKAzRdGCKUkXe3u3CKLl
cn+yqhqLQsqq5bLlvZtld0VRZ5AgwG5uqqPP08hXKx4/JYhutztJjuAaqPU6
RVH5/E0yKa+tafAQzAY1kE6LKyssipKQR46bsD7vJQjCNUlShcIngqC3t9mt
reru7kU+Xz05+Vqv35q7zKi9x75DIFLRN70hGAztSXXifTSF/gITpvDVk+yJ
53noA4EAMP1+v02Hw4pEIvB9h1+R4CwEDsPhMNAajQb8ijCzU7PZhEr4CefI
kAI=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "15.6`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJytls9P2mAYxwlcdlwUlcMuO0vw4GXXHXd12R+gmTNLDEugYpWUX+/FqIk/
ookHDxpj4ODFk5p4MIuJ4aRxMzgUShjIWhxEitRC23dPiywsNKMVv4En79v0
/bzf532ft+3rkS9Dn8wmk8n9AsLQ8ORbl2t46v1L6Hxwuj+POUc/vnMSo2Oj
rjcjFrj46vGvtM1ms9Vq7e7utjbU09PT19dnNSgg9Pb2WiwWlmWBgFslSRoX
dcjhcCSTSZhCFEVBEMSGkrHY181N0aAqlQpEu91O0zQwgQ9dZRpZhvBjby8+
M8PxvCGH4AqiBhPjmiTF1tYYkkydnyuT6F4ETaasmiyUShmEeJK8jESkhvOn
M1VL9OlpkaJkkkzPzRU4TqXqwv6HGdvZ4SkK+/23Pl8iGtWfvvZ6yvI9bPrq
am16GiNUmZy8DodrWG9dtTJrNWV0Lp3OIYS9XmBKkP78fD6f12lVg1mtQrw+
Oir6fDgQkAMBHAyyFJU6OcH6rLYypaoCTYTDkDIOhRQmpE8QdCTCq2XWdqda
mTAGqii9vCySJDAVq8Gg7PXSs7P5mxs96WswMf55cZEDmt8PtMf0EWI9nnQ0
KuP2haqx7xinDg8LqkmFVv8hJBDE9fY2r662fiY8o6BdqlZTW1sPbjdwcINZ
N5xA6Hc2i9tZbWWy2Wx6YUGmKKnJZz39W4KA9Ntu/D/Mri5lMc/O4uPjGE4Q
+ERI2aA6ORSqwdnf2ODVIYZ83rHs1e5uYmkpMzVVdrkUOCQeCklqoSYpqsAw
+pmP9QllD+Ri8Vc8ntzfjy0uAvx+YqIOv4NCPT42yhTVs1kXtO7LZZamrwAO
zr3eisfzfWVFaLpHF/Pvc75pc6H1IAhMJnN5cPBtfR2yeAqzAxlmyrLR8w5d
eOsJnYnjOIj9/f3AtNlsHWbdrMHBQXi/w6eI/TkEDgcGBoCWy+XgU4R+PjEM
Ayv/B+bgj7c=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "14.7`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztljtrwlAUx0WXjgUfOHTp7Gtw6dqxq6UfQKmVLha1MYkBJ0c3UQQdHN38
BGLpqGMpCJYkvkksNT4SEhuTnpq2FAoVjYODf24O9+ZcfvfPIbn3ngbufDdG
g8EQO4Lg86Pn0agfvzyGwVU4dhsKB68vwvfBUDB6FjDBy5Ov57NvNBotFovZ
bLboExBsNpvJZGJZ1mq1qruT2+0mSRKWkGVZkiRZnwRBgOh0OimKAibwYajT
IbiCeGDuA1P5o62ZynIJTYX2DflZQ12lRFHczudCVeeKMhHF8XzO8fx0sRCA
qqU299ml6ZdqlS6X24VCJ5vtZTLQOrlcu1SiKhWq0ZhMpzDN4XCsZWrlImn6
EUWnGCZi2DuCyAiioOgyHoeOhCACQXQjkYd8HmZ6XC7t31zrE+rfqtVa2Ww3
lWII4hXDxonEG46PcHyYTLbT6adi8bleh5muDeu5kGWO45jBoE+SvWaz32wO
aHrEsnOeX66ym9Zzrfbtmz8wD8x/mDCEU0/Sp9lsBlHbQ+x2u06Hv+X1emEP
gauIcxcChx6PB2jD4RCuItTuxDAMbI8fqPfkfA==
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "3.8`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJyllstPGlEUh41uutQghkU33QqNVjfddtmtTf8ATa3pRo3KG4QBDDHGjRFX
btRo1OjKGDfGGOMjsVFjbWTCa0B5yEMoIq+ZYW4Pd5BaQJH25DLcmXvmm3PP
/d0z86ZnoOtrfV1d3fArOHR1yz8MDXUrPzXCyef+4W99/b1fPvaP9Pb1Dr3v
aYCLrwu/fL++vr65uVkgEDTXbnCXUCBoEYmaBIKmxsaWlpaGhoZQKCQUCtF/
Gk07trd9FxfQfSuRuFwueBzLstlsln2xMTSNWJZD6DYate/uOozGS6nUeXYG
Q62trRRFARP4cPqSiDiOQ7kcdO4Zhjo+tlssYYUiNzzsnZkJxmJwXSKR1MYE
IHgi5LFabbOzNxoNI5cjkympUjmXl5P4WTUzEbrx+62Li369Pq1QIJ0OGY2c
Xh/TaiEDHHaozuS4wj9CsXjcurHhIYiUSoW0WmQwcASBoKnVN0ajz+3OvSRO
7AOWSCadBwc2szkBMwUaj9Lr840gWKXSPTWVYBgmm32GyT3QkpnM9fm5dXo6
MjKCRkf/oIqNIDIaDbmyAhPJZjIVmcVlhWEfSdrm5rwyGQeTNRpLaXzT6eIa
jf3wMH9LOl3O5MODJwauruxrax6dLgPhAQ1SVxGo13NarU+nCwWDcGO2bO4c
jvM2FrNtbrohdVJpcVkrR/jAtE1NpXEwj5mwZ6F/n07b9vedExNxpRJpNHla
efbKGq1WX66t8QopiTN2ff0DaCoVCzRwfnqyJS0ql3vOzyswhcK41/tzbCwJ
UqkFCMlxAzYa5UXyFxPPHTJJrq/7tVoGVpnXc1Xm6OilxUIzTAUmXiMIHsao
01PH5OSdTJaX4vMBw4aSyWBBuQdVlzNhH/A7MRIOg5C8ajXCsnwSazCEpFI/
ST7DLGieFzzHeU5ObBMT96Aog6GChPDRYTLFIxFUjVnYStii4TC5uuqHhQMx
lKSXIHIqFTk7m8H7sSqzUI4wGUo/BQGbzfnKhlGFIE2mu8FBamfncd2pwiyS
sUVuby8XFoJKZQ6SbDDk8PL5FIobknzs9iLmI6MRchwduczmgoYJwj4+HsPb
/J+ZvAUDAXJ+PgSvjIEBamkphSFPMeE0lQKX5wxKWY5lf6VStr2971IpubWV
ommomUWHRCIBR7FYDEyRSFQ1wlJ7KNrl1tnZCe93+BSR1GRi8buOjrb29rLL
4ra2NqAFAgH4FKFqNJfTCcFUHAoGg6Dw372lAMM=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "34.7`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5LM38+/fvTxzo39+/
pJr5798/IDlhwoSeuroJTU3IaGJzc0d19bz584EKgHFEqpn9vb3/qqv/19ej
oIaGdxUVU+fMIc/MCX19P2pq/jU0oKDGxpeVldPmziXbzJ81NUCHoaDGxlcj
wMyJ/f3/amuBhqCgpqb3VVXT580jz8zO9vYnJSVAV6GgqqprhYUTp08nz8wV
K1ZMnjUL6E1kBHThpOnTt2zeDFTw/ft34s0kEpCRN/GUcn9Jz5u0c+eomQNr
JpALzAU/KQOfP38Gktra2kAzJSQkKHQhMjA2NgbW78CmiA41ANCF+vr6QNOe
P38ObIrcpx54+fIlsHwAAPpIpAw=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "10.8`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5aubwMPMfBPz9i0D/
/pFtJkjv37/Y3YTNZCLdCTTxw/fvL548eXL9+sNLlx5fu/b80aN3X7/+Jted
z+/du75w4ZO+vhetra+bm183NgLJl62tT7q7b8+f/+DSpd+oviBo5qdPn3bU
1HwrL/9dVva/svJ/Tc3/2loQWVkJFPleWbmruPjJ48fQICLOTGB43T9//ta0
ac+bm9/U1X2oq/tYW/uxru5tXd2LpqabEyfePHLk12+UMCAyPH/8+/f6/fsn
N2/eP3367tGj90+denz9+qs3b35gizuizMSRZnDJkp8+wQCryuGXN0fNJMNM
IBdY6/2kDHz+/BlIamtrA82UkJCg0IXIwNjYGFi/A5siOtQAQBfq6+sDTXv+
/DmwKXKfeuDly5fAjAYATMPjNg==
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "4.`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5aiZ9zMQfv3///h0k
7jx2/PjGffs2HTiAjDYfOLDl4MENu3ffuH4dqObfv39EmglR2dLcvD8//2hx
MTI6Ulx8rKxseUbGvGXLsPoLv5mTJ078X1//v7kZHbW2Pq6sXLxhAxlmTujr
+15T87ehARn9AZJNTdfKyhatW0eemT9rav43NCCjf0CyqenGqJnD18yJ/f3/
amv/Nzaio+bmu+Xli9avJ8PMzvb2JyUlryorkdFLIFldfTQvb/7KlWSYuWLF
ismzZk2bOxcZTZ87d8a8eROmTj144ABQDWbpRIdyCcgF1no/YeAbXvD9+/ef
2MDnz5+BpLa2NtBMCQkJCl2IDIyNjYH1O7ApokMNAHShvr4+0LTnz58DmyL3
qQdevnwJjGgAzeFxDw==
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "16.1`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5XM389+/ff2REmZn/
MEyAiFLozh9//rx/9erzs2dfnj79+OLFtx8/KHLnv39fv3y5sHr1jdbWR7W1
T2pq7rW0XJk16+WDB8gOJd7Mf3//AsmbO3e+LC7+X1//v6kJgr6VlFzq7//x
/Ts5ZoLFL+/Y8aCw8H9t7f+Ghv+NjUD0obj44rRpv8DmkOP3//+BeeTm/v3X
J0wA+vphc/P1jo6zCxe+ffkSEjLkmQnS+v//92/ffnz+/PPz5+9fvvzEUE+y
mVjTEoVmEgFGzRw1cwiZCeQCc/RPysBnYLb9+VNbWxtopoSEBIUuRAbGxsbA
+h3YFNGhBgC6UF9fH2ja8+fPgU2R+9QDL1++BFZeAJ4w6wU=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "3.3`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5hM389w+EcAG8sljN
/AdTDzT9569f34Hg61cQ+vYNyP2NbDKRZv4Gafr2/fvL27cfHjhwa/HiG1Om
XO/tBaHJk28tXPhg9+6XN258+fqVeHcC7X7x9OmluXMfVlV9Liz8W1Hxv7b2
f309CNXV/a2s/FJY+LSi4vrMmc/u3QM7Ft21yGYC0z+Q/en79ytz5nzMz//f
2vq/ufl/U9O/xkY4AnJBgi0tv0pK7k6d+uHLF0xjMc388vPnnRUrPhUVgbQD
EdCchgYEghkL9MKFSZM+f/uGGaqYfgeCD+/f31i37n5j4/uiol+VlSC/19WB
UG3t76qqj0VF92tqLi9a9OrFC+LjHUj+/vv3/atXj8+fv7Vhw7X5869Mn35l
2rSrc+feXLv20alTb589+/n7N1YDcZqJ5J2/EPTvHxSBIxEKiE9LQytvjpo5
aiZlZgK5wFrvJ2Xg8+fPQFJbWxtopoSEBIUuRAbGxsbA+h3YFNGhBgC6UF9f
H2ja8+fPgU2R+9QDL1++BJbVAP/Xw6g=
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "8.3`"}], ",", " ", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikFsJiYmERERYWFhEcoA0AQxMTFmZuZXr16Jior+px7Q09O7d+8e0Io/
f/78/PnzD2Xg27dvQFJHR+f+/ftAM4HmA7kUuhDoKiA5aiaymf/+/fuLFwy4
O3///g0kHz96dOTcuWOXLh29eBENHblw4dq1aySZCRFZsGzZzIyMLaWlm4qL
0dDa/PzmpiZI+JBk5uING55WVf1vbf3f3IyOGhomT5xIhpmL1q27Vlb2p6np
d0PDH1T0raZmQl8feWbeKCv739T0r6HhPyr6OQLMvErt8ATFe2Ul9nivrycz
3pcv783KWlJevqi0FA3NLShobWkhyUxIPnr39u2NBw9uPH5849EjNHT94cOn
T59iNQ2XmTQtl/CDQeJOKpoJ5AJrvZ+Ugc+fPwNJbW1toJkSEhIUuhAZGBsb
A+t3YFNEhxoA6EJ9fX2gac+fPwc2Re5TD7x8+RKYPADMC4/x
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], " ", "->", " ", "12.6`"}]}], "}"}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7257936293495812`*^9, 
  3.7257936372923203`*^9}},ExpressionUUID->"03e54578-1a68-4126-989f-\
36d8f9df47b2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["15", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257936398314533`*^9},ExpressionUUID->"ea9fcb49-f5d9-4866-afbf-\
146a10cdeae8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlV1L21AYx7v1YrvcR9i+xW53uVvHPoCyTnbTQU2bpDFNQRSpiHqjKAVR
bwTxShCUgIJ4IxibZo19T+vWztqkb+t7m3bPyJRS1zSzKXjhwz+Hk1z8znn+
ec553ox9Hfn83GAwTLyEYWQUfWexjOIfXsHLR/PEl3Gz6dN7M2IaN1nejhnh
4+u/z5/5UKPdbivjMOKJ/8S/i0ajwdF0Pp8fBr/Val0eHSVtNtbtLpfLuvMj
Hk/Mbm87nTkM8+7u1ut1HfnJWMxPUS2KAj7oGkUhF8hIF35GkjiXq0GSClyR
gOOQ0eD8UqnErq5WCKITDoJcAhSVEIRB+GCyd2cnj2FdcEVNh4ObnZVE8WF8
WZZ5mk6h6D/hiiAvdnm5WCw+gB9mmDiOq8AVFXCc3d6u1Wr/xU9Eo4Hbaumr
GxT1HRxAvhr5YCkYC/Zq5IOuMCx0dqaFD2ayKyv3C6avQiR5FQyq88FGMLNX
wahLdjh809PpVEqFz5+f+6emklYrXAJdB0qLapOT7NJSoVDoxYcjn8vlEvF4
6OTEs7XlXVwMO50/EQQy0vg7inY7u7lZrVbV6+fOrmw2+0MQgsfHFxsb3MJC
hKKuEQRqUu69nGSzcXt7zWazL78rYFeZTOZ7OByg6Yv19W/z81GSTCHIr3vL
JTAscHoKbgzSvyqViiRJUDP+w0PG7fbNzQkEcWO1gkVwO0UIIsbzOvZHaDqi
KMZ5/nJ/n1lb410uZmbmhdGoF78zwBm4eNPp9LPH1N8fM394MaSdd8ZvsJau
Jg==
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFABikFsmoL///9DSFqAUfNHzaeP+d++fbtz9eqnT59oYT7Q2DMTJrwqLd3R
2Pj9+3eqm3999+6PFRX/Gxrel5df27WLuub/+PHjSl8f0HAIArKBIlQ0//Xr
14+qq+HmA9lAESqa/+jWrZclJXDzgbEAFKGi+fdOnfoADnwIArKBIlQ0//aR
Ix+RzAeygSJDyP20Dn9apx9ap38gAOZZYM6FBD4wLxNpOPHmA8scYMkDDPnT
/f0kFXHEl59AY4HlJ7AUJd5wkswnD4yaP2o+VcynHaCRy5EBANZ9U00=
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSize->{32, 32},
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFABikFsmoL///9DSFqAUfNHzR81f9T8wWZ+A9GAbPP/E4FGzaed+TSNX2qB
UfNHzR81nw7m0w7QyOXIAAA3PjVp
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSize->{32, 32},
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257936488666306`*^9, 
  3.7257936489233475`*^9}},ExpressionUUID->"96860c69-f514-4b52-b7e9-\
1ac60dffc8f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.790909222267317`", ",", "9.790909222267317`", ",", 
   "9.790909222267317`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257936502597833`*^9},ExpressionUUID->"a8dde9e9-af69-426c-b457-\
a33b92b07775"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<butter\>\"", ",", "\"\<sugar\>\"", ",", "\"\<flour\>\""}],
        "}"}], "\[Rule]", "0.2"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<flour\>\"", ",", "\"\<butter\>\""}], "}"}], "\[Rule]", 
      "1.4"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<tomato\>\"", ",", "\"\<salt\>\""}], "}"}], "\[Rule]", 
      "0.9"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725793739017054*^9, 
  3.7257937390697412`*^9}},ExpressionUUID->"0f20fa8a-577e-4c90-8155-\
4518d266ff8d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257937498031273`*^9},ExpressionUUID->"a605aac2-2ff7-4a15-947a-\
750fe2b4ed58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<butter\>\"", ",", "\"\<tomato\>\"", ",", "\"\<apple\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.725793757050641*^9, 
  3.72579375710028*^9}},ExpressionUUID->"96ec34b5-c035-4cf8-8c33-\
7160938f3678"],

Cell[BoxData["0.8333333333333333`"], "Output",
 CellChangeTimes->{
  3.725793758322159*^9},ExpressionUUID->"238d18c4-e297-4aa2-a588-\
446040d2782c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.4", ",", 
      RowBox[{"-", ".2"}], ",", "3.5", ",", "6.4"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257937934517717`*^9, 
  3.725793823998411*^9}},ExpressionUUID->"65c11e85-e683-4f6b-becc-\
da92e38db96e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257938283176126`*^9},ExpressionUUID->"4285c974-9c9d-47d1-8652-\
2e4d0145f70a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1.4", ",", 
       RowBox[{"-", ".2"}], ",", "3.5", ",", "6.4"}], "}"}]}], ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<GaussianProcess\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257937934517717`*^9, 3.725793823998411*^9}, {
  3.72579390142759*^9, 
  3.7257939224873343`*^9}},ExpressionUUID->"9eb70e88-059e-469b-84fc-\
c4983cde32cb"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725793928585228*^9},ExpressionUUID->"ddfeb755-bfa9-41a0-a605-\
69b617af7d20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.3", ",", "\"\<male\>\""}], "}"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.8", ",", 
         RowBox[{"Missing", "[", "]"}]}], "}"}], "\[Rule]", "2.5"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Missing", "[", "]"}], ",", "\"\<female\>\""}], "}"}], 
       "\[Rule]", "8.4"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.2", ",", "\"\<female\>\""}], "}"}], "\[Rule]", 
       RowBox[{"-", "2"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Missing", "[", "]"}], ",", "\"\<male\>\""}], "}"}], 
       "\[Rule]", 
       RowBox[{"-", "4.2"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "\"\<male\>\""}], "}"}], "\[Rule]", "10"}]}], 
     "}"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<NearestNeighbors\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725793968428647*^9, 
  3.7257939684772778`*^9}},ExpressionUUID->"0a623b5b-14f2-4484-b1bd-\
f3c59e943b29"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257939712365904`*^9},ExpressionUUID->"2241d9fa-be06-47a6-8611-\
a92febaa6d4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1.4", ",", 
        RowBox[{"-", ".2"}], ",", "3.5", ",", "6.4"}], "}"}]}], ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<GaussianProcess\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.725793992610363*^9},ExpressionUUID->"01210bde-799f-47c4-9c41-\
932fd1149b8b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257939963828726`*^9},ExpressionUUID->"5a6077e4-e2ed-45bb-835b-\
1bc2461ae7e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.7257939998071823`*^9, 
  3.725794010981319*^9}},ExpressionUUID->"81d42152-28fc-496d-b44c-\
ea8477467d6a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Input type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "\<\"Numerical\"\>"},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"GaussianProcess\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 6, "Length" -> 6, "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`UnknownShape]], 6, {}], 
                    "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[1634953], "Type" -> 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], "HandleQ" -> 
                    True, "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[1634953]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "AssumeDeterministic", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key[AssumeDeterministic]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["True"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key[AssumeDeterministic]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["CovarianceType", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key["CovarianceType"]]], "Mouse"], 
                    ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, ShowStringCharacters -> False], 
                    FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 814984180][{
                    Key["CovarianceType"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key["CovarianceType"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["EstimationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key["EstimationMethod"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["MaximumPosterior", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key["EstimationMethod"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["OptimizationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["SearchMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key["SearchMethod"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["SimulatedAnnealing", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key["SearchMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["InputFeatures", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    GeneralUtilities`Slice[
                    Key["InputFeatures"]]], "Mouse"], 
                    ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], {}}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 814984180][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    814984180]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    814984180][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 AssumeDeterministic -> True, 
                  "CovarianceType" -> {
                   "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                  "MaximumPosterior", "OptimizationMethod" -> Automatic, 
                  "SearchMethod" -> "SimulatedAnnealing", 
                  "InputFeatures" -> {}], 
                 TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                 Association["ID" -> 100102931038684]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Standard deviation\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"2.9749999999998917311`3.",StyleBox[
                   
                   TemplateBox[{"\" \[PlusMinus] \"", "Indeterminate"}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{"\"95% confidence interval: [\"", 
                  RowBox[{"-", "2.3158417847463239085`3.*^77"}], "\", \"", 
                  "2.3158417847463239085`3.*^77", "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", \
-2.3158417847463239085`3.*^77, ", ", 2.3158417847463239085`3.*^77, "]"}], 
                "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"2.5220688919181029064`3.",StyleBox[
                   
                   TemplateBox[{"\" \[PlusMinus] \"", "Indeterminate"}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{"\"95% confidence interval: [\"", 
                  RowBox[{"-", "2.6815615859885191222`3.*^154"}], "\", \"", 
                  "2.6815615859885191222`3.*^154", "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", \
-2.6815615859885191222`3.*^154, ", ", 2.6815615859885191222`3.*^154, "]"}], 
                "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "7.48`",
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}],"milliseconds per example",FractionBox[
                "\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Predictor memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"173.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"4","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"2.68`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{5, 5}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.7257940121232195`*^9},ExpressionUUID->"75b1c1ea-f15c-4375-8159-\
52d86d5d8ecb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.3", ",", "\"\<male\>\""}], "}"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.8", ",", 
         RowBox[{"Missing", "[", "]"}]}], "}"}], "\[Rule]", "2.5"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Missing", "[", "]"}], ",", "\"\<female\>\""}], "}"}], 
       "\[Rule]", "8.4"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.2", ",", "\"\<female\>\""}], "}"}], "\[Rule]", 
       RowBox[{"-", "2"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Missing", "[", "]"}], ",", "\"\<male\>\""}], "}"}], 
       "\[Rule]", 
       RowBox[{"-", "4.2"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "\"\<male\>\""}], "}"}], "\[Rule]", "10"}]}], 
     "}"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<NearestNeighbors\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257940703273907`*^9, 
  3.7257940703831124`*^9}},ExpressionUUID->"80e051a6-081e-4a2f-bc30-\
58a2a87e7ea1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725794104269554*^9},ExpressionUUID->"fca2aa87-d092-441c-bfd5-\
03937319cb0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"2.5", ",", " ", "\"\<male\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257941149000864`*^9, 
  3.725794122382744*^9}},ExpressionUUID->"ab428666-d136-4c18-a5a0-\
6739af778f57"],

Cell[BoxData["3.540000032068342`"], "Output",
 CellChangeTimes->{
  3.7257941274747972`*^9},ExpressionUUID->"cf66745a-97e5-4c69-98f6-\
723583bdfb71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<age\>\"", "\[Rule]", "24"}], ",", 
        RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], 
      "\[Rule]", "10.4"}], ",", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
        RowBox[{"\"\<age\>\"", "\[Rule]", "13"}]}], "|>"}], "\[Rule]", 
      "5.2"}], ",", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "57"}], "|>"}], "\[Rule]", "23.3"}], 
     ",", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], "|>"}], "\[Rule]", 
      "14.3"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725794152869355*^9, 
  3.7257941529194937`*^9}},ExpressionUUID->"69d01a67-e2a6-4fdb-935c-\
708645a81504"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725794157413974*^9},ExpressionUUID->"8a5db0e3-c290-40ec-82f5-\
8be03f040b16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<age\>\"", "\[Rule]", "31"}], "|>"}], ",", " ", 
    RowBox[{"<|", 
     RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}], "|>"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725794165120201*^9, 
  3.7257942201306987`*^9}},ExpressionUUID->"d94d98a4-37cc-4453-b22f-\
89afa1933487"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10.394568520481839`", ",", "14.299991833678266`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7257942215772133`*^9},ExpressionUUID->"ae734d0a-1fc8-43a8-8671-\
a7f36d4066cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<age\>\"", "\[Rule]", "32"}], ",", 
       RowBox[{"\"\<height\>\"", "\[Rule]", "160"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "183"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "41"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "123"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "30"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "175"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "21"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "150"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "11"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<age\>\"", "\[Rule]", "52"}], ",", 
       RowBox[{"\"\<height\>\"", "\[Rule]", "164"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257943284886985`*^9, 
  3.725794334156868*^9}},ExpressionUUID->"7c62d165-9d7d-4a39-9a8b-\
6ba778e76ba2"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 6, "Length" -> 6, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"age", "height", "gender"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["female", "male"]]}], 6], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "age"} -> 1, {All, "height"} -> 
           1, {All, "gender"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "age" -> TypeSystem`PackageScope`AtomShape[34], "height" -> 
              TypeSystem`PackageScope`AtomShape[34], "gender" -> 
              TypeSystem`PackageScope`AtomShape[54.]]]], 6, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[705775194], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"age", "height", "gender"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["female", "male"]]}], 6], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[705775194]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"age\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"age\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 442949880][{
                    All, "age"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[All, "age"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"height\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"height\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 442949880][{
                    All, "height"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[All, "height"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"gender\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"gender\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 442949880][{
                    All, "gender"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[All, "gender"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[1, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["160"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[1, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[1, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["41"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[2, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["183"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[2, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[2, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["30"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[3, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["123"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[3, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[3, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["21"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[4, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["175"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[4, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["male", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[4, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[5, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["150"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[5, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["male", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[5, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["52"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[6, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["164"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[6, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
                  GeneralUtilities`Slice[6, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 442949880][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 442949880]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[442949880][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {157., {92., 98.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.725794335184944*^9},ExpressionUUID->"17bcd35b-ec72-4ba5-ae8f-\
29a7ca2763b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"d", "\[Rule]", "\"\<age\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725794434689599*^9, 
  3.7257944347382355`*^9}},ExpressionUUID->"5294ba0d-7dba-4a00-9b0d-\
0199e061fa27"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725794440610421*^9},ExpressionUUID->"3ce42e11-528b-478c-91d3-\
261f5571f201"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<height\>\"", "\[Rule]", "120"}], ",", " ", 
    RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725794484499406*^9, 
  3.7257945224418106`*^9}},ExpressionUUID->"a2776411-f123-43e5-bd9a-\
08fc609b4cc7"],

Cell[BoxData["29.321769752034523`"], "Output",
 CellChangeTimes->{
  3.725794524964966*^9},ExpressionUUID->"e2a7f3a4-9753-4169-b255-\
c07280d796fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p", ",", " ", "FeatureNames"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257945608190103`*^9, 
  3.72579457365787*^9}},ExpressionUUID->"87166555-7cc5-4acc-95d1-\
3a86c5246eb5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"height\"\>", ",", "\<\"gender\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.725794577388378*^9},ExpressionUUID->"caad70a8-ac5d-4dee-b0dd-\
555dd88c856c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"120", ",", " ", "\"\<female\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257946393101397`*^9, 
  3.7257946466168385`*^9}},ExpressionUUID->"b156f5e5-e908-458e-ad4c-\
ffd2c128333a"],

Cell[BoxData[
 TemplateBox[{
  "PredictorFunction","mlbddataev",
   "\"The data being evaluated is not formatted correctly.\"",2,297,49,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725794648011443*^9},ExpressionUUID->"1b4ff104-71a3-42f7-b785-\
941cc6c5b264"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["PredictorFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                 BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {All, All}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                 Axes -> False, AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                 BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {All, All}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                 Axes -> False, AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
         DisplayFunction -> (
          ButtonBox[#, Active -> False, Alignment -> Left, 
           Appearance -> {
            "Default" -> 
             FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
           FrameMargins -> 7, BaseStyle -> {}, 
           DefaultBaseStyle -> {"Panel", Background -> None}, 
           BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{"120", ",", "\<\"female\"\>"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7257946480294933`*^9},ExpressionUUID->"fb3e4c64-2749-41bd-bbd6-\
e6170bfd07d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"120", ",", " ", "\"\<female\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257946393101397`*^9, 
  3.7257946604424706`*^9}},ExpressionUUID->"610578e4-24db-4fa7-be8e-\
bec0b6065de6"],

Cell[BoxData["29.321769752034523`"], "Output",
 CellChangeTimes->{
  3.7257946619670305`*^9},ExpressionUUID->"e52b3ffa-2594-45e0-9da6-\
03c62f9054d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"draw", " ", "=", " ", 
  RowBox[{"Dataset", " ", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "120"}], ",", " ", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], ",",
      " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "150"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], ",", 
     " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "80"}], ",", " ", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257947196947412`*^9, 
  3.7257948252794805`*^9}},ExpressionUUID->"88b2eadc-5c45-4f74-8f27-\
dffb5426a83a"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"height", "gender"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "height"} -> 1, {All, "gender"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "height" -> TypeSystem`PackageScope`AtomShape[34], "gender" -> 
              TypeSystem`PackageScope`AtomShape[57.60000000000001]]]], 
           3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2130454436], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"height", "gender"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[2130454436]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"height\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"height\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 294227996][{
                    All, "height"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[294227996][
                  GeneralUtilities`Slice[All, "height"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"gender\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"gender\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 294227996][{
                    All, "gender"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[294227996][
                  GeneralUtilities`Slice[All, "gender"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["120"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[294227996][
                  GeneralUtilities`Slice[1, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[294227996][
                  GeneralUtilities`Slice[1, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["150"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[294227996][
                  GeneralUtilities`Slice[2, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["male", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[294227996][
                  GeneralUtilities`Slice[2, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[294227996][
                  GeneralUtilities`Slice[3, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[294227996][
                  GeneralUtilities`Slice[3, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 294227996][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 294227996]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[294227996][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[294227996][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {122., {58.5, 65.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7257948274178877`*^9},ExpressionUUID->"97749db7-b2a8-4641-ad77-\
8a78e8e1796e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dnew", " ", "=", " ", 
  RowBox[{"Dataset", " ", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "120"}], ",", " ", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], ",",
      " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "150"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], ",", 
     " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "80"}], ",", " ", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257947196947412`*^9, 
  3.7257948440989413`*^9}},ExpressionUUID->"e0e49e43-be3b-493b-a36d-\
f42c39e4e7a7"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"height", "gender"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "height"} -> 1, {All, "gender"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "height" -> TypeSystem`PackageScope`AtomShape[34], "gender" -> 
              TypeSystem`PackageScope`AtomShape[57.60000000000001]]]], 
           3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2132813624], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"height", "gender"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[2132813624]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"height\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"height\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 84639258][{
                    All, "height"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[84639258][
                  GeneralUtilities`Slice[All, "height"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"gender\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"gender\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 84639258][{
                    All, "gender"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[84639258][
                  GeneralUtilities`Slice[All, "gender"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["120"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[84639258][
                  GeneralUtilities`Slice[1, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[84639258][
                  GeneralUtilities`Slice[1, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["150"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[84639258][
                  GeneralUtilities`Slice[2, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["male", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[84639258][
                  GeneralUtilities`Slice[2, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[84639258][
                  GeneralUtilities`Slice[3, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[84639258][
                  GeneralUtilities`Slice[3, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 84639258][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 84639258]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[84639258][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[84639258][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {122., {58.5, 65.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.725794845204463*^9},ExpressionUUID->"89f0bd2e-9149-407f-b014-\
45752321140b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", "dnew", "]"}]], "Input",
 CellChangeTimes->{{3.7257948484831514`*^9, 
  3.725794858264837*^9}},ExpressionUUID->"eac5530c-045a-4fad-b49f-\
b35d65811659"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "29.321769752034523`", ",", "12.85726028516082`", ",", 
   "19.264992714888137`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257948602039814`*^9},ExpressionUUID->"9b441583-86f2-493a-8060-\
b00a9c9f8414"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.72579489427252*^9, 
  3.7257949392890015`*^9}},ExpressionUUID->"e8e7eae3-637b-4655-9f37-\
3cb352c3bb89"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx9nXecVsX1xkGaohI1xsQGCNgVjb3FY7CEEuwFESyRoij2FAv2rlgQxaix
oiIgdmzAlaJJbOAKUlYQFlxhYXdhEVSC8MuHPd9zf/d5d8I/L++z884988yZ
M2fOzJm7058uPbnvRo0aNZq6caNGTf77udPc7m+sX78+43PVeQfMfLFqUdbv
qlf/PnbgfwL/6tuzjlrzak02ctNf3jiwfHXgf9z5xLVTx9ZkNc/+uV+HLnWB
L53T8uLj1yzK+m6oZ2ngk2c9uPLd7pO8fEXgE/f466Mn3D/H6vGywKf+8eT1
d1RVWSP/B17/bTnlTct7/ab1uzzWsDx1pvJ7e03b6/yY8uPfTfnkO7xSnu98
zt3td2ds06M2eAa/Knv9yr5PLw6ewS/7aPMbBx8xK3gGv7H3lP8MrnoXHgJf
efgRhy2esSB4Bu/z+CnDy49YFjyDK89aHp61fnhuWJ46U/nhWdsLz8oPPCuf
8Ax/0l+BUz/f+Zx499ze56z9OngGX/XKrU9c9cIrwTP4szW/qd7t3RnBM/i4
9dPnv1P1bfAMfm7db1q0PKc6eAZXnrU8PGv98NywPHWm8sOztheelR94Vj7h
GZ4YL/AMLv0bOPLwnc95vUde+uP4abQr8O8LelsR+LctHl9xwoAlwTP4wc9+
2KfDCTXBM7jyrOXhWeuH54blqTOVH561vfCs/MCz8gnP8IG9gmdwxhc8g4s+
BP59cZwG/s1T0x+aNOG74Bm8ON7LAp/+3Du9Hty0NngGV561PDxr/fDcsDx1
pvLDs7YXnpUfeFY+i/pcEfNFUZ8rwr4V9blCxntd4KI/gYv9DLyoh2WB33nN
3SN/8VCt6HNFQp/z8kV9zusv6rPKU2cqf1Gf8/YW9Tnnp6jPOZ9Fnstivi7y
XBbyFHkuE3tYF7i0K3DRt8CL/JQF3uPeaV3eWaQ8lyV4zssXec7rL/Ks8tSZ
yl/kOW9vkeecnyLPOZ9FP4l/y604r+d4cR7K8aLdzPHiONfyFQm8rARv1OC/
nOdE/SU4PCfkL8HhWXF4VhyeEzj6Ywl9toQ+W0KfLaHPltBnS+izJfTZlGct
L/psCX22hD5bQp8toc+W0GdTfUauhH22hH22hH22hH22hH22hH22hH1O8Fxh
Cfus/W4NyxP22RL22RL22RL22dQ+8/yEv2EJf8MS/oYl/A1L+BuW8Dcs4W+U
8Kzlxd+whL9hCX/DEv6GJfwNS/gb1rC/UWcJ/9kS/rMl/GdL+M+W8J8t4T9b
wn9O6HOdJfxnHV/WsDzhP1vCf7aE/2wJ/9nUf6a+xHrQEutBS6wHLbEetMR6
0BLrQUusB0t41vLwrPXLelDHo6n8sh60xHrQEutB0/Ugv0vENywR37BEfMMS
8Q1LxDcsEd+wRHyjhGctD89av8Q3LBHf0PFr2l6Jb1givmEa3+DviXidJeJ1
lojXWSJeZ4l4nSXidZaI15XwrOXhWeuXeJ0l4nWWiNfpeDflR+J1weeU3W7Y
pXzsz/H5iz4rPmx2Y0228QcLNhvS4afAtz/p2t0nHFDrvJUHfsGTW1zZ6/xK
8/Km5f27af185zmU5zufS+6ZMW36Jku8vZWBb/3FM9k2E8oNecAXDvjPmec1
WcLzTOtvu6H9tdkfzzhmZech32d3TR162z/Xf2HUD37zjCYf3TJwYdQPvu+E
TofefDTzaLkpzneeQ/1853PqTv96YLeuC+K54LPu3+zY+/deHM8Ff+m6mQNa
b18dz1Xc6zGth/bzHHhDTnDay+/BqYfvfF584Kwt3lq2NJ6ruNdjWg/9TvtE
fwKnH5ETHJ6RExweeK7iXo9pPVK/Jeq3RP2WqD/qYVyAq36Cw4Pwbwn+LcG/
JfiPepATnH5HTnD0RPTTEvppCf20hH5GPXznk3GBnOCMIxmPlhiPgfNccNHz
wKlf7JKJ3Que6EfqB4c3vvOJHRO7ZGIn4+8JO1wiD3jCDmv9pvXzXObbjV9c
dUH1oqqYZ/n74gtvujv7MZeTv4Pz++DP60F+/t5tz36nrPt/9pfyW3T56r1b
T/0uylP/yeOmbvnwrGVRnnraXjVySpvlVTH+wR+7b5/Drqtb5PPspKj/5SYd
rz5vQU3gsV/2yf3vVr4RuCXKm5YX/sOOgas86Fmivab80E/aL8zfyjN8wR+8
UQ7+eG7U6+W1X8APq7639/hp+fzK38Hxl/j7/Y+PnXPiioXBM/ig2rcXXb5f
bfCpuIyvsP+0V+WMfUrmW9cH5AFnnYsdwx8srlMmRfkZTc4ZccBfcjkVp1+U
T/xJ7Pfj3u/FeWRp4MjJ36e5f4iclL/92E16N963KuSk/GG7/zDv3tG5nIrD
F88p9ktdzOPwQHsoD2/FdV9lyMPzKI/8jEfK79dk/x92vqVG2lUeOPpJ+xh3
xfhMeYyjYrsmhf4U5Z8U/VWUc5LyY+pvgGv9Ml/HeAdX+aVdpu2iPPZE2mWJ
dlmiXUa7mNe0vYJHeeyS8iZ4PFf4CTmLcYm8XcKPKT/q/wg/pvyoH1VsV1mU
L8pfZiNWTTvtz3OrRf4y2/inzuf9ZrrGY/PnFuUvs+n3djx+6N+Xqn4a+ok/
AC76H+s/4htF+SuMcVSUvyLidUX5K4xxXYy/5fLwnecjTzGuUhnyFOMqlcZ4
L7ZrqRXtUl38HXtS9JOX2uMyL/P3hB0TvCzw4nxdEXjR/uT+7+PSL8iLnDI/
GvZc5gVLzAuClwWOviEnuPYjuMyzEXea9sCBB1/w08JM5p2QE5zybzxx+xfv
/H6Zzu/GvCnr5RhHMl9bYr4WvCz3c30c0V5w9BO5wWkvcoPTXuIY4PgzfOfv
4OInmPpRlFc/Nn5X9K9yP71hP9YSfqwV/YGIk4R9E7807KH4sSZ+rGl58WNl
XJRFeeyV+LGmfqw+V/zVaBf9BY6+UZ568MfgnfLwL36viV9nyr/4w4ET96M/
kYd4HTg8EK8D13idlpd2hZ9JOZ7Pc/mOvqDPxTjM6sCRM+JePo6QE1zl1PLU
gz5if6gHXPd5G/afy8LPRE+oB7woT0X4e8wjRX+7IvCiX1QWPBf9n7JoV9H/
KYt2Ff2fMvWjTOuR+TH8SZnfQ56ifuT74MX+yPEivzle5KsEL9lnR98Szy3B
kT+Bw48leDbVt6Jc+b5/xGNcT0SvtLxpedHzkucW25fzqfZExrUlxrXE4fN9
3eI+6SRL4DFO5x+y2bJ1p+XlFS/uY06Keor7mJOifHG/b5LWY1qP1G+J+i1R
vyXqt0R7LdFexcOuJ/gM/OHPfz2/85C1GZ/vH9Rs94rVtdnsvtd8tH79D4GP
6tx1t8ueWebz5ifxu2N//8y5d75SHd/5nZYHb7x+ygNX9Kqxg7frckqHLmtc
rtezHZ/cqtdL/8zl4XfUz+/BqYffUx/18J3P2yasu2Jo1bKs7ubKiweWrwv8
tz3PPn+Ln2vj9/wdnO98nnLK0afv+3kVeHyCIz/4Ced/uPOD99bEd/4O7s+N
v/Nc2gv+7sWzh1c0CTmjnr33aNXrgRNK5MxUTn5H/fweXOqJ5+tz+YRPr4f+
MfodecCph/Lwrc9Vnvk9v6N+fg9OPZSnHn0un+g55cDpF77zd8HDD935smNe
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
4Tdtt6o6+FE/Ch4UhwfF4UFxeFAcHhSHB8XhQXF4UFz63RL9bol+N/gp2u0y
a+Z8ij5YQh8soQ+W0IdYf4k+WEIfLKEPhj6I3bCE3bCPfRyJ3bAZPu6KPFTY
cB+nRR4qjHEtdsYSdsYSdibBQ15e7Iwl7Iw980T/S67fplrtg6l94NxrYj6y
xHxkzEfwA77Y7T/8gO/r84XMX5aYvywxf5XwA56Yvywxf9mOO4wb+dpDS3Se
ssQ8ZYl5yhqep+os4S9Zwl+yhL9k+EtFfauzge63iB9lCT/KEn5UQt/y8uJH
WcKPsk99HIkfZQk/yhJ+lCX8KFM/inVfwp+3hD9vCX/eEv68Jfx5S/jzJXyC
J/x5S/jzlvDnLeHPG/68rHOt7aGthh91Y8k61xLrXNN1LriuZ8F13QrO+hR+
9D4BWYdaYh1qug4F1/UmuK4rQx5vF/wQD1m3R/06ER7Ap/s6VNb7xnpf1vXG
up72al4/7QUf7+t02gu+3tf7su421t2yvjbW17SLz0/32emo616sjXa97HGV
Jy5td8Sq2xdFu4jDHH3CkNFrx30R7fp6xutdOnRZl33U58gjH3h6QrSrfyKe
cL0/97RLrtlov9V5ux7xuNA+A184/dkd8n5EnhPGN9/yX00/jXbF/uSZS494
67Vp0Z6J7xz33NiBP2Stbl33WdXTcf4qPp/frcI2mrIw2rvC44SXzdx81MTZ
M6K9m3jcaPmEF4Z12H5oRrtGJdbjk/y5r/1Y023C3Hz8zvHnnnjgBTtu/td8
/PLc1pO+znb9fk60i+futmnTs17sODTGb9uBv9q3fOxPWatXD9//uqa5fWt2
4kt3DSz/7/rx6j8PGj1zbrRzx5+/Hj124Mrs0Ft2XHHPh1OjvXx+0GOXnm3W
XB3tqk2sl5t7/U+tGfXnxY/mdr6117/pwkt+teT03M5T/7m3vfW3sb0XRru6
+3nb379w3pgHDv8y2tWn6d+2GdJhVdzriJ2/zuORY/5+YeWAT8ujvQ9t0JNl
2Y2X/qLp3I7Xhh8yeYM+VGfjbn7yub/8dUrIUR9HrMn+8W73if8e8JXYmdJ1
7sNef8djO/9u2v65nzDF629x78Mtfh6V+wkrvf45D034zddbLo72okfcz0N7
Rzw+Z23nIcuzXae/8eQeT5TFvPZB51Zth3RYkQ0duVFt2/sfjnlt1qrfH10+
dkW2/57HXjrzzK+Chx028L8w+1O3Vz+6Zst5wUN9/HNR1v77k9tWLFoQPNTz
+W227bNLpo1dlscDD9kQB60qiQMsT6xnW/tz1c/s7s998k+TnrXrcz9zkD+3
qtXbb01otCx4mO324xzXE3io1/8l2fJpyz8vO3B2+FGHupz3vnF00yvWTAw/
quuG507Pdvl6o1nXflRlxfn9q+zZjne/euBvlwYP9fXPzn771/ZTBjRfFvMR
n1mvjc++683cD5+4oV8WlKz3VyTWp8e7PLoeGe3ycF8Z/LR0eQ69ZfwNi6fU
RLvmbaj/2Wzo+uH/endebcg/cIPevp/N7/SH6198tDb8kFc31P9R1qffytmH
9c/XWRf7vkRl+XdZtzH5OotPXWcVP/N2NX2uXh5w2vWj74Nt0/6qrTr+lLfr
MpdzZfXKb3aema+zOnh9p7r9p10v1Mtvl4z627DL9srb1aO+HqMe2jXf91V4
Lu2ZXs9bzKe0Z2li/cin9te5vr8Db7RruMvZ13mmXfXjd4Hdf+rlnY/9qSL0
sK3Xh/2nvRM32JO59uS0Hi8e+Fm+Tmxarw+GPtDeen6+ivvuaG/nen0rWS8v
S6wTJ7icOn75RP9pb+Zy2u7X/umhFXk8pH7/pMqG+nikvS3qx6+t9PFLe6mP
eYF21Y/fRYbdoF3b19uZkvVvn8T67kCXR9d3zV2eP54w+bNG51ZHu2L8nTjs
8kMWVIWd2c6fO8DtKu2dWW+HbV+3w7Q3q7fbdpnbbdr7Yr2dt93czjMfMD8w
L9Cu6sQ66yt/7o9NTr7l+hfy+XeCP7dzp0M7vt1pabSH5y64psfNzw+rDLta
r2/VNtXnR9r7YP18Z8svr59PY549+5teHbqstvJnrj12YPf83DX7husOf6v3
ff2+jvaeXz+Px31otLeb78eZz/voOfPA2a4P8PBSYn00xOWZ8JcBr0xflPtX
17g8P87bdPCOwxYHD8jz08871/2hSz7/8nnU6fX+D+094Z/X/WVg+Rq77aXn
z/zylHwdxD7nmJ2PabfjjMXR3jb1/pj9wv0x2tuC/LCW9f4b7fX9aNvW/T3a
2zex3jne5bno1YsP+P2a3E8+yOUZ+OX2Hw+/+NtoL/K88uyfaw8d+FX4Iciz
fHy9H0t72Ud9aPgWb3z4ZE20q7zen7c7Brbf9YfxldGuyX5+7yL3t2nXqHr/
3Dq5f0672ibWNZv4c3+5xyGNLt8hbxf7vd9t+0Kbm2fk65o5Lk+jvvXrC9qF
PPv7egR7spJzcV4P+FBfX+zl6wv0/zriBAdX7bdVu5J+z+h32osf/ozzLP2b
/eXR9V3Lj8j3rQ7xei7w/gL3cZkd7/MC8nzg64jZCzv8d+RVBf/4zzf4PUIy
vrI7HUce/OqVrv8y7rLWtVsufKJFbofxt7/3cQS+g/v5Ld3Pl3GXMe7E7mVt
9t/ug1NeyeXk8xO/f4nvrf2Te5mQEz95rtux4Fn8beTEfz7O7SG4272sufvt
Yj+zhP3MsJ/ow8bul5af0/urp96fFe2d5XK1cT5p12jPT53h91CBj3B8tuO0
i8+NfT7i+zXiP8v8lTF/MS5GyX1o4C/Jc8VvyRJ+S5bwWzL8Ftp1oee9vujn
XsDPc3yk48jT3/GXBD9fcOz1h/7cf/hzwZu5/7yf+/Pi5xt+vshjI0VOl99e
bFgeUzn7Cy7yGPKI/Ib8zMv4dc/5OgXc9dfUPhzn/t7uvt4Bn+R+3WDvR9E3
my166PppM0QPXd8MfRP9NPRT1ndRXvQtniv6GfezwQ/P3cHXp+A8F3sFP/iN
u/g6F7yl+3uzfJyK3TDshtgZw86I3TDshtgZw85IfMAS8QHT+ACf09zuFeN1
+T118ID8wz2OIfEEa+32Vuy2YbfFzht2XuI5lojnGPYNOTlnNdjnHcXvdlzi
YJaIg9k1Pm/Sj3w+7fE6vh8i/pjEM03ncc7Bdd542OcPVi3NJN5oxBuph7ji
3xv13L7xhFr1izL8IokDZ8SBxZ/J8GckfpsRv6UfiaPe7vWDc87tUY/HIifn
2m595r0znro0P7/kfnuG3y7+anZn+737vbZ0jvrzGf48ekL9Bzc5c7szr6mM
dZn7ydmF7peKv5ol/NVsoPg/5N83f+Wefu1uWqL7Vtm/fZ+I59Kuce7/y3oh
4hKUJy76pMctZR2RsY7Afg51/GvnDbyp19Pd46vhB7odvfOE027++OzvdH8z
7n+gvZQf5/F82ffMdvB9RuT39Wb2g6/7ZJ1Y0t4hHrfc2+OWsn7MWD8W97kq
sy3avrPZF5stsuI+V2U2U+YF8CuuXtT+zkFLdb873pdBe4njdfV1t6z3szdP
Xrv3zhfm5wSY34/0OAM48/tZFw2ddtTzNRovyogXIc9qz4c41M/Zglc6zvlb
mWfDD5d5OWNelnk2Y56VeTljXpZ4nRGvE3niPLDIb8iPXa0T+cGr/jduitcJ
jp0Z43wOdD7Be0u8UXBT3Osx6pE4rSXitEacVs7nxD1Ccj7HOHdU3BfOz6sU
94Xz8y3MO5u6n9bT9UrOWcV9X3LOyhb4OTE5Z2WcK5N4uL3lel7cz620f6/Z
ef2vV1TLfm6lXenjq7ifW+ovgW/p41fO19kTbn/EPhj2QfZBTO0J8S7sj+yP
WEexM3HP7nNLOm1Rl7cXnH1M2gt+t9tP5I/71tz/kX0uY59L7Lxh52lXrcTT
ZB4x5hHZ57KnZL7Anzng6qv2eP7ovF1x35jPX+gDfld733eT/ayIm8l5WtvG
zyHIvGPMOzJPmc5T8d4BP+cgcYZYR0hcwohLyPxuOr+T9/HC2A6TxlyUx9/i
vjX3E8Jfdb+un++ryj6m3eF+CPJRT8/7mt365E2V0S7wW9zPoTz79QvkfILv
Fxv71xL/MeI/Ei8yjRexb865enggj/WeATWP3nFRvr5zP83w08SvM/w65Kee
ytU3Djr8/Wo9326cb4cHyj/mfin2E3/1O6+HfgS/y+VkXOi9ZNKujHYV4x4/
Zb28X6gffLjrA/XrfWKiPxn6Qz34gfv7+KIevU+M8vhRbdzOFOON+b1hxXM4
lRn2Vs7jZZx/k3OMcd+XzC9ZYn6Jc7PtCnLwb3nYN8Xpd8WlXSX7WXovlvSL
JfqlpDx6ldCTkvLkWeh5PPIC1k+uP79UPOc2Kfv4PzPOb9ZY7yWYlHXc+k8X
HHJMrfA8KdvH8SLPeT1SvyXqt0T9lqg/6pF2Ge0SHuJcIvJwXuXkEyfPnvZD
bYb+s45r9V3/M+4bnpfnHMgNG23+j43GL4vyxJObrW1+9bGP5nyyTzq4bvS8
e3vn+r+J9K/E+TPi/OAeV8+e6Ne+x4hOtboPkrEPAs768ciVNWO32romk3i1
tfTzNuB1bv9pF/iJss8C3trnhSO8fvoLuz3C88XAWb+PEhx7Tn46+ArH33Zc
4v/2iZ+D4vsYt+f0I/imsm8Czj7FP4RP1vucHwMnD25a4+MuOaSmNuwqfz/F
98fB0atNXX/o975yzkr0ocR+cj7qVT+nBI4eNhF98/36jP160cMMPYTngX7e
oJHf5wPe2/GNHIe3vbx+2gv+pNd/X8P1W6J+S9RvifqN+oUfS/Bj8CPnvoxz
XzJ+jfHLc7Eb8z2vUPrdEv1u9LucozPO0YmdMexMjEfX/1vea3HIj63ycYG/
kciPM/Lj0Cu9/wd9IN51s9eP/NifLXy/Dxz788uuL+z6w5XLZL5bX6LPH4rf
IvJkKg/nZAad1PivN/fJ5ws/V2Ocq5HyRnnqHyX70eAtxN6C95f9XPDJMp9K
u0r2SfEbt3F+6BfimdgN8Q+zKy/ove2Dj+U483UbP98r64WM9YLEP+0Kr0fm
C2O+EP/T8D/Fv83meD6v2M8sYT8z7Cf87CT6IPvIGfvIwlsGbzIvZIl5IWNe
EL21hN6a6u3khH62EDvMc+fJvRbg6xL4PLnvQsoHDp8T5PwY+CAZF1LeEuVL
xoXegyF4CQ96DwO43qsgcf7Yf5d9gUz3BSJf29eDcu7XOPcr8XPT+DnnKNTP
Yf3COlT8mSzhz2T4M3KuOyMeInnZpnnZej+A8FmiV40K/5ZHPyou56WN89Li
l4b/Jv5YlvDHNK+fc8jGOWTaz3Pwi4j7g5MXQ3w8/A7Po2H9Fn6W5ysRj1Oc
uFjD9dSZPhd5aAf5OMgDTt4TzwUnX4znNly+zrR+1hvglZ5njX4T5yD/Aj7B
2YfCvoOTz0K7wMknol3g5G0RPwUn74/2gpMHR3sbrqfO9Lm0V+XET9L2wgPr
bPJN4p4Fx8m/gAdw8nfgAZz8KXgAf0zepwNefN9iWeB6n3kxHpDfrw5OvmTk
3TlO/iB8gpM3B58qP3xqe+EzwZspb/BMvIT8HXgGJ58FniO+4nlJ8Az+7+K4
CJz9L3gGJz4Dz+Dkk8JzMe8251nLwzM4+ZjwDE4eIjyDk08Hz9peeE7wZsob
PBOvIh8KPsHJI4NPcPL44BOcuAR8gpMHCp/g5MnCZzFfOedTy8On1g+fDctT
Zyo/fGp74VP5gU9w4rTwybzKc4t+ZH6+HZ4pT5wHnsHJcyzeK5HXA/+UJ5+i
eJ9CXp5+oTznnIv3CGj5spJz+8U8+bw8/VjML18ufkBJ/Zao3xouX2EJ+UvK
ow8JfhL111mC/5Ly6I/2I/qT0IfA8bvQE/w1/DT6Pdb3Lg/9C875c/oRvMhP
WaZ5B/RIMb8/7xctD89aP3w2LE+dqfyMF/ZzphXHV+CcV2G8RP6l2KU4Hyp2
CfxGsUvgapfA1S4V7znI+dHy8KP1w0/D8tSZyo9eaXvRK+UNPtnnHCbzJvgx
Mm+Cr5Z5M/JpfN6BT/D9CvNUReDMa/AJ3kPmzeL9EDmfWh4eVE54SLTXtL0R
j/B9jWbiv4FvI/4b+Gjx38ArxX+LcxAFf6kicO5RgR9w7gOBn+K+Tc4PuL4v
LM71yfvCwJ8o+JN1pvLDs7YXnhO8mfIGz+wvkdcMn+B3yboAvFzWBeCXFvz5
isC5fwY+wVkvwGdxvyvnE5xzHfAJzrkL+GxYnjpT+eFT2wufyg98grMPC5+s
d4kzwCc492LBJ/jesn4En1FcPwbOvT3wCc7+I3wW1/05n1oePuN8k59Xgc+G
5akzlR8+wTm3AJ/KD3yCE2eGT+ITxCfhE5z4JHyCnyHxAfDXJT4A3q4QHyjL
96983xY+i/GSnE8tD59aP3w2LE+dqfzwqe2FT3D2C+Az5PT4PPs6xDGI53AO
Evx0P09CHjX4UZ5PTV4x+LmeB0eeLTjnuNq7PwHOPhH5kODkF5A3CE7+IOeN
wPfxPDvO64BzrpVzKuDE34jbxnlYjzOTD09c5RCPR03y/BDw8Z4fRx41OPnU
5BWDc26tnfsB4Cf4eRvyIcG/97xI8gbBr/D8QfLrwF/2/Hf2XcCJi5LfTpyE
PHfyvcHJ+yb/GZz8CPIGwclbJI8OnPw+4qTg5MGRPwbOeWnyAIkzkA/IPgr4
Ms+bY78EnLwz9tVYR5NPRx4aOPloxXso8vVC8R6HHC/eg5Dj/RLruGKefI4X
88NzvJiHnOPFfN0c75NYHxXzRXO8mD+p66//lODFPL0c5z4L1gvsb3IfBDjn
5bg3ATzuT3B7ousU8uR1XUN+spYnv1fXNeTHgnPOmXzRyHv2837kVYJzXp28
RPDIT3S7gZ9PfgT3QYCT98E9CODkNZP/D04eN/nJsU7x89Lk94KTp0a+a+Tf
ex4HeaHgnLdnnwacfATurYg8S89P4b4GcPJ6uKcAnPx07AY4eXPYDXDycLEb
4OSrsq8Gvtbvk8E+4N8u9jxW7AP4AZ4Hyj563P/k+SBy32/YT/Lc1G7Le8Gy
P3j+CPl+kVfheTEf+Pl1cPLjyENTe0s+J/aNvM5ugt9ZyKPJ8yjJDyLPEJx8
rhGCk4dFnh44+W7nCT6yiJviFwpOPeSb6XNHC46c5NNGvNf1gfNP4OTVktca
8VvXq8gLdRx9Jn8SHH0m30xx8qnAyQtj/5h4I+dF2Q8D53wp+5fgnLMlzxac
PCzyVMHJOyPfDJy8M84Taz3k5ap9IP8KnDwszlGBdyzevxTjfVPP+yPfT+3D
Qb5einx0HxecAwMnz4s8VcYv59tfEhz9IV808gtd387/37gp3j+Bk6+ozx0l
OHKSpwfOeORcJjj5cYqTHzfF7QbrTfJDyXsBJ5+U/FLFP/L8Uq0HPQcnvxI9
Byd/kHxU1mvkv5BvCU7eJefIwbGr5KmyTiEvhnMh2Gfy7MjvUj+ffXdw9uvJ
J9H1COtK7Db315G/p34p+W+U53w+5x0pT94c60rKs44mj0XXBZSnHu4Z5lwy
OHlYI8Vuk4fFeTvKk/fEuaWo3/NxODcGznl4zklj38hf47ng5HmRT4U85CVV
Cn5YETfFVwtOPfQvdox8Q85/hz30PAvkByefzvU/5CePjHEETh4ZeWjUQz4a
cUjdV+JcLPsF5Eegt+DklbyUWF+Qp0d58nEYRzpfsM7V53IuVucdzr/qPEV+
pvq95EOqn8x6nOeSB8R6XNvLuR/1M8n/VL+Uc+2RP+Tn+bGT4OTdcF4HnDwC
zp+Bk79A/hXPJQ+LvClw8gKQB5x9H+SJfBfXQ+QBJ/+F+Izum5BvxjxI3hlx
JHD2u4kjgXMPLfKDky82MjFPEXeiPPev0l5w8rDANT+d/ENwxnXV/8ZN8boE
jvzMR+S1cZ4PnDwaztODk3dDHiM4eYhn+bk3cOwkeYyKv+zng7Ue4g9xb6jn
N5HXBE5+E3rC/Eh+E+d0VX7OfWp70XPqIW+IPFWdr/EP45ygz2vIw7zMeTbq
ByfPiLxocPLOyHfV+Z38NC1PXJf5enIhrlsWeDG+WmaK4z8wz3LulPrBudeX
+QWcPCaeC16Mk5dZAo/5l30K4sbF++Dz9+w0fC6rMuYX7A/twq6Sj4P84OT1
MD+Ckz/F/AhOnhT9rvXQ7/rcYp5YPn8V87tyvJivpfGl2hReEncq5jWVPLcE
L+YpleCZzgvIr/MI877u+5B3hB6SH0S+UAIPvSL/iPKK90vEJ0cm/IeRifhe
v0R8L94z5O3l/mTqB+feaepXPO53lnpoL3ZmH2lvAg+7oXwqTt4LPJOPQ74K
OOdUyY8CJz9lk4T+MI/QLvImiD+Ak8dBPoPuL3B+HZxz8viNuk/B+gKc88b4
dfDGOdtHBOecLf4eOOfbVwjO+XbW4/AMb+RlgSMneVngnGcmPwqcfiE/Clz4
CZxz/ugnPPC+LfxJcPJKWAdp/6In2DHyZdgXAyevB/0BJ6+nb2I8bpKwe5yT
1nqIQ4KzL8a6TOXEr1B9I88H/HSvB/9B9Zb8q9gX9nyo3oKTJ0U+VaK8aXni
ovQjeSjka4GTV0WeleLFvJ2cT86707/UPzkxHxXzhXL8w0T5Fol+LOY15Tj7
ifQX+SDoMzj5IB8m5iPyVXR/Af8WnLwV8kPgn/yOdQmc/JBE+RKcfYHwA318
ved5I3HfAHlS7j9HXojng5A3kihvWp55hP7lvQPM4+DkH4Grv8f8Tv3kPTF/
qZ9JefWfiesm7Gem9pP8pYR9y9S+oSc6LzCPJPQqU70qvicg1yvWC6o/+DN6
7gJczw9EvpzLSX+RLxf79d6/kS8n5Yv5PyXjrkT+yYnxUsx7yfFi3kuOF/OR
SsrH74Z7HhD+pMYV4VnzU6hf5yP0WeON+Jm6ziJfKDHPZjrP0l+Jc6rR7+ML
eUONGhXfW6XvCS3huQRnny7hn2QJ/yRT/4T5Uf009n10vYzfpetr+NR1NPss
cY++v8fzIMHHOT7H7ZvqM/6DxkvxE8B5T8TFPl407vq8z3cap53k8XndH8Qu
ERfl/Rr4G+DT/D0UzBfEM3nvBnGPuP/V7yc/w8dp7Jf5PercMw7Ofq7cuxj3
81/k/gPrVu5F5x52cO5jZx8BnP1u9hHA2R/nPQR6Ppz79/WcOfe86/l27kPX
c+zcJ6718D4SxhH51Nx3r+ex0XPdL+M9H+An+f7a9z5fg8PPOe5fgcMnekhc
7ng/x4IegvPekCtcD+Pcr/cv99TH+6xcH3yfOvCjPE6OHsZ7cvy8DXoI3sHf
S8L+NTjv9WB/Fj3ivBD3+YLz/gv2Q2P/yM87cZ8v+AN+Psrv9wy81s9TcV8n
+Gd+jov3Z2BXeY8G75MAH+zn0Lj/HZx74LknHbztFfXn5bg/F3vygJ9z475g
5gXuDeZ+YewA+27cy8y4475TeNP9aO5FBW/h+7Nxz6nsg5M3y7jjnAP3O4Nz
Xyj8gx/r+87wrPvU3Hul9XDPsp5j4b5UPT/DPaR63gbe9JwJ96vqORZ/v0i+
v+l8wk/cn+rn5Xbx56E/3Z2fTbhPFj/C+5F7wyOf3s+ZcH935LX7Pd7czxv6
5nrC/WXoD/ebcX9i3Jvo54I4z4kd494z7ovU/ZrifZH5/M69kCXnplzPdX+q
eE+c+g95/j3nvmiXylm8ly2vh/vX9FwZegX/3KvGvZzwyT1p3M8Y603nmfvU
wI/38txfA95S8qB1/U6+tMYTuAdEz8vt4+UiTuL17OnlFB+ViO/1T8T3GNd6
Xy5y6nlg7A74+DeeX9p7szyvNe7zGNl6ZvU+uT8BvtdBs4f9a8XnMc7Brzvq
zbfaH5fvt4Hf6HjcF+34ytdusVu7TIt9IPDv9+nWpuvID2OeAH/P5UT+uKf/
3FlbvtPky/yck+P3Nt518NKbxoQdBF95U+3y3W4oDznB9V5i8C1X3rzkrJ/y
8yKxvzBn8TH7dH1T3mf0Q7Zg/L2PDb0wzwdG3p6r3/ig1ebTox7wi4Z1f+rb
n6ZHPeC3X1rx5X7XPxR6D17h9VM+3r/n9VAefP3sejnjnDrx+H3reY57LZyn
5s0embKuW36/BPimzkPYNceXeT9SD3pxefVO/64Ymd9rqnpbzNfN8WLeaY4X
/bzS9xMpXswTy/FivtP/W+8k9iOK+So5Tn/w/Jc+P2regl41eX6140M6dD93
1+p8PgafayfeV9Mrf58R+KhXWs799Vv5/WPgnS7sdfDdS/P9aXB4pl3gLbwf
aZfus9Mu8B7Df1uzxbn5/brx/px2p++/unKJvK/hG9u1/3fb9fwhz5cG/8XT
w3r2eTv3D8DPaTWixXYr8nuWwGkvcur+e8zf+ANdfh7fbFkuD+3udcc9n31w
an6/JTjyxL2mjsM/zwW/x/fB0fPIX3O7x7iI9/i4nYk8Fse/cvuJ/ULe5Y5j
L8Af8Hrivh3ndW9/7oHiH+7o/gx6qfnv9Gv4jd7e4n3s32XwE/6T45vIeyXA
4VnXibzHh3bpvcrIH/eLez8iv+abIz84eoL84OgV8oPTrli3OL6L6y3ygzdz
PUdO9OUMHxe0Exw7ye/BGY+0S9entAtcxzU47aVd4Kq3ca+t25lYXzk+wu0S
8uh6FlzzauN9f47TrngfFutNt//0OzjzJvVrnin1g2Ov4h4expf7A9QPvrXP
v3EO2/EBPg+Cw8edPp8y3iK+5OWRI+6plfcdxPuffR5Hnjh3Ie8VjXxA8Qdi
n8XlR6/AN3Pe4B38JPFPwNe6PxPnfhyvcXuC3JHH5/7SIFm/jJL3JoBv3X70
nXeckt8LA/6++I3gjd2voF3gS11P4j0U7AuI3wiufiP4H9we0l7w6W5XaS/4
Oy4n8tCOHbx/eS54c7EDtA//jXrA7/D5gnaBvy/v7QVn3qRd4L3drsJ/xOu8
f4v3MX4T/jb9que64x4qx+GTevX9d9QT+Rf+XMrDt86z4GpX4/05zhvl+XtT
55n20r7jJt/21uox+X1P9APrFMqDH+L6TP38vbvcd035FjLv6LmdeJ+g4/h1
8Amu+g9Pt7s+YH/jvX/ud1E/OHab78iL/vA95uXnr+p374j8PknVB3jTfocX
jU9GPNHxll4/3+P8v+P0X7x32sdRnDfyfsfvpb1xv7vcDw+u98OD44/RLp7P
epDnRjzH+yvOjzqOf8tzwVu6PqD/4NhJeAbHnlA/vztrzTUVjd/P44/87mjX
Z+SkH3p6eXD0Cn8D/dT7o9CDeM+G90vYF/rBeUYecJ5b1PvS/TXaR7sop/ch
gGteP7+n306T+1f1PAPy8fdT5L5Z5MI+8Htw5KS8xvOpFz6OFjvD83ku9Spv
1KNxIepV3igX+1aOU476VE7NX4Nn3dcr5v/n/VjMY8/x4u/1vqAR4/Q+AXDN
i494qPP0rNyvyN+PdZ75PeXxKyjH747x8pSLPBcfj/8H4QibUQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxNnAnYT9X39r9nPmhG0kgkIYU0qdCMlLHQiOZkjFJUlGhSKaWQioZfk0Jz
aaAMFQ0kzSmapbmovPfHvbv+73U9+1nr7LPPPvucs/ca7rX2t26fAV36x5VK
ZZu8UklEy6xSqRdVKueklcrORaXyivjzRFfruJ34q0Snqc0hajte10wSv6/4
a8Q/o/PtVQ7X8WPqrKPo1qLv6lxn1W+nfm5X+/1Uf53q3lc5XvU7qv7kslJ5
R21fpI3qN6rNW6JX635/it9T9AFde6T4m1X/lY476drrRUer/KL63UUvV/lZ
/G6i16j8JX4v0bt1bWvxN+raE3SvRbrXQpUPdNxD/eyk+z6p4+5qs53oEyrd
xNcS/Z+uPUr8R2pzs/hm4ndVnw/r3NHiNxf9QefeFN9Y/XVQm53V51m8M/E7
iT9TfAO96I3iJ6psUPsFjFPtf9PxbiqrdPyMjrehT51/Wfzu4muI31dlldoM
FN1P5QvxpzJmtXlFbeqKHqvneomxq36kytm6392i1UT/jPxdm2k8d4ku13hq
69zz4juLbq/ygviutFdZrD4bqs/NxL8lvqn4puonUblP7Q5VP8tFf1U/ueoe
EF9X5RSN4SON4RVdV/AMuraOrp2rUpf5EMa8g9rG4t8v/D7Hqb+TVW5SXyeJ
lqq/hfkk2lPHN6i+h+gpKheq/WDRt3T+ZtVfLTpCdLzKPOaExnCSxvWo7nO6
6q5V2Zw5qr5qiU4R7aXrh4kfJHqd2vfie6r9NaHPeTo3VnQc71B1l4leqnIm
a6Awf47a7y/+S9UNFR2nMl/XXS7aIfY1tL808OezrkRHMSbx5wZ+O/Fjdc0T
uvZS0esSj/MTncsKj+ko0QNV1og/XXSi2jRQmx/pW+OorfG/qed4VfwInl38
a+Jbqs22an+tjrup/l7VjVLZRfwE1V2j0kX8dNVNTfwt/lSfL+p4L/Fj9H5e
4NuLv0r86Dysd/GPRn63zUTvTSwTUtEJOre3+CvU9kb1P0V1D2oM16vtQWq7
p/hXYx/zDK+lnsOvpn73PC/f9AZdO5n1p/avM19V14e1rLr91X6j2s7X8Wzx
Z6ruvsRrPBM9AJlFe9aCxlFH9c+LrtBxPb6Rxvic+r9Vbb8NY2Js8C+rri9r
U3Qr1X8l/hvVP6/2b6puruqeFX9T4vp2hdcFc/Vd1Y1S+1aiDXWPz3X+X43x
mMLrZIjokYXlAN90rtr1Rp6IPqb2x4n/FLmr/vfQ8UniX2Teq/4n8Sv0DP2Q
aeKfVv0J4j8XP0/Xn4EMFH01c5/It1dUThffQPTRzDL5NvUxU/yx4ieJf1x8
J+aS+tlBY/xAY+um8oLGUE3nDlf9oYVlyGGiU1W/Qv29LP5bxqdrd1Y/H6tc
LL656pqwZtV+sZ79JtW3Vf101d2ma69U3WLVtdHxO2rzM3NRx4eqzQzVjdPx
H8hS0ZEazzEqZ6tdm8Ky8rjCsuJj8evVZqn4M9X+D9U3EP+Z6v9B9uv4StV/
rLrfxV+BDBf/i/gR4pcjQ1SGij9R938z8zv8VeenaJzv6RlfEv+Jzl2i+hbi
J6t+ovr+MLdc+kj3+kvHI3RcXXS+zg/XeI9AjuncM2rTA52lc7fo3DT1+bD6
+Ux0kurbi36ucrv4DqKrVO4Qf4zo6sL8j+rjS3QP81D8F+IniP9a/CrWNnNA
/A8awzTGL/7pxPfdQfRjlRvFHyn6nNpsJ35LXfcQugYZLrqzrpkl/jONs4/G
uVptX0PO0Z5vWHq9zo68TmqK/1t0P5VhmeXsMaLbqzykuo90zVrmEzJNde+J
ryn+EvHXqO3DrDmVp3R8vOo/4z3rnjeJP0p0TeJn6SL6PTJAfC/R71QeEN+T
+a5rDlNfN4j+gIzhO4pOQY7TJ+tP/DjWlPhuYX73Fe2qe/9Ne5WX9Gz1WEvM
Z11/v+p6iH6Vezxf6dzBOvcd8hu9yhpWPzeKXqa6rVVmqt0q7BXkNjpW/F3i
14peqvNbqTyKfk/9znuKzlAfS8SPVrlb7Y5T3V0ay0zRaqrriEwXHanyiK7t
p/u11zU3ifYTvUJlGe9X19yl8T4S6q9UuV3XHCI6MPZ7vqyw7kG/nKW2T+q6
IRrngNCmKfcoPQ9q6fgMlUEqW6jdTJ27UPwu4q/U9Rdx78LzHL5L5GfB3kCH
MfeHh/qTRc9S+U71kwO/s/hTY+s/dN8o9XVebL15u8awb2oZeKv4JuI/EH9f
aI9+/VnH5/PdMuvPc0I/fxZey6zpjpnH/rXO/ab6C8Qv4TvqGIO3SeSxDw/r
tJ3oJSq9xM9Gj2L/6ZvMEf8Dtpb42To/lPepvmapvm6GwSz5iS5ILZ8fEz8+
tSzFPuqm9neKnhTeKWMaEvjV4oeFPnk/Y3i3oqfoXhMZM/pS/EL1OV/j6SK+
dfgW+0aeC4z5DPEvqs32se2352P3e4jqu2S2fb7S8eDY9+a+ZwS+eeRvMiyM
YUloR5ulscewRvyFhZ9lmGjnMG86ZZ47A8Ic21pjuAU7QOPcSvzN4g8Wv4X4
G9HJ4muIdq7Ybp8jviv2Cbo7s98wS/3vrPazVfe4+FL0sIr9jiKxjsDOr642
t+m4rfq8X9ceofrZal9D9ZNox/rje6v+MdVXVf21qt8nt+0/CB0qukBt+oh/
Tm2qYA+proXalOKvFt8cGyazLTRTbTZX/Q3YH6q/I7Mdgh+wGd9ddD/V1xR/
O+POPUeZq8yleeJPE/8sNnBmX+Ppwt+fuXWKyv06fkf0XtGH1c+Wavev+NNi
r+1lQW+hv05DZmSbpmDlgMz9zArz86AwzxtHlgdci08yK/P7x+5oGGyGA/Q+
64o/VfwNqX0I3kl9dHzm+mc0hj0S69lWfLvM3+5J7NbMvtJT4k8trW/mie9d
Wre9in+RWM4317UPZvab5qi+rtq8GHyWO8V/Kr6/nusCHbdVu8Wq2wwZgD2p
c5uje5FD4u+NLXeQOdjb98ReP2eK3qHSQs/7rsotHItOUJ+PopvxC9T3jrQV
fV11M1V20nGh+w1V3RLR49FTse1/1sTtYb3cUliGsTaRsZNifwPW0eSw7o4S
vSu2rTZeJ7/C98otG6f9fzLn7rB+p4hOVXkqMp0SviM+yMTYsqSV6K0qe0S2
iabHtov41rcFmXZKuPZw8aeVtjPma7wnqO4R5pXqu+v5xojvJnpVbH5K8KFG
hj77Bj3CnOkeux1txgR+WuT3My7IN+jYwE8MPN+sT+z3vzy8n8eD/Kf//8XW
U5drnPX1Xa/KLeOR9fhHZ4fvOzqM4aFw37+wI9XHIj3XmYXf6XWF2zIn0Kmj
1GcD9TkOX1PlebUfxBwW/3rFcqy32j7Au1P7RnpP56n+4MzvlvdwYmQ6IvDY
qseJH8+7wj5U//+on4tZp+KXBbu+U2wff51KZ75Z5HfPN/hU9xhReO4diF2p
a7fStctVt5eO31Z9dY1hkOoL1b+Nv6L6V7HVxQ8uPIZBwcfsGNuvfEbtm+q6
WPQpbDU9z766bkbk+04XjUS7MF8j+ys9YvvyA9RXa127SNcNU6mq+76jugux
/8W/i14CnxH/N2MQ/4b49dhEhbGNIarrrxKLfwu5nVpWXZbY7+kVGyP4WeVE
vj16R+1/1/k3Csu/KUEGXlR4LbbS+I/KzGNbjw/f4lwdH636JhX7vcwp5ha2
xk/YVshR/Gv1f5rOf114XmFzYD/0Y7GqfonqzyhtUy7mOUrbmq8Xnp99wrw9
vbRdyHybHfQReqm+xvea+Kq0L22zLsA2ER/hl2Ariv9D9W8Wnu99Q599w9oC
K3ond5/3ip+ptq3EJ/huOu4vvjt+VWSbEB9go46vxK8U3TK37TkLPZvbxnws
t79wqMZwIM8a/IL7wZrU53T0ufiq2BKRbdwfE197GjJf183CRsAGTmzHdhUd
p7ZjI/vq63X8gmj/xPbvqGADf4UO0PXn6L4bcq/d9aKxyt3Y1Tr3HFgLdo6u
jYKd/D/RvxKv0/OxZdVmmK59GCwj9Vg7iM5LjSm9IvprsGOxZ3/Xc80Qf5H6
+THc62vVD1W7bcX/Jnqd3vn76qdJYVyzJ/a8zl2ga59A7om+pGvrq651btwC
HOMP5JbaHhAZR0h1/RzRGvhGOrci+EQ9Qr/gpt/r3K1qMzi33b5Y9Q1Ef9bx
Pcgf0W/U/0Tx7dBrOn9B5OOH8BVFDxftlvhZTgAHze0L/CG6NrFPcCq+UmFf
4RC9858Tf9/jRWepbqr4TuK/VBlPn6L/YFsxr7Fb1N+QyPdjbYGfIeteDGsN
XYAfjF9ziGim4/PQAzp+nTWsMlx8pHvvpvf3MhhkbMwLufRg7rHPUP0D4L1g
TeKPTuzD8k3f4DtExg4eCu8nyY0x4Me1Fk1Zz5H9+VqpfcmPdI/txe8q/ntk
We7n/Rf/N8gDbNqhQa5cHPxEfOqOifGBu3V9C41neWzctUZ4z0+I3lMaN5gq
vnnp9Tc4rEGee0B49vvRXdiluu+N6meR6k9XWZ2bns1cSu2D/CD6pY778u6Y
+6l9lrWi9XWvPvgKqv8l8Xw+QfQLHfdW/Zmi9bAFI+MVE2LPKzDGXKVf5HHM
je3bYGPM4N6q+yczbtlfdWtyYwhtdM8D0DOR68eq3cWx/QpskkmpbdfvRR/J
Pa9SsALkKL6dSuvC36+h6KvYH5FtnkMKz4/dC2NqKyNjbDn6See3Raap393E
/55aDzwt/pzE8vIZ8efi9ye27auKFrl98+nq50MdX4btKvqByqXi90+Mg4CH
nKu2q8B2xZ8nfqXOjRS/H7I4d5ziDdGliWVsE3AS9bsPWJ3G+IWOr1f9YaI/
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
shdMd0Fk/Je8KGx/8hOIZRLTRCbjv/D9iGOCyS2MLOPI0cRurJvaP8LuxZbs
G+wT8ovK3LlSxNeq5M6hIg5VNTdmAnbSODHGe5vab8iMjYORnxRwla6q/zNz
rhoxMmxpdBnfYH3mvDXiZaeq7rXIWCq6Bx10curcm8mie5SON/DeTkydwzNB
dNfSNhDyGLm6MTVu9gJ+qc7trXvMC7lnK6P/y3mF4guDHTP/d8osL5AbI1X3
ZeZ4x/m5sevqkfN7yScjFga+T0zrropjEg8GXx6f/tPY6xjfHFt6RGRfqWnh
GDF5OPsUxknA8MlxB69tkdq33Vu0ncb8cGa/u1NuzBx8levJIySfkJwi/G7i
UOQTPp9Z74E7zc6MzeJDz828JsDcyAkmN3gHZF5uvO7i3LGPLSPn93ZmXlbs
A1SNbX9i15HHdlOY8wcn1q0PpM4v5LuD15LTWifI+J8zx1OG5s7J41ricfi0
+LbL1OYPtblX/PDcOQ5fVOz/Phg7Xwjb7u/Mc4l59UVmXL1f7hw+5icyNM8d
U7skd8xii8g5ycQjiUuC4bYsjEcRTwE/vCKy3wreWCNyvjfxB/BkbAJy+O5H
DuraasEfZM4TMyN2Bv74TWq/Y7/UOmSP2FgQdhxY0o6Rc1G6xs7xJgd1K7W/
KLO9/Gt4tz2DDv2s4pg/179TcRwcrKp95jwyYiZg3QcGexhzhBwtfN6umXNd
kJ/IUXKNiYm1SJz3gp15eGas55dwX/Itt4kte8EfsLOxsX8PPN/jtqCDsV27
BBsMXXxi0C+fo49j96m/TXn+PEud6P9i9ryTfTM/b5E5l+YM0ddL59rhZx4r
+n3hmDixcXKHX6k4v7tt0OXocXQp/i1ziFzoeciu3DY5L2TzzG2/qth+Ic8C
mwhbBZ8F/dg8sy+8IbRrGfrE7iEnAV+cvImGwd7jO1YL75x3kqSWYeiTBuF7
0Yb8H3IzyNHAfvrP/8bOxd7F5rsl8Ni9YKrg9r0DXrQtPpbo5rGxkVVBL6If
sa34RuCP2FHgN8QPtqw4nx/bAxuEfHL6Jh+E+ZiHOdk8PHvNzHsAWNesxf0y
xxH2z5xnzrzbO3ceCf3smRnbxC7im+LTwW+d2c4oQv97xV4D8OQbklt7UOZ3
xrsD2yHHpLH4vcJcQL7wjLUyz2XmxmkBA+T+p4ivF3uvCvnjVUI/vbDfxJ9Y
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
           "]], Polygon3DBox[CompressedData["
1:eJxNnAf4T/X7/8/7fc55nbfS0kAoooyWBg2UyGjQ1lRIpEFJSypEQ0uoqKhQ
SaJhJxGa0tIuDWWUpnbf8ns+PF//6/pfl3N97vvcrzPe57xe93jez6Nej34n
9i0nSXJ4liT6l4zPk6SF/s5Ik6ROJUkuKZKkswbcXkqS5pIvkn2u9O805gLJ
++qgvyQ/J/s6yZ21r5fsa7SvveSg7YeSj/9F9st1jpNkf0D6wZJ/lv12jV2t
67XU9c4JSXKN9AOlz5T+psbM5VrSL5b+reyX6dipOteh3J+OX6bz7aExd2vM
3tr/p+TjNOZWydvKXpa9rvQPpT+g81WX/TaNXabjN3I92Z6W7TDpfTR+tsbX
0L7zc+uzpC/TMf/pmMt0/AnS35F+rOS3tM2TfKFsfXX8Axp/qPTp0mtLP072
qhq/rfa1lnyH7HtKniz7zrIfrX1pvL+K5BXa5sjeR/aLZH9C44+SPk/6rtLn
y95N+m7Su0h/WfqdPGvp50ofo99xqs61SNu3ku/RdrrkF7V9J3k3jX9J8gZk
jZ8o/Q1d/xudY7Tk+tpelv172RvL/oGu30+2t3T+faQ3kP0V2X+QvYn05dKn
yH6G7L2lvyr9XulHS+8p/Ssdf630j6Q3l95W9j91/Grtm69nf7z0arr+ntrX
RPI0jT8am8bX1fhCY2ZL/1X6I9L/45lzP7r+NJ637GXerewHSq+pv6fI/re2
OZJXy36B7JM1fn/Zv5Z+ofRHpB8g/SD93aSxL2jfesmrZD9b8godu6fsB+t+
Wsb7+1T2j6X31/iVsjeV/Q3dz+PSz5R+vvTXpI+Vfoz086Q/LH15nE/XSm6r
40+J8/9Xne9+6Ydo/JMaX0vjO2jMJtlqa8uZO7L/F/U3Nf5I6V10/ATp70lf
Lf06Hf+xjj+o4vU5R/Y6zEnJVbW/veTftD0h+RPtu0zye5L30/j6OsfPzB+d
b4jk3bX9Ir2j9Bskv6/xfaW/ydrS+C3090jer+yPSz5B91hT1ztRek3Wtsb3
lL6Vxpwo+STt21n6ybLvLLkSPL9/07Fv6nxBfw+X/pO2xyRvqa0d71vbVNaU
jjlWx5+p4xtKPlfbgdIvlP1kyUN1jZ0lj9PYHXW+ZtKbyf669qW6/5XMb8mD
ZB8o+5myf6FzXcGclfwea07ytbJfI3sb3V9j6b/oHDtIPzJ4vf4qfSfWs/Rj
pG8b/WNb6U2kbyz7+s8Ufj48pw7S95O9Gs9b9jukPyV7K+kZz1F6pnv4VvfT
UttXut9U+nrJazXmEunNdXwNyZ/r+DkaX5Z9nex7a1sl+7usR9mv1PmulH1s
7ufHuxnL/JPeWfrT0odxvMbfjD/Qvtk697jc84NnPVT2+6R3iHPlBunPFj4f
76Wj9BnS95X+h+6nrfTp0veR/rv0NtJ/1D29ofM/qX0/sGZ1vraSn5W8i+z7
a/xA6W9IXyB9tOyt47u/Xvot0utLr63zXCv9HennS6+vv4ukv63jX5B+qcZf
Kv1W6R+U7NNHSJ6praPkrWU/RvbOwf5km+iPOwX7063jeptb2F/gN06QPps5
LL269OMqnn+v6/xXa9/FkqfrPs4i3sk+XPY52ney9BrSj5feiPVe8m/8TNc6
Q9sAyfvL3ojfg3+VfoX0K6SfHrwe95PeUPp3Ov+N0tvp998k/Rfpd0j/WvZW
0i/X+PHEtxgvf5L9NulHafzNxEfpw6W3lX6j9Ks1/hHpp7LOpJ/APUmvE/3r
fI0/ndiJL5J+fLBeO8ab/8l+P2tZ9hHSf5M+Rvrx0m/BH+e+n2ekPyw91fET
WVvSb5M+UPqz0s/T+VpLv0b6TOm9pB+BP9bx10v/RPrB+K/gfKBNjBf/yv4A
a13nu1X6xcHPo230dwNl17/kVulbSD9E9lo8L83HraVfWDj29SGHkNwj2F8e
FP1ZT+lDpbeM/vw86TdIbxX940+67ps6foH2/UXMlv05yY110Rdl/1B/L5H+
tmz7Sj83+PccHOPlObJ/qeOv1L6zJR8c7K++wkfKflpwPGmq8XtIPyx4/m+Q
fTvptQvHpnO070PZugTH4700vr7s9WRfJvtF2veBbAdq25F4UPbzqFM4F2AN
fSzbqcH3u7eOb8D61j2dSPyTXk/6AbLvwLV0fBWej44/WHIDneNQyYM0fgvZ
70x9/8Ok15beU39flz48t3+4X/Y7pffQMXvFeHUIvoP8J8a/jXq23aWPlT6N
80veX9ve0h+VvpPkm7Q11fke0PlG6nx36RwTZX+N30wupK2h9HukHyO5TAzW
eCbFPMm5/m4oOX78kzmePyG5YA5I7qHtMfI57WtNLprbn0/S9Wrq+MV6Hq1k
u1f69tKHyF5T9rGp48NIneghHb+UZyz5htzz777U8eJu7Xta9q7ahkpuIHsd
yWdo/N+6nzu1b4L0JdLPk7wbz1P6adL/kr2F9DbSnyUHIDfS1k36Sl2jknl+
HxXPt4vkPvg/6a9Kb1V4fHfyAelHSe6NP4/xeld8m7ZxOtexut9eut/mGnOQ
7PXJR/EtuePhRNlryN4Sfx6P/0PXP1PH15PeS/oaPatTpNeK8b4uD1nH9E6c
iz4jeV7huVyPPA3/J72uxvfU+G90/DnkoMRK6QdJPjE41jfR+Fc0vomuv1us
R36O9cZZrHWN6ST5XG1Tpb8nexuelba7pX8se1WNr8b74N6I+cH51EPSP5G+
Fbkzv1njW2jfl9L/1fg3ZbtO1x+k699GDi/7BfiwwvFnRNnxeE9qAZ2zoeRb
NL6i8a/gB0uek1dp3widv7nkByWPIX7xvKU/JP06/HXuOmxE6vV3THA9Vo71
wnPS99X57pBeVfq1Gr+l7CNT+7v/6R5ejde6SvpCjT9Y40dL35b8jfxf9sul
Xy79qOD8M4nv9+jg+qUU5/+dOv9e/H7d1N0V53PPM3dkfyHmqyOkL9GY9oXr
mTHS3yYmSd6B9Sn5Ho1/TuO/YB6wtrkHyV10/ltifv0Z9Yr0A2UbJvleja9R
uLY8QfvexbfKvr3kMan94xqNm1dyzjVF+yazXiTfpv33yX479VFcT7tLXq39
s5A1ZmDmfHBknH//Sn+NNSl5OTma5Ne1jSw5h8wl1wvOnbbUcc9H/z4qzv//
yH203VVyjcKc2UnXbCZ5guTRGv83/lh6f+n9pd8h/a64fveQvJ54QG6t8xwi
++/MX41fH+P3AnJg6XtIP136oxp3kcaHkmP+Y9r64t9KziHW4e8lf67xEzR+
kY7vLX0itXDF1+F6W2o7NnOdRL2UlYwJkM/31/2t0HYsuUlwfTBYtsE6/mbp
G6UPlT5Eeklj1ujYLTS+T+Y6i3or13aE5Cd1/R81vm7m+b4YnyXbJOnjK67r
qe+rauvMQiBeS54teaLs03i+2n0lOabkY7SNYr5Lny65rPGDJc/lt2j8E/o7
QPpWJecsW8s+XPILPCvulzklfY70SaxX3c8V8dwPEr/03IZI3w5/wzPX/qcS
X2Oe5P+RL0h+XvKjGl9Vx0+S/n5mf7GX7J+Rf2auP2oGr89yZrzgqIprNHLu
T3Tss7JX1/HdeA+yTZK+tfSTYv51tLatUue4Y4jV5D961vvi4zLnvOS25Lhg
B9S8vFNymt8L17y8k2HkM4VreGr5y6X/SayWPk76Obpm9+Cc5pDUOQ25ziPa
t41sp8R8bJr07YmvMd+bzj1J7yr9dq6lc76jeztf57hQevXg/BcnB75RI7h+
KWXGd/aWvkr6tpnrsaLwelqeeb1sKf1+6e9k9m8NNf5D1mPm+udefLCuN0DX
G0D+LPtAjX9K9ofIP4k/sl8m+2XS95D9Ax2/ReZ8fNdgf19kri+akZNRl+kc
F8r2m7ZBkmfGfPcTnauJ9K91zHaZ5wHz4Sttm8hvdJ3p/B7pP0m+RNtC6TtJ
/5/kTOebJP2XmB93S107XSv7j5Jz2SdL3xjz5VG56+VHU9df1+oabTX2I86v
e3lQ9k6yPxXry5HSD5P+SOr67KLM8aOptoslf1q2L/5WW3Xp/TTueck7ki+B
YWhfrZJ9OpjLo7nro5ngCjrfRukTpH8jvUfFeTv5e5WSa5JXM8fqr0vOyS7I
HB8b8zx5x6l9bc2S/esy6oqSY8pL1LeZ3/d4bSslf5B5fT3Cb85c1+Obd8YH
Sn+RuqnkGndJ5jyYfHg9v0n6DvhEyY1KrsmvyFx7U0NSY4N/HCF7u5J93Ntg
VJLXxngC3nm87J25R8nTCj9/3gPx/K1gPKm59HH4V9mby35p5nx4qvRDpF+W
OZ9dRLyVPgC/Jv1F6a2lX4Vfw39pfBueX+b4UUXPcDudvxk+llio39+JXEz7
niFHCsY/9yKWsj4yx8MOJfvoazKf70Pml37vD2XHwh+07SLb9+T6kr9PXINT
h2yuR3jGme+b+yeH+rbs38Xvm6FtfdkYAVgBmMKU3HjsceSX5ESSPwnGI8El
qTdfox4n94vx/q9gf4vf7SO9GnW89N8TYxgttK+jxlZ4hsEYMDFjtOxfF46Z
j8eYsLowpgm2+RprQ3KLYJmc8arC8Zda4mVqFHINakSN313XOk3negOfnTkH
uqdwPkFu/ZLGjy+MJy8pOwcEfzhJ528v+RON2bewP9pF8nztGyd5bGEsed7/
p2Mjp68fHIOIRfiLKdKXS78sNwa6I9iktqsS10DUQitkvzw3hguWC6YGtva2
9MnSq0nfKfP8Pzy4RqNWmy77KNlbat8uiWsUapV2wTYwRH7vqxp/eO76t5Zs
70p+uOya44L4PMEaZ8Tnu1L2SWVjduAlr+n4I3LjcY2DYzixHP/2Z7APxZdO
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
64rPZ67TM7o0vj96Sf0q7qnQ81mv4y+puAcEh+3bwj1A5v/8xPgcPTG4v8Qo
emXElGNifkKsIYYcG+sH1v86/La2q6mRNH67wrUoPX/mCzUafQ36G9Ru2xSu
NekBMT/2kf5xKXI2CmPWYNfUlPCJRqXG+cH74U6AmVIbwmngeTUKrjXp0dCb
A18+LzdnEm7QH8FYLzUdtd3C3OeHE3piYQ4K+SE5LvyXDhp/gI49Ah8QjAcf
l5lTRi/vcfYl/r0/sx50zNSSe0qs3yuCx14T/R+Y5YuJc6ZS4RzqbLCKxLnV
1oX5QNRSNaN/pT6D8wb3Dbx6VmZMjF40PYlzMvfv6FXQoz1X459O3LvdP3O8
PFXbzsSBzPGxl/40St1ToLdATH81d0+R2ETMInbB6SYf654YF/y8MHYHl51+
Ejkc5+F85Hb436Yxf8J/05elPwue3jV135j+MfOVeXtB8NpijRE76anibxYn
7rU+Ftx7oOfO770yGIuH8wf3D44hfT36ew+C7UlvmDoHeSM3hs+1uYdH4/sg
FtGD5f3B5+NeuKfJwRxC+vL05yfS2wiW747xbgfpb5WcE2eFc7rGqfF+cj1y
AnIDOGhFxTlGrZhPk3uQk/AeeB/kKuRMcDU35yC5+we1Y778kex/B9f2K7Q1
LoyvL8zcw4U7QI7WIsbLNdFf94zxFTz9v2BsAswC7IIeFXOJOUXt/0zw3BsS
5w85G9zTLolzOXLKZpnxKnJN8vMdUuPJ4L/0B06N+C1cB3K2kZnXK7kcOdSB
mfGpFbFfAE7Bb/onuL/UJfMagvtATgnXdXNOl5uTBTerm/QlufmczO1qzCHW
vvZ9WnKOzfMHP6U3BCYDHglnHbwKjK1d4e85vpf8OflnYUyc30JP9Z3gngxY
IxySW4L5MmBl9FRfCv4mAnwBTBBssHdw7gaH+8DCmOSgzJwhsEr4t11Lvubh
hTnj1PNgOIeBlxfGRvgGoQ3xOjfuB/4Hl5A1xlrj+xF6uXzzQr0O5tCV+Rfr
C55B08L87rUl+yB8ERwj6tfvSubfka/CneQbEL4FgSMG3rMu+mPwZsbST9qv
cA3GswdDhe/0XjAejI9egP8Pzh3ha3xGvpWZpw9f/1XZPqceLjnn/zI4BhIL
4QCtDeYAgfuC/8INej947uCT8c3g+zcl5hCBV/cL7q3CEaL+5frDEnOEyF/P
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
S6JemJG7fgUbIh6Tz/0fnVdaSQ==
           "]], Polygon3DBox[CompressedData["
1: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
rkLbNQ==
           "]], 
          Polygon3DBox[{{1788, 1211, 862, 863, 1212, 1789}, {1781, 1202, 848, 
           849, 1203, 1782}, {1472, 1471, 2033, 1169, 1170, 2034}, {1738, 
           1156, 763, 764, 1157, 1739}, {1963, 926, 764, 763, 1148, 1733}, {
           1488, 1487, 2039, 1182, 1183, 2040}, {1486, 1485, 2036, 1178, 1179,
            2037}, {1620, 965, 1168, 2032, 1471, 1472}}]},
         Annotation[#, "Charting`Private`Tag$98540#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl00tIVGEYxvFPrdGuCgrtjAIDo2RwJEkqa11R2CprFQRdGKVFUG0yzQu0
CsrxgpnFmFJGhNFCrCwXtYkulpmaSUQtah3t/H24OP6f5/++czzzHd10orGu
ISeE8N61IzeEmAuxTNiJF1aGUMSVyNXcPtyoj2Ot3mZeoV/H3XgbD+BUIoQj
5sfknvwQntk/rvfjuJ0z/HP5FHcXp7iLXKO+IHfIfzGD/3EQy93nrXnW/hO9
XW+Sr3GDOMl1cM1yF1eHH7mtmNGH8HKe38W1yN3cMH7S38Rdvcn8s34Fp7EZ
v8TvsyKEPvMZucHzTNjv1+9ji52v/Et5gHuAV7lZ7o7eKs/JbTgfnxu/4Yx7
Zs1H7C/oKfdNyve4o/idq+JS8nA8S1zkKnFIr8ekc/7Alck3ucO4mXvFvZbf
cSX6qJ7ALP5zz078o583b5d7ndsL+2n9YHzvXCt3ST7JDcTz8bnT/IQ+JtfL
I7gfb+Eu3OAzT8377G/XH+MevRdL9Rvmj+Qqbi8WcsWY0nvwt2s9dw4ruW78
5VrHTeJD7ieu1X/gGlzE1Zh2nknzVTF7njG+Qq/FAu4Ql5a3cRmcd+XHvw99
Vk7Ed4LWwjS6XTjrR7l5p+61hSLcotdgbvy+lgvimecs//8sAWIcak4=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1400, 1856, 1871, 1857, 1720, 1850, 1892, 904, 1870, 1858, 
       1859, 1722, 1851, 2190, 1585, 1805, 1721, 2056, 1586, 1401, 2057, 1587,
        1402, 2058, 1588, 1403, 2006, 2059, 1589, 1806, 1305, 1872, 1834, 
       1929, 1960, 2245, 1948, 1930, 1931, 1835, 1852, 2231, 1590, 1807, 1723,
        2060, 1591, 1404, 2061, 1592, 1405, 2062, 1593, 1406, 2030, 2063, 
       1594, 1916, 2055, 2254, 1954, 1939, 1951, 1595, 1912, 2244, 1660, 1913,
        1922, 1941, 1596, 1940}], 
      Line3DBox[{577, 508, 1808, 489, 2234, 1724, 1661, 1810, 914, 1809, 1726,
        2064, 1597, 1407, 2065, 1598, 1408, 2007, 2066, 1599, 1728, 2193, 
       1662, 1600, 1811, 2221, 535, 1836, 652, 1392, 709, 653, 1837, 490, 
       2235, 1812, 1729, 2067, 1601, 1409, 2068, 1602, 1410, 2069, 1603, 1411,
        2070, 1604, 1412, 2251, 1938, 1605, 1942, 2253, 1663, 1914, 629, 
       690}], Line3DBox[{1414, 1725, 1961, 2191, 1413, 1727, 1962, 2192, 1415,
        925, 1416, 2008, 2071, 1606, 1417, 2173, 1664, 1731, 1607, 1730, 2194,
        1665, 1608, 1813, 2222, 1733, 1963, 2195, 1814, 1734, 1964, 2196, 
       1418, 1666, 1965, 2174, 1419, 929, 1420, 2072, 1609, 1421, 2073, 1610, 
       1422, 2074, 1611, 1423, 2197, 1735, 1612, 1815}], 
      Line3DBox[{1425, 1966, 2114, 1424, 1967, 2115, 1426, 1667, 1668, 2175, 
       1427, 1058, 1669, 1428, 2176, 1670, 1732, 1671, 1429, 2177, 1672, 1673,
        1430, 2199, 1738, 1739, 2223, 1431, 1740, 1741, 2200, 1432, 1674, 
       1675, 2178, 1433, 1676, 1677, 2179, 1434, 940, 1435, 2075, 1613, 1436, 
       2076, 1614, 1437, 2077, 1615, 1438}], 
      Line3DBox[{1440, 1968, 2116, 1439, 1678, 1679, 2180, 1441, 1680, 2117, 
       2009, 1442, 2010, 2198, 1736, 1681, 1443, 1070, 1737, 1682, 1444, 2202,
        1745, 1746, 1445, 2078, 1969, 2118, 1446, 1970, 2119, 1447, 1971, 
       2120, 1448, 1683, 2121, 2011, 1449, 2012, 2122, 1684, 1450, 1972, 2123,
        1451, 2079, 1616, 1452, 2080, 1617, 1453}], 
      Line3DBox[{1467, 1756, 1755, 2203, 1466, 1753, 1171, 1465, 1691, 2131, 
       2017, 1464, 1690, 2130, 2016, 1463, 2129, 1976, 1462, 2128, 1975, 1461,
        2127, 1974, 1460, 2126, 1973, 2081, 1459, 958, 1458, 1747, 1816, 2224,
        2031, 1457, 1689, 1744, 2201, 2015, 1456, 2014, 2125, 1743, 1688, 
       1455, 2013, 2124, 1742, 1687, 1454, 2181, 1686, 1685, 1748}], 
      Line3DBox[{1469, 1894, 1932, 1895, 1823, 1893, 1935, 2248, 1618, 1838, 
       1876, 1891, 1877, 1824, 1896, 1936, 1619, 1839, 1751, 1825, 2227, 1620,
        1472, 2034, 2082, 1826, 1621, 1474, 2083, 1622, 1476, 2084, 1623, 
       1478, 2085, 969, 1480, 2086, 1624, 1482, 2087, 1625, 1484, 2088, 1626, 
       1486, 2037, 2089, 1827, 1627, 1488, 2040, 2090, 1828, 1628, 1840, 2052,
        2246, 1949, 1933, 1829, 1853, 1897, 1629, 1841, 2053, 2247, 1950, 
       1934, 1830, 1900, 1937, 1630, 1925}], 
      Line3DBox[{1491, 1898, 1899, 1822, 1880, 1879, 2240, 1490, 1754, 1821, 
       1878, 2226, 2048, 1489, 1760, 2140, 2039, 1487, 1759, 2139, 2036, 1485,
        2138, 1981, 1483, 2137, 1980, 1481, 2136, 1979, 1479, 2135, 968, 1477,
        2134, 1978, 1475, 2133, 1977, 1473, 1752, 1820, 2225, 2033, 1471, 
       2032, 2132, 1819, 1750, 1470, 1874, 2239, 1875, 1818, 1749, 1468, 2047,
        2238, 1873, 1817, 1924, 1923, 1946}], 
      Line3DBox[{1492, 1901, 1902, 1831, 1854, 1982, 2236, 1842, 1757, 1832, 
       1855, 2228, 1631, 1843, 1758, 2091, 1632, 1493, 2035, 2092, 1633, 1494,
        2093, 1634, 1495, 2094, 1635, 1496, 2095, 1983, 2141, 1497, 979, 1498,
        2096, 1636, 1499, 2097, 1637, 1500, 2038, 2098, 1763, 1638, 1501, 
       2041, 2099, 1764, 1639, 1844, 2049, 2241, 1881, 1765, 1640, 1845, 2232,
        1882, 1883, 1766, 1926, 1641, 1947}], 
      Line3DBox[{1503, 1761, 1984, 2204, 1502, 1762, 1985, 2205, 1504, 1692, 
       2100, 1642, 1505, 2018, 2101, 1643, 1506, 2102, 1644, 1507, 2103, 1645,
        1508, 2104, 1986, 2142, 1509, 1987, 2143, 1510, 990, 1511, 1767, 1768,
        2206, 1646, 1512, 2019, 2105, 1769, 1647, 1513, 2020, 2106, 1770, 
       1648, 1514, 2182, 1693, 1771, 1649, 1515, 2183, 1694, 1650, 1772}], 
      Line3DBox[{1517, 1988, 2144, 1516, 1989, 2145, 1518, 994, 1519, 2021, 
       2107, 1651, 1520, 2184, 1695, 1652, 1521, 2108, 1653, 1522, 2109, 1990,
        2146, 1523, 1991, 2147, 1524, 1773, 1992, 2207, 1774, 1696, 1776, 
       1000, 1775, 2022, 2110, 1779, 1654, 1778, 2208, 1697, 1655, 1525, 2185,
        1698, 1656, 1526, 2111, 1657, 1527}], 
      Line3DBox[{1529, 1993, 2148, 1528, 1994, 2149, 1530, 1995, 2150, 1531, 
       1005, 1532, 2186, 1699, 1700, 1533, 2187, 1701, 1702, 1534, 2209, 1781,
        1782, 2229, 1535, 1783, 1784, 2210, 1536, 1703, 1704, 2211, 1537, 
       1705, 1777, 1706, 2212, 1538, 1112, 1780, 1707, 1539, 2188, 1708, 1709,
        1540, 2112, 1658, 1541, 2113, 1659, 1542}], 
      Line3DBox[{1556, 1796, 1795, 2218, 1555, 1793, 1792, 2217, 1554, 1021, 
       1553, 1715, 2154, 2024, 1552, 2023, 2153, 1785, 1714, 1551, 2216, 1713,
        1712, 1550, 2215, 1791, 1790, 1549, 2230, 1789, 1788, 2214, 1548, 
       1711, 1710, 2189, 1547, 1016, 1546, 2152, 1997, 1545, 2151, 1996, 1544,
        2255, 1956, 1955, 1543, 2213, 1787, 1786, 1833}], 
      Line3DBox[{1570, 1862, 1863, 1797, 1861, 1860, 2237, 1569, 1718, 1794, 
       1124, 1568, 1799, 2162, 2042, 1567, 2161, 2001, 1566, 2026, 2160, 1717,
        1565, 2025, 2159, 1716, 1564, 2219, 1886, 1887, 1847, 1906, 1905, 
       1563, 2249, 1903, 1904, 1846, 1885, 1884, 2242, 1562, 1798, 1223, 1561,
        2158, 2000, 1560, 2157, 1999, 1559, 2156, 1998, 1558, 2054, 2155, 
       1957, 1959, 1958, 1557, 2252, 1952, 1953, 1917, 1919, 1918, 1927}], 
      Line3DBox[{1584, 1868, 1907, 1869, 1801, 1867, 1888, 1299, 1583, 1865, 
       1866, 1800, 1864, 2220, 2046, 1582, 1804, 2172, 2045, 1581, 2171, 2005,
        1580, 2170, 2004, 1579, 2029, 2169, 1719, 1578, 2051, 2243, 1890, 
       1849, 1911, 1910, 1577, 2250, 1908, 1909, 1848, 1889, 2233, 2050, 1576,
        1803, 2168, 2044, 1575, 2167, 2003, 1574, 2166, 2002, 1573, 2043, 
       2165, 1802, 1572, 2028, 2164, 1943, 1945, 1944, 1571, 2027, 2163, 1915,
        1921, 1920, 1928}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{727, 906, 2057, 728, 916, 2065, 748, 1050, 1051, 2071, 761, 
       1058, 1059, 1153, 2198, 1068, 1161, 1069, 1163, 2201, 1078, 1079, 1257,
        2225, 1169, 1170, 2082, 1260, 1176, 1177, 2092, 822, 1085, 1086, 2101,
        833, 1095, 1096, 2107, 845, 1005, 859, 2152, 1015, 874, 2157, 1025, 
       886, 2166, 1034, 897}], 
      Line3DBox[{729, 907, 2058, 730, 1045, 1046, 2066, 749, 1052, 2173, 1053,
        1145, 1060, 2176, 1152, 1061, 1155, 1070, 1162, 1071, 1256, 2224, 
       1166, 1167, 801, 2133, 966, 2083, 812, 975, 2093, 823, 985, 2102, 834, 
       1097, 2184, 1098, 846, 1106, 2186, 1107, 860, 1016, 875, 2158, 1026, 
       887, 2167, 1035, 898}], 
      Line3DBox[{731, 1041, 1042, 2059, 732, 1047, 1140, 2193, 1048, 750, 
       1054, 1144, 2194, 1055, 762, 1062, 2177, 1154, 1063, 775, 1164, 2202, 
       1255, 1165, 788, 958, 802, 2134, 967, 2084, 813, 976, 2094, 824, 986, 
       2103, 835, 995, 2108, 847, 1108, 2187, 1109, 861, 1116, 2189, 1117, 
       876, 1223, 1224, 888, 2168, 1234, 1235, 1236}], 
      Line3DBox[{733, 1335, 1336, 1244, 1306, 1305, 1269, 1141, 1248, 1310, 
       2221, 1309, 1270, 1146, 1251, 2222, 1148, 763, 1156, 2199, 1253, 1158, 
       776, 947, 2078, 789, 959, 2081, 803, 968, 2085, 814, 977, 2095, 825, 
       987, 2104, 836, 996, 2109, 848, 1202, 2209, 1204, 862, 1211, 2214, 
       1213, 1279, 1321, 2242, 1322, 1265, 1225, 1280, 2233, 1326, 1327, 1267,
        1365, 1364, 1390}], 
      Line3DBox[{737, 911, 2061, 738, 920, 2068, 754, 929, 767, 1065, 2179, 
       939, 780, 2121, 1072, 951, 793, 2129, 963, 807, 2138, 972, 2088, 818, 
       981, 2097, 829, 1192, 991, 2206, 840, 1099, 1198, 1000, 852, 1111, 
       2212, 1208, 1009, 866, 2153, 1119, 1020, 880, 2160, 1123, 1030, 892, 
       2170, 1039, 902}], 
      Line3DBox[{739, 912, 2062, 740, 921, 2069, 755, 930, 2072, 768, 940, 
       781, 2122, 1073, 1074, 794, 2130, 1080, 1081, 808, 2139, 1178, 1179, 
       2089, 1261, 1180, 1181, 2098, 1188, 1087, 1088, 2105, 1193, 1100, 1199,
        1101, 2110, 1201, 1112, 1209, 1113, 867, 2154, 1120, 1121, 881, 2161, 
       1031, 893, 2171, 1040, 903}], 
      Line3DBox[{741, 1134, 1135, 2063, 742, 922, 2070, 756, 931, 2073, 769, 
       941, 2075, 782, 2123, 952, 795, 2131, 1082, 1083, 809, 2140, 1182, 
       1183, 2090, 1262, 1184, 1185, 2099, 1189, 1089, 1090, 2106, 1194, 1102,
        1200, 2208, 1103, 853, 1114, 2188, 1115, 868, 1021, 882, 2162, 1228, 
       1229, 894, 2172, 1238, 1239, 1241}], 
      Line3DBox[{743, 1362, 1363, 1356, 1398, 1397, 2254, 1382, 1380, 2251, 
       1381, 757, 932, 2074, 770, 942, 2076, 783, 953, 2079, 796, 1171, 1172, 
       1258, 2226, 1313, 1314, 1273, 1369, 1368, 2246, 1393, 1370, 1371, 1277,
        1318, 1317, 2241, 1190, 1091, 2182, 1092, 1195, 1104, 2185, 1105, 854,
        1010, 2112, 869, 1217, 2217, 1218, 1219, 1124, 1230, 1125, 1232, 2220,
        1295, 1296, 1240, 1298, 1297, 1331}], 
      Line3DBox[{744, 1357, 1358, 1350, 2244, 1043, 1351, 1387, 1388, 1386, 
       2253, 1049, 1352, 1150, 2197, 1151, 771, 943, 2077, 784, 954, 2080, 
       797, 1173, 2203, 1174, 1259, 1315, 2240, 1316, 1274, 1373, 1372, 2247, 
       1394, 1374, 1375, 1278, 1320, 2232, 1319, 1191, 1093, 2183, 1094, 841, 
       1001, 2111, 855, 1011, 2113, 870, 1220, 2218, 1221, 1222, 1291, 2237, 
       1292, 1231, 1294, 1293, 1325, 1299, 1349, 1300, 1242, 1302, 1330, 1301,
        1332}], 
      Line3DBox[{895, 1032, 1354, 1353, 1126, 2163, 883, 1022, 1385, 1384, 
       1396, 2252, 1395, 871, 1012, 2213, 1210, 856, 1002, 2148, 842, 992, 
       2144, 830, 982, 2204, 1186, 819, 973, 2236, 1285, 1275, 1342, 1341, 
       810, 2248, 964, 1340, 1271, 1312, 1311, 2238, 798, 955, 2181, 1075, 
       785, 944, 2116, 772, 933, 2114, 758, 923, 2191, 1137, 745, 913, 2234, 
       1283, 1136, 1290, 1289, 724, 904, 1304, 1281, 1129, 1288, 1334, 1287, 
       1303}], Line3DBox[{681, 611, 1355, 1127, 2164, 884, 1023, 1383, 2155, 
       872, 1013, 2255, 1399, 857, 1003, 2149, 843, 993, 2145, 831, 983, 2205,
        1187, 820, 2228, 493, 1276, 583, 672, 1936, 582, 1272, 538, 2239, 799,
        956, 1076, 2124, 786, 945, 2180, 1066, 773, 934, 2115, 759, 924, 2192,
        1139, 746, 914, 1247, 1044, 725, 2190, 487, 1243, 503, 528}], 
      Line3DBox[{896, 1033, 1233, 2165, 885, 1024, 2156, 873, 1014, 2151, 858,
        1004, 2150, 844, 994, 832, 2100, 984, 1084, 821, 2091, 974, 1175, 811,
        2227, 965, 1168, 2132, 800, 957, 1077, 2125, 787, 946, 1160, 1067, 
       2117, 774, 935, 2175, 1057, 760, 925, 747, 2064, 915, 1138, 726, 2056, 
       905, 1130, 1131}], 
      Line3DBox[{899, 1036, 1376, 1347, 1268, 1346, 1379, 2250, 1345, 889, 
       1027, 1333, 1286, 1266, 1344, 1378, 2249, 1343, 877, 1017, 1264, 2230, 
       1212, 863, 1006, 1263, 2229, 1203, 849, 997, 2146, 837, 988, 2142, 826,
        978, 2141, 815, 969, 2135, 804, 960, 2126, 790, 948, 2118, 777, 936, 
       1254, 2223, 1157, 764, 926, 2195, 1252, 1147, 751, 917, 1392, 1367, 
       1249, 1308, 1339, 1307, 734, 908, 2245, 1391, 1366, 1245, 1338, 1377, 
       1337, 1359}], 
      Line3DBox[{900, 1037, 1348, 1237, 1329, 1328, 2243, 890, 1028, 1226, 
       1324, 2219, 1323, 878, 1018, 1215, 2215, 1214, 864, 1007, 1206, 2210, 
       1205, 850, 998, 2147, 838, 989, 2143, 827, 979, 816, 2086, 970, 2136, 
       805, 961, 2127, 791, 949, 2119, 778, 937, 2200, 1159, 765, 927, 2196, 
       1149, 752, 918, 2235, 1284, 1250, 1142, 735, 2231, 909, 1282, 1246, 
       1361, 1360, 1389}], 
      Line3DBox[{901, 1038, 1128, 2169, 891, 1029, 1227, 1122, 2159, 879, 
       1019, 1216, 2216, 1118, 865, 1008, 1207, 2211, 1110, 851, 999, 2207, 
       1197, 1196, 839, 990, 828, 2096, 980, 817, 2087, 971, 2137, 806, 962, 
       2128, 792, 950, 2120, 779, 938, 2178, 1064, 766, 928, 2174, 1056, 753, 
       2067, 919, 1143, 736, 2060, 910, 1132, 1133}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJy8vXlcj9sXP1oyZZ7neQjJWCLKIpkSGUqIMoRkSmahQYYSkihkzBAp0mBK
W9KgSaM0z/MoMkZ3r8ezOt/zOad777mv3+v64zyvdrv1rP3ea6393vvZa52B
a7cvXt9ESkrqXUspKRn+/BzIQN4yH+i5rXXPJve7pcHyvQf6vmqdAYeX7O9j
WfABOs80mLvpbgl0yF3U7/nZDKa77OPdmn5JrKbt6/bWeqXQN9Vhu3a3YvZz
w0pl5eNpzGvBm9W+BVlQ59dp8jzPUpZzwl3JK+M9O6zs3XPC51To6LL9uJZS
GXsbv7VofPd3LHaYvfbZwgxQ2K6xbYtBEWu//cv0dn7P2cTAPvDyUgHU1eM/
w6lSf/5Z/vm5CrZ7nN3F+8O+Sy9UsH/8zl2TsP+cTLDl8iE1rHkuypdvs0IT
5Sd/cZ/E9YFnMpsnoj576z/2QX02Wtls4vrDuifrAfX/Haq6GfV/2vRM2bOz
GXDLNNwbxzsutUUfHK+BRbo+x4eF773UDvFJW915CuKzPn6yJseRParZOQnx
tG2x+9s9jifhSLgSnuXSrf1YWgKj53GL8pRhQeVg2824u3b/fLbz5fvioDfZ
rLf52Bbpa3Jh4jj5J2ZOReyDY26Vi2kWc1lfvmvaswyYdmDqiIplJexgyadh
FctS2Getg5rWvD15adGXcPUSNv+b5q2xybHMa27cz50sB0Y3m7/wxY88ZvVA
Yectt+fsuZJ3RbvQYhBgrddrwPm3iLOcG1vO+4Of2YDN2H+5+oRC7P9+zblv
XD5867bzJsqfWpf1HeW7PFIazvWBNjY+I1CfW4q2WqjPhjMOvlx/mNVE+jPq
Lz8rbh/qv2KzY0c+XtiX2LQcx3ut5EErHO/cu8b7OC5w96HlC8Tne92sPMRn
xK9ruhxPdj7rQkfEM7RX5lTEk+yS7JTsk3AkXAnPNh3k5+8Lz2P07NU2r+B2
hywIyXmn4lxawK74tvm570QOM3SZ3ynnZSbcb96x+42BRWyVfPKRz0FprPCW
oeJr5Rzw+hWwuo9CIev4+oZ1XkAc61QcEdN6fgHYV9tb7zDJYq13n9/9eeAz
1vyy7poHPmXwB96FDTj/eVSD9ftzzrw/lG2faor9Byab6WP/7sPyjbh8cDd0
sED5IUG9I1H+6NY9enB9IDXkkDXqU2JmOx712ao4YwrXH8rUm/9A/XuYWnVA
/Weqx8zl44TP39S0cbyBWnIlOF4lDek8jg+0s2jXC/G5oeIqi/jk78o4zPGE
M6rLhyKeE2SadUM8yc/J78nfyS7JTsk+CUfClfCsWbfi6p02eYyec5cFdW82
MweS9JZs3+vI56XEY4SPfgZbfrJDz43X8yFw4YapW07lsGXfjWDLqTg2OWFa
0+ezSsDadE6PFTVJzGvps8EravyYo4qi48iqChHnaf/AecKn3H68Pxxq92EQ
9jf6VO+A/Sdoxqlz+aCtcVgN5cvUHJFG+Zf2V5tyfcDghMpw1OfN4jY9UJ+t
B7+g3jDEv6mgf7jHTkH/iuWPEXeYoys1GcfrcPqsMF7zlHtFHB8omD/gGeLj
o7t+L+ITU7pyBMcTrKOGmiGeXR3GGCGeFDcpjlL8JD8nvyd/J7skOyX7JBwJ
V8Jz57Diez3t0hk9fb1aLr+aVAxtr6QUz1JJZh0P7lWW/RrDmnWfaVUYWQ6a
HeQC+tW9ZfMibMazxd7sTUhPranqVY3i/EFzUCTvDw7p3YT+dzYtmYf9Rfkg
Kf9ETOUtrgf0Vx7igfoc8eu9AvUR9QdJ/RXarLfi44WUElthvAqXnwnj3TIx
aAjHB2zevhfw8SwZPQ/xiZSqG8vxhNmzfAQ8L+1Y0gvxpHWI1iVajyhuUhyl
+El+Tn5P/k52SXZK9knjJFxpvPOsRluX+4Uyei4K3JtQ9r0Swp3Phey+84T9
ed5l6u+qdcYkEs6E7184j1QdVMD7w/s2C4T+4RPPCf1FuSApX9QHJPUx/2Gl
wfWHwSk/1VD/z1Z3ZVD/vi87HePjhfSVa4Txds4xE8Yr4gOS+LiMqynleEIv
xakCnnYZugKetK7TOk/rO61DtC7RekRxk+IoxU/yc/J78neyS7JTsk/CkXAl
PKvtQtq1/uDM6Ol3fsv10z8bx1mlU8npVh+c4YVWstB/8EYbob8oHyTli/qA
pD6i/iCpvzhekByviA9I4rNoxOyJHE9oGWIg4Nmu+wQBz7/zJMOpxJeondb5
3xLtf1+XqiXap/3H9r9w+/+3/b/q+c/xNoaPJJ7EO4mHEv8knkS8ifgSreu0
ztP6TusQrUu0HlHcpDhK8ZP8nPye/J3skuyU7LMx3GQSfwj96Hl6kqvQX5QP
kvJFfUBSH1F/kNRfHC9IjlfEByTxCdBpMwbtWVP6gYCne5S9gCfxeOL1xOeJ
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
NQrz2OeV+4MWzcyGPo8Otr1bm8kML2t1XnuniCms9oz4KpUJPh4f9tR2y2EG
+nczVi4rZLYT5QpUrTg+bSLLmHUu22M0MEZleD5LKbBwunye+2PSFNtha/PY
zo1lhw5VZLPi6XXjapvmwaWkj3O822WzgODKdubLollux/HP7R+VgtrQsE+D
9RKYRpvM34P1fNiRG9WPtxkL/KS6vh5E3BwacPPoYP2T9we9lr9+Yf9eSk+9
sf/EC3LzuXzIuf67NcrvW5PxBOVr2NXoaNXkQnH+kG4te6ewPUE3vTKPFYKr
9nI7riccm71O0NNm32JBTzO5tuV8XOBvLiWMK7OvgTCuVVLnd3McIOPL4kzE
IcS/aSHiYD7kYVOOG6yZvaIr4lY3f2404rYoeMQe7dYpzPHZ3Xfzjpawml6/
pteszYCnCqfPzh6Txga9OS7d0b+Ihd00m1l4i8cZQ5cpI5LT2eDqHumWX/MZ
PPiS+GsD98fJrf02vU1kW5Y6ht2wfctszrbWOnq+AnQMJ2w3jgxlK7sULjlp
5MXaTIvNMtwm8PBvf+F2ogG3Q2O1LHl/GG/TTujfMaSV0F+va4o/lw8G+psF
+d/tAuah/LbWQ1pOYqlQqpu3d3t8MnP7ph37xaYUQn0f3UzrkwGfNqZZz2ma
wyyW9fH5nFYIC9c9nMz1h71KcwT9gxR6JaH+G/qUn+bjhbg9sk1wvCd6RQvj
/Z5RZMbxgTmrp8ciPlHNvdQRn5V+caoHH8WyPNNK15G8/VHnwlWRxjlwMjRI
KvFsHLtpM675wTZF7L2yjumbtflQra8ypiwsjkUnaY3T35XHengqRDWLLoJj
t655rpJ9w7qP0//a4fRrlnHHqa/RjCq47pHSN8jXl/153mI2OuFnt2fS/oXs
zLIBt9vTrFR4f3AwcRP6O7tYCv2fWtl6c/lgMnW+ID9Odqsgv0sPoyHSMlHQ
896uLpsz49ncnjGj4oMroI2UdWj6lVjQyT7dt2BpBlv20A+yx5dB9qr7vY8/
joP4pDnh7Qx4vLppbzQsrwh6+bcZ98A+Doa/GFeV/KuQrdf4tX/NLs6vn8qq
cXxg9bsiAZ8dhrkCPlE5NYndfJ4zFuQ532NHPttpMHmStFExJB7e3nrMzWds
vJFUqcb7bLav/nH/smZl8Gxo+Noj2k/Y5TipgSG2nJ9UVK7ZNL4CXDs31Yk+
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
qs/NcEZeN/JRr4evIjIhbMCO2G7OH6D01hTZFhNL4EbnJUvxfvvFnF9D8F7B
9xCjMcgnsyvHLfs4IJxlKV/fHSUdxuo0fD2Rl2b1HZ3A5bDxO6Z95HJY84WT
vjTncpr/Dj3N9WRysRc7cz1Z7NWTeqintMCX/nnP/7PdL2FcL5hCa+w/+4ir
MK7PmcZX+bywxNhh4/m8sK3T233CeVmwbckybg9sS1YS2gNLzdvdDe2BC635
i48dC6gX5addGSfYz9CPD5Wxv+OCPoL9XM74vY77F3OwVrbh/sXeVxg6o381
xusiYku1eZxhHxVmbeFxho3xffoG40xjvEjWfudIHm/Z65B7l3i8ZW3rNrzB
eKvjlparrBbFpNZ5r552NZ4NVAncjPfftov1vhLEel/LxXpfCX/uwcJYiXuw
Zn6yH3B9aXL7jnBvNj56vHBv9u/fmf5Rd6vR9j/npPP+t/1f47NUI+fkj8/N
F+al34Db09BPL48x+bd5UaV5WevoK9hJq3e1fdCeDRz3/ZudNJxLOy5adrWb
Yi5zeMl+Yj5I8E7X5XgPZ+a0wQE35dPZBXMVS8xHGLZ27x68v1Sce7x/2oXr
7KPG/unjtqSwZcNPps9cXgFyCbY3NC9fYSWXRq/7uCeBDSy7b6e3rxL0qz6G
8XYwezJcaLc6flNoLy33bcblwJ3TRwQ58cecBTkO6073RvlLZr1fw9vhwJST
Sdje3/6hK8r3Np9gzeVAr4tPjqKc+e7dg1G+issYof3AhIdCu8vWF9IoX9Yh
W5BTe9FZkCMxLqBxqW0yEHDQ9dn2Fe8j1aTfEXCYNfSApeIdX/BqOmb76lwf
OKC9ud+BqCrQ35oXqZGQB9sHtLTU/+3H9ubk68V8LYZ7C4atthuXydLvye40
mJDDzkzZaNd1ZSFo3fz6NfRJFnQfPqF7YoUve6a4+/cVjzK4+fbEuuPa95j/
3ml6xoMyoWTnKL2AMeXiPT3thu8IZA+BJjq98Jw/4cqGAdtTUsBq8clneM7v
DDYFim5xEMaOb09bHAsRnaUvHnWvgFxTaQP8DtKsXd6mvgcSWd2tCan4HWSF
Vf43p9UpzO5A+4VTbqexrJntmleXlUCLeuv+R/z4fkgj9OGKz7nwY3XZU7xv
M+9SCy0+LqjPermejwt6yWy7jOOaNPDAMC4fLs6QU8TvLE+6aFeg/EGy/glc
PvSWih3B5YO544qeKF9a4U/dJHmxblKyWDdJSuHf6ylNFOsmfZSomwRi+1ex
faXY3myS2579UwMbnsE671bhPaig+rvVSnd82UxP29g1uT7s9KAp3XEetdzf
aHE8mcLVVfPxu8mkpy+vIZ5OvdqMVXKLYy9K1/tyPNlvezMbxFMv9udtvD92
VfdNLeYZqbbp0OrplSIYvWrmjhZ2V9jos877XK5dYhc8PVvGf6+CyJOXg9fx
ffGTyv4H8Dv5mzEdhuD38eOGmozbD7tacvME2k+5XtgatB+pv38/Cvife+n/
aw8N8XB5sPTdbpsyWOTGZWV4T2lev4IreE+paI1CHrc3FrIhojfa27HYlU2v
cnvzEfWIEPUKEfVRujp4C9qh2diBE7kdstqrLwzRDuPE+j6aYr2fSLHOj7fY
PlVsjxHbjT4es+LyYWJfB0G+q3H9YJR/eE3QJi4f/AP7CfJHmQQK8meIdYJc
xbpBy8R6QUPEdgexXV9s/3r+y36UP2KChnDfYMOREOG+Qam93BqU/6vZVMGP
BsBYwY8k8IFG8AHCR+LeF9C9Lwn/BfLfO016PLgQEAWfZFqvONIzGgy01Uwx
r1BZHL+BiMcVEYfZ7uOFeS/bMuMCn3eoGn5fmPeh4njyxfFtEsfV1z9SiDNP
3dxPYX/zx2FCnPm+p9s3tV/JTKflnfuzM5LY11WhVvOcyqCzWD+lt1hPxUus
o5IV3vk55sc1gVc98N7jO3nfj3jvUaqR75Xj3Gv9uXxYpJ60ncuHEQoul1F+
c9UJPZVtC1hAy5K1zfv7M/mnyz7g974FOT0jCh7nM291hejeA/3Zb60WI0dD
seR3wwD6bvinXa+h/X/s/F/t/2evcm/Vn06sje6zYYe2J7BglSvDF5tXwv3s
ci28VzP84JMc/+MBYKgXn4z3aiamXfHE/tnbumny/hDtNXgw9pf6+32//11/
/7Vd4t5jAz6Nt/9tXA3tX2ZeT+T4wMeMCZEcH+i7tNMgxOdXhNyIJnZXIHRg
b81z1y7BqPY/WmHc0HUsVzg6LpRtLQxeJX8pBPrW9Op/vk0V9F1R17FiYRTo
vpuQZdUvio1Q3yjc7z1zvMoJ9wuWb/sNxDzHwworo3G/EFe/2tRmXCjMf7ay
/chLIWzmjBhBjuKt1hm4XjxXOP0S49vutsfPYHxb/dE9Hfnn46BdIchju+ZJ
/Ub+eUfM590k5vOeEPN5D2RFL8f4eb9/WEdcj7YFy3tg/GzlbzMJ42fGIcMN
uB7NOVd+CuVL3I9tsIeBF0YI35HfX92jj3a13WGa8B3Ze9wDAbf+J5qGoF0d
fNNPwK1IrH+iL9Y/+SXWP6kU29eK7d/F9ogN0wS7rV1vtwq/U5/0WSvYrWNt
W8FubVxWJeC8XM/8If/Hbv/9vqtUI/dFf337U9dikVjX4p1Y12K1WO/CVGyP
FtvXifUunMR6F/FU70Jsfyy2x4rtd//cH4Oa9n+/Pzbm0Koz3M7h3IRAwS+6
rb8p+IXdH7+Ar+Z//GK16Bc71NqfxP7G2r0FvxiQOlzwi8a+7zfmv//VX3Y6
alviOf+bwZs24vf3Z1FQjef872f478XvATMM1x/Be7xavd8a43eB/DkFfXE/
6Dvs0HHMy35xdPVA3A+qi/2SxL9bIPa3KXrYcvOQdLYm/sw83FceLOxXjvvK
hMttZM5znnNbR3EA8pC86zodkIfYj/nyHvehI1zPHMbzdrMjI0qx/5XMNwOQ
zyxdc9QU+ZKujFUe8hn/ylNvkc+0lnuwHPnS1old2qMck6d/7nVX9jYeKeRf
f18i3Ote3OaekJf9drmiEt73lm3bQ8zL/m92JfW3f/+oA/CP/LWRVhOU8b60
fpKVB/K3RfPa+CJ/s1tnuxV56Zmjs1Yjf9OdtMQJ+ZuBmL9/WszfjxHz91c1
ktf/o8RbuIcctT5XOA+xsv+SguchxIeIHxEvovxhyiemPGLKg6W8WMqHpTxP
yvukfE/K46K8LsrnovwlymeiPCbKw6G8HMrHobxlymOm/GXKv6V8XMrDpTwx
yhujfDHKj6J8KcqTojwfyvuhfJ9xu+J+zCjMg/QzcSvmts9jK8v9hTxrqi9A
9QaozgB9f6LvUfQdivLSKU+d8tMp75rysCn/mvKHKZ+Y8ogp34/y/yjvj/Lf
KB+O8uAo74vywCj/i/KXKJ+J8pgo34bybyjvhvJMKO+E8k2obgLVUaD6CVRn
geouUL0FysOnvHzKx6c8c8o7p3xz+n7TQ+L/s7NL4v+nQ9876LyAzg+W/3s9
cynyR8qTpLxJypekvEHKI6T8QcqXo/w5ypujvC/KA6P8L8pTorwlylei/BzK
16E8HcpXofwVyluhehNUf6Kh7oRYn4LqVVCdCqprQHUOqL4Bfc+j73v0XY++
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
Bg4Rj8g6dd3CbXxeAx+LeGfEOcOLIu4b8d5wlXCW8JVwiXCK8Ilxh4998B4d
xZLMIvsKJ2FSuqzjmOtF/+SDgP+A+/izyCApq08Y67bCdVD+3nCqWjru1/0t
S8kmvvHEg0HBbNGmnfabDl2gspAdbsJx/7JkYBe74+H0ds9Jg/6z48ny7YVG
ic1L/vG98L5wvvCu8K9wr3ChcKLwoXCVcJbwlchbgTwWyF+BfA3I34C8De9e
nZuuFRnBnuofu7228DZFb/EzbSHyFUjeGH4Obg7+Fh4XDhdOFW4VXlWJWehs
O/+cHHWzO8YOKKaXVlplSqYZ9HHn8NdePun0ZVmUyeVZMjIOv2swjc/PDk85
FDbeKYWS/JXaXL5VSHZ59RrMe5ZBdyUH4i+5EHgQeE74TrjOaMm5vZbc22bJ
u5Vtu56oPTWVxugFG9a1yGKxYZs/6fHxbYrk/SwVHOWVimfnhU+rivvjoobt
E3aubYRh7eIigkODS4NHg+eE74TrhOeE74TrhJNcr+AlX0jx+nCH8IaI44c7
hAeE04Pbg9f7x+lJ1+Hv4OXg5+DddkvX3aTrcHNwZfBniFu+Jl2HP4M7g6eF
r4WrPTA65kzHgER25u7Evqf0Cpl/wfjnJaOzCa4VzhW+FS4UThQ+FH4SnhKO
Es4N7g3eDR4MPgwuDK4Yzhi+uCCn2yY756dsd+1edrm8n/Lp8GnP4+k5BPcL
Bwz/C2cLdwtvC6cKfwZ3Bm8GfwZ3BscF1wXPBZcLpwuf21HBFd6SHJafTYeN
/P5pxdxtDvz+6fX7bTvE/cOX6kruD84U3g/+D+7vpeTELip4Pf+O9f7iz5Em
98vrx58j6d++Ey+eIzwq3CrqJ67DrcKrwovCj6J+wot2V7gOtwnHiXoLt+mi
cB1x9vCLcIvB0nX4RdRnxKlvVIhXh4uDh4OPS1C4Dh/XOYvJ2w2dRIPLvN2g
njYB8nYDrhXOFb4VvhTeFM70sWzYZeFLPVoME+0PGS17rC8+B64SzhK+Em4Q
jhB+EB4VPhUuFd4S/hLuEh4PPg8uD04VbhVeFb4O3g7ODm4Njg1+Dc4N7g3e
DZ4EvgSuBPnZka8dedrh9+D54Pjg3+Dh4ODg5eDn4OaQRxh5hZFPGI4FrgWe
BfmFkW8YeYbhr+Cx4LDQbsNjwWH5dnPT3bE2lmn0cTl78YEfm1Y95dSevBKC
L4I3gjPSy0y9sZT3h7KBx89buRYw5S3jnezDsghuDY4Nfg2+C94LzktV8kUy
yVHBH8FTwVfBH8E1wTnBGZ2WrkdL1+Gb4AzhDuEN4QPhBeEE4ejg6uDp+oWV
HrWNjGHXb5mUtUsNY4HenyYlepUQ/Bg8GRwZHBpcGjwa8ukjvz7y6sM9wkHC
P8Ilwpd85xMxj/hhHA6nB5cDjwOPAZ8BlwGPAZ8Bl+EUpbJdtNtm6R8XiH7n
84I4eb8DzwDfANcAnwmvCacJD6k4Tob/gQeCA4KfUfy98K7wr3Cv8J/woHCg
8ELwQ3BD8DbwN3A38CfwKHAo8BjwGXAZ8FfwWHBY8FfwWHBYcEpwS/BKcD5w
P/A+cC9wMPAvyM+IfI3I0whvBn8Gd4Y8vMjLi3y8yD+LfLTIQwsnBjcGL4b+
y1Khn0LeVeRhRf5V+Ct4LDismvo1+EN4RLQD8IfwiGgH4A/hEdEOwB/eULgO
zwbfBtcGFw0nDR/9cWfHx7x94+PI8NO8faMxy6tXiPbttNROan9tJ2mq1E7q
SY5xleQa4RnhGOEa4Rl/uX+e+OeQW1HzM+JzZKWvT4rP2VE+Pk64Jma0QE84
J+emv/kK3wTXBOcE3wTXBOcE3xRW++1d0T77ptQ5K+6/XfKFVeL+4YXgh+CG
4IXgh+CG4FThVuFV4c3gz+DO4Kngq+Cq4IvgjeCM4KLhpOGj4V3hX+Fe4dPg
1eDUcK4GztnA+RrIO4889Mg/j7zkyFOO/OTwTvBPcE84nwPndeCcDvgleCY4
JuS1R557rKsj7znyoGP9HPnukf8eee9/zP/+bT0H+WGRLxZ5YuGR4JPgkuC1
4LfgtuCs4K7greCm4Kjgp+Cj4KXgpOCC4ITgg+B/4IG+c0BKIm4BHujHdbNt
ol+Tu6LqH67/3N9J61Q1rJv91/WrbQMVvxdOSfE+4dng2+Da4NDg0uDRcK4M
zpnB+TLwS/BMcExwR3BI8EdwTXBO8E3wSPBJcEnflfO7n8t5i1RuiuWwZaDi
9e/K4YfPwfk9OM8H5/jg/Bjkn0beaeSh/um6lH8Z+ZiRhxleC34LbgvOCu4K
3gqOC64Lngv+Ch4LDgueCr4KrgpuCo4Kfgo+Cl7qOyeF9c+y78sNLgtOCz4L
/gqeA44Dngq+Cq4Kngq+Cq4Kngq+Cq4Kngq+Cq7qd8k1wT/BPcE7wT/BPcE7
9VE4px7eCf4J7gkuC04LPgsuC04LPgsuC04LPgs+Cl4KTgo+Cl4KTgo+Cl4K
TgrnbOHcLZy3BU8CXwJXAncEhwR/BB8FLwUnBe8E3wPXA+8E3wPXI9WTEMV1
8u+u/1B/4IIUP2eG5Hnge+B64Hnge+B64IUU61u+5HzgfuB94HzgfuB94K9i
JXcFhwV/BY8FhwVPZSI5KrgqeCr4Krgq+BN4FDgUeC34LbgtOCu4K3irmsoZ
Lg5ODj4OcfCIi1fYvwhR3L/48fr/777Pz/sjcCBwIfAgcCBwId88iPx7Byp+
L7wK/ArcCrwK/ArcCnwIvAicCHwIvAicCHwIvAicCHwIvAicCDwYfBhc2CvJ
jZySHAn8CNwIHAn8CNwIHAn8CNwIHAn8CM4bwPkDOHcA7ggOCf4IvgjeCM4I
3gn+Ce4J5z3g/Aec+zAxduAnMW68kOZ9Woyf41WdaonxM1wQnBB8EFwQnBB8
EPwSPBMcE/wSPBMcE9wUHBX8FFwcnBx8HFwcnNx3Pg716of4VTgxuDF4MZx7
h3PwcP4dzr3DOXg4/w5eDn4Obg5eDn4Obg5eDn4Obq6m91F67wYqvnfwP//+
Xv/8vtf0/ta0j6nohuCA4H/ggeCAcN4Dzn/AuQ9D5theE+9LRvuR50V/dOVe
6T7xvuCcDJybgfMy4IXgh+CG4IXgh+CG4IXgh+CGcF4jzm/EuY04HwLnReCc
iJriWP5r+cNBwUXBQ8H/wP1ESd5np8J1OCA4IrgieCI/t4j+Yn3114nOhmK+
PNRsaRcxX361ZIGYX7NRlVPl8+v6eS3k8+vfTj7sLeZxJyLzPMU8usT+QJWY
x+EcTx3pHE9D6RxPD4XrPaTr7aS86mFSnnW0b3MXNAwT6wkP687yF+ul/dr5
LhPz8V16VTHifmjo/B7ivIj8nX96i/sZIK0nIC/7P/mRpHWDpV/XDRjWDaw+
TpGvz89oGhAg9gfP6BbI1+drT+7/aLxTCsvWKGx7+VYhu69+6svcZxl0xMv8
by+fdJaxZrHY92Q5o5f2EPueSmYXdLedf85UElPEPinLOTCyVOyTdv5l6MSp
1vdYdMDKuKjHp1nrOjq/rL1aSvvLr/+i9sCHGox88FT1wQHm5Ks2LIH3p25+
TeZrRUbQ4E42Yj+XlVfqyvdz42rIz68xbFRZxP3L7Ou/PmzwviwzS1kp2f7x
4erLpNWUv+N1r1dJq9n+2fZFIh+7+5ww+4NBwRQxYffUTYcusKOlU+X73QvH
G4v9cdr1+lr//L3hrMOltfL98d+WV4n9fbZ4/cMP9hGPWLcOrezF/r7zfM1u
M4P92Nd/g9nMLqHyeAClf/2vjMyleIICKb4AcQUXUno2rw7yI49+Rk2rg4LZ
h8QuyiIOYbAUt4TzSXAuSU2f38Zp0Fqx33d9B5Pvlx0IuizfLzOvId+70s6v
5bJGKieUzyW7+sqP71+mId7tRXnS2+gAeXlqjVE6onE3gWU2LBRxLNTItG8f
Ecfi+46JuBf2Wi2sn1n9Qtq7eP8ZEfcyY/NnP9UHPsx2gnIUf750rb+5/PlG
XY2czusDNT/eVNQHCgpOVxH14dHNg3/ZRsZQkmzMx3apYdRHI9lSrJO33NU1
dO6QVDa0b72Vhvx3jVmeYS7ibQJ1ep/uPjmDtbf41OjRbRl5jZ4nj89pKjsr
4nnYRo9lek5G+WRQd2eGiOdJ2FIYFmqay9xsX5k3mp5H6ov3FIt4obM9P690
uJTHwtf02bzTIJvem/eUifiia+q7jCdG5rGz7s7D78blkKenjzzeqd2C/ICo
5ALWM3eQiI8ig5YDb4v4qIPD0lra3ZGxO/rP1t9XTyaVjpN9RDzVaLdWnyaa
yshmQuCJ3KA0ql/c4YGI49re/dEl/1qF7PO0lLrlCzPo9/VtzURcmeErzXzN
E0UsO+eo+5WuSXShsny8iEPLHpIwb7VLESmrnz531DuOsjMbG4r4t1CzhKhy
gyLylfV/pnUymbKalIWIeDmbCDczkQ/u1FP9YhHn9uZvjzwR51Zv7LF3G5Nk
bKh74DZvlWRmlH0+XeQjRX5k5EtGnmQrKZ4gSSGfMPIgK+5HG0n7strSPm2s
tD+LPKfIe4p8p2+k+IYohby+l90TPov4lnr6Y3uKvKEj7ozsIuJbkE8Z+ZWR
Vxl5URX3qe9sr1Xn5OgoGnyhg/xzzuUryz8nXcqzjLzLyLeMfKmK8TMpnhHV
/H6oecQJebyNX2tDebwN8jIrxpl4SPlVt0r5VpFnFXljSxTylwZKeVSRVxX5
VJGnVFfaJ8f+eNq1zh/4c6QC3b5b+HOkRa4r0sRzjJXiS/KkeBPkD19dt8cI
d8sc1vTcyj17TmaQ24B9RqdH59OW6PejRTzk3UsxMl5PyMfTVh4POUp9iXdB
PxmZ5PvbiPjM41nKc0R85ovc0nZ2x8OZVXInvf6z49mJJgdVRFyQZkSbiSL+
6sysHhfb/PacVdteuSXir5AvUnG/5mu79fP6W7iUF9JVipuyleKmkCdOcX9K
+pyf1utMpHxwinFf0n2S4n1+/f/k63s/xNdJcWWkGFdm7bJwm/DDzrHbRNwm
eUaZyh1x9r3bfiKu9Y3rx3G83GiJRtlMUW6zd8yQv4+qh068EuUc67tO/j4e
fbPWR5Tz45WRluLvNfxi5om/R/4a5LNBHptrUv4T5GVBPhbkB1FcT0AekGMK
8XJ9pfn/fGk94Ki0DtBdms9XSvP7BdK8vqZxmpI0TlOMY8S4FuPcMdL4Fq4b
zhu+uwFpT1GfV8DeeRs4j3iWyZoNGbn0il0WHd35qc/BfYWs/uVrsp1/p7LV
akVuLg0zaERKVcu1+4uY6ZrTuu1eJrCRBrOS+pzOpDpzfOrZBxey5tbrWo+5
8JRdnHfjyBHlXJrVqUlDfp2qvB3UxHX14/c8xfU5no0u/O5XREPbBmsaqb5g
vY8tue4+KpP6Lt/kVfdSIXl6nWyVwcfhxVenTi51TKco506T+H1SmJPPOnGf
CfEdl4v7fDel3sSq/flsUq3lkRrl2eyP+CPWh8IzaOY5zXmuHwuYR53pwc33
Z7CAGTfm1jXMIlXtjJ5HQmUsPH2vsebzRDbAa2UHj7hsYgrnc92T+uuEDptj
up2R0QUl5ZTinES28y+VkHp/Z9MjPwfdCG0Z7VuwN+Dzyww2eJOnY8HWTKp4
GLrB1zOfms3749Pgqmw2Scv40vKLGcQ+hT3pHpfHPjybmrnuTBYrnjmrqHtQ
Nul8uF7oEZpHrU1GO8Xz603WDX32JiybEk/l7Vzsm0uDVOu7v/HJZZ4PjK4d
jc0ky+ww1QtV2bQrJuvwQM98VlHnyygP/vlBN2TFrc5mkckuX1v70Dz2fPgt
6wL+OSFdHfUSXmWQVtvpIZu0ZczZdmr7TH6fN6ca71rSJY1k4+u+ib1YyObX
d1uqtiydMuuVpy82CWNn3u8bPeRMANu7+Yi13+FS2uMYts8gN5H2uVi+Nz4j
Y3ENtMzjy7Jp7sbaV7eqvqBFxd4Du/sVscvFC3pM5M+x9bLjacvXX2Fq7rfN
TQadYoGN7ddH5JX+j/X/LdL6j5HC9ZriZv+rc/xf8bSK3/u/9iO+5Wc7f9lq
wo7PV9iphyzW7dgLCkqs/Wxf4msqMjxdbtcqkDWwOaumkRxNFZWTu6V+LqFc
Pd3mqsP82T6NwanbXe7TuqwRy2acLaW/bj9w7x7uw8LStly3Mguk0/NHb19R
XEprHRc77Mg5wJ42dVbh/1JDM1/tDZ9LyeXdHIcvxqcovu2x2V3WX6Gos+rT
H/NynrDd3nSsXwA5d/+9lf7gMHKd0y8+hD/HWzXss69+zhKTGwfR0dy26zd4
vqA/NW063Ex6Tb6dj3U1s49iN1fd2dTQKIf0nryIfzysiNyqDYfdUY1keRev
9bZKSaGDSfPqOdAr2lAx3a3S6RE7Os7pzMuJsTTbfW2Qy+ISUm38q3LMZcYy
lC33xwYyurlhhKXzxlLSjzrqvNkskIUN0tlrGO5DzTuv6Sp+L/bfuyjsv5/T
79dpxJooCmuR6/eyfw4pd3cvqs37UbWPh2OPRiWxm7+fvWy2NYusT2jcXOBY
SHqDjpnoTopl6aPbrb67/BFdbbKkzIbfT2ePqopM1/ts2jNNrTrD/anvLdMI
C17+2Ac/q7AP/mitj/GO4gQyizCocN5fROtGLF16lrd7tV9O00rfl0HTO55e
sedjAT2YdW2zaGfUu7V9svrvVHr1ZdWGQ/sKye7NLy3deft5PjHtKb/OBm2a
vpFfZ04lu5qK69aedTrxz2FNEwOc+Ocwn9u28s/51bwv8e9lKx5WlPPvZUmv
2sm/10rhvAnEndb54f35dl7br1Gz6mW53qfZ8Vs1+e9ljaz8w8Xvnb5u5VBe
PjTToK4oH9b1qr68fHpI48lO0ngyThpPNrkTJcqZsje0COTlzGr9qXVLlHNN
88QKhXEm4mnn5q8Rz5GZR+v68OfIRhX1eCWe44/v+bfz1HYY223h9YRqLWx6
gtcTVq/XZHk9maOt0ozXK8q9P8ud1yu21P1rvUqPXiHqIblGe53m9ZAFtLot
r4cPDI6Z8XpLuSm19Hi9ZSsLjRqIeht+ME+f13OStVN34/WcqRw6lCDq+cZX
j5P5e8FsF8iW8PeCeYyy6yzei5d678X7xVTtHyvz94tVzLotf7/qOW134u8j
m+WXPpa/j6z5HlP5+1hTe4X3Ge833usmSpnOvB0g/dIbAbwdYNGTFsnbAb2o
UNFu0ID8+Me83WCZk7Ll7YZjt0EVvJ0hyyRbJd7OsOuVLtqinWnUTHcib5fI
2H5DKG+XWEmzywmiXfof7eRP54Udn2BTxttzcr/nNZS351S3yxB5e65v9/t1
3v4zkz3TRPtPPo1D9UX731m5j+gvWEpU0AfeX9DwQ26jRH/xubr647f6+e3c
rrO21i95v0PbU+qKfoemjWst73eaHOnlwfspptqrsoz3U8QOay8T/dT6Jh31
eb/GloceF/0aTU0t1hT92qJ1m0Q/yIy6uszg/SA1HdRO3g/e2Px6B+9PmXab
z6I/JVfVnvL+VHNDloz3v8x4eKDof+mtR7a8/72gcN6BhTRfsPy4JpL340Sp
/qIfp1+VBxeKftykhnFX4SrHzXw8wNyL+rzn4wG61vRP+Xhg5c3uYvzAWsWk
+PPxA21dV3e5GD8MPd8pmo83WE6FpxhvUEcWcEeMN3yk+UhnaT5yR5qPnNh2
ujcfz5CF+r4BfDxDjdbe1xLjmZ1lrefz8Q89XxkcyMc/NKN2s3miPVmalT6B
j5eo+FOeGC/R0ojHU8R46bY0f4mR5i8V0vxli0qx4ahl2WxphcsWh+R0apB3
aGyv0QW0xnjuNDFu1HziuISPx+jSiSpHMR5L+HX/UT5+YwZ/nWvMx2+U1umS
lRi/XfUaK8Z77GLQbg0+3qNhO1rcEOM9E68t8nHjsD6lbfn4kN4/95WPG09O
/ltZjBu7bUhvIa7P+yVAPm684durFR9/0pjPjXX4+JNORgTJx58LVVuL8Spt
LCvP4+NV+l3FfosYrw5abWstxo3Fx7OcxH2u7BHvJO4zReH8o9pS+7lh/QBL
C97PLazqfOeEXRRL8Jg2P5i3A53vdbWYycdnm5rMrtzIx3E7qxx6ZF3Jpmgp
bjJdIf9/tBSPqKaQ53/uoLZd43l/Od7abmRy40i2q/V0ox28/RnWSklnLO+3
zlRPyGz6NIkNsdbs/Ji3q7fUcv03P0tkJ6e0nZTKx63FVudOLuXPt++mKp/h
/k/ZqBcrda15+T2/mFD1gZcPztXA/DVEqicD70315n9PwwY/6sH/no5sDa8Q
f99Zat8NpPYe7fzQ1Xln+feS6bgsK/69VDzx7QnxvedaLurO75P1U98t7pPu
BrbvIu5T02uuJv9dTC802Zz/Liq5pN1L/K426atFudH7lm2qeLlRB+dR+qLc
tGZ4jePlzLoXLHrIy5luW7VZKMq5f/rAyvZtc1jhRt9LNh8z2CL7p+aeNvmU
EroqpCUf9w8oLR7emde7reu2VIfw56i8dM4ELT7ud23eZeFbPg9oEdQu/iCv
zzFSf1OucK6W2oAZlY0H5LCuXS2/mPD+R6lOwpLiQUVU+4fx3Lc8w61dpqxw
OPGCElMjeyzk47vgEdHRhrz9fJB69Qq/H+rysYuZuJ8x4Ua17th9i6eNkuqF
llQfYqT4mwopHqeHFIfjE7yi1eSUaJrj5jPToWUgM2mxb89j3m6rSvUmSiGu
dXvfABP9uFimltbHvMr/Efut94hlyVNKaN8zez/xfLUfTJbXhz229+T1IX+J
7JioJ/MtcuXPPTMhTf7c/zmHWJr3YL7T/on31nbnHpGl8+5LlTGxlOq4JEl9
agmd2/hiBP9esqpVZsW/l1xjmzqK732pcC4P2smnC3Tq8t/FbrUfMIv/LvJS
ubxX/C6ZQn74etL4E+O8fgr54c/WkB/eyLrgvqgP78zzTXj506VaM2qL8h+b
rj6fPy9Wj10w5M+LLmxaGyeeV9PMjds8Dr+gkpXOVUlNgqhyVjebTbwfD5jW
4gOvD6SzroWoD/TKVGeRqA9BNi9EvSKjg58X8HpFVmljnot6peHY5YZ47tmT
2w8T37t6dJO64ntb6pcvanMwgw66F/XVDgimkEDdDXu+vCSXYIuXvD5T5PSP
3rw+U9rf16eJ+rx4yjxr/vfsUtuxxvzv2duU2tvE33ermLCK3ydLKHJ/z++T
jdAxminuU6mGvNYz1HJd+PNiHxrb+vPnxYJm/ZUsnhfivmIU4r4i3VmJN78/
p79Ck1ry7//FMC5h9xfEOSBe69u8Jn7V1GL+9+yN27gS/vek3fBTjPT3/5qP
+kN19dvv3qN/rt+U1tOxvn5AWleXSesdnaT1j0XSukcvaZ0EcRMnpHWSu4OG
WtXj7YL3k5HzjHk70T6n3Pg4L882Uvkf+lr+DOU/RPo+fD++t0L92HD+OTRB
ZcZU/jk0fV6GuficGtd5vpYbWymVm4pUbjMV4jpwn3Ffy43KFcrN4cfnTpXS
c8fvR3yHg1QOsVJ/HCL1z+iX/x/5AJX+y3qRdP3fPOx/ytOIcQ/GQRj/7Jod
OFs8r90HnCeJcg4emjhclHOLDsMstuekk/qR+JANq7JZL43MpWpDC+hc1qIC
8b6Uz2wSItr/th6Bk8T74tZsoYVo5zMjLsrfR6Pdz5+J9/H/ABKwa9s=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-2, 2}, {-2, 2}, {-0.9999992016686091, 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7257949423448815`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
SCi9WlH62e4Sp0HpNzSlIcU3OlL8Y0eKm1Q5TYe3fVwmu1+/WE0ta6v1BsAl
6bTm8Q+EEfRkterjx1Jqeb0vpmh4tphrmK0Vt+V0GTeOxA2Zv62UZPi7StN1
AkZHLaPVAb3wfG0Mf/LQSIQDtRXcCNeQ4YbWNmTvgdZeWstiLo+spyvvtk8r
eOkDsDlz6YNoCJuTgZ7F1lcqeWREszkSrE2lzdsLjoxEOWLHLJl5b+5UH4fL
2bydceqWfrxQbNuzJYGRRW7PerY2YxLf9KO400Q3rAbKuvv/zzgctrurdIMX
WKV947jw6Gw4jDW5r/VnqDKHo8zhhJnFxFH6QqW4obKZy6Bxll1iExRPb+pS
attjRse5bnUKi2a7KLKy0cVDMaIIZoPBM3hMMu5xBK/jGA3yY3uqy9W7gtTY
9uFaRerGcRU0f8IomlM/iaetXjJ1At0xcTCtnJhNz0zNoZem5dD6Wbn0wYV5
9MXcfNpxVQH9urAT/ev1nYmQN9+piX2mInaTQ+znFLFfVMR+xYnXKSdeuzn2
ZpNn+zWw1PJ+Utj5iGs/GJNjID/eP3015mAfspNcc6Nlqlnx6Z5aaTH7yR2u
0X0zz9TgcMgd0+RGZyXPquJ7phwWZU7rhjPLcFMIA33w4O9yoCyNoVGQHZGc
M+6oZjqzHzNWQpkOJ4U5Wjudw+3IzA10ZBqNjr3o0K4s20qXpi0PHQ3JtvM6
0ujtl8uiIUE8Kziqs0ECOav0h6os9+FUnyw3yzHiX1/nYpk/wuMP7aStfLJu
cWGjYazMPYw3jhkzhib19+j+E+OIutCQJhgHiPwP8Q2BFRghHyTEd+JK0kUq
fN54rB/mXffANTR1XKBXUTQT2K85EgubWB8RZ/UOH3G83tBWVLxyEB78g3oB
d0UP6+F6CPUOykd48AjKp3Kte5gk6JgceYyJ+kPjZvRVvSMcwxAuXiP5xjoq
OK4YU0HzTh5FF08+hc4/p54unXIKXXfSwSon6ULjhtTR/Sdl0fIJWbRqUjY9
e2YOvTItl96enUsfNeTRtnn59IOK9L9f24n+TTmH/2udw77iHNKj/vOOg3i9
HeeADF1H/rZ3Vax4uB87howqnBL1vNL1hkpTJZfIH/Nn5kgvBAI/XII6uO2U
1xySQhu8AQ8+iZCPmYGnX8uDnaWo7K2psU3XcRv3jWvQ5bZ01xC3rgFuATlA
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
7L0nxnOssge4cfwk31FHByYKuPfkBNU9gvxBAvjt9HMPHTvz1NHBKSMCYj8I
7QDqBdrp3FQ2h9Dgj+9+wb+iixffeZMubDfgcjOOrtaFONILemW5+Hyt+gPI
drDcPpTOD0B8n9Axqqbf2EFNMPF7YB81o9uPGeZ6yBeitlgAl7U8biI00x8k
PxH6iZp0VRNO7M3XB1A9jVxFb9IhnODrLAm+Tdrnb+gms+O7Xy7yYs0NxWpP
33z1wLBU9cRIqdm9Qlr/7WmS7HtvVmN1fkFj9eqUUnV8RCvOqk66vlJVDaaf
N1RKYf8u+g7u9tXvYnz/BZ07fnSb8O5pfl5ZiCwSivzVVVG9OweHd5zmst/b
RyX+ar8Tk943BT07X0/mi9kZGQK/Ml/qz7WDYwKrL4Fnnau3q/49RJuGeN8s
Yf5zpgyHgTDY2Yrj9ue+Gn3Yq9HLLBiHt19I0Lvy6snagcb4cGzqztF7k8c4
eS+M66S9HbId1PO1R1uqqhmXAtSs5xnVrm8pWfWKqKo91MJbShYOZvCeLnIt
tHUG74sT2rY/0VSN6syyXSpqqRcA+5qKLFWSTyfMVgL27hwN6jwXqMar7deY
3pan/rM5V328IAs41cV2u7KX1DogzbX7BG9pmcCd8a/H9fpFPH0cBHPS3PFq
8qbdbu61OYxzB8m9UJxYTuBGiKZATh+Mjd0yUWPe9RVqWM8uasSAm2w1bWb3
H3PXrV7iqW4iMz+6HbIpMoPGoNsIdOQAUNIfc2Uz1YN+InnooDknlMsoX3xN
ohpFRuHWq8rVKhO/CeVV2s1DvO+h+H1Hn2Q1/Gdt1PSOETWmQ5TPiZuvqlQD
2leqwT9DVhqOL0+NvrZS3TEool6ZWqo+W0iI3EJfys4YZ89I91XtHo5Beo3u
p38e3ZUvFSJVbQp4FwJd1b9cyoV7Pk25CxehR+++7pg8XxDpgTGyFuafm7ae
JI7hvLuQbsa1gwtM3t+xa2QS/e23NfeLYaJIzpl6ywPc1GewHmac8/zkJ1t5
Q9LCdkiahrrjYd31Yz3k6H1WsPujb3su5+LDnzTQXX/lXUfwsNdcu56ba/1A
x0hNzILCCMH6mjLoddf20Yd1pp4F+oo2F52drJFuNm8PedGc/jjveE2QP7eL
Fbpsp54WF+o/bNuGG7c5hu+zMRyvR3inb+0OwvpeOnbRsTVP/WNDrvrj6hy1
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
W8LWxEciLqsMEEldDS+m/gXnHsyODq+UWyLhXR3ssocUj0xiCEXvPe2lMplR
3DiCw1RG2Z6sjHLHs2u5JAwu4amEdOPRBVmYh8WoS/VoRNYwtW1paSSBaaSh
GtXOlQ6JO3TNc39DTlfWrWjG3VB/Wp2jviQK+WgBUcicbHVWawxQyGnyJI/e
mqEeGJmhqoelEyKTOI3pMyh2ExEihXQhiO+fYPad080C9/2YL2X19AoS7wtJ
eswcIhwCLgGnIJcBrlnSOUfdeIU3JX+ZX444oBP6Pg2h2GGlnfy9GPSbi18d
zCF2NMeYaWmeVElmgwJJM5G4ZAFxEn4HPy2k35dDgZAcoaeCTvB2FnfMCQmn
FFlOWXe9NFmhpQIrJLAXmamBIMe5o1eumte5nBuuel5Br3E9qZY++VwPGXdt
VD04PI+XU70yQdossKQKPgYF1A/nNFafLWhMX2SpemMa6ehbwCXXV4ZKeB17
7dIyK1KslUHa05RH7vf1VPvrqU9rofJMTF3VJ1TqHhZuwTLsmttbsWABt2hb
w4rFBcMwwaC89otiyYW+W+xRjK20WnqRnGiCtTdcQhnJJRTA9Hypr5CSIJ6j
jn2HqnulpedLwpZrNM1Ik5WugLr+CigxSe1jpEp2tPU4hHWIwyIk7E05kcPx
jzupfSDCDadgEbYsuO2+CE/oJx4JOYGuCpYZQfZw9B4xdkjS62bVNDdVagpx
YyhEbzD1ol449UKzGBZxmEUSuD+Lhyj0v+xMNBrl6kKKj02u/GEb7qBAwtNj
k0Z8fV2/RN0vLWyCDoq6Vc24n/cf63PVV8sbqPOLGnB242yMIAGb3E+C5ASx
ydHB6epg/zRg2+GKaZJ/XqfJW9h6atr3s4uUUpJj7zOLsUxaREooyTa/gv1c
QCgglkVEMGu7otyaIiWVbMmRdpHMldkjAKC+lX43OsU/C3mS3k9gGWuaJOYX
bSaXSucXMhwdsTgDBma5NjHYTg0mZuF1OfblwR8rO0u+A1tNDb0SUY0YhN4W
c4jWJoZHtnRPVvM7NVNjr25pcyAH+qZwIhR5kP39ctXOG/PVsm4V0qvZRvW7
slL1b1+ppnaOqhldomro1ZVqeAcyXNdUqlHX0tu4rlIdHBxRR4a2kryoKbHu
kLSI3/CoI3px1t2+/Oj9cUzPaT3CoebifFL/dAn3FGPn7pq9pEne4GSpI7VX
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
yERZZKJ+kVmKpci7Aam70Lab3lBAv3NZbAxrg9gIS3M8lgSx4SQ4z1/3FtFM
wXGHnRmReXtxs9Oe7Wi4CfocnDoH57S0XOfJld3OIamYsvf/0KhUQ7JYRCLM
tGI+k6KFBEOyPx8hGXE4WDIQlMbWlYN5wrTSRIS0gTdmhZu9coKUz90WnxLJ
3XrVypSlsi4pt2xoY4kVYnLsQi9uHRKNnMIKmvuSk1BAAL4yKh7V1Zdzwyt6
Lyl/gtZnyzSE6Xh4THuWiIfo8cTN3C05jGLPdINoZ/4RGvcsxp6EDxdhn8KH
9Dc9w3k6h98xPof3Le9bzv/zcQW2SNIZfjveQP/wr0VoC1ygfjOxRO3hqoRS
jAI13iCNT2tpfG9RvpiqMKwTmzwhcUzyKjPJIuFGpfWQIzthFp5kz94Gi46E
klOsg2MsuFue2PSuCJvkTMPVZDrDHLiN2/UGIzYIWB2b1hkCI4YE77krj6Xm
zDpyZMecC6mB0Ch1D7/nbogW2Z1COXmXHGeqSlnErN9T00r7Ozk+4+PByfFv
HClix21hG135wC9BldfEuvnZl38H1Dn48xyc1xI0UF7zJb6ZZGa2N8hzkByG
PSw5RmqM5OxnKTmgZUVI7aF8KzfGa7FUrCZX8oGJtnLfq11OaGq755n6aJfP
gGT5OlWZvTiomQ4ofbNSdx5AI7hlkI36JemhLPVJRToAzIAGZj+io3ZOnvrV
rSVqJzrh6G7iy/rI4z0j26n35jfjzuL/QHfxuU3VO3ObRlTdHFTdeWtOU/U2
HfgrjBcIFH/Xbz05roQLeqLF6nsLUBEOMvXugmZh/Bkq4ev+aXKBupvesJQ+
bwy9GY876HucnlCinp9SoJ6i7zWWZIi/awWq8uL7p6t/L01nU0VGS/2H5P0z
0gef30E6gcQJIvXVStET0BdvEefj3N8qPV4mgrBeL45ANwWYIZPRAWZjtifa
xR1L3qJupMCLE6T6zZAjSLA9wD0L03GxMLA+B1qpYzM681F/sBVB5R5A5x5A
h+3QPTBBeBekDO9igSKT5AYRWJB0AA3BAmEuAYECLURStjCrgRC9XcEmaAAk
gJMyRGzg8pwD30eLzfUB7o3OmBbDMybVrEzstQGrffksLsy8Ytq+1O8s4ACK
Zl0RL/wV9dyWPYnpPE3tDg12U8Z5xWw56mPWfzc4ZKuK41ZrMkJ5tls3Ok7B
jjw6VmzFqzMKIC0kK2wcWL9/QAAGiP8yI1c9MbaEcQo8oH/pluvL1GNjStQz
txWot2c3CavaWejQvbBXuRrZras6NLSd+uuMJur16U3UX6Y3iajXpqGr/ctT
m6hX6XhlKkp9vkrnsvAK3qKeuz1XnRhdzP/OLRqvK1Mb6ViIfnL0ieb8Ivr7
6LB2/MkkfEYUw6puLspp/WM+vnAeC/NzJGjvL6QbgbHCTS0m8keSRFrIlaNP
SYY+u8O4U3GWo7+R78TNLlZnmlidiVBXs+zoxUiMuQnzuLETDil6lfdNNshO
zrbZZfa+OMEDwyt8wpNnhQcBNBiRY9M7qzNrxfJM6k98YUcxxITcQ3Uvft0D
BN2bR75O/SHyb24h+7SsA0575ui4xBMgORxPuLPIBhHqd7QUMpcYZiMTZO9k
W0PJqezNpkdzsqjP1zHCpKVnUICTo6VHYmfoNudQMvZZDuYHUjIJiBnTIinO
zfR6tRveaumjXpxRigoGGx2fpEp3802yrjosytfQqmJRwqBW5C5xd1E6amfn
qTuuLWdFfXp8iXp9Zq76JWn/bYPKVEXvcoYqwTcMMQihOjqhfBrQn6ZenpKm
XqLjxcnocJ+mXqDjdxNy1M5B7dSwS7qqP05Mi6jnbksLZas/3ZaGP9Wvx+ao
R0a1UoeHFKtV15apm3RFwqEXd1Uzryznc5V9y+QSl3ZVu+jxxSlN1J/xEZNF
4KIscKUkHU1ZNv9Kj2/NJgEiIXppei5/63/Ma8YS9C4d75HkeNKTzqYIZujj
JWKKrPgsY/FR76Pngg43fLy0uXphuhf69tValoUbMT1OJoBD3/wSk+VJTJC0
JJgZSEr9XvFqICX46LrtxRCSCISErnmfiEsEz2hYTt3RkWUJEkOyI2Yn1kBg
iLNhDXVqp1CGLPEcDA4Y2I1TNtLmCczbS9jECPNK8gXP6McE2LSo3Bjg4eg8
QUibqrw+zuwriYVDlkz0KmHIcK+69cV244rY7hKtezwh4X2rTskV5l5T2ks1
UOJcaKvGq3S8biHBrG+1dMCGIPwEtxmiARsCnvXBQuFNIEWknUnz56pHxxSr
g0PaqZGXwhWRZOV1/crU46NbqecJ7mH1zPhUkpWnx6Wqp8enql/fksLHr8ig
Pj4yRZ2+OUUdHNRSbRtQrPYNKlbr+7VTU67oIm5HEzWEZGFqD8HadT/vqgZd
RLdyeRdVcXWZ2nV9MV8Gl3hqDC6dGlH/NzY11IE+PUdt6t+O/33LwHbq9xPS
1LO3pqk/TETrX3q8TZ4/P0kkFeL0EonWq9pu/W1mU7WYRGcLCX7d3GbqHS1C
/4QYLdBitEjE6ENHjOrm56vf3lbCntIE3W/hVhKfgzoSjqACx0dCRW4wQViw
ZW42eMDyoxtU+qIGjVsYkRs49cYeQG7g30BmyH7gO2ihAajuz8czc0RwAovt
RwvUqeUd+fDekgdpMrYnJJwvm8UJ8nlsWicIk0mNYebmEycSJUQ5ZJdclk+c
6qvSa6f+IqyNScz1dexzLUSDA5ycFNfeoEqkiI+2LcZj0RnYEZsBId4/p1HO
7mDYMG/B5U0xixw2ptM0IDnavIQkzNXWMrDDun31X2a1Js9d2lazh7KQ3QYr
OW/OFM50/4hitZakZd7V5az+K0nlbye8wiw8O0EkZn2/UrXu2lJ1a/cujCeI
wJweHdXKa0rVzv5k4/sUqWmXd1RjL+1Se/7554fCNd26dQvFaudcd8XpqYP7
V5wYVV5RPzte8ensOL32+u3JoeSaZ8a2qJl5zQWnL7zwwtNjup+vbr6ERKpn
qZp5WanadG3LsNrZD00p7roxWR2n44GhKereIcnq4eHJLLQP3JSt1vQp5a+y
gcTsNEmflkD1m7Gp6rck7P9HxzMidmHIGtG4F24n40VSdt8IYYQnRpeoN2Y1
JbPbFFIWJo+rWeh/WMjgOi27VjccIWu8a3CZ+vXEEhaydxbkq1X9y9VrNMiI
kMNN+nqlGPfvXGpnBMwNNYh9klaangvkN0ZnoW2It1n3BIs4x7UtuTsflM0I
1n1A3P0MvgfyRXLuZ+rzAM7V7aY3jiMGt6KjPucI4L15nq2Ks62C0HKAe0uR
TTc4tQghQhKxUBqvECGnwGbUJMQWIFgnJ6VWQDZuaEjkbLQ6FBri94A4UJfi
Bg6winNAr+InBACinO+d5mQW5kiRmpkd/AEyk+IhDutaVoNrhJrByYXh4aAX
nBaJaJEqzrVO/HFyEZ4nlwIeCEgXgFTVTzYT3viLrmoaWYrNA0rVxn6ltb8e
k336pUm5NZ8vTKlQlSkj1Y74SLU13k09SseJeLH6JB64J1afKx43bly3oUOH
VvTo0SMUhUhFIC1kkiZ266hGXtxF9b6gqxpIAgC5vPWyLmriZd7jbZeXq8lX
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
wS+8OZU9kheM7p4j5u9jrbd5KKqdodjV0OTZ6CTWKEDJVmtKRkSBJj+Guw8D
FujKQkCB6NTfl187tZ/ceruGt97AfIlpD83w6xGWq/8NuHUp8lJcseSacjXr
siIOKGGVqPKaYnX/TanqcULBr8dJVB+WHy4wgkUfa4UrCMhMuO1cn2zU7y9Q
x2Z1FrqE5ZjHPFPEM8/8iCeeReKUFg0tHh07doQe1W3LrSI9m/URgxyaGaAk
zgsYANnsXVCsquOnh11crnpdIH7PymuK1LHBxCtHpqrTt0iIxthtUHUsdYH2
sMWp1gMw1BEB4o1sp/t1VWfWlybCP2zvGhPeMoy7xnr7g81rd05L4fst8t9v
olI09yuWIDTLf78s+l6HeNklVTTy+dExdfNFpUz2EDO8pRtNNanBw0Na8QLO
c5oxs6AvlOjGN6sk/ockcl6Yukbb0o1FovqMV+fa0cec6T3ZkoXb3uMJusfp
qXyPrf2IDnQYRFGF5njCbCfvXHuD/Z1p3Nw7piZeUsqRt7k9StXNl3axbi7c
2xHdPNd2Zb9yTkFFLRLuJYop3K2Nn9HtZonxPn2Dj2r86smD2iLM4r6mDuA0
mZaN6yi+LQFeaK6HScspy+1tyQ6DlhVLLjpHreyRxJ58FSlpMEtErH45JlU9
fass9oMP/XOBcCEsuvLmfINKo432aXt+XJurBz2FTLcktxNRz+/g0AQrnXwP
WEGhUptaIxALzfPebglMF3s/sjJS0O3ENRE1sEs643BVrxbkJBNT1uoGRgc4
hKQhWeEjup8vcT/E67Dfx96PmaJjmsclGhjC48nVGVhYzfVE6WyKE6/JtwvN
94sS32FnOee7Y3l7S4zS6czMTNWlSxfWn3vJgzo+WILwuJk/kO58ebp4TFAb
MBe+m9ntWMy7/Bzi+TuzoP4B96yz6wNX/0kafWghjzle6BTw1SWTOB+XVW3b
tlUTfxpVm3rH1ZEbUtQDw4Ar4dqvTJOvDY6NHCVQIVTgafC175bxrxyeXGOA
wyVifoDRSR5PaJEnBNZQdwz42nJv2fjavCzWv0NYzbk4xrH1xwg6v50gShrq
6wOtoHmktRjU35mlTs5qQhqBs6Ehqqbv4w/SK1m7Dy2Wt/sIuriM/hVUyQJI
x0fYr3t50Tlq5i+ial2vJLWtX5I6MCiuTt6SqnYNSFKVV8dU69atVX4+zwqP
oOxObZzqyNIEf0aiuQta6ZckluSR+l/MgUkbqUcEH53W8JMbMA2JRIaWep9i
+WZpwCeLQ/2DzqOEMELL5Ao+6tY24KoTvKs2JhTiVoXuCJi8oNyZsf7bDzRL
Qi5DywMGvkTO+ZaGRjc+l/x/s+WSKwNGtCjgksO9j25UM4tKDq0KGNLCgMsO
+eGJwmsis6FK/5DyVXSqmy8ePejHTZSgKbQ6YFQLAq4qm1cb1zEr5K1r/Jfk
kW0VcMm+/lHloQrSB3LjobUBo9rcu4S16b1/xPyvk0uuCxjS/IBL9mx4yQZC
ulEuWR0wnnkBl3TWIhoT0s1y1fUBQ5obcNVuP27ut8tVN3ojaoletjckCcH4
xoV0t1xyk/x7QCli/yUv/BGTtE8uead/kvilzIBLnt/4JXmSDsklN/uH01nt
9F/yvB8x78fkklvxi1lAujcEdlTLf9y83C3X2hYwiE0DrlrGn9m4TN4vl9we
MIhNAi7Z3huZRmXyhFx2h38gvU23zEHb/ohJfkwutEsu1HBLIl+o6EfMw0m5
kODQryWS7YVaefPQmNSdlmvtCRi0uL1W/o+b09/ItWoCRiqoJGyWM6dnE7an
5ZL7AsYsGnDJdP+cnjUF41m57P6AEYwEXDaAuTSQt+flkgf8A8l3F/a+vf0G
8R8xzy/KJQ/y7yTfeNKPeR79cZPzilxM1EJTV72aC/3QGmbodbmEjEkcp80o
NHjrm/LW0Dn/H+lLb3o=\
\>"],ExpressionUUID->"4d608a7e-ff00-4d51-a95b-34c7cabbff63"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"##", ",", " ", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"#1", "*", "#2"}], "]"}], "+", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".2"}], ",", ".2"}], "}"}], "]"}]}]}], "}"}], "&"}], "@@@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "2"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.72579498176187*^9, 3.7257950888248143`*^9}, 
   3.725796474895007*^9},ExpressionUUID->"ea363ff7-21db-4cb9-9996-\
2522d9d76b27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", "points", "]"}]], "Input",
 CellChangeTimes->{{3.725795091536866*^9, 
  3.7257951034039803`*^9}},ExpressionUUID->"7c8f21e1-d469-4d3f-864b-\
cc47f222cd48"],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.3315753, 0.4561011, 0.6388182], Point3DBox[CompressedData["
1:eJwUmnk4lG8bhkdkr1QqiZIU/SiKolL3KEmRhEJUQlGpFElRTaJUQiVJKiQp
REIquiVrluz7MhhjzMLMGIz9e7/jmL9mebfnua/rPI9jVjtfsjo9h0QiMURJ
JOJFCvGNmsj/NAY0TluFQtgMWBQlD8Q8YaHK8sSPjYdawOOl0h6vWC76xw1v
WdPGA3Ju26aWZj7Iuz9O1Fkwg2OPpYJJSTSkkEzjrh/LAyWzozvf1Uwj/4G+
WpXdIJCbTaNFxTrBPe/WKyUfNjDEqzAnngekpI31Yqk5YN4xsPFI1wi+H1yi
/imVCdzSBQ8UNndh1IFv/AMkOniPam12VOADpXeDV6f6ODK8Xq8KshyDil14
uXd5LxqOyXPS6dMwtUrGz6p+GlVO60d7GzOQ+rUs/5NvCabvpJyXqq/DeS8m
1FUzB8Fp17VXKtNNkKAVtrHUaAwtVd7rWKzoA8HazLgEm3GwlJLW275SiOeY
6xm/fvaiTkfWi3EdGjBWLfprupGDC8VVVjHoHHD/etj/+eV+pBQNatr+7kE9
hzFZ8sF+yJebGjGXYUJuxKnUROEIHvrUXqCxngp2c4KK/qzjY76rTegTlSz4
8NUq6ZkXB3Kc6pOr8nmQfkQ8cpNWG3QuSkmu/o8L5P21m99/oALp706Jq/n1
8NnivFzgXj4kqYh3SSrRQCH5o112SR/sv/fyeDfxe51q3WKDdVxITxbdLt5H
gyvdUSEfXrOgwqnKMXj9MIRL7TU3y5+CU7MmibIPqKjiJ1WmNm8EqEv3XbE2
+4Mmyz1kT3ZxgXu6uPDThjrwP5/Ut6yMiwyOSKzuAA+iGk6/v/i6BxytnBLL
ZIfx9FaKQfdNDsg9ItdN32aj3KRthFmzEL6ZFAe5wz8ILztd/2xdPTCS5xnQ
vNno8Pd0zh/iesijKwvlGn5CbKTBvsMCHhZH/hJJ8eNB7NXrkdxj5SDvP3z1
zQgX4/dZnvzG50HOqrg9Om1C8NWSHVebGQH67f/8xET70F3nhOGdZVQspE/2
3bzDQ8Ugyc9DbUwwNTG3V8xlglPLq5n+rRPY/j5PxEK+GnL0r7T8F9yHchdr
l6pO07Duj5Vx1TMGFA5MmD8PmAVHrarhwMop4N+NqPveyEVKINdcUb4MQ4Is
F7SV8eDYJwW20lU2lN5V+rA9bBJI8Ofn3/oCpBjPDTn+gg9a/96xb6dNg0KO
stvZ21NoPOHTedyXjflNAbp3ilqQmtD69V/aCATUOrycuEAHjZsFf7LIE0BO
irG7d24Eoseu1zGvdyH3uG314H0uhhtvefnqfSPq5MU+1jtK7Ie39Sc1svOQ
XH60qOtmNaz6rrrMaQcXFCQGPIOY3VB/Y/2+ybezWHaOc5Of2AGxxwrVEwp6
IN9bljxNygGtx/dXFTYRx8mSPShW1wRORv34XCIf/V+yhracHoTqD5c8jloK
0Elu3xYvl348WeM1vdOHDmRapTp/x3f0XJtvo/epB/SO/34Reo0JlpNpB6yS
etD7UPze7SeGMdlLyarqCh0sXynnMk81YmnLDzvgjsLtlQszdrxjA6X+0UTt
lzF0P7Pc1jmSBgcvKDgoNLZD8PHFZWd3jaHGpdpLoutmQOLWnJ3OB3moksWw
PaxOBbkH2yizyrMQKBHm08bvAVrpO7VEWyE2z3wpPfmehjd/x9DqXdqApCpV
K7qsBCwHRZyHLXshP61GqNfMBWOuUwTz3BhS9USDQ8RL8MZ/nxWvvORC/oY5
3zcszoXm+GBDDBrG7ELOwhEin/Jf1y+YP1qNTkzZb9/r2+HkHjubM8NEXpW+
GJWJ5mE6e1Yq8A4NLZb9LXorMgj5O9k3TsgUIyXCNjHmRhG4H5oNS/zDB8s2
5qr+PU2YctfD8MErIei5aL5j17PBXdJYtOVXD1I95bLHN/7F5y1rFm5PZ4Lv
cucaz1gB5tuWJfcs70ZB5NIlBxZyoP3XIu/dhkJQufup27l2EIcqWa7bFCrB
SXBv1lNuCkixVdsU9sWB15OwudqDg2BJcw27Li5AHbZnwfIHNMzbZfVm3rdu
cFqi+FB1YRdqFPTVrVrDhEtT5CM/uEOQ3/DNcP8tRNL6wMt9KwcwrbD7Hxoy
gXyu2qrEJhtUuF3l3nECMEi7srpmM5EPp0ILtCfbkNZLK1pJn8HlW77ITZn1
g5NIv2zbolGgDIbVq+pm4KuCisKBaS5Qj5/4L6OCjSS31FN8agYsO/rx+6yQ
DXJNMvV12jRgP5X/eNliBEIj1Hc23esHitFZ0YS53RAu03+dfoCOrOV3thtN
E73RbzPHd/Mo2PQn/z33mcj7hOqdp0wH0FF8XkLz1mlQaYgoMstrhbnjlIb0
ShqQHzz5vGdgBuS+sH+8WT4G/uWbTrCecpH87N49xu4mVIniHncqZKH0Zocf
+1ZzISpGGBvSRkfZ2aULxIOn8PvXe4dXhbaDWtaY9/a34+Bp+/qmNV+AFVWn
hRs2NqDljVonsUYeUKU1RU611OOBgxs1rO8OgfGSJyKypFkQaATR1j/iYfCb
hIXxknSkFH+y383thajEm0OexUygH/sYY/SYC2rH4+l53mOgd2968ZrqMfwX
QZvuo1FROMhYJlwpQPLihKgUcjdufXLySqQ/A2S3qTt6Js6g3MEVj0cDGaCy
WnR9xsAvUEpVdcvVGAbvW1pYIj6NcnqmWW+sWjF4YbOIpvMQei/Q5xyrn8Fj
X0LclaPqMTzQRk2stQszN3T1rp8nhMRP7f88DPrAdDZZJw04qFHpXtFMncBj
5zoGAweKgXxw2Z11NsPE+v+4JDrFwPlvU0WSfvRBbNaNsGy7SlC5ouxJWTwK
xlN2KdKiLPAMHv0wT68L00PkLLmhAzh8HGKP/uGA07I/h+Xya8FuRdf8V2MC
SGd2aY2L80ClJ0a/zJMPpM8m+38/TMLR4dmyYjMu5G7WLMl3H0XS68yP7HU5
cGynvgVlagBiQ2XNrNpZaKkb2DolPQrXqryud7bXQITs5tO3GVPImHwfulkw
im4nv74pbh5Clezz6mdlWtGmLMVC100IXWHLa/+dpoOOtz5j8dV6VOBnyk3/
GAGxR3HiMo/ZIFQTBP3V42KsqZV8qPcsNnyIKzo71Y5Jcc87ZK7SUceGdGVt
0jAUqGplN85lQP7epQxdm2kUfveTVvtFg6wvOzVru1vB8SWVE/1hBiK8B6L3
fBzG7eb0mAutA+gEi8PCopuxQvSGz9yno3BiG6M7Up/gExm7DZek/6I7TXHv
D5FB1Dm9ynrVHR5Qtp2qKvrWiIWyR1fscxsBo6Hrwlo5DpBm92RK6g+D62Ot
r8sejKLTE5Fe7plTqNI09lpk9jcInha3mZ0fxoOHSoJiwznAvXqvpfo1BzOL
rjR8L5/FTycuev0sbUG7+KG2EgMuMUfyYkm7KvCM1ahP1XseJOzu+UWLHwYD
T7VvNxqFeFyqQU2tphpJUZ8d11ZdBZKuu9p/1+LB16Ft8ysGF5I0PkWfrh8G
9w+iDtJzezE6s7zBisEClWpP1et3RyBENkCifsUsROW8a2IP9mP7kNE6128j
kBOjKHmtgQMm0geLH5nXgDBz1/bpwgl0VH9f9Jq4302nd74I4Q2gXN6jTtrV
SXDPB+P9lVTUku18btTWBeZjX3aGVk6DuaPEfnmjUbQKKj61q28AzUUOa0i/
GkP2jF+iyJwxfGN3NPHQzz5Mme8vumvTKAa/YFpYLOTgUeXNHhvoLRCerBFT
as1DHVvZJ2uD66HCYeTjvY9ciP3Q0PDgv3EgTXAuPI/vR7yjZfFCuRUMlZXs
vG6NQ06L+q0v8ZMgeTMypXAZF6mz8aaLhiswJG3zm21XpqApZNnpGAUO0BT0
GWG6fPC8tft8seMUlB61iIlP6Ub2QXq6+LdZ5Ip/353j3IDSC9ektWxjADcm
On6NazUYK6i0OhPzq3jd7IDKBBMMKF6FYw9GodrFQZUsOw7lQVNW88JoaBoj
vzD1yiRQD8434Pg04++35FUyEn1gKdA9a75yFhnVemt3L+6H6y3+c23mlYLK
idz61q7fRN/0R3g8nMS6C+PPHS8MgoYpqZa9mAfeb2W4J1On0WS4Tn7xuS4M
9P0iuc1tGMkqirsNXHmgJzesL6lVBtRDq1+7rGUj+c2xESXeCGR1nJP18iOu
e0dodNow0VOkUx+FsbOwKtGjUJ7KxeqjW6/OGx9CkiD7otKCdPy8VZTWqE70
r/6LR4HnK4Fy/+YrRctkrKYG6u1U5wKJkhOpRxXgVEzVZy9tIdD3/XJY4VeH
SXrjl3xEheC+NvDgLsk+NPy19ClGtEHMqfdlDb5jGAG5H5LXC+Btv//Vth81
mH9y+tMZ53JkVEg75uym4XdN20ONb1mQ8ujJ+syFAjTvOqNGa59FuZgXO3KN
mUjewVm+p6AAg/8uN4hdPAFjy0/2FLwlevzzD+lbnjQIUX9fWV02Atdupf5s
7u0BrrRu1hWTetAYXG1WWCjA+q2PBQ5PGGBz5YC7NsFx5raHlI/85UNx5TLb
VaONQJkf0A9NH8FUu2F0rGsWVna4xF2i88A9fGzDJLsf0wOsVz6NaoCBntqr
9qNsCB+vZZ67NgF283Q1nbfQMUH6cc/eFipQy9LvdAsJDlmvfP66bCl8Lp9W
/LWXDeaWLs0Nt4cxqbmfIwjhwIPPDgkfSloh1uLWn9THlVA4x3WhvvkUZFz8
xD66lQmey51EdvXzMHzARHlvdC+KeGmuf7OeAcIKDfY9qX4UHmxKqpXlQOS+
pTttawZAh/VSb754P3oW2IklfaFicXnxj6bnXLB84li2VrMeCusLjy+jTMFs
YKaP4ZYBoKy990e3Kg6CXRYpzxufgEVFDzdVhPMh3P1oXcbvASDrSmz/qDAG
8Uuo8sPbOiHT6GNDxbYp0FGpPxzQ2YvFV+cHOt7ohfCAO1qXLreA79LQR+OH
h2Be17N9K+lMSIGR41eLJ1BF1P2G4EUjBuTN9zVfwYX6TrVkA5VJUJO/9nDg
7CRYbze9UVIwiOFigeY72luRy7kY7WczChePGMxz+UoDD1rFN13VEbT89/fh
g/QG3LzT5l7RPzpUX3+wuZvXj0571W865xVCTt3XlkV6LDC1u/nW/swwip0I
Xn/jsxAtzriTck4UomG0LcXFh4sk2d9/D9TFoppCiNrxPTwIF5Uf/savAQVl
joe25AD0FY1Mwj0+yJ2qNCtvJjgoN3v4i3Q5yn1dGETy5oOT8YlTW9MEIP/7
dzp7LQ+zNzakvyfXQJKs67v793pA7QHP7UkhH3L+SMgPmvWB06SinePuOiSl
ryTZdTTgblWpqqzrRL8OG6ztqw2H+oBT7RoVAqgf9HWp/cQC9h83t4nGSUg6
9ubrCk0eNl/USJ0zXoGZXxc7cjIEKKhvFPxcOIPu9qZ/2ivZWJ3pLdMVR3Bp
svEfy4W18NDfZql9IAskPa4tXNtGh6h9auH7Jxiw8m8We1cCC4Qt2zfQSCNI
0gshTZRNo8iVKKtH+3tRuCZGNuopE5M+Hz5lOj0FoftffJKR+grk2F83t/ws
Rtdd4/0S2ydAML3i4uabPCC/qC/WbU9HtfdXnoie54P9ivSDvgEcgt8qN3sX
cMA/Qfp9HuG1d9MvjIyOdwClcEFlYe97JPtdGoi9VY2525V2S9kTPJktmD5S
RHCjkUXv2PlCfOeUdamuiwEUDLCdHviJU3ua2jpuCSFAYYOhjgQLLF1V1rnH
DINn18YzrD7CP1i/2PtOtaGhxK2LD0Z4aOeX91y0aBadFK8GCvhtGHPc+23t
5nFs3/GxKtObj7a/xZcOdzZheuCRLfJ2YxiuKjJ3zmIuZhvPVQwLf4+UG31R
xpFlYFyp1ZS0mAvvvF8qFbnzQeX40TIXXheG7ORqZ5sIIVTG8u22DSzQCTeS
umPNR98FM4rLvftwTe7IeeXkHnC6IeX2+kAB6tDIMx+HakDcvG4j6y8PSu1X
j35Sn8DCJWM9C235kLmxVKIm8gfqTZMz9E0mkSvXmaJwbQaDKus09YIHCL51
ZevMtiP3WY6C250+UDVZ+lQkiE2s69ktga8Jjkssrv/m3ofl31YnSvYNAiXw
N/Olbj2E8DfeuG0whrXh/+nLeBDvaycdvtqahTon74rd/NABxdrXWcrz+RBS
Ivmywn8ETedqFqnZCWHjgW2kUlYPkurXJ4nOrQGVhN237kTS4W7PEWd1XTYY
ush5q7fxkdyCkVZdpWhyImt0/TYmaKTPd+AtmoD0DGa96PJ6PPilZB+plgmM
wyofgit60ODhJnexARZ6TDzQzbTmgscCveqTgnFMn/cxuOQ7Ey1PaDlkF0aA
imSf9kAIE33FE332exF+ms47tvPvEJA2tE/Z7PsKWlJP1ux4Ogtbbb4Ft4Uy
gXS+90G4IxVz4gIW0h24KLjcX3MzjPDKEwseOuiVo6do+oG1RjxMo3f9XbJ4
EGjFmiv0qDykXI4NvLSPBU3il8cP9VPBPape2LeVA7Fe9rHfblTgaLnNxvnh
PMLrs251GdLBN9TRUm89MY/+muZbrbtBuOdZzr1dQyD5dJtrV1AvmufRzabX
DIHwrH1aagYfxVJ86u4+mQYJj4P567ndWHFw1DqJOgEqU+yv8f9Nws2apnZW
7RDK3rX/3fpwHFUOz492zGjFL/Wef3Ys6wP/Odb/fAMmsFR83zNpmUHYbdcS
8OxvOnBD1sUoE3yeL838eEm0CE91zESZEr4TK7HKX+rnAJoOSD+M8uiHz1tl
Q2vVuMCo/GQgfob4XPSv2e6Uang4cPmi6XNiPzPJ5KwlZVAatEF2toIFGj+1
t1ldYEKhvIGiufIkhjikiTRrDKPckWtbD8t2oGl77K6wSQEK7S9Eq5iPo9Ww
Vk/MxV5Uyx7MVk2bQssigwaX491o8XiOdyaTDvIOW2rDt0wDg6ORtPYqC0o6
OnxDySVArlf00JRtRorwu0nEqgnY/ro25k0ODTzftulM6XRg1NjcBrcbQjjx
jOjS8h6Q4x7vzDbvw/QYtXNeyjSg5GhmPfwxBOz804JvDpNgMJHy+HQpC2/v
Pu3VbvgF5F7aG2v/qwXGInrutG4P1uYdbS3w5QEpY9W0yC5EOcXp38EbGjB6
1d2w0hoOCK3+89FXpyJlxon3gfMBVRQHlkv0E36tverxRvUa4L4yK9npUotJ
ty1sU2SGwDwp/cnB9yNol2qdwd4nxLXaqv3zrtZhOGXWka7dhOS0k0EFBVzc
vmoVWzRxCLwZHy+cOSXAYPFGUV7TLG5qDm6uDmUhpWHYWDXlKya1MpiGd/rB
QtZvWcZnNqiMHp6cP8qF9oxdzaftRjFQKiZTBKogaipl6fGbVDCM2By91nMc
W+j6zh+f90H4q8iz9NhmJO/ysJwuqgM5oxyzwRwupD+XP9zp0gj5wWsoErV9
ONPoXnd5DRc8F8oPVk4NA9n0bO/zIS7KT/a45ER+BFlvyr5XisMQXFVzL29L
L5Zuf7snXYENdoq2t40EgxC7sD1fs7Ufg03+1ut9IvbJ81LJvkdj4JFQcvsl
fRqW6OfGLfrMwdKjb6r9r/Axvc9uVesaPm5PsRBTJv0BxpSE91w+E6jqCylf
X9dCysexF6V/iJyvmRZ3I3xBaYXXw6Dbo9CuGVA7fpSJOsmwPvTzBHhWtu80
7e1DDxn5KSGnHsSUlTq+qk8Q/G9zSPtKIt5b/6Sb58WHaiWtLoc/XZiye7Oj
/rVZ0GfafzvjS3j00+OL6b/GgDy43mTR61rU+/19YmX9IMF1I+53No+ApIx8
ebI+C1OD5fRcHteByvevg1fXE1xweJDl4tyMS+S2kR+aEDzk90N5deM/YJeq
XWeVD6NDZ/TBOeVccLqTZOmwrxN05rq2/ThUjSLp5usq/rCAdNLw6K41dIjd
mPnkdVEj+BYvAf+zPKiOdnoUemwKqenrE6nTjZjYZL1+uo0GvpT85WeqWVg9
f49L7NUe+OFWcXb8/5zWrdfwcu0XDJf6qi24SMOSyFXsVQlc0NnIuHQ1pg1M
aSTvZOTijtqn5/Oe0KEQdktIlk6hzvtG5/A1TJizpmnnj6YqIJ/z/G+3GeGL
e5ZuTS7rAhmxaCX93gEIKU24XBNIzMe88YOhx6rRNHSmPPEp4TUkaseDOMJD
i6qzVlhWoqRvyQPSHi6YXirTo7xkQ/DwN5Wl4TRsTxEX9erpA8qBNbLqtEmY
KlS7La/OAw0VsmJBcyXKnVs8k9w1ip6ybuma0ANnuDoi76ZpoKL9Z75m+DgU
ZrZtTwibxAelJ5gXTBhIMZtYmpr1EeQCBdcTTgpwi5+ZnJ8iGzQamnJJsjPo
+pPn7DM0Cw+CI8jxqlwsVZN5vOoeFcyXGRu/UBLC5l71akE+HUj5r+QUi5go
p3Ex0DeVBUMtlZ0tG9mEH21130MTosHLVv7Zm1xkm9x2iHufAeFnK9Q0ZHvR
V7VRWkCehJ2f9mnSv3WD/+nImwYnZlBevnnv7csC0KZnfZcNZGHUcdWFi3h0
ogdP6VLVhsAuL9Hx0RcOTDEe28US+T+lTgn56D6Ops7xx+5c+4WUjnq9pRXf
IXyUJ2MbQcO7XZtSXwywIeG+vH7YViFY7lvSP0eEjYeW+RzPES0DUu4NPa7s
G4y6pmx/MLEf1iA5brqTDfU5Z8oOThDexpGR0bw3grvccv03/a6GcObrkZuK
3aDx2O+M9eQQdqb+Dgiy44LSrZER5oFxlJtZe/jXi07I+KS95OfBPrDbs+V8
3c5xtMzJXtOpQMOMTXOv6dfTodT7hZvYV2I+9mRbPWSzMKNUMllnFTHvfYZD
524S+fBs18WNvGFwf9l0ICMkE3VOt1FtAloh/cmBH2G7u9HG6VWx5Q7ivmzK
+/fQx0HH942JyMFx7H7/oVYlmoUM5WOJh+5MoO+Hc9fm6s1ie5kohCkQfmeT
aLLlaBmSwpnfZndPQZfgnXvrWw4YiK9XixBlYOYE/5xd4jieIX3M5hTVAimr
ItyRlwZicx/gUSc+Vl3kZRbm8CBdUVUjbHUz5Ee8mf/JNRNz7wQqRRPrn6T9
w02ueQhd75rPyRqYgUMxKfy8I+1Ic+Q0jPiMoopR7WjD/FpI6uxXf6xBeK7t
3McJf2uR+1NJJdy4F3xujGoOZzJhSpm0Xdx2GvOXaHvO+0jHmb7oX9Jp9VCq
vf/t+bERlEuYA8euz6B6cd/+n+79WN1xYOpudDc2Zyr903AewLtXyRd+ibGA
nGkzZ5HjMKQX/vrJ/9iEH9qTx+TiOND+79TO3ZNcjJ3YFv3OmgMb9rwske/v
hWo3sY++0hOgtS47IsxuGj4FvK+dKuIjycCLH0dwQ4XR4If/VhG58unWWeoJ
JuQXf9wtPWcUYl2Xs2dOtePeoJ3haSUDEG5jN/NhphqV6l0eFjYI8cfZyxF2
BOeI7bhiXL9rFtzllt7aWiWAKiW5oOFYDgp/uD0YIvxa7eWxXenjs/Dw/IJf
1wwrQWgQtGhwuh8iNB/fz40ah8eHXhktNqaCx4olLqlB42CwXWDwlehBjbkh
0w9rIoES475fPo6Yd6reo4Tv0xCz6YX2sxEuBj5W9XXXFGD+5Ob1SQE85MZf
e2a7uRJIm7oapaTKsbTZpuCX9jR8/nfupZcmGzJD63gPrSch/PyRFyVZY/Br
643LRSdpSPI8O9rkew4FFLH64aQJtEtpm3X4zCR4YV1E1owAU14ef/f6/STO
s/8hnnyejrK+d9ZUBY+BsG93lsNiFqQFz/POkG8Ey5H2g7P1Q1CdUyYWf6UG
bXxY0bUbeBD7Ma2tzk2A5GaevMzOEfjdbnp/82glqrD6/9FdypDyYM+CWv8G
uMHaOo9Sw4VqkzVda/h8iLkueihRbgINXe89STnWiGTjjOZcpxpIKckcz8ic
gWZYljWRQqxXxrEuo5wWcFysdGRF3gR+U7huV6DPAF+fi4pD+/qhQmKHEp/D
hzV6QT9Z9kS+HVCxrD0RB5Lfk4OX98yCqZ/i73GdQSC/vZzyuWYWS6U+KH7c
1IOT73UmPBb2QOyC5/7HFvdAoGGUlFLWLOwdNeDuPdAJU+yl0q61hI/KlqY3
afHgxpA11Xq4ECgXjvWoqGWCQoVBaGdkH554sUDdooAHTnsL16nZMMFU4cfM
0Z29EHUruvqdKgMsX9sfltvABZqv390HvSMYtv3vD/uIv8D9kmC/pWESDUyu
n32p0g1vlK5VyJgzIFZ6u2OFbR+S3LNW/Q1lw7AvfS/JgQ3hLy5pqWt2QLqN
MKrpvxFsHpNnUs2IvrvetHVRYwt6eg8sunN4FjU6m3+RrwyA+wP5sIjaHnSl
3/ogzR/D847Wjrf/64H2/CDrsmsCkNz32mGylwvb/km5ztgWgIqIfeapCSHm
DCxy9P3HgHqpKmqOfjcE63hUPF4yBfkbk5aezm+E7+W7H+uvJo7fskJ4apbw
grO6Nf4f8/GV+bJla64NQu7xrysnroxBbODExpEtPFBx3vTTh54ApYd6rngP
s7HQZHCeXbcQt85Su+iDVRCsUubntWQG8qMPtnxrbsa/3xe5h4vTQUtzg0tU
NB/MT3SIHA4YB9dVd4Z+6lah56T/6csxHeDY0Heoy3YS7WF+l+3UAJTqB27Z
ISYA038hP6ZezABZ+uGqN4pM9E59K7yZMA5Tu6snRR0I7j8WHn71wktQsPDV
KCRy2B9fel1/P4O2r3/WGKVysH37v+7xFSMYLm/V2vuoGQeeqRqOtRI9nn/9
pdHjL1Ba7Nm/o34WK3quxDffZxNcdmXdqnmjGBHhckMyig/n1nTEl8ckIskm
4J5OSS7m1i1pMyvjIlfH2Stv/xBwLywNq1k8BpTZ8PPxfb/wpvO3fyWeXLDx
s/91kjuG9W/kj1qlCuDCnCHLUr1mtFM59djXZQDtrNa3K9hy0O6exsaYyH5w
j/5lbX5JiCpVO+18shthi9LejicXGECircHaX7GgQOnJf9ApwB7DUzz/csKH
W//uX5z+D5yMsvKsfashKTI7/qYOC0KYFj492wSQsrHcqX5yCsr2aee9Lh7A
4IjLMSltTBA8upZbZT4KzZvTLZQaqiBcvMvLQ4kLMbq/fdkxM0QeHGpu3deM
ScC83bKXgcFy0p8yNw7BK22GeCaxP9yrb7nt9B8DUqdSwO+Jv1irtmnD+bUD
0PznudT9+GEgndWl+3zohbFLV86dNxwASf0di0pjp7DQOe0Vz2oCu9LN7i/5
yMdmvPdDYy8XJBmpBp/+jhHe33h92Pw3VFTJfTzcPAn5qhfPPKR3Qmye4bMN
x3qBorYp/4QoA+RoA4URlW0wGKz8Y+8zNlimzesU0RoBsYu9Wnftp3Dl8zX9
qNeLkvYdFz4s7MXqpI5N+fMJTo2MSxnTHoBCs7JW8YAZMBgs2mQWNIR219mX
Ft+oJbzrRVTEvUm0zGXFHarjwW4Bq6y+qQR1uHz6meA+ZNw+JC8fP4zMQdF1
BuVUsKvoKoshuCM/z/VVc+MUBMtf3Go/jGjg/vjNzj0TkL9P+0yWMgv0JPYX
dDnXgsBr1qTgLPF8mvQHjS/2wDuL218H3tKAnBtgvfV3JkqWxKeciZ/Bqhvv
u6We8cDYeeOxZc/5qHKPLLPseTNQVSyvrSF4ODb0hT+lqxUU0OS7IHIKzh31
6jGpYEIUqXC3qeIgeLou9vFbVw2Plvs7rWRwQO7EgrAHUoOQxN+RV603AEsk
X55wO91DXM/BsL1PJ0Dnvnhv/EEqps57nHT0FQvS/Vjs3BomqrAXXFbW/osC
KV7D6X1cCP9tYjX/cANaqnT8nbxUB/PD1O20JIaArHT2BeVVNiq92vLjY/oM
in/dkMvgsKD68hM2ldWHgogVpm9meZi98vDtZfY94P/dk37jFReEujJGfk9p
UJEWbPO5jg46i/nOAssOzDWe0yhOFmJ22daNPlN94KTaqFhTWIKmlW28Obt5
kFtF9V00TXjfxROP1p0nvGTQPSRxoh2OHxhsoq/mAmX9b+9Co1wwvUvOv0oX
gi/Nb4PyfzzIcdT4tvbHFFTUfEsZ/j2CVK040e3/cdBzOLXXY6QbIoxd67KN
hdiqfLOsrZIO4UmeIaQIASTYH3shvoUPXA+nu/qvbiKpvPp1Kn6E9M1v1Abf
1MBPmTaNI2k88JUITJL7xod8K/bQtifDwL2hf8/wZByWgvWNltuDkH+HcXNH
VQu6R65Jq03mgbdyp/H5D1PAXmFF+5IwgRoXKHZhdTykVPv2WFx9h+b5U81B
HeNYf1jdKPQ8n+CAH7jPoQNdR3yNyFYTsCt2ufBYCuFrWiZpzhklEHNZ3qJY
wIMrU+t1w5KI/NR6VChzU4A6PIXn4bq1kG0f1HkltB/I90p2p/wrBZ2zd0zK
89vQ82AQR3oJD+rD/t5cNY8PKl3LdtAbuCj0CTKeaOmE8JX7ZJ99ngSDQuPH
uqY8fALT7dQDDUgpEmt8/TIWo/KuvwqKYsCNe/95GQ5wQa6XIbrpNsE5x2wv
5AQJUf2BxbL57jUot6lBiRbRhSrXu/+7rN2Pb2ato56K8cFg0crluyf44PGZ
pzN0fAw1vq1ThWsf0PyJyEXTyFGMspp7UjOVjX8i9++5vaENSCy/HPFdCWAZ
QnoZNjkCqnm3ygqbifP6/LdMIFINFa/zM0rYo+jVXH2o/TfBmSJneJf4UxB7
pG5PKp8Ht95cGJAr7EFL/D79waQDDfefM5MljeDC7ld//lxigNMj088ntKaw
eoWD8byMHvRMi9O0VGgCOZarbPMoDUjz1ZtSioMwdOGpWfPDhE++v+h1cycf
JQcWatQq0/HMZG5YYBoVTA++fVP9cgqjNFnJbwhuUWtPOzefRzzX1bJ39tvR
QO5PQ7trUi3KvaN6eqUSvnOhdmiOE8En8cntR+f1gmedR39wLMHDsYuGN+3u
hfB5Z6LjVLtQevpwZ64VD3T2Z5UxsjrBOEfTqUp1GMTO3bj38wwXcv1GmdVb
xsAy3jj+HLULduXUedT97AG9LZY1/FBiPmpXHS7N/QZqJlMV9KVs8PwXl86q
p4J7aKM99/YEqOqG3hovooOTu5/8iu4/QHHMPn8mlIOjq3753RkdAMZT78RN
fXxIqm5bG602izpdX7meir1IopAzj6ylontwbCCIT2LlFhGl0jGiZxftORww
kIZO/Q4KvZMs2LRv//rW+RygiGh9ejeWhO7il5rNRaZhL8WStvAzH2IFRx21
PQvBX5PmBWdHUfWSN8WR2Cca/Kzr1PoZJH1ZPGtiRvCx94Pn5VnF6OQ0Yqo3
PYAaz471D/oIMLH14CGnH91AdfMsbSrogyjHKMtQFx6W6WkG54mygNK5gcrl
5wNVylBOy74JTSSi7E0XDYNvwLf7IVQB+BYXSkX7MFDtPz1RN8JH2m+LNOgd
J/KCJev4aU0l+irGGXTe5YGp3chbI1sOkJw7xi83ZeHwkhe6KT+GgCRJ0rSP
60YuXDfl3OsGjyXx1Qt1iVzYlSiRPfQL5EY3j980F0Cz9L+JdB02kFo0ch/1
vgNzzoGwW5NCkM5w2VuyjgX+T1RSLSRHIHztYa7kTA88ktb8kxXXD1Fqek/n
/6FBftpsg4oBHTOH0+503WVAyk+qrDx/GixTdj58F9ADuaS1X4u/dgG7RrdH
mDiLBhLnrh8jjn+VMbP1a9YQKq3P409W8tF8z1dJaSMuzPjYm1lYlwLlYUGc
0moivzivveesrof4An4gK24IcjhHzpQ+FyJpQdTpF3PbgL/kzH4Oi+jjOat3
XjtbByRHx7o3+yPxT5LCPxH6IJA2H9ow8OA9Jqiqv3nKnQFNtt3vP1uIfgrP
feW6bwyp/lI3dxkx4aLqghdXxQl+2VUwebW/GyjTl5wfunKwWhUWtt9hQHVc
e2f0sUlMGviwj80dxcfxN+luVwbRQDB37KArA8xd1m7xUxuDqKmO6VoZKhiL
//CIrJpF0zNH73a8p+KB7pSgYLdeCD71U/ThfGK/i6CDtJCDM3cSfH6l9IDv
88rrZ+5RwTJUfueL7l6E7B9DC+YTcyJvvTVU4wdS/Si3130dB4VHZgklvUyQ
D+47vPLmCJISE0Tc9YrQ5FRe17njXDAw36G1Q64PTD/l64tvHsAQ9VLrCsoA
JBX951RkTAdKU3JgbmsNELTLNnozCOZqhxK33h9Hp+NvJ5X/CbDkCvVZXG4T
xlYc2kteOAoK0UZu9s5TuPHcppUGn2noeSXEesqsHbnC5rxyHxbUSRxdtiRt
CJJ477hlTlyk6lyYuPW0Fy4EF+utVGBD9Rbl6CZVFvh+SE5pI/iyQeZFd6vF
AFTvPmQ28LoWqmVC1rhd5MM/vT5Zl6whKA3UC6FpErl4zXPRPE4DPJy0rJq8
zATyHE5PmSQxd3MO+V6rDwGbfy/un+pjghP1Z4tXSgkoVT4LYmRM471djh1W
SWzIl9FzLPVvQFJAIb0x7DMop0zFx0gSXtPpciqskInuTTrtTdY8kFyn2ZFL
7gFSnE0X99gwktZ0OM0/2AX3VhiFee7vg4hHMR9OvOJi+vuCt9EiQpTlfC+8
HJQEZHOB0YcnzUgqWLBst241+mYbxzAJr9L4PP3ErnIaDbYqG9Xe4QJ/kU3d
eWsqhjgauNle50G4Q8C/0vIumDvtkrnWfAja3/0z/Ro8jdyubRGLXlGRpL1y
87u1bWAQJf2Ud3IMCtWN16z4MoFlP1WPPNFjYeBIqccDfS4Y/3PY3CoYxXwJ
Nlnqsxdmxn766aM8jc3OEc/IDjNAyX682EyVj4x4z9uXvYfB80d6X++JasiM
VKs5+oUDEZoGhYdbeEAOZbdttxBCiOXtnItx4dC8wrIskjeFBmnPDukuoUKK
5vZ4/VUMIG9N6pB5RPCR0+sfmQW1qKO4uYS7nA3+v2ufXNYdBeGMi134Ey6u
ODu3vCe4HlJy40XWEOeNGlt4haQ+C6NL5ic/HmUiiVMlYtKQQHCI2+LtiZ0Y
NqgY4iXGAYUWz7f7qnuRPNKVs6hlAAZFBhRMFnDB3eeT3I8KHkYt2C6qu20K
1rGtM0Ku9mDOypGnp4geM4ZU230PhiFRZm/0tbJ8cC8d3P7KnI20c2ZP3tWN
YZTjzdxfje0Qs5enfmcp0Ws1Lv2mzCTca7msxteIDQZHptQ1cQqD58a6kDfP
IuO56vkVFBaS3GgiMbx+qFjgtkzu/DgW+lDNdB62QeyTXJ6XNNFHZn6jp8VK
4WKayCx/OwtS5AN69A7MgsZVTqV+5BBsrRMEud2qRDnjK+G/T8xCuP3ORYei
eNikEOFIjaUhgxX8POPtGJqSJS9nyczi0Osq4ci5AUzfHZ26ZbYRzU26JRwv
zoKlTvb8pV/pYMxl6bz/ziX887eIzN5cqI2xWpZmxwZT/5ILlP/n9PUds+UP
x7FFomGH75dCoq/3lJRsG4WY+0+0X1GmUcVe0/fgBcLz5Jldt12ZUPp8p0Sy
bTd2zHH3YB/kASVP4+cNTxo0Lw1xXKrAQCbzxTejNILrjJ76G/5th4g+seRN
GnwY2WNLvU9lQs6GDz6xN4h1W3BdQfX+FOhcma1a8PIxeHz7++bD00n0bUja
+zmeDpa75kguCmsFuS2tOzbZM9HjsclrauYwSh69fryrvhsML7k3x+VMo9NM
scrK5lmYd8YoSze9D1OY1gek/UbQUPjmYtfiaRD7kmEofZ6G+WOPAvY9IHJ+
fUVNsQwffv85SrX0JvLBOTrh9Do6GvtlSByRnMZw2Z4h5VW/gVwqyfBewUe5
oCj9qSI6DlrYhoiZ9UHuE5meCdlR8Gw41SS7twVOTHX+XZnAAKVrYi5t2eNA
Eb3239jjaTh1sXu0Yh4PPbNeftFmzaCK1Id1tweb8F2MxFyn40wgvWir87g1
g2p5C1Y4nBhHurAlImXzEApdePHCf8TcrD45fqA3Fyd1ohd/usCB0mMx+UOe
dAyhOpDDF8+AXkCbitTSdogSmbM09f4Mmhqs+eoQKMCQ8fKekW4Oym+JZRV6
jkFCYoXZk+d8ohfjNALHq7AC7ZPytImezfMKku2vAaVHeR3rJAYgYWnCgZ79
XHRas2X8XU4LgsiF+nHRIRDY9/gvOjcNTuFJtgOe/RjDLSlY+7SG8Iq7TXoR
QhB6HYuXVxqFXw8LfPbsJXK+sVFvLIGP6ZntA0oq7XDvTsZif0U26AS0VX/6
1IncIae5IY31KPo4wmLjPIIf9nwzvzKvHdstVJ/uvTeCd5zb1YofDYLGkaiP
zq/H0eAnFB0bpIM5y3TU50kPNDfvHnf6NADeqZZGgXLDIIj7O6Tu3Q3tDpNN
S0q5UJpAzaXIjIFQK9JhoLkIwnvY94w1JsD05dT6K48YcKmXOS0WVQfkjq1N
xzUZyLgyouQ90gu3ryl+MljBhaQYs4lpFyaxryRu+x1owQ2uR+Xk5hOe2Ckl
WBZSiPkdFnM4m4tgnUvkgfe+xPfJeV9O/OzDkCP1nc9dhqHqo8zj6OpukJwy
F3vL4RH+MkETNgyB6L7jf9zqOyFpiUYr9wuxz78GSKhfGIb44ryqyNN0JD/f
Zsc9XQYp/n29tpRx9AksDZB9wIVmFom9KX0ALWsdnMP3t2Dsc/J7h1M8EJCK
Jt7PJXzwF//4SatJfOxrlbKQz8fwZwrR+1cPYFJXNld/jI0BJ9QfXywnem1o
8S7biCZMqlkdstdOCDi7aZ2tBQfIqTZ+cgmI7tavMqt1p8F00zkxh/hBcHqV
CeAxghF8lvy/P2O4t8Z/bXNkNwZmn3lx5R4xd/NWz9teOAPWX3QTM8gMzN3m
67/adAydXGp/i480woJy1sf1yX2gssFu5h6HBtW4ccoweBRbfyi1fKrrBXby
Sx9pMtEj1psN8y+VYDTFb+nb73yQk+ry85s3QXiozGZF52JcdN6/Oewtcb87
9v/dLikEV5er3REkAU4ssv3mG9CBCoqX/d+UEbm77fOZoNQPKPtl/L6SGOHn
XmYGq/PoaJOr7NcoNgbOI2/SVFl0UNlsGehmRQPXkd7gO24C/Lb9a2wFmwo6
Xk9SJa5PgXdZw5G6WT66txrROXlEr/YXrdjXOwv1wRKBNZ8m8EW53Lgcj4OW
+0cE64wGIdNLYiggZQpIDY7HzibcR3l+hGu5zDTKrtjQ7GMzCfMtTt2PNCD6
poriSY2ZBC1x6j3lXxNw79rq0ZJOLub/Y70jPUXUAb2sjDY2GCk+j/K0ZgPD
xc86RZOKvmf2rLHMZ0KVtsT4rol+UPuyQfTYIiHqPNEvzejlwrHQ73msPRkg
93Hqo72jAE3fHM85upEKcYVj4o2b6FC6lfuuq20SDeZGxb0keiG/MX50zzw+
RnyyKtv1bArCPXs9tgSy0cqpVJ5yOQ0jnFbOOW8zCmQlze1ZUn3YaLODXaHR
C9R/eW0vIwSgsvS3uqJZE1hwCg7c6uQAN77E5UTJBJZafHJbe4TwqqCbAa2K
Vai3MdTbacMoGPrz9HwzhuFBnMH8XnoxUicaslIU/mBh93BsjtkoVn2ee6l2
LuHvLT9T0jJmwTP9ATOW2gGWpJ1+7gTPUKuurtt9qhzy369fFu/2FUOnq2hn
hETvqIU+Dr33C/KDBpOU3zFhzq0EiRgVHmQOttZvCZlE7i7tbLNj7WCxnNqW
2tgLTnbNceVQA+T5y1fzTv/BGtltuk1HeQRn7l+6uHgcufVZ5ypsq2F9y8Jq
GZtB4Hq45bZ/aUSSxdLL+y5xocDL/9Q6MR5w+8ck1ZUngJS3T1VvKBrGvmjI
v5bmQezyhn5yTQ1GVe3Rfj4zBTM6G9YaixC9m3OK6WdUCjpxc1Wkbw2jFVP8
72kTHqhd/mRrri5ASYXl803/DsJGTYMPv41rgfEqKt/g7SgIFuUqtonNoNBP
eD/tGhPrPfxZvSbDyB7Wd64o4uKnjVzl+aJUIB/ZeOZ8IUJw8nhjwap+sHHS
DHmlwgXPvoMHbxyZQTmlIVW7/6pBI4h2uSKeCwzfJe/LsruRyr2W5WBXD4vn
Hpl/cCsfLBnD4XnlLKAJD0fW4jiIbdgkcvxALTQ7nGXIanJgyrm7pC9oEvWj
BApZjwrR6erq14EZdaD15vkmETIXT256qnVgFZfwLAXXiDY6Vl/o33H46Azk
nhA51pzWAr4JC0S7IljAfZR5Vce3GZ+OtCRffjoApU7rHzZs68d81dd+PS8q
kJR6OjOpmgekHoO/F04Sz5mvO5BwDtG5VD7WWZQHIYG/LOccn8TmkQM3pjfS
kfN9uPWsdSPYjFEubts7ien9pFOSHn2w8Ob3Uy9MuyCf9cJyYh4DZZ3itydM
TSPVzevfIs/nSP4g/97v8RDSWsb/PBTwgVkrzVK43AMaUpm715n1Azlb7cnc
lkIMKiVv9RpiAu2D1bal9yehwqz+1O1RPuiRcoJuljdhPu/19q+buyBW1tZV
dykVt7r9aPnXwAUFtcCK1SXEevnETT9QmsJxFa6n3nYGKqw3TGAO8TEn+wdc
s5zF3Qkrt86bZKLOny93Fv3///8C3zhx/Rngma/bcct6AHKjXhSfuz+GOSVy
+0y0ujHpqKemSF8PhIfk1/4eZiHFafZbj1sScrT6Buv6CX+fb/7CV2kCLZWP
bSv/PAZnSdOR1nNoGHLaZPHsFgEmiO5RuicvBNPNnX6/Qv+gndupPx1HCA4S
fPN+0/8Vc/6tMfu6ahioWza0Ht/8D0gTasMFgcH4/U1PfWAJH3Ilnpd80RxF
0tLutMW97TD4fQOpOIEDnuyLmx8wWtD16AVRo/pZTI4Ytt9woA/YnPObrmpN
I8UrnnaB3QwHFlr02boQ3vTtaatoWzyRGxUa8nvG4eet/1YX8DmgUkd1WHNq
GiKuv77r7z8MluK1Awnz+pGkppl/x9wXnH7eWbDldju6/jjgs72OCd7b3fru
afGgsO2VWAqFB9FO+07obKICxcvcK4nFB429OzwrH9FA9rCWbed/dPBdFkRb
c6Ef5FQr/5m418AxW2/vlbsGoLmqFCq0ZlAv1vBcj3AEW80tWe0iAyjQn2r9
rT0JFMO+i73L/+G7y3Hy27b9n2MD+Op2hL+w7PziCA//89OanLiyB2xKG07M
zptAFZKVW1MJF0Wevx9pOF6NMQpO63rVR0FFzGhbeV0r7Gn4VXvnMwssy5Zl
DCT2gIG8wHJT6Qiu2qCd36/JBg+1FY5nnvHRwPhBCEtsHIWRNnaRX+pQQare
1pfORZWgFyPzcnqgImS3SqD/EISn5YfcJ/yL2rlKsCv/H16daThzwJgDjM8d
NbmefUiSWE79nfYCnxd7Tm+MY0N61fDTfbLDWOH2MVLhPQ9rVy6inompBacf
17+ETI5gFD0uYVnoCIRHO4o/ftuODNulNySFAuBWPrpRcoGFhkcyZvbPrwZy
WKTO24hBJHcpf1l9ZBSpvjuqtyXmQYhi7p9jw2Og5D1VohY0BotuzbY3SHeh
Wna3ZH7xDDCcznoUpgvx4Mz63vnjHIz94if8/awUuYtU70osr0H3Fq2zYweG
QM6DKb/5DxvaG3S3c2154HHo16M97lRoZ4QlbxAS/jD/9sc3zVNYNWH1wdCZ
mKPKiu3JEw3oOOizsKllBB7uL+id3jIASTpb2nfW0jF/+dLdepMCtHiuuqzY
qRfyNzU8dD/Xi3KrveYkvKTCCfGzzIXlHCAllvd/y+tAg9O+AUovCE7yNg34
W0QHb/9ls8AaRdeSHK2iBTxY4uJ2N7TkG5Ccrr53GSbyPv6pfvITOl539Tmp
RGOAQkHojdcHZzFd4nGE9lQ/qERnp5ldSoPwycqwLa2TaB4q0x/pN4kf9awC
TgIL3X3TU1NP9yLJEvrmrh/A26OftO2PDAHlomv/CQELdMQ+yfwd7Eat1Abq
txYmaJUXOz+5MYlk5Wt8t6QimH+i6EcljeijrRlokdiEBouiDppUT+KSxVds
LVJY4LR5mtIfJMSklyu/BDzmgHStdrJUZgPkF/VcWpk2ge2yv88/JHzlrGDV
X325QRQTuP23snUYyP8J0rvYf4HSxReuPcuDnMAbUSYf2FDPCd2Z2j+CqiLJ
q7JsCiFQcp9W5c9pIBkH+Ii+6oDvBfdpPdJE7s+3zjE5W40aBqQz/qs52Byo
YFEzyoKcl7Ihnn2zIPelckqTJwSpj0idG8tBuYzjPlq7uoFy7NaIeyYXur2P
/Ep+MgBRD8/l77hAg4hNc99a3BfgsMmev+9DCI82JZemvxtBSrfeWLNLC6xj
TX+hNPWDcch9/7jNo5CSrHA/+MMonlgSe/UwrxVNH98QuJbMInX3zWPh36rg
0o1GqcPABvZc15Ut50bQrl9BoTCMC7T8t7YPutJAJXJFdtNXJgR2H2gbeDMO
iYZKvhtMmyG26Vt8r98MkJkb2yfW8tFKYaf+G68WtOPs3dOZOos05ZfJy9Jn
UOFm7fRNsSEkkYterzVMBy2p2kXdjTOw7e/1bxstid7c2P1D2pcGlOb6gBuv
ODi8MeyX3j0aOK2RFP+3mod6PdwMmafDkHvtidKvG+UwFWM/cWpmFN17P6tn
do4D7YvMm8qVNIwdlc4+r1yBOiJxN6NrGvHjRgcpi6QhaE5aIPZXYRBCNqyL
5ddNoZraWTWRghr0uBGlsL1oEvzLb+laH56AdMnJ6TopPtqdkfOzpvUB1bnV
yKaABke3NXan9XFAT7TM0WNgFn1jA5sjdw/ja9A8HmnViwqLFqroldKAFtae
fG+LEEbj+A1SOu2QZPF95+WNLJSbvmh8fM84GgZsUX+eVQ1iIc9e7fkxBVNP
Xu5OKJrBj8OUp5U5XPS+rSilVczDcGGP77y8duhevKf8lw7hw452z1Z0M5Ak
+VJ64toZbD50aCCXwoX8X/mBkdvzwXRPGtfCvxtXSm8wnpkmeiFFxWmb7hjo
XLzUb3SzHXc08srHqxlAaowT+Zk9COnHmYepS9tR1XF8WujEA7lDXZe2XCK4
e9Bq9NUfOm7YalBf8osOZKtdtjRWOTC0vSYKPWZx0Yql2ifleUANO395d24+
hAd5X7T1HMWmlRm9nvJDoBCfnPKuhw6uj6bnbNkqgNfN8iT1dgb4p55eGxnP
h6itN16EXqFCJ7f47M6hfnAynil8VTGGpZsCh6TODGLJOuN/WWl14Hn27sI/
qiOg8NPE4taQALK/Ob4TO5KOpPHfE3r1BCd/U0xwrqrBZjPN7HVniVwJCrXc
8b4F9VT9uupceBhwfYFdbAEDqKGjc5wPdSLZtGQ5p68GL/JW7CIZsiD2v5ro
u/NpELW4MbD32jhQ2h68aUptAtOTXu+WzOEDqVirrqXxEfD3OIdMqjBBcuuz
2+wgOk4Vz7uvqTcJke+uLxPe7YIc8ZeM+z0DUJ23tfPNYTqc9ikKWjY7BJ72
53OKrGsgnbshUj+R6JeXieRZLyYonetPdSoaxYhMCZlLB4X4W0n3slM6Fan2
D9tshwqQUiN5butEMQRoeJ75Ks+HkNVnFPWsJ6H6zordohb/q9DMw6F82zA8
aFGpkDZKlKKSJEpS9xA/SxLaJJUioYUKqYRUsodUypJoIYqyJrpt2cu+b2Mf
ZoyZMZhh8L3f/3Mc77zP/Vz3dZ7H8c7g5qWbvnuq0THhKyPkl8oIhmjKjuxa
0IoSE+XLLnoPA1lJryb5GxPUv2/Y2/GVj6b3PwqThpswKmvk47K0aegItu0X
k2cDc0+ptfOmAiQtq1sjOJiBsQZZq317GtF1e1DUKw+CQ5Jcg5SVx8Dm0u3F
GXYsvB3za/DV5h5IlaNe4hwkvC3Hy/fQ6Bh61OzgvNbsAGYPukwNdKGc757P
stNslFP9RO1j08Gt5UVOBWsY8vPtj2U/KAbXjNy6R9tooK/2cHgxl45eC+V8
y+Na8du29l9Kf4dA/97aksywQSQ5bUzWO24JTYlJWUUUGpjvXupcNjyFxXv8
eiPMx6GwgL9rRWgBmrdIXnNMG0WbCIFrGacn8XbpohweuRIWkIXcvaP56K7T
kMK9PIv3K2s3pHwaQ4pM7vKnt1ggMdHUsyiH8O/49pQff6shfbzmJJk6CVE3
vOODfGYg5Oeot0/dAIZQv/1W1OAgU8ApWLVmFhYZTppe6aaiEW3ng30OXFRP
ljzk1DaPRtku8xt+MtGLE/f4XeEXiLi1kLJqehr1xY77JzUzQeaynr30ZBuG
/A5d08PpA/F77tlU3hhQbxpbHlYi+EXC8xTGd4E2r32tLJfIqadrT6FIBRip
lS5K/zCHYtL3lyVZDoGbgvZCx3Yuep2hxS9U+QI/RG8uijdiQcun3OaFun0Y
0n9ziCzNwnuPF4tf0iQ4Kqf70+ECwuedVSKHpLn4vf3EZeeP+WjuvT/qSlQv
GM2Z2WhncdEkwzxQZQEFRJ7SX4eHspBzPMjNQZEPD/1c2zXFu9ErgBlJOfoF
yHvDa96eboLbCT6ifBc2ONmY345gzIJ6UR7805mHlwt1f5deHUGKUa7HqmtD
qPzEY6mnfRP2umTpfa6kg6rN5BOLR3NorpY8HBs7BgfP+RxXqWzBGi3yq6Le
BiDbDRZaWHOgOnInY0HNGNRo/4vubGgDslXrLovFNTji9z3mVwQbRIt8LYsq
eUDpqKWXfqmGyT9GD3kaLPjglnmqOYuJbuH3RNW5sxjRcHtrdXI3Snja1irB
HJhQxt/rpvXCXtz9fc/mTmB+IbdPFM9Dgp9k+Y2uGRw88DvxRygNSTuGDzxd
X4Un1Ve6JY1y8YHweIbmSgZQlvZ+NG0cQzlLmf2wcAZcndj0L66xSLLSEHj2
2QByDaY5Q++InsoS0IoGBqjrLlItpcxB/mjOzBl6FTicOPq77CGRB+r2kvBA
CugU7EueZs5BUJFk2sGLA0A9HzvygT2FT87s5UuPMFG/IfNxufVPEKXOhR5L
bIeEJVcH19tQ0Ta8+sAxcwZw/SdMlXKJ9zW9EMMs5EJbhLbP7aVxoH7aSuKY
NrHXIzvSStU4IBJY+d0/JQXIhY6rRRdOoFPmFh36xnlI3VrornudicwA/UeH
6O0gdyNzuaLZBFYqWHoZeRB9oH7zZYP8MJ6Ueduz9tU4TvqElc7FUUAz4aV0
XtgkOq0se/PvfiPabFS0dMllgLJFsx5EjsGGDKU30QlTGMO4LPvqRQKxp0Mi
5glOSOh//5lF4YPCtdal5i5M3ECjdm0/PwO5794JGdtP41ejxnBtFh2Ve8Zm
jv3sBt9zdrZlg/P4cX3BTM30IFDHYiYuvmEiyVKsgVf2GeKMRyp/5bAh5MlX
Wfw5DfqmU968qWlMDq/86kYh+tL4S5/SCx48URdZEqg6C25SbYzDiaOozFSq
Fjs/DFatHts1WBQsvbFh4xaCD/VZ1qeND/NBVAODFSo4MNn6019z9wAmhOJB
Po0GNUusOCpLR4DSKxOVsa0PnCsD3pOtuJj8bFJT6sYc+qc+2lzygehxwQjt
exQ2fFBZ+mzPIB8rE7dapfj3IzehxDtzUw8+CX8R427LxxPxeeL9uYPg1Pn7
gq9mJ1oZ3CizX0nBkY7ZNadDmGCnrGPKCZmCiIOPyYfbZyE69eqpBco0ZBbs
fPuEOwxc/Tc5SevmsJzqYVqnGQsyK7QKVALp0LJpe9EpIS5W7G3OGz9cC6pB
ux1tQ6cgd+UXiyDDKUyQ823V/9WFqRMkP6knfajq6kk68HASew5LUGsU+kD1
lpGjW+4kOht/7dlayQV/p+Npsh+70YRClszJ46PMnEjtRHkn6qW5R9e7jgBV
+m9HeRYb81MXP0uxGoElo58/am3oI87zufj+IaLfEq5GtS1tRGbytEn1RSK/
2yUjBQhfcnO6Iki/MYTH2pW722IHwWt1wQ7zo9XYEPlc8rsgH+O3aXYJGIyB
8LkLni8kpzF1UWGwE6sZjAoTdYxv9YNN9P4jVmQmNvQ1lO8JJLy9YFN/ZHoh
OBufX/Dr9Sxovo60dpyfxYbXOsziHgbq7Ik0Mro2j6J/mXfTlRtB8NzxBXs9
CH4WyRIT1WICRa9P8/XPYlh3w6tgSSOL4O/rR+VN45D/rKGns48DwexE5fX/
73szZ6mg0nY0cVfa+pU8gueif979MEYFjs+b+lMxHPxQ3pJJekech2m4wfW/
WVjmglN3OntA+cyd4EfjDLx2O0hggyrBS4NbRvVHadCw6W+ModkU7BQ6z2+Y
aYTrXQ+0VsTyMaIpeLuZHMHFRnBv3LEVTDrVdY2c+gk/FHwvLdYPcYuiRscq
aMCJueyWp0F40E2lV/aHs3DgaNjKrj4GRPR9PPYwYBaYK1f3WFxjQp5V99el
dl1Isc+YClJqw3Rv++NZ66ew3E5cutl8BLyCbhhe/P+eXzYay8nj4vtGUg5z
kgWqlwdM8uP5cDLNWjfJYwo8z//5JEChoW8PG1YfGIZkM7PcgGczeFPDNn2i
NB1IA1+3XsQXQN5ucylJqwjd3/VZZBeyoeXS6tJHQ2z0ck07tKWkACRfzfct
0GOAKCPQw0+XBVHyr1yM6jiQs68mar9SDsReKdx2jE28/+3vtvIyXIh8s1x8
5a0B8DrLs2OtyIFs0sDvJPchzFTLeLRlBx18S+a3tDwjfGTH56Z/U82w6vkd
WStaP1AOdhx9ocHDZAVVH4YzB532jc99i/j/dy93Frnm54Mwr6L3wh0K7onQ
Ff6tw4SE2bSnXzNnsSqOVv8wnoUeE93UGNs6zA99/rjOpQTJtGcf3OvSMIb+
KihkBQu4uD08yGMaKaB4p8p/GMMZFip2f1shP+SQ3p8nNSCn1tQhJcdHfkFR
dW7UMJikXbseLTYD/aurRvoVp6HkjtNkviwDc8V99B8/5YNM78XiVSu7MIJi
sDDtdy+kdiuXyAiNoqbzpZT0S1zYXOJCaVxWA04yrTkVR6gQxTrS8+k/LnIY
1SLvw1pA8ZeeqgzRjzU62a/37elAo1mvE4UtvSDTZVQf9K0BnOs3GilIzkK+
1qZ7Yr+GoFisQ2StMxOtdgvcPFxZj15TSYee97AIX4ifr1+chiKh9j+X7JjE
sruzqh4KTHCiPH/iLDkOIRVBeqdyWjF+1ekw6+90cHI66DKWMAX5mkq5CRld
4LI25dum7Qwg6f6x/7XgB1YxxLXWKcxC6h6VL0Y0wut7L8U18drB6ooy++XR
dqzbvdX2pjobrIaKigPCi7AsJOHgVR4FVplL1p+NHAbL60b613ZwMb97ebD1
5jxc1aB3vDqcBevU9ZXHxvohO3rVoQOiw1gt+Mj/gBcdJJxij8hPc4AiUvb8
90k6RH2vtD8x30N4d1GIqygT0kX+JERVj8Ppr/Ven+2bQdjav7Pm0xwmn3Jg
nSN8mfXofOzPW2NYY+/wLPEcwTUWxxNzadVYofV0g4nJCGi2PinUCp4BUq2P
v/ZpFth8/qmYtakMRes3yklSxyHdy7N/cygb3Bv5Fq8DE5HrMfh3c8oIiM7s
6zeCYTxdvubFKiI/ZIofU0QzDd1kfNQSmichzpCM/0nRgfPB4IbLAiac7OJM
bXw2hRf8H5u03iwE39B5/+XDsxC14tbcIEzh+6sffTqbCf40b6yO4xL+EW0v
f2blDDjv8LxLs47EqCZB1U1tfNywtfNt/28eRPl9zx9uZ6HbW+2s82lDkMxz
drOvmkUry3/Wv2VdMYThw55+NIPFQ8uFQ6U5mNMtO/uI1kTw+jGlsB90FP1l
UudZzUO171pk10aEWF/Vu7eliZ4Rt7gs7sPEEI2rlFB5GvDNPAu78mfRLoTx
esR8GExnFZXntn5HrrylICAfSKN7/kR1DoGaxduFE97lQDE8YjXXMoUmMfzp
mF+TyBUfcrNqbscNGVfjrVu5wNmZqkDXnoan/PYytlo/WqUMYWhCO1A/78oe
m6JBiP4S6X0BLKi57eTgu5GKThUPyGH3GlFdeu+Xf5QxiH1XvzVYZQ7SGz4f
D3TnwINeOzojhopR46tuOd7hgJ08r0U6mIVVyVd/lGt8Bm5c1cLOh6NISeF9
ExDgYc9Qx4UCSgXEBlbwA/8Q+4OzddnbonsgqJB78FUZHZSFXn3LWTEN6+67
Xl0bNwnwqUhU/zsNya7CDKtj40Aafz/uw4zC00sSz9zzIryytVMk8TIHvcR1
MJNaDcmJfqMs5RFQuJD5xMlxFJQbcqS2ruehiMpjw+MmXzBWncOrypqE9KVM
w99VMyg5eEOn/Hgf8rOoG903sjHV8Pqo6eUBFCk0G9pg0Aexcf8Egs7NolfP
ba29Cp3g4Lc402FqEDi12Rc2bOWgokngN4esOcg5p253IG0Q1VewMmEVHWsU
Loqlegzg/e5Lz4yLiP9ptsgy6gwPqFfE7JlKVAxq3bhsZqIDlB3YtHVdXAyf
dyDNNc6BT9V4yysHNlqZWf2uv8dEDm1bfuXPcWx6vkkg170ayNQVqygCBeDV
H/bkr0QPRLQoGuJjNniprImW+8ZDivYBVVeXDujf29U6s6wXbPzlDWDbPKSr
NNFPB8yg5SvzRe8vEnncJinvs74bffVHa1QXsrHyU/baq6cGiLxYvp3OmcH8
Zwt2zJVMQ87cxMx9byaqRynqT8MEkOwDBc6seINxue7ZNA4DTpr1htfv48G6
La4HivIGgZUtMtATXAvrDExIytc5mG854ET3pKBF0wuLoA6iH7cM3BXYHgdu
mkFNQgv48OGFquLxKSZYRce1RxsVQrbsQHPBwDDMHLjd+lGbButqDo+3hI2C
L7nTz5zwt/iWdAGt6iEgW+ijk18nUhRyBO4R+0D791Kt+GAWiJx9oum8lwPF
/eOnf2+cxUn1OsGdgcNoUq6x/t9fFqpurLz7a5gNJ5uEbB8054PX46QfAsO/
QObzK/2K/0qw5Iec4rgKC5RNPBcZZtFQ4azWyocruOi/VzjE5Hk+0D9eiC60
nkdu9NOs9XXTsGl4yRx1ioXJTb+1SfJsCKRmWDQVzsKRLCv6fkYfkhsKQ4Oy
/0F6J/2R0BQXFnfbF9HMGEAfWUCNvDILZC//j4tEW8GxZWq381IGMIUvDyca
8zD7K114aV8fuqwseZOe0A++g2e6egVmUSIrxsTnDRPkt+huuafVjr5rXN9/
UGag14EVm2sJf/EVypkzvP0IhMO+fjtrNATKX0u3Xajvx+6bRLjZNCAz9PsE
+4l+7H+9esZoECptXa/rWNfCh5dHrEmtBP/c+aNxd3sV/r4bIKUtMwodPsMc
xUk2hpjgo4zROtCfzg2w0SfmuDfA6smeKpDQ/PXko+4kXh/Sk0nfSYeE/HUL
63g0lOjzECJ1TeCiffW6W40roazuh9CKGjq6nf9zsiFnGqWFfeSWnM5Ht4ht
pcVNcxDyLVD2UiwDy5RGqqln8tHkIPlUlA/xnGan59d8E/G7m2XgF2L/KOg+
fjcqNgzUW1+mdhlxIEv98ll93R4o3tQVFvxwGiKyv/rdlaTguVLmqy0JvcD0
lxPvdO5G0uPJoVeNXSifsevQfgZxzgZrdqiYjELqrg+pT3qI3IQPRdms9YYa
2ZYrHwiuXvBJ2z9CfApkbTalmzS1IckwpTOQywf1j1ruphPj0NHyXKfqcyfa
ORnKBGuOQKxfFRan1GNOvZDqXSU6yHX6ffq2cxrzB/IUnddXgOv79RObgpiQ
3/LA+uCNXEj4nK1Gru2HojO930+vo0Nq/L1D1W/qsdhgqxQlaxpeR78L3Udl
gHOAaViNCAf190RTzQy4UHGW/MFNuBGFsw+3xqezUSGzUHLUjI3GM9bqbcd/
QUezoGKu5Rwyv99yub52Hq9dEUhZXsREykW3mQ1j41DTENBxVrIWNaS+vQlm
Ejma9xa4ReEi6fTYU0XHd7jK19jTT5cGVjVaEvum68Hc+NjWF5cn8LDGUelO
Wyb026r/W5o3B7kseuPaZzx0XDR+h5zCQJJjzdiAbxFwG4V6HU4woCWD3Je6
hQFeK0Lryyo/AcmgDTM8v0GpcPSrb1+HQdTB8Kz7igFi/nI3kgjOz1U6Yi77
jzjHnrFVFbOEPxjJhuktmAPjxo5XihpsyOcdeLlJ6h9a6Z9TW3CCjjqG5O6l
JWygZJIPL/w8g8LLqxdrTvOh8dXInfz/f+/3K5c//ywHSe5HG9fRX2NtYDo5
JJMOpLEbEinNIWgEjkaBAmyQLNAIcLRkgsw5wxWeChWo/KDWSCq2DQ05Up4j
JmwwbzGTa1tOww2O3uO9uWyIKT7kEt7UAXZDy9wOE/fE6tIFB+/lk6AScd5g
+3w5mnSusqzXn0bfRpLwKel+vL9eXF4+qRl8t5P/vImcQInNgT/c6rgY5kE5
M91Cwfzn3deb9s5jTbnUs8Vv6oCadktcqXIQzN8/uD26gQFOWTvYxyYH4W0a
O99uSx94eVgb7Aj5gaIf+s498KTCNRudJmVHNpAebXWaOFeHdmJFw7lacyB2
d88flStjsIA2dEM6h4OiAbobe/w70Zbf20HpHwIvyyVyZ+iZSL7mo8sLKAP2
j9nxoi8Ely7KvRttxEaZdApIFHdhqbHZnFjVCKQy/O5efctDZpo3KZvbjxZL
Laq+VPYT90RZmLayGj7wTb3f1I+Dvu/5UpOVxFwOKmnp+LSDcmhTo5svByri
/BaNRQ4SXEv/0mVXCTUxbSce+zSBvobUhpuXRoFudeMpOZLw03Pqx8+3Eft/
e5h87vY2oAvxRqR+EvmczdVlHpuCgdVRXPf6Qcx+kWWopdYPVGfJmqdX58DG
F0fXK5dDePz67izJObguv/FUVcYEdBw1H5q/NYD6larudbmjSKKILvqp9AMS
Ho727DtBePSVOqqvSRsyEyMNClN4mBQdvM77RR8oF+TdNKsYxtjthdt8rs2A
jnrzzPPsFqK/H9hqHBtAqrvFTp2fXLT0mf8V97QFbI5ELWod4+ICm94e3Xs8
UOroyQosJfjJMc/2RWwjFJco2M49mQO48EM9V5wGsY9etmkG9eLJmJq4vRIT
KM0YKCLnEHkMHPXbc7gLSJd3HSzI+ArF/wV/++ZNeIQEem+eyQX6xZ2lBeVE
v92Rm/iqMwp25986SuqOol1qa1Dawzn478y/5E7VBlTc40fKXTePEdbLNcQq
JmBHhYPCckUqul/4NHKO+N2Go6S7IupcrNWSfT7ty8ayH5Efdur3otUZlUTx
R1wIvQ0Vjdu6QGHP6Jb+qhGM7Z33L9xbgrc4Giv3E/kt08gcaPo3j6R1n+s8
PCPQczqwqXg/Azh+qyPDbs1DTVZAX/1hGty9+dPg/q5MoA4bUqgyhF/s/rrp
1toZML12otpcqRNIm56/vpfbApTDtC9qsqVAK//ZM0kaAyuBDDm+CMEba7rj
a36nQnAee/EQkXeSgUPE2t5IiFAMKziWPYRTJ+cDtO7SQWEXM38ubBpIXzoF
hT7FgkKmcvDI8TFQn3x69v03KoYYlAX0+HIwWHBGn23XBA2LkrexT/DAq9Tt
0F/dRIh4nSBct4UFElqGBfENHKxJHjJO/a8PPC8vK6v4RQUrs120tBMDqLC/
6GbKVYKb27PeTG0jvKNgr8PoozygpD4SfrdzFiu3n0mPUia4CF+Op8VNERwl
JlFRWIOOW4spD2aGIdVy/I2eYA+2nCefNyf6pe6oa8nOrgEg15V9dNEk+OuI
Yq1aGh/+OFTsmy/uAROT3Sv2XatFZskt3vDHcZjMUFlpdpbYw4YGFL2j8+he
qPMeE6dAqCMiqM50BE10hW0F745Btv27/hstbPRZt/GssTDBsWfvR7/2IPZ0
WeRT68ggoEtWSH9exoSqS5J+vJwZEK06Xhsu1I78PObusxeI/W/fj+HXS8E8
s6f20K55nP+jt+X9WiZQTkgxAgzL0ClVPK5ddgIT/3rzI96zCS4oXEJRYmLg
wc10WikHQpYvW63DKof8kSz9Yf0SKCu0ZzwdGMEUFbMFa1wYYLXzI69cjo35
nvw5454GSApT/57YNgr9KwdKpebnkSOYsfyO7DT29vl6WwuOo5eNceoI4U9G
O+9L9MVNgI7Zg79CDMIX7hQf7E1ngfDB8tA0kRE8WDii4tveA5zljyVco1lg
lS+iW3G5E/ODG3TzDJmEt8HE91o+KhwubNw3RMzPJ1ar934h2J26liK9ep7g
3Nk8yqpxvLpf+Hmn6TCml+/zEye8QNjMVJr3bxKChENMawzj0bzvltBy6hj4
Tt5bnyndh0LTxmu3xdKArrpZrf7vJPh6aIsVHqHjexdHdYvzjSC6WzD4TS1x
36qSBJsP5IHPwlldCTE2MJfxmsNi+1C/CRzikydh6cWuv1EHCF/otmhdTWKh
gnVQXdLyETAylervmO8G0oWskWWbI1H1wVbvk+ZcVD0uFSpEZUJ2amZe0xUe
iD4//7glfggLQ65UjpZSwK1fYFpdkQ3K6m3r1lFmYUeL7ctU/26sOiisvCx1
HO3kZ8+epQ3hfc/ba18uoACpelbSW7MJTqq9sLnP4oKR9erIWCKPohLqDd7a
Y0Ap9088WcxC3XMf/y6+0An57ie7hP5MAkVYz+Li5W6IWVZoOXGfBlHuO/8G
B7DB7phJtdM2Bt69Nxm+9nUPkE4Wezx4+pLwD+tUzSQKcMumFHaOELl2FlMr
df6HUbaiRX6KfPS9w0mdJebqZa/3Jjv4J4QMxUgnxXPRKCl+saLeGIR/9RHR
W8ZDp2VaAxFqNNxycM3yI9qt4PXc/vIldhoWa+wvU7w9jvfYoUpLA0dA80dn
t4D9JHAFdu8R+TkE8hXuN3bkDUDNTY9jjzcT+5iqk/2yqQs8avyeYtcwuNnf
dJwpm0ay32XFRI0GKFSqmhcKZ8D/AJ6Lvrs=
    "]]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  PlotRange->{{-1.9997823532476042`, 
    1.9935155363724402`}, {-1.9938434601114938`, 1.9984590945910634`}, 
    Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7257951046684833`*^9},ExpressionUUID->"bde2a5c6-2530-4838-a1d1-\
f82705772dd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", " ", "#2"}], "}"}], "\[Rule]", "#3"}], "&"}], "@@@",
     " ", "points"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257951991641464`*^9, 
  3.7257952249886456`*^9}},ExpressionUUID->"5d7d73fa-af28-48a9-ae88-\
220759801cb8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["1000", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257952668063087`*^9},ExpressionUUID->"34d579b1-ca6e-45f8-bdcb-\
8cb03faab407"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "y"}], "}"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257952734917817`*^9, 
  3.7257953046179*^9}},ExpressionUUID->"c42eda56-7cd4-43e1-82d4-0c89ae08732b"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
jgYk1sVJeH+DTO7jtO/NrFb+BrG+NlqpYH4x72+QsSMPfor9kM77GyTpvZz2
0JtPeX+DuJneOfOhwI2T5zpiIO/uojmumPefySHnIW9S7mXx/jOJK/Ta+Tgk
nPefyaFyscMms1TefyZKwVMOFCS18p/Ju9G5+9TMqjl5/kdflhad1V/Qyn8m
wpAquu4S72/UkTeigdGhFWJOnuvIqlSFLvd8Kjl5riPlp651FSsVc/JcR0zH
FqfpfIzm/Wdi/jXfftusS5Tzn0nGhs/+XzZl8/4zmVQ1ucOsdQJ+P0jOvU7c
deBMq/0gyZtv/HO5czW/HyTJe9xGrTfJRz4DPojKpm8weM3vB0mPdYue5aZk
Ip8BV5t03ik4oAL5DPjZZUmNGmOF/H6QFBZs9urrzPgMeEPqw+lFtqj/ETcd
ltl/mAD9ecRzdhZpveuQg3wBfGyKTd9fUc/wb3gWn007f35xEb8fJFc2+R/p
8ric3w+SL0eWjozWqebjG6Svfnz7Q/ZSPr5Bhnt1s/JxbhXfIOVzOm1aVl6J
fAbcba1S2ReFPD6+QaYHlXbwro1DPgMeNyDl9h2tMuQz4PrH1slC1cV8fIOE
K76f+TqB6WfAzYPT5hR/bBXfIBtTZZ3WHGJxJMA3CB7b0onvkc+AD7FM27bR
A/e/iK/fMqhxUXM1H98grjk7isp9pHx8g5DUmKxLexDH3595xg/cYcj4DPiF
xeWrxOekfLyOLCstl2x4KUI+A/7qTvkytRHlfLyO6D/L6VdgY4v7EMCDY4xs
DruVIp8Bnz4kdfk8pVbxOvLuhu7dj4bM3wB8sOHRHu/EzM4BPvSAQ685la3i
dWRsqm1D4gs31FOA74sPe5hR0ipeR7ZMsV2QtlfEx+vI63kqctPnMT7DM8jF
tJ2riYx2ii7pennID/pO+4RWXthvOixlf7dD60V00P/opIjn7vbQCL4I+rkC
8eRnL2+667xrGVcM4nmyX6HnzEDeYgjg2YaG3tkbxC3rqgLxUKHKBMsn70nL
exG30nJ5MzQwky5abfDV8HI94vvI66+ddpTj+2AcI83P23TZLgV6xC0u2xyc
tikTxwW4SCNjdrIsqoX/eYib+j12GR9XDTgBfN/O0SIn02rsJ+BJgy16+iqF
wt+IrzwaHpk1oxL6ifiGvRvlpirKkJ/Q34Tf5epFI0uxP4BH7V/nZZxXhfwE
vOPgzmOMbkqQn4Anu6QqRjeVIr9g3JuXtNHMTErHcQLuZtNnpnlDBIwL8dvr
v23L8cyF9hH/0GX763ZjkD+IqxU9CXnVRoT9ATzKWTjlybVq5A/gD6/09rt8
5RX0E/GylLCfdncycH7h/Vfv1czyvFuEfMR+3bJPEdUX4PgBT9JTjYnMKMP+
w3ND/9WFD/yE2H/AdYJSo+zdJSjPgHcfkhSwrkiC8w74U6Me+/RPVmP/Aa8x
f/DsVnYy8h/e43Am/EG5QTn2H3Aft3g99ZJyHD/gI/rnkZp//BD4G55VyqqW
ex/i+kI8tCzk6I8eUuAD/r+sLeZun9KF2E/ADzUvfdG1awX2G9qT+1aVNimc
vRdwuyzlTpmL2LoGfNOl+yNfd6nF9QJ4fm39EcuhMuwP4F8fNL+4+lWM8gC4
wZg2lROlbP3De+Ic9885/FiE/AHcxmBCc3RnGf9ecvx+56bf02Q4X4Cna9xZ
a/7PuLj+kKatU+66bpTy80WsihyHu9+r5OeLFMqNHh6uXsXPF/lyK6jBTU3E
zxe51Rzd5G4hxX7CU8k28saf8TJcL4DHLXku7nBDjP0HPLVf7pNr50XIN8DH
LlijX7q8mp9f0qh5eL/S9HLCrSOiVJi3tus/8smtIxLifmyhcVAhjgvw/N8O
T6+XV/Hrhaz1iDAYc67VuiBq559Pr5OrRD4DfmmVQq26QMDrJZLk8mlN95BY
Xi+RqhsZddL6IFzXgPs6dFaN/5HG6yviv7nj1La3C3h9ReZaqlo3NGH/sb+v
TONLS4oZn+Gp7J3y7NvYHF5fEfO+Swqqr1ylnL4iIjcP/3t90lAPwrhH7JX2
XNI/GeUb8LJNMdl10bi+kE8OV9x2VbwS4d/w7OOml5qRfQf4g7honknQlcmF
2B/AR62a6xFhX8HbR7J4wcETW6tFyGfAX/94e8pvYwXl7CCxGiJ/Plye2R2k
H7FubHYPNt+A6y6fu3r/ynzePpK7iwzfKMQ+J5wdJE9+Jv3y+yri/RCyaZtr
mu8iCe9vkIiMPRFuZz/z/gOJ1/g2rtQli3B+Aul+xW5zVmwFjgdw120hj/QS
JMgfePJ5YcATjz7wUHdn9PD74sQw9VV2zF+F32/vL50evIT5GfA7tVXwe+wu
RLsO9I9nlTk9/1LJzwvtHLT9tXWfcqSHdkj47E6N0ir0b6GdMcOMFTLflyE9
9HNe94y9ASFFyE9oxzf1q2ry2E+4rqEdj95vuhw9WY3rCPojuLn2kpp5JtJD
Oy702abKH5XoJ0M7kNcG+Qd656f31FdXM/8Z6FVdLvdMMEf7y+K7LXlwWC9A
v3nduxSrcuanAT2PAx9ybTsK996sQvkB+ud7nigMmRLDyzO16Xf/R/2QXJRn
oF8i2TvsSAz6k9i+1yPVI113xeE6B/redeIrMV1xHrH9KfH9F7QdncvLJ113
46pw5acalHvAj2jcmtZtpwTpcT9UePDVjwJGj/n96r6RSmksjwztTJIbYyMs
YPEB6M/w+iinw6NFOH8gR8P6DY/fm83khve3QQ4B72P0IN/b7wv6DYC7uz+X
nl4u4+xII1WfKryw5lMrPUO9eqv9dN4uQxzoD7nbqL+YwuLhQB96Z8iwvU3R
OF/Qf2J2R169Phn3P0A/K+LCU7VOUl5/0jvTk1M/70O/HcfX+8fDPzG+LN4C
9CtHn8t/JAT/SYD42FWnZ11bV8nrf3rFSH1S/DDWf8AnPr/wddSqXF7/U+3q
2x26Nj/k9T9VzAgLPrSiAPd9gO/bc2C2LILtYwHfaOaV72GO+3G0V3IeH932
37Wnf/s/QnqzravbrGdJKE9A389LZc5eSRbl7DI1tXxx7PXgT/g+aCfqlkey
hbCY9yuoqFDdYPEbqB8QYDsit3UXG5JrUP9AO/XPD5a+jhciP4F+z4RjI0uZ
f4X0y/VcyfY5zP8DeuMXVro+E6S8P0DvGY3Uknqy/Sm8v7Cz8saUgmqcF6C/
Hm9J23dmeXDAiz9INNcXxiPfoJ1g44Lv8+ZhPh1x216nFLv2Kuf4lkfPF9g/
kYpAjwmR3m2nXYclSTXcuviHn0P6pi2xkuC4cL9zMC7seqaY98do8DDfQuuQ
ErTHgPt0vpy3/XgurhfAd86PjDY7mIp2FOZtS3htga48yyND/5vVJo6+V8ry
Gvw+6O+4eh69oNB3hJV7Fa5PmOeVlTNySsay9Qy4c+cdg6K+izg5yaM/E2x9
pLvE/H6BysucT7n7M3kA+rUfKlaqT2L7KXjWxVfkLnVu5bfTdte7O4aeYnoJ
7N7Zp0N6Kpxs5c/TTMWTsZdrmFxB+9PkaiozbJmfhPxZcfjOzXeVXFw9j67r
nBH4SVTG74+oTq9BM9o/wP0d5h9HXiqzjm4Qc3H4f/ZZp+xXxTrX8Hwm1Dc5
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
hITXM8RqY56ziZCtX7CfXU6JVs53reb1M6kNW5bX3KeI189kcIbT8S2D0nj9
TAoLNnv1dRbz+pmcI1leKQckvH4mPSZ11l0XXMnrZ6L+WMnGlhbxdpaEa5sq
9ndk3x0DvDBkln/q+Gre/hKjgWKzi+nF2E9sR/H9zNcJUt4+ksfvO96V+ot5
+0iG2B7r6bSiDPsJuOKrG6fDb2ZjP2FfOCrAsdcBNym+F3CIJ8N7Mf82pvRX
oD3Tt4B/mN7jVteFCbxdJmLXzZ1OW35GOwtPnZWCTYN6SvC9lv/hD4C/2St2
wYaBDmxdvG3xv47WKkyIVqrBdgJb7GZHzv6Cv3bCNnmrz1cxttP+3/0o1Wl7
NkbxUCF//p0mDDt6tod5Gs4XPA3lbQ8O3nIS3yv9D3vast+l6ze6ZGstY3pA
vaV94eZi71RXIfIT2g8rHfpm6NFS7Oflln3AwbW274/bfOD8qNZ281oL/YHY
DxalC9j6Vfvfe0tpx2Yju6Uvi/n4D/Watt/52lkBti/7D3un3tLO6dTv31Yk
s3EtbmnH3f35jRf1jM9GLf61ZeMH/csTq7H92v+wX8Yt9DEjo/1vX2Z6UqEl
/rcgJWj8EFOmnwtb/OqLNe27q/pKODv1MJK3U+38/6XfcH6lz4mZTP9/b4mr
DD9b/DBMgb3XpmUfdG3V+oLUeYyfQ1raE9y90ZX8quH0cyKJuVkmly8Q4rze
/zfeSMYPdaDdTzI7LvwPOwXPYJok9DvN+mne0v5DswndVW6y/kT/b99TQpzE
8+uGfmTzKPoPOxXVQn/3bXO9XRTzB2jLvsZ8OVk99jVbd1P+jVcRn08D33am
zH/b+h92ZFIL/Z4xk931/Fg/s1r2l5P6q7yyH5+B6w72bQ81twl27r6K60vc
YhdEnB2Bfepbv/Cc6TImb1da4rhlF7WbvuRX8PFqomZa4WN+MA/X85Z/991k
sEZ7kU1OLL434D/sBcSJD61d2mVlLPProJ0PocaBrt+K/x9lbx1VVdPG/WMr
BiqK2IFiYWPHNjGxO1ERUFHswk7sVkwwETAABQNkEwYoCtIteYjDCRWwEF/X
uud7zePw8/eu9/mHdX+e7ZzZsyeuuZL6M4Hd79ccyPGIMOLnAu5tEc2yP21u
lUO/u4Tt24+F/Z/0BGO/ulV24++r27XRCZ8Vv6WpFs1G19jE9/MW/9jPq7Hn
xf088T99udRiw42eU2w+SLgPvmT69cyV51rePxxH98RgxhMZxz0xmendHX7N
XNV11gMJHP5CszPf1h9q5UvyCe3HO3ukWWeW6Y9cfkXAuEuqJ3S+QN+/3PjY
8zbusbLIrRhn93kJ/WkQMCEo/EUWcfQnU1ESYXQyk+ZDc2ZP69S8vn/WFf6+
1Zi+KKJl9ND3Wn8anyrwn2Ic9+I+TH85d3l1t8in2bR+e8EvjOXxRv+hjwpp
ZaXvXNurDA9nHOMJfVGdQ65tY0+mEYce47Vvg5HGf9Y9xnMRe/7da7mfpX86
9R9/z877uiTBMZF4M/b3MuNoH3qjkizbN1KtHOJapif2XGilOryZ32dd2PMm
rZ41uXAvR8I9PYDpm+O93V/leL6TcE8/yc6vvd4vihONfEV7gby2bqtQ+9R4
2lfjMe92eFS5lJxF/cFf6Nvx31uYPq3W2Mm6adUK6HuNYefXkVbuo0zLqWl+
sn1Pjr/0rMBtDeeN2TnYorfLFnWhhr6XO9Pze4ypu3rwrjzirox7Mo737cva
D7jokh3pGC7G28qtL3/dkPc9m77LUqbfa9s4Scr/sx+CL2S8HeN4L/xdGvPu
8r0jvP+B/+3/8s0pq77m62jhj8XWUYrsm/n7e1Cxkngldv5uG/lp8/YVBTSe
95kdzWy4zoUfddTE57Bzc+lnk2dpemrqjy3TQ2pOvLstVdUQT2Pn79f+RhuH
eanF806eXdPbpHc13k/8bvV+/T5OM1MTn8d+t+3VzKicP/c4jI+C6dfXDu9R
GvCnHfBigeN3iwW/XHzHfPZ8ZMtrsy2eqIh/FrjQH8ljVUSeVYxa7L80vfeW
1AeWGvE7kl+W8N2JC99Xsvdo1O3LHC6P3WV6y36dFfcMTvHzvcZ/31Fa2Hvn
+NjBvP+LWfsfGiU+OOtQQNya8XDGMW+DmPww09d4yAdrvp/cYfaRpF87Pc5n
5xK/y3gc48K6k+ZsPR8zpIDPk2pMP3y3w+cZqY4qcR1R/ith3RHHOLP1Lp16
+uZTw+7ZxNk8ld6Pz3E9+JnL26f/238k02W2zz7ODqV95j99rVo6dcgw55tN
jLhPSjcWVelb4UqKuK9KFxkX9knp9+tahT2988R9VSr+lrqyi1ZB3zFYqPOF
98Vfg6vhD792TRDuXxqpLuPCfivdHe3cZd+2QM6Z3LVvdLPx4y+epPNgLNPT
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
3WkgH2dmz5WM8uImdKsTJdp5pd0d79kGZXwkDr+UDT4nPBdtSBL1eNLz9ys6
Nl/P5WHYO/wYR/9xr7R1mTA0qeP/yGns/nJiRLnuxb8LRL20dMDLyD77cBLx
iewet9Rzj1dBBf4d4V+RM7nN+9VhfB7Cf+Nn1yabpZ0KkjdgL8iLX91xtS4/
35n/hnzsks2jaI8nxOEv1+FOxub85CA6p1j7clCL98rzKwqIw74ALviNyOUE
/f9LQf8v+LfIqj1b3zzbqaZ1BT+KOQ+65Z44rZJFvf1xprfH+bWVxcVMq7Z/
uMMQfg/awvh0xjHOZ1h80u4aJYpd99No37Nm52kzJocL/kvyoRG7lhZ3jRXn
m/yzOGNi7SnJ4rySpz7Q1tTmZNA4I26vvY0irZuPUvSDIn88cOir+zN5Hvtq
I7YebTONmjcLySC+na3f7w93vFW7cXviZ3auzWDyvOAnJle6U+L7vv8n4g+Y
PvNcQbJR26qf6Hxswv5/h94Xlk324N+RrXcpy3hW9snl3P+W7Q9S3Z67Clau
4+M/ij3fbOCXCwMn8vNLxc47memv8F5m7Pm9qsIWJdM4r8Xad7Z4+62vVa64
H0oVVzRc0rliAo0D/MGGs3Pt73mllH4yvRPaZ/NESjlSuW5SaTada8wfRlpv
EBhTvDqL1h3i2/rPn/do1SW+D0C/0ey1vZxmWFYPU5/pYdB+AGvnww6PMZWf
83sB7JjV5sf0d1tdIAvrmuyMOJfPsPt7ocvweUuzuX0K9/oigUOfoLhkt9e4
LuefBC7sP2RPFO4p8uWHikj9OZwjXjNlkvkLU10FrV/WTzl048QoPc8sWr+s
n/IbxoV9Ui5v17C678Fgmp+IJ9Mz6m5UaQrX57C/8nvTIYd6X1YRZ3ZYuZei
3oQ781WiPk3u/6tz3w0WKtr3sC+12dr8UctP4r2Y+yGDVxPOd9JvM7/iB/rt
Bg2w4H41kBPqpEwYOGqxuow+YRrTJ2A84de0bsPwJ+92Z9I8XyzoEwR/SPI3
Bse/wz0F44x9rMYJfweLMVyehx/v1Pnt7GLNc0W9sexq2Xd2zlVut4Jd6S7j
mLfjmZwQ7bp9irKpmua/P/PLPVcc+UvayeXqbcw/x7Fbz9z6dbh+AP6ocU3b
xJsszBXlHKnZrUaLxz3nembK85P71Shya75oR5Pqf5IfNXbOEP29JauBZnPb
+SfROcX+nXRdR2fexrFp8t/3jp/SCSavCueU1KF5k0oF5nniOSV1ZBzjhr8T
J1Y5MG5aNq1H6DOnMS7Mc6lanQYzPfW14jyXml6qcOPBcK38932W6xv/ljNL
Sa4Q4uOkm9c/bQnawfVyZ4V1iu8L/iTS85Bm/SsaZ/iNV1+hHOTeP5v2Sfwu
5BbBT1U2GJEyQv8O18dCDpnXf5yD3WC1LOhFqS4A+CeBC/uefPhH5yYpbrni
vicfYRy/i/hyaUCzCov6cv0M9o1r8172b2KWLPoJy4ZPD5vq2TyTBX8Y+ViS
/u8Fh8Jp/TL/GdmZccH/Wc6JfNU0YUYc9Qf27tmVdPeaxoTKwj1OPpRhvWZv
zzjaZ5ifs6y951W/dxO+/6Cf1u/KWdYcw/XnJEdp3evOdeX2Yugzfy/pvPzT
snzRj0i26n3WePeWdNHvSLZhXIg/kqcNtow53S2d+oP31ZnjM+qMNe8n3nfn
b6P75Y35fZz5m8njHOoWbt3J98/FAv9b/8b3JXDMlyv2dd0791Vw/wTGnRkX
5CL5kJ/d20A3UW8QKcVauE8ySuD6sVTmHxg4+0ytWy0+ES8VuOAvKsXWiNYJ
OcP3ba3gny/4nUqGhoPftr7B7bPwZ8tr0t++1JfrQ+DP1m9Ezbn5bvy+M1aw
64FXYfbBNqdLQo1tud282j94IPMfK2J+aBgfyGlFCWGVvoWUOV+kuIeWhneb
crmxF/v/Hez3nb+5IUP0l5D0lI6eVuGRon+F5DfO/oCvQ6ig5/ks5Z7ZWO7I
iz20vuCH/6vAuMke2wxaX+y8lqIyhviYT8+XhXu9FNbAavN4Zb4Y7yPtGz1U
+3KLpxhnRHEBgh5A2i/YraBvsdA+u2hZmZ9T6M+KTc0m5FWMovWO9mcyfbUQ
DyX97BIw7XFnLv/D38zN+MbyleO5Xhpx85OE8wV82K4F18NWKUW/MjovhHsf
2ZvQ/llB/sT3hdzomfGzRfY93zJ++zbMP1/wo5NN9CrPq/LIl+YJ5L3+53Ye
rX3SV7DX/5J9BixzPNYti+Rn6JPrt27+Kl8bJer/5fn62QfHrX5F+wKer3jg
6cNvodwOhecjllf9FnEvQRL0/3Lqp4s9k5xV4r1A/hHcvKPDeq53xfOfaziv
bFGsEOwmn+XqceHf73/OE/Sin+Wq1SZoula7SeMD/fPmUd4Hpp/JFeSfP/dd
tg8Ldnm5d2j39k0q5onrVK58I2DIPk0uyRloZ+PBcbat67wRzp0M2cXKNaFm
Qo6g/8yQF06bsePMrALRb0HuPU1fZ/MwPg7Q3+o22NnItJnoNxIkx7ZqP6NJ
AN/f4N+SeMbVaHBTvv+DWxZ0Mwk0EvXwSZJ3PZWZTqJGaD9D+jVxu35LU43Y
H2m907nae36rRX8hKTZct4vbD85bCfzveaKQdjjfjthgVMYOKMWM/v7U+mCm
qG+X3tadnLrIuoy+nfyWBX8zqfN5h7u/m+SL8rz0Kf5cRrXr3J8WeuCswPt9
C4eEifZKqctDvR8janE9D/j1ku5fX7zg+5i5wDE/8Xzs0alX3PTiZWEdSckT
GjiHXVCI819yfVh85f7+LDH+RToePXLB0yjO+/yDQ9/7tbtVbuqrTNG/VJrC
8vaLHPn8MW6QP0u1s9rM3OAtrKPfsjnLI4HxhJ5tecOlp+6e43680LNFRCoX
zlWmi/ptWWeVZtaKG7WF+fBTHjxA+xdHvOo8YV9i4y3X7B+6aPAH7sfI7gty
dcaFcaN4IsH/QT783sPgyAI17f+4d19sOeygUR3O4Wdr3HhK/i9ztSzYC+Tu
+c+vn9jB/XAQ3/rkZO2+mzZliP4qcsPtxYd7ymoxbk5WV35Wd0k7tah3lYOS
tzy8+1otzk/5iVGCfxdTtaj/kQ8yeRjjw/S6cnrPSVl9B+cThz9nBuMYN+x7
b3z1Ku2dyc9NtHPyZq/6Qd1vEkc7uYwLfkFy52GOtqZmqTSe8UzufWwTuK3h
vATit5ncO3W9YciJ5eGCnVQhN6nWa8G2ihrRn0p+cuRYhUED+f0X+sanjAtx
oLLuwG/f59jy+y/8RZuVv3+jJChL3D9lvS09TiScKLN/yu+r/Vjr7MHjifD8
tG5Ty4+OUot+gHKPdisLH31SC3bbDNloQbnjNR7zfXs00xsE1mrl61aVc8T5
7m3+OrDCQo1gV02Sm2Qsn7WzQYFoj5PHNY11HmXA5w+4unvt2REhov9ekLzn
wK75txPK+PXJ/WfaPcx14/NhBfJshR5Qu53hz89jfDzjf+dJCJIGK5VPOufy
OE0WpywtjnOcojXmz8OPdGZXr8kWHmohr0WQ1NJ4rOeNevw8Bfc7YmO2qXIZ
/1LprElIwsMLGtGuKp2cl3opdgS3qyIuGHZJwd9DGhe98veU13nifUrql1O7
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
8F7Ih9ae+asIfgWS5ZCsyAtnlKJfgbS6g82Dvr5K0Q9K2rFg/75ihVL0g5Iu
3F99OuID1y9R3jO2T/7tL11K/iFCXAzlH0P/Pwt+IELeS7lcnSonw04G0D6A
eDTo84X4TTmr5+3UZEvO4V9hO/3q/JqfuN87/Cv0ppt89J6TLfoRye0u1xp9
wSNTFsaZ/FcxPuBflh01WL1eLcRZFMs/D6y+dqTdK1nQ/8gVH7u3Ml8bSL+L
eg6PB8eXVJejaR2Cf881ryC7iPFueXI9A+uk2/+Trw/3OMfDp3s7PuX3xJdM
b9x9VaWVPo24vhH5qR4f36C/o5iva3An5l8h6DnlsS0WL5v3g8sD4JfuHZs9
1Egt3svkqXcCj74awPWZWL9bh57VrZfJ+z+btWOq/zvz0JYy+R6l1DfDOr64
oBGfl/S73Nbmm4h6YL6f4Dvid2t4zYjeM4HvD/AD6Wmy+YrxKc5L/8HVAsf3
Qvunn1Y60nkg3x+i2f3FvW/7Q/Iyztew/h85307/7gWtcL/2kk7GOv48ukUr
6sOlc3crHo0y0or3a+k848I4kB/L33FJsVLfEpexbhO5nx6zL0jK73blfy/K
F89BSX96/I17J/IE/UCGtKlvi4V3puWJ9gLJfVUF86tymbzfVKdeyPstuY0v
7u/Yg98HmX+11GLsqA2nYlNE/2rpd5+4NhtcuP4K96zDCV32Nh2SSO1Dfn7X
sHnLCUOzaBxQd0Bvp9LnYnQKrVPImVv6Tg5+ZcPj+CAH2mzv1ObMKW5vtRby
/YIHC34X4GLd87/j30uk8TPn+V5vz+VAsb65EE9NdcYFuVrezDj6j7y43iaa
g/Oc+f0avF6FjnG3n6RxP2rUk2HyknA/ldP7+TgfCUkV85XJbqx+N/gdxlHX
+2+7wEfpodGdI+0WZYp2QKlyP1XzVeuUYh4YKfGmp9f78qJ/12dpb+cw71sG
XE6G/tyF1b8Gh779NuNoH/IM6k2DQ545zzi+Y4GQXxfcBvorFl8j+MfK4VOW
zj/7NZ/kNPitveigqDSrLdfnYP2irsffvGy+O4WQ706Iv6O8c0KeFilnzbxF
Lbdz/SE7L6SLNxVebtvUojwp7beJNZNWqEV7orS5fz/P0+s14nhKtqzetDCe
VIea9OFMvvr6Zv0Q+0t8XaB9s1/3rlZO5XqkE8wedCfmQdrtPkfpflHI/NDa
GFeeeK+jryzcF6SfQ9XWdnX4OkXcAfLfCn6P0sijtguPfRH1n5+lcw6L6m85
yjn8k+s6T6tXeQTn8ENbEBB+x2BBgXivkb4pHXd2qrFbzDsqfWN1qMFxP/3O
uOCXJVmwOtQiX8i44N8llRz71KFwXVSZdhYIz2NcVdP319C8jhH9uKQcnVZO
B0yzRb8L6bd5lxs/F3K5C/fHo371inf3U8uCf4jcu1LJmvcGZe65ZfKP/YvD
XtOd1YMW7tFyN4GfFbgQDy4XsrpCgt5A7s7qPgt6A7kT43hf6L32tHS2azJK
KYv2lyxmf8H3bSrYTQR7onz5bbO3n+NP0P6J/fnzpLj8Y6ueC+uR100W4k/l
Tk81EdElPE6f5YGUW3e792BfYCZxPyY3el/Sq2LfMVvYT3g9ZWFfojxOQlyt
HHX+Vr87Cfni/kZ1kIX2JUdW7/hvP0Be7/hv+eGtNMDX6P78e2Icd5L06vrK
jPGO+UI7CimR5bEU4r6lhG7Ffr/apBBn8WLSWa27qv3udEHOV0jxgbdudPHh
cZ3ML1oqN2BTa5ee4cSxnxj/WnLMJ/cp7auwC7sUeT1ufZbru3DerU+suv/h
6BxBrvsszSzWz43dFCDaGaV251KuzB/F7Y/wF4WfKriG3e92sPwwQnyfZMLq
54q8lcDxu34sT6MQByTVfn2zfVabdNH/Shp6cfqixi25Honq81Zt6xg9gdcX
EOvkYtygpzp1r4/voN9hNG5Y1z5nanZPcPKi/uD56zb1ppztlUbnglhnFu2A
l3axL9l9k8vJuB+F/8r4+konV/B34vVk//a7y5LvCnobrKPujw6t3NlCPF8i
SQ/zd/6QWDlk9KvEzWu0gj00Vr7K9C1CfL10tdIW4/qzxfO6rD4EvMj2QuF8
F/E+EikZS/ear40X84oopfnLBls+8fsg+K3lSQe3rik4ZvyO2oH+2bTTj2uh
oTx/F/TDmR7jZauegaQ3wD5/n9U5BUc8yB3GBfuC3NPw16uUaYmiv4ccePOj
3bS110R/D/kii+/A89AbjLKNyJwX9T/5l9i/i9vv+TSiB893JNYVBWf1Eagu
APgi4XnBL1d6ssmkqMulMvZcacxN3fgmFuI99LOU2r76zt2TuT0afilJrN6o
YJenOqR/+/tlyR2ThnZZqMvzJEAe67L+mdm0uXxdYD9RbOjp5aDmeVyxP/Ri
+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
8/OkVneNQbV80htgPtd4em3x9liFJP9jn4ScTHI+qx+E+AHse/XtCo0rHE0n
fSB4TMdhR6MuqimPLfkfHto21NmjgH4Xz5sty5hv/VBB/huY/58TXOtuO59D
+xv4NVaHCHnrMK9+HPQraV5ZS3nrwC0Szlaf5a8h+yPmJ+oKQd+C579X63pg
eKlGZvHPdF5vcKpTePeOB+Kfic9dlXPbqoE72RcwT5S5S991rA+/TS9+L9AU
rdI21pJ8jOdnv+h08rx+LuX/ontBW4tHpSMLqC4X5tva6Tfn9rBOpPUCPmRh
P5/tPR6TfkCcn5BDwEuXDWky4toHkvdw7lxm/g/V2HrB86/sGi3qGcD938Bz
zwRdWXqe6rryPMes/gL2PcznjB8f2gw4mUvfHdzUdXy7VecKSF4lf/vnq+MS
l+aTvw141pvn62b3Sab7DviopU93fV6YSHm7xHMEeQrAr1pcaHlhWB7lNQC/
zjjmD/hFlr8FeXixHuFP/lLQY3dkemzkW6H6hFt0tjgd00qIV8G5NurjkeZT
l6sp/gTtpDaRf7Uz/oT2iU9h+wDeV/Szgt0Hvzu6ccUi/+E8/6Do74R1Sufp
vMzNlg80qFdK+4D/ldtDz/L4NeIDWJ2dQNQtY7xcfIhz1Q28DiL2h+Nsf7AU
zs27f/k/l30e9iCyqz4ttnH2z6R7E54/4z6roXJtWBl+TOBop9W+ChnXp16j
vMng96I83FxeJVE9P7LbbjNdM7IFnYPE3zEOvxe0o38r8UPTA8F0XuD5U956
m9ueiKZ8GXTOjjS4f/ViLuX/AjdkHPm/wGOHLPd47aqi/F/gMYxj/oNvb+HR
1zM2keq0gS9nHPIe+v9zW7j7ly0KylOM5wf079TGffMHylMMPppx1A8Av7yk
QP9H3m2qHwBe2+o/jrylpF+9NT174CI11a0Ej2u99EqdQ3ky6laC98zOG3fO
UkF5H9C+tfWvvF3bcijvg8iR9xDtZOkbRd1rq5WR9xC867MJYzpf0qAeG7Xz
dOhIJ6OqSsTTluGo94l2SnektWvQVkn1PsGfPflxdu/cXLpf41xwiK9hnu9z
gp0jvL5BC1YPCHoY8GbTjFLbNkqj+HnwU50q/nw4MIbmIc4lp8NTImqbxNN5
Ad7tlEtMQiH3rwbfO3GFqkkk12OAl0/y2emxKIH0yeAXB9Tfl1KL+/ODj+r0
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
B27Z/zo=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFnQXYFsXXxvd9ap/dfQoUsVBKBQEVFUVMBBsRDLAFGwO7AwMQxA4swC4U
FRUTUFFUMLE7CEVRLCys7/699/yv77pYZt55Zmdnd2dn5pxzn/u0O/i43Yfn
oii6uRZFeaWnJ1HUpymKVi5H0SdxFA1UWZJG0XXVKHpHFT9W2qoYRUXlf1a9
TUtRNEP5PZQfrONr1Vf1aJzqzVT5JUpPrkTRS8pfqvxY5d9Q/hrlT1Q7G+ui
u+nv53StVjrvJV13/0IU7adjkNp7XvW/V/n2St/StbbVcZDKN9FFcjrvetVf
rmMrla2odFedt0Btbq2/H9I1/lGdK+oqz6JoG5W1Vp3ndfyr/LVKZzSiqLfu
+V7VvV/HT6r/gNL11MYlyv+jervo3G667k5KH9J1+6v8BZ17o+q9p/xNSnfW
dbdU3XfU1wn6+32Vr6HrXq+0jY71VPaz2txL+Z9U51ldt5fa6KT0HZ37to45
On83PZPbqK/jE51zvM75VOkGej/r6vfb9BzOzTk/We2coPIuyt+h8tv1DO9R
2RClt+m4W/mDlLZQ24nqDNXfR6l+J+Unqf77Kn9Px6v6u8SzzbmtDfO+f+69
s/ozXuWr6hisus8q3UXlL6rfF6jtutKRqjNV9VdQ2xeo3SOUf199vlR//6hr
7qiyeToOU/kXeiazlC8oP1a/t9Cxr9p7VmV15Z/Uu1ipRRR9rvNPUp2Jqv+C
rnGurlUhVXlr7l/plzrnaNVJVaev2vhW11KV6Bz9trvq9Fd6lo4VlV9H6dNK
B6reItXZWtf6XenxauNCtd1T+R5Kj9M9DudQvRtU/3Slv+m3icofynhQ/jWd
8y/XUfq0ntsy3f8z6sfq+vtTpaep7eVK91b9X1XvROrr721V3q/mum2UHqv0
crVf1LF9zW2fpbqrKP+L8n8rHabflim/to656t+GSl/XuJmpcw9W+3/r73c1
LmfwzHkOOucvlZ2mds5X+XSVv6Rn+oHO3VnlH+jcnqqzTOWbKb1JbbTT8Yd+
O191NlG6kdLVam77DLWzufJ/qP5wtf9W1XVfVp1XdO9zdfyt345V+Trq6wTV
v0HP43mVFfT3lkpvUfuddczWOR107kz1ZxDfg/IXq+2L9LxH6ThP9bvp3H10
zhqqf6bqtFS6Nu9Tv2+n8u1VZ5q+wYrKb9a9bKLzF6idLXTdrsq/oToXqJ9X
6t4H6ZzNVHeKflug+reqnR107VT5iTq3rt9zam93nf+W6jQpP0997K523lY7
byh9R3/34RmrfkVlc3XuWar3gtIjmvyexqvdI/T3gUqPU52uypf12yU6d3/9
3kfpGB39ld9S6SNq9x5d+wj183fd73N5X3sblf+nOiPUl1PUz0lqp6h0a9Vp
qfp51anpt/dU/yTVHa2yCTk/twUqb6XyJ3g/usalameezh2s9zNIR0V1ttP1
WuucwTp3c9XbROc+qfRtHUN07tWMyYrHbB/lD1P9OSpfW/leqrOx6q+ksu9V
5xa194XKlil/f5PnwE9jP8uKnvkgfYgnqP7BKt9R59SY21S3p/7ekDlTbf6g
v29T+SGMw7q/hYUqGxGuxTWHq50T1d7jqnOvjpvV/5tV91pd60xdq7/SCQX3
ZwUdX+mcB5T+qnae0xhYSffeXekRKj9VbT6jNu5QeqKOjPWKeUfppUrbqp1W
yp+odturXkP5y/iOdO4Tyv+l/GbKb6RzW9HfiuscpLpP6O/eek8vqK8n6Jis
to5TeoHq91L9LZV2Ub3VVP9I1e2k/MrMe0o761hF+TVVvpbO61jw37vqvA30
/N9Tf14o+Dlzzstq62WVra/rH6n8qio7mHmX9Un1TtJ119R9P9zk652q8nP1
9+1K2yttrzqrq/wRpQ/reEz5YVWXva0x84P68ZPqPZR5rDBmzlTZTjoe1z3O
V7pNw8/wEJ3XVn2crPzzvEv9frCOLfX3t3o3J6ufbzCn6/u5QG2eqTY/yfld
tKXfKntW7U9X/q2ay25X+79V3P9VlZ/G96L8zyrbQtfbjDWVNV35gco/yDqv
Ni5UfmPV+17573R8ovxzFe8XLlAbRyq/RP1pqfxTym+r8qd5h6xjOk5RX16o
eM5NdE8Dq16vH1G6Z9Xz+QFq9wud/zl7CZUNU/2lanNlvl39NlJ1eui3WPd7
u8ov1f3upnp7hL3Qr+p3R/1+uM77SPWnqPyN8E7X1zXnkKqtDio7SnVb6O+1
VT5L6Qk6NlX54zr3Ar3jDXR+e6VV1kYdw9T/91W3j9rspnorMSezf1B7l6re
fJVvrndxvd7dNurfR2pnpMovUp1bVV5W/fbKP8NeSO3NVv+PVrqH/h6sc2P9
djzfL3srnduX8an8k6p3k/5eW/kmtf0x87R+666/32R/ob/bK3+Mzm2ndHTY
G5yq3/5Wn/dTflXl92VOq/u8B9Te0JrH6tkqe501QO1spbJX8m5njK77YuZ3
95LSPrp2Tfmc0un6u0n5GUo/U/0d1J+N+LZ1vQdzHhuvK/+ajm66xhmsI3wv
us4Unfei2j4m9v6TeX6p2nhMbf2l+o8rnaPyk1S+XH37ueq2q3qmj+i331Tn
0czjaT2+s8jfEt/UVMp1rfVVfl/F83cPfS/tlV6t9D/mcB2r6LdrlZ6qutNY
55u8v3yU/ZeOLZR/TPd5uvqYKV2dfZ6u01bvcaDup4/O3U51flDdJ3JeN5ez
zuvYrcn70R8i708v1j1sr3NO17XODt8U39b36s8jaqeVys9Rv/dWnc01Xmao
byvp3K2UTq56zJ+stCnnffgH+m01nVvV3725T/32u9J2Su9Ve1nOe3H62Mj5
Ozyj6j0c3+O+up9flW+L7FD0uo9McnrV+/onVacl9xt7XntE6ae65ilKd1M/
L1ebf+ldzFb9dXXuK0ofV5tn6ffrch7Phzc5vxd1wnNgn3KVyg9g35z3mD9B
f3+Xer3vqGe7IutB2EssyLyml/T8blI/JqivO+joWPMax1o3X3V2VZ1rlR+n
8uPZO6uNvRpeR1hP6jp/XeYu5Rfpt36qv4vqbqI2Tyt6H/NAkE2msJ6qHzsx
N+oeN1edfsgV+nvnvN/trswdqneG6k9Suobq6V+0RmJZbfcm/91Z1z1a7b+q
9NzE+/o27BOVv5K9riptXHJ+Z/3WU+3/nPOebCOVX6Bz91Df9tSxY9592klp
P+QJxqLOT9jz6PktVD9O12+LmFP1TLZUhT2V3qS6G7C3Vr3bkX10rK+/10+8
j5qqNnqpf+NZ49kr6pzbWbv1++Yqv0Hld7IvUHsrFCw3jdTfR6vdf5QuUv0B
yGTK76g6FxW9t1+s8j1UfqvKL1f58QXLOOzfuig9SL/doPI+qt8JOVP11mHe
4PtmjVe9q9SHW0veT3RHhlV/ri54bzNQz/E82lD9DRPvAR4vW67domTZtmXe
753xdqPK3gr75Ft0zra67mxdZ0B45gerfheNmT3UxllKZ+paE1VnM6VXMC5V
76DEe5W7VX+x0kGsG8ofpXNfU5sH5iyDMO4Hh++gq9rrqOsv1bkfqc6ROctu
jOGX+O7Ufjnv9etItXMv87v6tXbde5t7VN6v7j3bncovUFrMW/7iG2ul8bxd
zuvXgXnPpWvpejuFZ35cWGtZc5FxkOEObbIcd5h+P1THYcxXutczCpYLxii/
X97vcTv2rEovZ11Q//fnHTKuC5YjjqGOrnVkwc9hh5JlT87tqne0jq7zu+79
QrW5JO9rDcz8PbXXs/lM+aN4d+r/tNBP9ghfqBzFSfN+W8fVfIN160fQk1zP
967291L7vZVGOv7TtU9B5oi9NrH+tVFb36jNKexn9PtP6sfpjEXdz8nsP5V+
yt5LZWcpf7iuc47Kt1WTO+ghjVL+HfXlCtZT5V9Ve4P1fs5lveC7V/ktOudA
tZEqfyvzr9KRTT53J7VznvrSQ+mGsefq79X/ZarzpY6fdN35yOlq92PV/7Dm
/c+P7EfV5l661o2qn9cz7JxYNhqn9DJ0BbrW2ayLOvdD9mVqO1XZicp3Roas
WO5G/r4j8/vdU+0dkFn2bkq8Lu+g8kVKCzom6PwDdN2S8hOVj5UOzfl+uJdN
9fyeUvn5+vsa9BFK32ctVXkcZMze+n2qztlJx0t6hrfo+iuyn2Vvqd+fUP1X
9Pftuv6PVT9znuefzGU1t/2u6jym4zr99i1zi9ruqfK5yO06Z7zK91U/B+qd
jgzX3UJ92Jz1gXWmaD0J7T6m+hfxbHXfb+i6Z8cea63V7mN57znZr22mtgfq
+Vym+qNV/xNd/2bVP1L9fL7qcck3yrkxsoSus6HK99Exgr19xTIl19pNbY3S
dfoq7al0+4bH1evqw9063lG/71I6Qtc+t+D3+qbOP1PpG0q7q/3TlN9Q6Zeq
d1mTdXq3qc+zdP22Sicja6n8x4rnzyvUzpOqvxvzNetqxfdMf67UuZ+ULK9O
0t936fm0CXJdS50zV/fdUhuc3nWXIYOyZ5yo/JG6h8+QvXVvQ5WuoDr9df6z
6AEK1rPQvwm6xwm615ZKK6r3usruqfu8S5XfJ/J8fyx7df09Xv0cp/TzimXZ
a5UfElkeuU/tbq9z96/63PnIFuyFdK21GJ/IaCo/WnWfVb4D+hnldyr7Ot30
zi5in612ZyrN6Zil+k+ho1CdHVXnPaU3qa/7Kf1F7e9R9L4CmXkTlW+gNp5U
elDV6+hi1Wmt69yo/ME6f3Vd72LlP1X5Vaozlr2Z0oKewa9Ff6NP1b32TK9b
z4W+a0ul2+jvW1VnK6WbqP5WKluHPqvNMxgnavMuXburyq5GLtExQeXfVKy3
uUL9fLXqtZr+XNfkNY2xQZ94j3fq722VLtU5+0UeD4yZW9SvhSr/lj22ypdn
1gOiD0TnUEIXrDaGq26s/DvK3xzeO+v/Jsr/wntR/c9U50r1/wS1s7PSbsi5
Oa85l+vvw9BPKr0V2VbXfVr1N1K/Nin6m9lK93ip7vE6pc/wvHTcyxpA//Xc
0obLng7lyLPPKb+m8ovQdRYs49+ka4zVtfZEVtHfc1X+otKXkUWbnGctfZJv
hPabXOcaxrbK5xQsXx9Rdv1h7CuQrQqu+3TYg/IeT827ndYqn6l2z9S3M1H9
/LdiOXu6yqYXfD/0+Vz9PgrdMPrw8NsQ1R1Scp46f6ndWH1P1M6ZOd/jaPSD
qe//dKUHqf4TyOEqP7zs+xivZ/eLzltD+aVly26vFSy/Hahn/DIyc2TdBjqO
M5S/U23F+u1y1f8ZfSljT/3phE5R5d+rbr7o/EssrXqnS3Ttb9XHbxg3IX+b
2vlOdU/SsxpT9jo7UWU/qc2Z6FTVZlS03I7MjhxD/nkVt9Fccys2Cd3vD7wj
dEKq/6jaHav2H1M6Tm0u1XmT1Obsgvu/crgP/n5G+Sb17Tnepdq4qmK9Dvqe
/9CRFjwmhqq9mcrfp98eVZ1T9fcDav8jHS/Sruov1VHk3lnvii6/GN1jalm/
pL7EOm+Ryh9C3kidp/xs5U9Dx4kuNPPzH5U6fT28i9fVblfmXV3/tZrtAuTb
qg+t9BxKeg4FHSsoX1Q6GRlQ+Vj5w3XspPaGsV9T/nu98+/ztmdg17ghso2B
Nm9W/pWay2/BJqD6W+jcfRjL6MKaXL6V3sW7KntFf3cqOH+lzi3nbH/C9nS6
zj1C596t81YveH5kbjwX2a1oHeLxqnNq6u96Njodld/QZJ3Em+H531byuUcr
v6Lu9xilHVR/YWrd8rTYa83uRa83k5TfS/nblb+95Dzn/IveU/k3lN6m51xW
vq7nf7D60FNl56vNr1T/DZ1/PbYKdK9qoy/6A3QXem6XKr2ad6PyEzLPfcyB
A9HD67yPC9YXzav5vRfV/hWp7UFN7PfU/sIwBh7Q/c9X/gPW0IptQ7/pWpep
/rXK/6r7Okb1P1Gd8fr7S6ULCr723dho1N4c9ed49eELnj97j4Z1Jh+yXsRB
T6XfO5b8PNHztFedv/TbL0qv0JEr2z51Q8W/f6xzX1LdtwoeIx8o/VDHrdhj
Su7Hg5G/Gb6djdXGu3mX07dTy34G6LLeVJ21lB/DvK5231UfV9a3+7b69AQy
Vd3fNN/5t6rXrmJ9Fd9RZ7X5W+H/9T6kfyr9UukvBetY2Xv+HvZ2a6jdh9Xu
AerPgprboT3k9FOLlpFXUJ3h6sNu6GSUPwp7ofI3p55DjlKfPwzXna/6DdV5
MrMebH7Yb7diH6F7/Ir2VH+Rzu9R8Hp3ds517lJbi1U+Re0O5DkjJ6r8U53T
Bj0C+yvWcP3+J9+a0n9Vb6La643NU2V/FazLG5DavvOnfmut/hygv3dVnYP1
Dh+IfO57qveH6k/R3z/mrJfgftFNkG9+xC2s/zqw4XWOb4t5hjUQhQBzP7ah
P3UMRseitKnkeWyKzumk61/OvqzoccwY7pT53V+jdh5RnUTPpQPzUN7tHJPz
eI9D/fv02xm69tYVz3+Ufxj2Hn+E/cc2+n1P1f0lte0FGwx27vmq+4/yd6t+
TvdyBboQtXO4nuMp+n0P5V9W/b/RbTXZPkK+v8pHlTwvfaR6j+q6/xZ9Dve7
PNjDvq573v9P9TtkYR4KstJvRctLia5bKVmGRRanb9iG7q9YZ4ju8Ab1ezH7
cj2L+brfSernocgCyHaq/xsyF3NP0Xq3RWrn37DGTQx1ljVZj5gWrUvk3Hoo
p6wSyimrhvJTdY2n1Le31bf71Yc3dX+T0SunrkP+yrKvv63u6129yyfDN/hH
zbJR94rt6i2Lti8/zF5M+V+UPyvzte9hTtfRq8nzZ3fmROwHyChqL1e0fhZ9
P3r/WZH1oi14x03WM3LfCXsfXe/Fkm2jyL4twn39VnMffq1Z3m0Urau8U/Xn
qP4Hqr8E3ava/lzpaSVfC/vCMvXjM+XfRhZW/kbsfDrvO+XH6r63VPqnjqm6
h92VfqljvOoMVp2bVLZE596o9HPuK/bc/pnyK6psJ6Wf6rhK5QNUvo768TX6
gIpT3jv7oQWq01b1j1QfPlZ+vuqvrvQPHX3Vh00b1nN/W7Dcjt6b6zKGJqTW
SY/QM/1B9a7TuXujh6jZbjItyLXYUdCTf1Lz2KF8lM75WvltdI21VOeHgtew
89CVsH9Q+d9q82VdYw/0uChyysYtLGmy3mAT5DeV91edXRrWI1DOc+6pPu+n
d/EQ61/DurOJep/HKH8N9kW1c1HJ+mXeFzpm8l9EtguvrvyjqZ99a+Un6NqX
NGwvbChdrmu8probq53Ramcl1cmrjXF1YzymKh1VtT1retX4lFVUJ8lZpmmH
/Svyt75y+N7Raa+q/OeRdXVti9aRohNdU/kWOeuisG2D/RjbsF15FHoJZDTd
e75uGe011f2y7vtow1zZZDs39u7j9CzGNWxnvVjnXtywXX8MNsycz6E+emKu
u4Pyk7GlK/9lZL3By/rtuppt6vRxBHoj5cfkbHtaE7uAzjuHPa+eYVed90Rq
3UzXovVvXYoue5+9gOr3597qLu8W6gxUWSfl19T5uyq/jvIHqN1rG9Y3VRuu
2yU8E/RXZ7LHwPaFjkTH3k3Wf3QI+Tt0jcP0ju5Uem/ZuJrBifWIXAv97ciG
cRInBR3F5So/Xmn7qp/NLkrPDPqaP2u2MWBrKNZ8j+gZ0Sc+jM2qaEzSmJLz
/ZuMhQETg57ywoYxE7WG77dz6MP3ut4PJe+T2ROvW7S+65qKbazDgq6ib9G6
g0fBBKj+VejxlG5YtK7n6cz5HuCV1L/uReu0z0u9j3pZdXuozqtKb1Xak/OK
1nlN0t8vqPxm7GDqQy+Vb8/+o+B2aP9GPbtZ2C1U5/O67cOrav25Selzofyl
im0ge6vP75Z8DdrnHtcvGqMyQfnJTdZRjNa9bKe2N1P6c9H1+fuqknVz6M5Y
Q7B1bazjs4r1AegqrgllG6OTzCyHz9C9DkfXypqodEjO5cjmdyOD5a2jW1O/
baDyp1X/x6L7RjsXlzx+Volsm8dG/3wa9gFFX3uszr0jPMOi2rxQZR+qX1eX
/NzA06BP27JoW8+rwW7SCbsk+nedt4qeW7luvdpC/X11ZnvlNOwc4JZUPlu/
d9ZzaRe5HFsTbY5hL6s63VU+r2794ObhfRXqztOfC9TmVjxPjYftitZVoae6
M+jr0NuNL3mvw30hU7zE2Nbzubbk+8Xm8WzQj72i53Bx2AuxJxqZeUy+qPI5
ddsu7614PmJeAhszNnYbW8fWk9GHvfV3lve3w7e/dtHf+8o547TAa23XsG4R
HSM4wB2qth8vrNmufZ7yd1RtwwEDhx5nXMX7LDAkO1Vtw/1H6UlVr/3ofkeo
3bvU319qtt3sUrT9ZtWq99fvIRPULL/8qHSNqtevvevWE3Ed7Ec8jwE6rkd+
ZF+N4Yq1teTfKH9f1xmh4kuw6esdjFfZIcp/XLH++RL25xXjuMBzTdW5xzK/
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
7uutlw==
           "]], Polygon3DBox[CompressedData["
1:eJxFnWO4JEvXbWtX7V3MQh/0sW29x7Zt27bNPrZt27Zt27Zxx+hZ33N/5FOx
MiIjUZkRC3OumGij7Vfarlwqldasl0qD/L7UKZXeoXBcs1T6uVcqbYc8K/IZ
1FWLUmk35AWQr0MeC3l35IWRb0QeF3mI4xrIiyMPUv6D+iWQn0T+nfLs7FsF
eckB9jdKpVmQF0eeA/l95D3p42/aLsT1HMb5V+SYNvV16senfEG7VDqQC54R
+Rrazu310f6AWql0Cu33p7+paH8o+/ajvAT1NeSFkd9qlUqbIk+BfBTyJpS3
YJsaeQLafsTxe9PnP9Q9zrUcjjw1++ej/nb2Xc45/mT/P5VSaSbkQygvxvEV
6udB3odj90VeBnk+rm8CrnVr5BmQz/T5IU9MfzMin4i8Hfe4JfXTIp+GPMDx
S3LOzSmPSrt3e7lmr/1lzj0C+UH6WJT7f4X+h1GehHYzcfzJtNmB/iZDnqN/
vle5vrXof2zkLZCPp/9ZqV8K+WXk6+lzPur/4n5mQH6W/nZGnpv6C5E7tF8O
uYVc5XzjUb6YfdNQ/p5zHc/1XIg8NfLx9PsL8kK0+Zf+Zub4Z7j20dk/DseP
QptRKK9D/V7UncK5j6b9xsiTDmbfd/Q1BW3mQj4LeXLKu7LvT8rzcL5Dab9w
pzTyRZ2dn219Xsh15CWQD0fersv1VvNO+G6szzYh9TshH0f9J/S5xxD3g7wn
z2c62u+LvD7X9wz3PzbyWsjXI/9K+3mRz0c+DXlC+hoPeR3kG5Dnof1w5NWG
cn9zIX9H/8cgT03/31J+nW1d5Juof57zfYC8NfLHyL9zT98gH4k8Ge0PpX5h
+rsCeWb+40k53/jI6yEfQv3Z9P817UcgT4o8Ce3X5ZmsjvwC+8cfxjXQ/lzv
h/rzOH505FWQT+Z8c3L8D7Q7Gfl/1B/N8XNSfw7yushtyodT/0L/+/ia65uN
fZNzLdPS9lLO9T19vk/9nf5flI+k/WvIT9P/ebR5jn2vI19A/UyUf6P+Evo/
j/r1fUfYLkKegT5/7o8PoyGXkfeivBDnuxT5fNovSHkp/oOt6WtJ3pcy9zeC
Y16m/ye8H873IfL2tF+K46/y3eeYM5G34h2ciP4+Yt8uyAvTfg/av4O85VC+
oa2R//L9QB7meOG7xDt7V///rVEus92CvD31Jco3cvxYyDWO/4Tjm+y7D/le
2v8P+Sbqx0ZuUr848hD1t/f7u5XnWUW+A3kHX2PK99N+Hv9P2q9D+6W4/gOo
O537rXBRwx2vHFuQn+P530+bW7i3LejvPspjUn9bJW225Fktw/H30t9c9HcQ
/3eDc9yNvJvfHO1XKPItLE1/79DfGrR/nfq5HV9pvxLyc14vbcah7arILyPf
5fhN/aj09wzyKcjDKK9I/bN+L8hj034y5E2R5+P8X9F+ZeR36XsLzn0e52si
L0r90ez7gPZ/cf9XI3eRV+f5/It8HfKY/MfPUx7gHDf3v8dbqF+M469HvlyZ
e7+VNpMiD+d8y3KOUWj/NPLz1N9B+1Foc53vAte3Bed7zXeCvl+n/n6u72iO
fxP5OeSj/F6p/xT5DeTzqd+e8xUMFjNy/FP0PT7bt/Q/JfJ0PMM3af8l7Weg
/dX0/wbyF8iX+HyQJ6L9j75vyIfR/jTO8Rn19yFfhXwD/U9H/0vQbmz+76uK
9DUV7U7keb1Lf98N5hn+xPUsRbvpaf8Ox9/E8Uu2cvy7yLv5n9L+W9q/Q/vh
tH+K/nalvAz9nUp/n1L/J/WfOJ5T/5njP/KnyBciT0Z//3G9I+jvLPqbFPkv
5E2QF0fehOv9E3l15NkpT0z9z8j/Ir/B896Ifb8ir4C8An1vjvwv8pP8Bzc5
F9H+E+Qh/q+xKK9H/fuOX7SvUz8O+z5DXp766/2+2fcj1/e+7wvlj9l+Rv4A
eXGu9xPkX5A/Qt6T8rr0957/v98X8qL0N1U17/Ml9Pcy+95z/qP99vbF1qH9
b8hX0d+KPKMnaPs/ntfnlA+iv0k4/gT2TUvbuXwHkPdDntOxwu+P/r7i2ezQ
S/0E1I9Df3NQPpDjj6ftOdQX/L9zs2/Car7xlWrRV+5X//D7o3wf/d2DfBXy
5lzPmhz/Btd3P+1Xp7wP21gcPzr1G3aip6mv3Ub9ZfR3Af1f7PmdA1vR596l
/nLqR+FdWIvj36S/B5D/dr5H7tG2QX8r0fYg+nuC9pMh/1nLeF+l/bfIr1De
o5u55RP+6+u534ORJ+X4iak/g/6/dH6m/ayOd8gX0V8F+THna/qbiWsaTvvR
qP8MeS+OH73a//459iG2Rzj/mMgncPzBHP8U8sPIG/P/HYL8NPLkyH/7zDm+
zfG7I89E+RGOf6yvrz5MeVf2jUJ9k/pVkK/l+FH7881szTzPiWl/IO33pvwg
++anvkL7a7nHCTjmAd7dFan/lOs5kWvYEfkc6m+m/h2e4Q7ILeQNKH/Itplt
qbuB5/MJ8p7Uz8b5PqY8SB/nUn8+1/4Y9R+xb3fq/0f9/pTf9z+pZL78hrZz
cf7ZaH8g7Q+m/QnIe3O9u6lzUZ7T97+vb81BeVWu/wD1KerLXOvRPgPkudR/
6W8E8o7IG1P/oOMv5zu5En1kCcqvsW2OvBDt3+S/egt5O+S1kE+jvBt9LoT8
FvKNXNNT7FsAeUmu/xHKT7MtjjyK8znlHWk/M/I/9D8G5V3Z5qmo7PIsKH9D
m8Mq0RfaXM+C3OOT1L3BffxL+QL1cOpPon57dU7kbTwf8nqU56fNao7NlF+k
/Dn97Uv97fRxIOVf2I7z+Xt+ymdzTw/wPhzEvjM9Xp2U57GaOi3yKrRZw7GF
/V/R39z8rkH9aJzjIs5/EM9vA+R1afNAEX35VfqaDvnyIu/zGNTvqH5J+UD/
E+RbeFYb9TK/LoT8Ju1H41xz0v9qg7G9xq/FnnqH/mah/sYi32eXypWo34ny
ytQPQ95Q/Y36Gn3Oizw97a9E/qyVtu/Q11HUrUn7sagf5vfD+Vq0uYb6i6lv
Mx69Tp9D1ej0l1B3Fu1Pov1Jjl+0vwz5LM/Pve9Bf5tyvWcib6o+TR/XU38p
8qXOf5RvZLtsMPbkto4P9Fmm7i3kI5CX4PgtqJ+K46fn+IWRN0GeGHnqfn8X
D+Ybuq4T+/NFjt+d4z/h+F1ofxP1t7JvVv6vk6gfMZhv5CWu9zTkY5APo/5Y
3z/aX4M8BvLX9L8z8vXI+9B+Hfo8j/s/D3lv5HMpz0X96shL034/+r+H7Ub+
j9Gpf8Dj1ZmRR+X9Xoby6mzjqUvSfgb6+8g5i/pntMdovz3/x7Y836mo364V
/Xp32k+ifUH957T/rDJStSxNhjwK8v7q29p3lKem4m2/b3UCyl+wb23KX9D+
7v7xayJ/jnwn8sTafMjfIT+E/DXylxz/NfJ9yD8hf488HvKPjehHX2lvc11f
8nzn5/8aU9uCtlcht7S5aT8Pfe6ivcm+K6j/gXu9SfvcdxR5Gdq/h1yj/Tm0
/5n2O9P+JZ7prEOx4XbTP0D92dQvoD1FfYX6OamfhHs+xbGba7q7Ev/B3PT5
BG1mQP6X9rtRnpo+HqRuQf8bzvcP+06l/nPql2xnDHYsfpdjm7zf49JmA1V3
7u8tyutw/EHIK1P/PvLuzYwV46tfqd8Usc3XoPxhL8/rR/r/wXumPC/75qC8
FMd93Yv+/S3yePw3tWGx956h/f7se62Z+eMU+l6W5/Ut7e+l/zGo24P+b0Ve
yjGN+nX8np0PtQE4fln1Mer2QV62kvHmCeR91eGRN0KeyHdPWVuF48elfBf9
L4Lc830o8v40eP/u1T6g0WRUPE75GPq6gPLL7djSB1H3KPJw+jiK/2Iu+hi9
EZtA26BH+7sdv+hzF9ovS/ttetEPH+F6zqDNJJRnov0+2sK0v5/6sdmWp/0T
9PWC/XP81cgL07Y7LPb7IO1fVZe2Pe2WQf6YNrey72Xk5yvRv1ZHfhf5TeS7
ka/oy2/pj+GYdyjX2Lbm+g9GrlL+2Y36SWj/SC32+dG8bztrr3GNMzq+VOJv
uKiIz0Pfx0Uc9xTX0/AbpL8jaF9v5Hv6yu+fNl814u9Yj/rfHZ859nje53mq
+Yau79sP61D/POdqcL+v1XK/D1UyZ71Uy/joGN/QF8C+jSrxaeg/W4Ljb+J6
/9NvwPV8yTnOpv3J/ec/Oed/gvbPctxWyO/V8v7vVI4OclwjtrBj6tbqUtT/
oa2rvoW8XD3v546034C2S9Rjm22LvK7Pthbf27TIM6h/cb6t6Gst/r8t1ZVr
ufeJqJ+c+gU5/hB1U+RXKU/Rie6/bTPzweMcNwrH7KfORnmIfaMiz8A9fsO9
3sO+AeRd6ONO9WsHxlp0mLvp42/a1JCvpP7sbua/4cgX06zHs3m2Fv/dJpz/
dc7/Si263CgcX/ht1uJf3Ij616ifu5739X6ucTXqX6R+YCA633rITd/JWnTq
hzlfw28eeUv6+At5tk7G1zmamd8/or8d6PuCct4Xz6eucuhAfJqP0G4h7vVU
+rsO+c0iz+s07vN0ji/bJ/VXU3ca8n20nx35RNpfw75/6HNA+wX5Eo75mvOX
h6JbH6Q934zuti99rqmvlW1P2i9H+9nVV9m24trOK+f7aHPMjrT9oxH/6WH0
ty3tJ2zFXjyM/etzf99z/JUcO7X35PdFm3mRp29n/luS82xG+9E5/ibnC+RN
kWfs5nvTF7Y58gu0X7cS3+kW+jOKzFeT0dfGyFX74F7mps/59DfQ3w20/4b2
m1C3q/qi8y1tDrA/jlsX+cxy9N2f9OFwvgu5/v2pn412e2ibUH+IZeoX49q3
oXwg9ZVGjt2EcxzVyPz6OeW96eMzrvlh+mn7f3P/21C+iev9H/29p+7h98e+
QeoeYjuH8tH12ErfDWSMrdejm+1K/U76fujrM8cy7R/6GKOeubDFNSynflDP
XPaL9izyKfXMfSXqd6B9pR5dbSHkOylf7HjN9R5diX27IMdMzrmmYFuI8mj1
+KIHaL8w9afXY/sMsp1B+Tb9I+pbtN3O51+PLruw87Hvfz2+9kXUSfSFdzPW
X8jzWYDy/N2U9el9QR/ndzJW6IOcq1+/Cpd/Qb/9JdRP7/unz0ndgP9zFa51
I8cFxsd7W/FVr8S++yjvV4+u/Jn/Iec/uB5b5SOOH4P6verxheuT3AG5U4/u
vLjjFe0PqsdXcATyltz/K93o/2fRdmfud4t29LHxaLsT8l9F9IHdmrHnV+X4
i5Bnoc0WxjY4fj7OfRDH70b9etpL1M3rGIW8fj2+vtv0SdbyvLz3BdXtqZ+d
9jPSfgnkvZEn7mT+1Leyl/3pU+P6DnWM5XyPsf8X9RGOmYzrf6ibsWgE7bZ3
buX4wvgG7fb0/O3Mf5s3o68fzjEbVOIj1F/1RS2+A33is9DHNs7TA9GBV3Dc
RX4KecrB6EA712OP7UGfZ9PXDP35ciL9qtoe7fgaZ9YuRh6oJx6wnzoE+8rs
69SiM47Ksz2dfQdw/KM8k1XZvy3tH6D9PH6D1F3Zjb78CNe2D8f+QJtxB2Kj
q7PNwvlf4fjRqN/XeI82WyU+vlOdK6g/nfIuvjvUT+d4NxCbQ5tufNrXfb/Y
N4G6E+3m4Hzzsq1M+bZuxtoD1Um43v3ZdwzyOsiTc+Ct1B+JPBZ93KyvlvoT
9H9w/ffS/xndjLXb0v4R7xd5WeQ9OP+p3cjLVOOTO43yGhy/IPK4jgn6i9hO
Qv4L+VGu71vkNSlvwO8wvo91+V2B+vlKGc/8bvx+TqW/5R1LilzbpNSdzP3v
R/1R1Yw5t6tbc86zkBfn+d9J+Wq2nZHf8xvi2d2vPVTNNzoq5d/4f0/keV7T
yPO8hn27UX+TOi/nuhZ592rGxJuNf3G+I5CXQx6H67nDe3Y8or/TOzn/mdpD
yHdRnlmfI+UHmvmebu9mbjxSHd65kf7OQJ6SNo/5/Tsm+l9x/hHc46rI8yGv
MpD/b022RZAnpH4v6k+iv8Wq0dkfp7+9uYYltVebmR8ubWUuXYz6uZzn9Zkh
T6uNQJvLkF/RXzCQ+fYD+nvN7w/5RP01yK9Wo0O8oG2t/xL5MeTDOP5X/aXO
Dfq/KH+o/w35dO0Vytt0M39MwXF1/t/1eomVOrYNId/M76/UV7j/h3men9L+
Y98/z68uTf2n9scx53H9H1H/ju8f8lXc6/nIa/u++b52Yu+uWc2YdgXy5chb
VaPzFtzPJcibIz9K/cWUL+tm7rtI+4f6vTnfIci/ejz3d47vMPJW1L/nWEj9
ushjU/8t1/Ox/n/ki/VP6KvynVE/bWa+Odw5g/qNOf5Y/Zf6F5EP1n4xPquP
GPlmjil4B/dBPhT5Tepv6PvP1SWfQz6qrz/+qz9D+5jyhpznFP7vK3nff9d3
SB8PV+LT1l55Wh2Y8lvOQZR/KqJbfsGzPovr25d99+pvoX5L9p3qd8Dxdzln
Im9P/ZWDecZrIS/MdjjHn1uOf2sxrvFM5IvKub+72Hd9JT4lv4/P2Xam7hLH
W8oT0mb5gdiAxie30u4aiI/YePaHrdiLNf0w2r9c713Ie/tfIE9L+82RHy4n
PjhVPbHNhaoZX6ZVlxlIDMmY0jPUr0nb/8oZ32Zh24n6ZiX+jJ2L2AsvqdfT
/xQcswH16zlH6O+vxx68BXnjet+eHsx/uClyy+/P+A3lM7TF+b1xID5y/ece
47GXlvP/jtJLrPR06s6m/I3+7KH4WN/m/XpYG7cSH4HjY4/zja5/jv7e59r+
0uahr+X1IVMejTY3IM9P+/uQr1bPrcQm1p+yLNuMft9sw6m/ooi+pt52Aufv
aZ8gD28mXv0t+/cs5x71F7yuDVdJTF9/+ULah94L13wCbZ/gHX7W+DPlYzh+
j3piD9tV4w/aqZN4d7kfT9+QfStTV6Wv9fVV0t+tlcSc9DFM35/PHizHv3Mr
9VdRf3Ul4/ttfVmfkv6gI/S50P4DjjuS/o8s4guvN+Mf7PI7GucftRqfyaFF
7KVKM3iDfznuZM71F9sElO+k/2sq0ZH1Pzl/+W79w7Ya5UdpswJt7yjHfu/Q
x8+8H7824r/+z2+IugrHT60uy7bpQGxq/VM/8L78VI1OUuL/HmAM/KkZHVL9
chZ9uEOZw5w/fm7l/z91MPHut8UUaIvR/jfqVmPf8MHEGPTHft3K/RojNn61
qfY0bedUf+zER6Ov5mTkc4yvdDKX63PX975EkblhN+RjkP9pJVapj3WNfvu9
BoMJWdT/3jmR8nZshyMf24kucAf3OzblE9kOHwxG5ZAiMVljs/qQF+X6PqX/
3mBsdOMP4ifGRb5wIHiJc4uM/dOxb6tOfKT6SqdUpyuC/xCbIAZj7U4wJWJL
xu7L+os7g4kB6V/+mmPWLkWnVLd8uxa/xEgfdCc+NH1p+qD1RYsJERvSRF6G
8tKdlE9g3yf09W4rvjwxQUtRdyTbTuq2vAOr8V9+Q38zcb0/0WbrIv5idV+f
ic/mC+oXaMbnru99Ueo3VN/lek/keldsZyxy38HU/92JL+F2nu9Y/j9sMw3F
Z6Hv4k7aP0j7TZzznPvYKtXotOq2U/sfaW453nfj49PX5/GHart04ivymK2p
b/b9Wc7hzu9bdHPss/Q3DW1npH7pwWCC9vF5019RD4ZKLNUIY1al2KRHGrvU
h0T5KN9p6l9DPnIwPu6T/T9aiSXbRn1q8yKx5nmQd0E+w3dqMD78Myl/rH1f
z/y9DfLzrfjK7VN/6836qAYSEzI29HY3vkJ1pHco71sktqtPXd+6MVFjo2K6
fkM+gm173yXud3vxN0XedfdZt3IR3cMYsLHgWhFskhgl46/1Is/TMdCx8JYi
scN/kb8wltBOrPxv5M+Rry/iCzdmbez6kmb8ml7zD8i/c31XNxPTNbY7OcdP
RPn4fjxqavVN8QvI+7XjPzE2NQr7fqX8L/u+dOwZSixzIuSevqly4sN/9OLX
17//J/X7dxLrEkMiluSXTvo6mn3Tca2/0f4onv+QPhDqvumk/BPXPxH1lyOf
OxidzPjDBcinIU/H8Z+3gjkSe+S+CykvyzHnD2bMWxX5R98/ylcNBg/h876c
8j+cY7Nu/G/GZtxn/H2eXmKlc+iL6uV6Hy3Fh+T9/6QNXEv893nk73vRS9RP
rkW+ppOyOstfrWB29CcYU/V9uIBnf0g9GAOxBuPwzH4bDMbP+PzZnYyt04if
4fifWtHPluL4Htd7bifyBYPRXz/Qxq0FIyZWTJ+9dqD2oPHvDfyPBhMTN36r
z167Vft1s04wfWL7xMdtjtw1JjHQx1R0ErMwdqE9LFZsXbbxB+MTuVXfLtsE
lG9gu72TGKKxxO8HYy+910l5gOv/ivLoYqz81rm/7SjPzLnPawajIFZBTKUx
e6+hR32T7ZmBYFLEpogfeWsgmBKxJUPOl81gUkZiU5yTaxnzh4pg7sTejcQ0
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
2HBmJXjwGfRpDkWH27cWPO5M5fiIf6X9orXEli9k3zG1fD+LlKJj+g79LR5w
KP41/WwHNcJ9Usf8nrpJkXcYCMdGro34hwnK4ejI1bmpHntcTpD8FX2Sxr7l
teirVAdW1zy+Ft34z2Z0r3MGEz82Dmw8+Cj6OIryOM3obl7TP5QnZ98+Q8F8
7c25P21GV/+3HH6D+DCxh3KY5DI951xlbLoSPs9rXM+mfg/6aXsZMxw7tJEO
pfx0K++KuImrqX8deTP1KeRr++OP8cbt+uOLcW3j2/+x7whj3GzH+j4PhH8g
hkYszWiV4HHFN4nHFWPybj34JrHTW5SDAdW+25Ly25Sv64UDJ97uLfbN1giu
Q3yHNvbVlMdXP0e+nLqbab99O3iERj34wzWNo+ubKSf+JT7iSu2TcjhqHxtX
5Fnd5PxvDL4xEkoxkhMkN0gM6lSlfNPG19evxXafgnNcSHlT399y7HXx9WIQ
xWOcbNyiF315L+q/M67RCz7B+N2IcvhdX7Ht5v2yzS7mxXeunDHoSjEoXMPj
g+F43VaPju774ntzeS84AfECZw0Ebyvu0lj6++XE1423W9b+1w+wdi3+tffK
4Udd0U484sZG8JLiQb7223AMpDw2288+q3L4mEuy/UL5BLa/qTuHbUFjeeXw
mRy/PqF8CNvP1C3WSN1s/P87UT6Nfa+Vcg7xJmPV07d92rd4s+G0XYZ7fKIZ
jKNYxz/KwdMaYzDW4BxtfP7Sevy7A5XoEJPW8y0YAzG2vyr7apWMoY6ll7Ft
NpB9jqHyFOQreE7xbe/Xw10ZtRJ8mxhT/dPdSvhXa7F1KvmmZnb+a2e+c967
l+c3ZS/zmfOa+Ebxcva1jf+B7wTtC+N76g29xBGNJ44lZpN999LnypQ3037g
/serBUvoPvHG4iHGF19hm0Yw72Lfx6mE/2AMy1jW5/055R7kD+l/qkr4bI7n
lvU36XdyznXudY4QnzfUSLxdDL5YfPFFM1ai4z1E+R6uf0LkTZ2netH3/hsI
hl8sv/rUx/prxVggn6oOVUkf4pM2b0T/8hvyW7qX/q6m3GX/Q/T3Wz1ckCkr
weOoX8m9E9MqtlUfsr7kgxvxT05EH0sbby0H31r04gs5Sb2hl/Hb9s4Jzg3G
lIwtqbOJj9VHo6/mRZ7FA8a7esHDHNEI3lV8kNeiDqUuJQZMLNhTHD9VI/qp
XCQ5D3IfxNNMyfVu2O/D8WQRyj3aXFCP/lutRMeamOu5vP8+uk99+GS2fSrR
IcWv64PTF3ci1/cE13NeO/FB44R39mKTaptur88Z+SrkHbUVuf8ne8HEio09
uBJ8jngdy/qP9CON1gveRtyNfJNj6/FXyflQJzJeaSz/3ErGiM1qwXucUAnf
+RX2vaAtWA1f4vt28GZvNYKPfbGVeKxx2eeRH2oktlXmnv71HWokFvOfMXfK
izaDjb0ZeTHnPs5xWSU2gHyS0TrB23+n3qs/xTmR9r/7/VO+uxE84KpsBzhW
1TNXyPFwjli0Ee7l5ci3+D01wg09C/mGRvC1fu9e8yN+j43gFX8sBR8sfnQp
yvdUwgGfB/m+Sjhuh9fCQRcP+2YteGY5nfqL5AS/2gznVLztsY3wUWY1hoX8
pf91Lzhd8brXccy69cSbxIvLDX6pj3c6iPM/x74X2fdcI/jZ4fqEa8FnOV8a
c36Nuhmb4XLJGZmJ8mKt8NfeQ168FXyg9ver/f/shUZiU5PS3++16G9yO1+v
RB88me1j/ru6mBuOH6MI3lps9Su9xL98H3wvXu4Fz/hpJTFnY9Gzd8IvuIN+
Xuvl/5qY/r+pBMP5rVslGAWxCpPUw32wD/GQ99TyvIwxG2uWf6Gt8W3/nbi/
lr6MGRs7Nq5sfPk3fUjeWz1cKDlRvzSCgxIP9V0l/J7fGmkrBkIsxIO11Blj
f6BfP4Xx6n5/8qvEj4sjf70XDqr+Xf2rLzczH8kXkoMqF3Xk9ZcSY7pN3YP6
NwbDiZZfakxFvqm8U2MtczfCPX2Lfcc0g8MVj7vLYN73Zdl2Hsw35LdkjFR5
uWZip+ISxCeMx74x+/qt/F5jIuqTx6rzD4YTK1/XmK+x4NGaiQWP0cyx+m/1
4ypvXUqM2f6MoRs/36SZ2HqvEe71i8b3msln8NBAOINyB7v1+KoabJchn+89
Ufc720a14Dk/HwwH9nTqjkOuDcXm0vY6tN6P9Q0G73lEPbFAdQ7tJcdJx8tr
y+HHyA+TGygnUG6gMRBji4L8jI083gl/UB7hj8iH8vuM9WLGasFliM9wn3gt
faL6Rk+sJRZvTKhH/yfVEisy5iR+8sxaYlHtZrhYxtA7lKdphW9izH7aVmLk
HeMttcTOxWkaWzdmLt9j6Wbw1uIFSpTH5XrWHAxG6K7++DRJKfvEVMsj07em
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
zqeuf1+/v9uK+DbETImdWrKIbWEM0/yQytpD6/btja/7/IgL2L6lfEo7/4WY
r1OdC4uM3Y7h5s8WkyjmxjnH+WnhIrkr1HHk04nxXb4Rjoj6zbxFcueN1tdv
5O8Y6xiZg7obzNlzPKf5S8GiraQOVk7Myny9U7aDFXYONp/W50WwUHL4v2yF
T2KuCG0K+SNPdoMd1cZ/Sv2ikTi58fKZO+FLmhv4BbYO/a1ZJDbjNye+e6Ju
bEF1xB+74dhXm3kmcu9fVcdxbmN7vT8fblQKBvizIhz39RvRYeUX3UebiSvh
/Mj9ka+gL+t4fVTtYPTEbJrPQ+zeKO3Eoq4pJVejmOe9WuGni4Uet53cvcbk
v+omxmSsyXzWa/fCvzPmeq0+1SKY1ysbyZfm/CbG1bxE5icS+6rNp+13WTn5
Mt9rBctkjjLzqcuHlPv1lj7Nbvhj+lZGsH3bDiZ273ow5WJlJ2kHe/uX82n/
/9J2NieNuWnkF5lr3Jxq3W4wrNO1ks9DbKuYwMXq4YCJFZQjKFfQNQDMJyyf
ytx6+ijlV8knc6wQ01Trhs+1dSU5Qt+Uf1IEG67OY37hOZ1PytGxJ9YWYRtW
js53NeWHm/G5L1oK11Z+0OXl+ED+pvxgJ74DcyR/xvn+o82s5eQkMx/YukVy
GRg/+b1IDljzsJmPbYFe9NFPSsGY70t5vSLP/jba/1nEXrkEeRe2TdvJKa//
1n3mh52kCLbwpErycRedzMVH+ow6+R7ltq7CtoLfcjv4upOQ92kHsygGy3xI
YhlnKIIFNMfi4+3oF8+UkgNQ/evjVnzr+tjr3N8JjcQZjDdo72zX6PtBy7FX
zAks5s58cqv18v1r25gz80mx1kWuRR1EXcR8heoO5mxQf5m7CPZQDolcEu07
ubv+R/5X6tDq0mLmxc6rrxgrNYeT/p6ZimDVzSnvehMbIh9eCgbzYOrP7Ca/
gnkWzKfzRZHc1mIszc0k5vKPZjhXYjHNqbEX8mGl5NrYoEjZGNs99L9nPXm4
zMe1aDv/uf+9MTTzl2zUiW/qfvpb1tit/peBxMgf62S8vrUUjOmOfX3Ub1WM
6E7qv434rfVfa/+J0dcvq04pdn+TdmKXxjBv6OT5jvQt9f/vCbx/yp9pwyP/
28q75TvlehC+c757chZcX0AM6y+1cMDEtsrPVjc1p5P5EcXcikE1v5NYXL/3
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
BaX/3dwUxgxG5fyrF1nLyJx58nG0l+SuiRnYqkgODfMgmA/B3FvGa+RVO8ff
2E68QF6o/NA/24k/iJEyJ9Ja+j56wR6oy8k/M/5wXitz0si5qZPxTB3GeLL5
CrUNzAFtLmj9559Uk8PaXNbmzDfHgD78sXrJkW+OBGMGU/eSE1wcmHgwc4WL
r5MXczT1q/eSg15e0Uh+US/8VmP5T5WCXxRv4toTUyNP3gu+T9y6+PUpelmv
Sf3THGjm+zCHvhwt1+OZthd8nmtVaEPP3Qu+UJ6RfKMJesF/icnXBzee714n
uWTlBLmelvx+8+M7PhlvFa9n7qCDSsknaDxziPZ/87wX6ISzY9zPMVe+jjEh
Y0O2Md4pPk8ekTGr6XrBo8kp9RmP00s+ZnNli78ThyeHQ3+0OZrlj5pz2ziy
8WRzG5lDSPyta1a6fqXrWxiL77FVelnP2FjRE6XkLxVfImfOnEmz9DJn/1EL
/8m53G/E3Mn6fPx2tDFcv2HfemwPcyjLWZRfaC5b311ta3228q9cL9BclGLW
xNNob8/XCj7Y3EfqaOKDzW2j7uYaCuZI2JR90/SyhsLIdSqRx+/lG3b9B31a
fttrFdGlXNPFtV1cv1DdulVL/ifxHkUta34MUD9zL3x1YybGTswXZVtzrg+1
84x8VubEN/+9eGXHC/sQL6JO53og5oZR13P9GrF3riHjWjLmjDN3nJgqsVXm
63GtT/3n4ofFM2mHao8OV7+lzZXVrHnjem/m/DX3r2t0m+93+V74NOawEk/g
+oTatmImzJ8tvsxYzYulxL/UadRtjGmav36X/vtgzpg2dY121vY1h5T6kjqW
upYxTednv7/fasHEmD9XH6u+Vm3m/Shv0EuszHVFxWc5Zzh3uMag86/f+4r1
rCniWhmuWTGSwzOQeKHf4yr1xKjNR+yaLyfWE2M03uAaLqPUkxPM3GCugXNS
PTldze26bjtrAT1Xjr6jD8Tc0q1WfCP64PTFGTN0Pdq12uEemHPosCLj0xu1
+JT1Lbsel7E1iiPzs5jD0FyGcnRcr0DMothFbQj1NXMxi+W5vJT8ROYsNHeh
a8qaL845xLnENbNdP8p8gcb2zJlq7lTz28qRdXwyV6M2mthSc7JquxmDMRbz
UTnroRuDMhalzev64K6hcUUjPjbX1vB7WbmeNaSMd7kei7abOS/NfWnO0pH5
TypZP9bv6eNa4v/GH/RR6qt0TVHzl6rvuVanGBGxXWe1k0trz1LiI67RcWEj
PlDjDWIsxVqaY0N/vT5FfYtyGtU3V28nN7Q+E/VV+QnmXpbDqP7peKLvwjWK
XT9RvrqxDOd78TD6PPV9ihl2/Q59ZvrORq5RX2R9GnOFu2aG+dTEa4rl1GbX
djffv7qm+r98GNdAktchv8PcgvqwXJ/H3E76tpbrha+lza3t7RzlXGWOU+PR
rq+grS1GSKyS6126trAYnqv6/k/fDdc88f9xvfjHB4LZubQbf9o/teCZPP7c
dmwPcwBs1c56HNqursHhWhzmk3RtCDF5YvPG9ButJiet6+ear/aWUtb8cO0P
492uQ+WaG669YX4s1wLWB2x+Gu0Fv52lkT/gOZzTTqxQTLnY8gvaefeuLEX/
0r/3SjMxerEqrpcuFkYMy2Pd5LfWVnVNENcGMb+oc61rgrgeiTG29/r6q7mi
9RfvVY0NbyxTzITYCXN6i1fU5tD2cM0WseKuVyLW2WP0L2uTaZuJsf68G8yy
2GWfsfEX/bGuayVH9btu8ruKZTbGZKzJfOL6ruS4uj6ZfFax7z/022/Wtw/E
1P7SDV7WtVb/qwb/pv93tnr2/dbHb3yj75bt6z5e5apqxvTHu9lnnZx512cW
T2dfroH2Zzf4V9e6dg0a16LRH2puIe0X7Rj9tXc00kZ87I3drI1xcB8/Yv5z
fVfGvIx9ifEW621OdONf2rbGxuT0m4/pmW7WHhbD9Vw3/YlFkV9lLkdjBteU
ck9f9b9/Y6PmJPi5iA2kLeQ9isexP3OjiU8316Pjg7wd+TsL9TJeiVsWv7xw
L2sUyEGXX2+uetegEaPvf+x/7ZoC5oAwBmEswniJednMz+Z6L/8VWZtdnVO8
hjE7Y3diIsRGyAmR9yr/Va6Ia8KI+9Onpm/N/PdyguTzm4vf+UYOmf6kSSlf
2o6vRQyp8XrjB4+1okOpS5lv1nxo5kXT3+4aa+Z4UMef23hUL/nO5BrKPxT/
YD4g8wIZfxTPuUorOR7N9ej85lpv6iQz9eLvNrYv5kv8gPlP5DOas8ncTc6X
5tTSnz9jLz5afbW+r65NI57270ZiSMaS9ImZY1Cfg/6vObuJZZ5dTb5Q12Rz
bbaf+/go9alLquFoP9JNDNRYqBhh8VDmG/VY12xw7QY5JXJLPMb19BxDHUt9
J57tBn9l364B4VoQ+qD0RbnGk3yY/7XDFTFHsfghMehyFM3Jq/5kvhex8mLm
5VqaD1rbVwzofd3gCdduZo0B1xpwjQvzAOgjeKuVuK/xX3MomP9KfGG5mZib
sTfxyv81EhMzNqZOo26jz0M88+jd+ALkoMtFdz3dmcvhqMtVN4ZsLFnOgngj
/YnmJTA/gWsvibkWey1nS+7W/wPQCqg1
           "]], Polygon3DBox[CompressedData["
1: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
No7ud3TN5KuJbcC60SXx30S3m03G/g/C7btQ
           "]], 
          Polygon3DBox[{{4116, 1952, 1885, 1884, 2457, 3561}, {3153, 1939, 
           2020, 4126, 3065, 3066}, {3972, 2879, 1884, 1885, 2880, 3973}}]},
         Annotation[#, "Charting`Private`Tag$112395#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl01toz2Ecx/Hvjszsv+1uae3geDGURBFRslqb1kjGXGBSjtNObQ7JDa5W
c7EltSyHXXGDK4kiF5Iw5rBhU4wpUi6Emtdv6v//P5/P+/t5vs/ze37Pv3xX
08ZDaREx7tuSFZHousyI9cTD3IgCfjd9Uq2UrsqOaOKf5EVsz4hYjB2Xfzwz
ohNfzRfiI/wpvse8Guwj38030N/ofnpA7Yc19mHX9LiKHTE3kl6GRmvdwTbk
R9yVPYNVyKWp99IHUxFL+St0q2yRPY3KD8rexL6qp9Ffsfv8XPU/9AdskD+c
7C09onlaxHP+r9pF67+glxgn+es5EZfoIWypsWc6Yc5LQy+dRr+iz9GZ9Gv6
PJ1Nf9K/Re83WBE9HRvQoxUbxpbROVixM/isPoJ18W3qb+l24ztjn365+BeZ
93yzPS03Nw8b5S+o59MT6mN8iTHFr3BOz/iFsr88yxhegd3DOpzXRPI+nO0w
fgMb5gvVL9MpZ/U0eX/0HtlM/kFyD/Q6jd3ii+nb2AljR/KMetXrtczak55p
LzZibp9Ms8x3bBvW7Z11Jfvhq5P3LD9Er6Jr5R/ZQ7t6ozmLsP3yB/h6voQ/
a511cjuxWiw/eSXGHfwCZ5ZKzjG5D/oes5/5mO3GWqxBZnxGxNGsqWsWa7Ct
2DwZW4g5znILLxIr1Wbzm/lOecceZfwmPrkGJX7q6Gprl5vvE7+tWYuVMaZH
DV1KZyX/gWT/tMeJn3KzzK9Sb1NMrv13rJKvzJi6YtGvXpD+/3/5D3eVbds=

       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzrdKA2AUxfHrpBA1yZLdwa5jROx1EfvmGncdxRbbZkd8BDd7C8HuGnT1
HXwGEfw5/Dnnnnvux1eTm5+eK4uIHEqJiIfKiEcsVkUslEfsJSPy1RE/WEOd
fAkf6NCrpWe4wDmeZL8VEZ103+26mw3kUhFttEs+qreNoiyLen4Z3XYl2i57
wSU/hhX02D2j6E/j5lUkdAr/XfmOeRcTOJX1yhr4Kxz6xzV9lc3YHaOPP5Df
oYB7NOpk0hFJ/2wx9+tU8xn9WbyZ0+YBmqJZfMmH0eQ2j0G7SToi+8amzrvs
U9bqzSG+mT+xu6G3mMKW3rDdkc4fJLY0ew==
       "]], 
      Line3DBox[{1409, 849, 1321, 662, 2905, 1604, 1122, 1587, 1410, 3410, 
       3176, 3602, 4330, 1124, 1125, 1005, 4196, 3603, 1412, 1515, 1113, 4197,
        3605, 1517, 3604, 4302, 1006, 3267, 3142, 3372, 4261, 775, 3411, 663, 
       4279, 3373, 777, 3268, 949, 4303, 3606, 3177, 3608, 4359, 1518, 3607, 
       1117, 3412, 4331, 1128, 1605, 1129, 4198, 3374, 664, 3413, 4134, 4199, 
       3888, 3143, 3985, 4368, 1788, 3725, 3144, 3639, 4311, 1323, 1325, 857, 
       1131}], Line3DBox[CompressedData["
1:eJwV0MsuA2EYxvG3LKRxXllYuQSHpRIiZWPTjYjYuIBO63xaKhbsCBdh7wok
EtTomNbhFlyEXxdP/t/7f96ZbzITW0mlWoiITWn3R5wORJSHIk7wYiRiRXK+
MxxxzI3rjvCcX5ZP3a/5iv/Bey7jWvbzwYgG/8eVpMWneGhviT/Aur0P/pv/
Mt/wHezlb51T3apubDTikWvrSnyO77qNom9wXndXhj127uzPyYxzSEEy2ddP
4x429GVpese1Z3e5NdzBM/6NX3TPtrnFP/dFLJhf+Qd92r1fXsyJdxZ9X908
b6eGNW5SpmTW/pMk/KW+2v232MR/fZc4Rg==
       "]], Line3DBox[CompressedData["
1:eJwVz7kygwEUxfFrhmESW0eh0VEqmNHpglEpLU0egCewb4nCEsbyAjpUtopC
q4hChKw8hsbvK86ce/733G8ZzC7PLrVERJaa6YjTroh8Z8Qiz/H93ogG/ij/
ygv8h6d7Ii7txukLK1MKa9rNmzMdEXV3e/JUt45eP02ba/iDzrD8R23uynqt
vGp3m7xTPtOt8yf8wlyxe035FrmGD2BVPiqP0ZW7E8/dxeb4Ds9j3+4mdbfl
At/iOXwm+Xa7ku4m9k7Fdv/gWQXskz6oIRftRswvboboPvlnt8e8T36mO/OG
3lFya3eDrcsT3rnGM7yEX+OHOqvYG63Qud0BVjH/AzpxQNg=
       "]], Line3DBox[CompressedData["
1:eJwVz7syg1EUhuGVRsQ5JTNBWqWGAtE7TGS0TqFmBhHXQKVwmKCgkOuhFQoi
Qohb8KR4Z+31fnut/f/Z4l5hNxERa/jrjbjsj3jGFep9EdeDERWk0xFteYvb
kr3iLBXxy9WcX7CJHvfK7h/hRzal7mAa2YGIp6GIHFqyB30Vx/oNs027v/kJ
fRlzZuaRwxefsHvGeRuzGDd7jzs05VUzh3wJq9yJfafcp2yfO0CBryUjGlxD
PqZvu3Or3uCDz6tFd1fUUTzKR1CXdfOpzv/pJ31z0rkL77JhroR1/gLneOMr
3JI9y8hgEQudt7z/Dyh7Nmc=
       "]], Line3DBox[CompressedData["
1:eJwV0LkuBGAUhuFDQ2KPPZZEbLdgqez7NraGSMSSWGsalyBKhEg0QmUrlNyH
EDMaicTQqTyKN9933nPmZ6ZucTuxlRERa0jnRLzkRZwURLzKz9yIDr0TmUUR
g+bD/IgjPHLHssVdg+wyD9nX6yX6E0rRaj9dGHGBbvOwm1M3V0iaq707avfF
X3IpbkSf1qv4NTTpy/wo36jXcOvo58a4c27OXOWtN24AB1kRM/yOvotZvUc+
uxv3mTT2scC/cBP6r+//ITfMCbnkf7+2v8Em1yxvseqdSfsVeWc+k8X+9pib
b/6e6+X6MGXO5n/0Wjfzerlehjbv7yH5/xu5W5Zt9o+otH8wtyOFd8y4qeD/
AOIwN+I=
       "]], Line3DBox[CompressedData["
1:eJwV0DkvhFEUxvGjxKy0IqGlwwgarUpiErEUktHTWj6CJVohoaCzjHLsvY9A
FBqRiEzsMq/lp/jnnGe5971520qzIzN1ETGF38aIWjaiPheRmJt4SUVs0D+y
NftEJmISt7whfPPH6HFMpyMGeUe4syeyQ34Ze6jyD8x91GQd9CJ6dR/c/cVr
pRfQrrPK++QV6ArW9e55K/jg3/B29Aa8c9csyJvtl7hqiHjXWdYtyq51W/DG
W+KVdEfpMub0X/lbev32bbNH3pQHfYH8/7/QyZmJM0V062TpDJ5labMP5zhD
l/zEPMUxUqjqdTo7j2HfefSWJ/wBfBw8bw==
       "]], Line3DBox[CompressedData["
1:eJwVz7kuRHEUx/EjColYZhKF2BIP4A14ARQiEuuMuSR0M9QUltYLWIboeAHb
WArba5gGnUgQ24jPFN/8lvM/5+Z2zxSG8zURkSAaIrYaI7bxxqdSERuYaop4
kWdpWR7lD/jd5og9HFbn+jF9hj/CMfK6d92je+N0jvboCri2d4N6fsLslh/h
K2jjP3TtdJLe0dZ0RAe9Ryd63Rqgae9rzfr5sm6zLiLn20vyMhL+ofoP7mT5
E5ziS26xt2LnCRn5E2dm+/ZKdMHej27V/BlZ/hs7fJc3RbroTR9dw6Bu2vwX
Q/pXnLvzJ1/QHK2gqL+UrzBvbx2JvkT/AVrSPD0=
       "]], Line3DBox[CompressedData["
1:eJwVzbsug3EcxvHfq05N2iJhNFTCSBwuoOIO3IBEgtAGQ+9A4jBgddilvQnS
IKoGBktZDbSjGJVPh2+ew/95319+dWd5O4mIFSSZiM1cxBktZSP28SgfD0fM
o0/+HYroYA/ndu+0iRPvb/TO/h6JbYMu6G9xLR+gH0X9lW1eX8aMvCUXMc2/
6lp2u/yaGz041V3QH5t1mkJd92U3Sh/Qq/v0PsaPj3jjWxiwSWNR38Gkri0X
cIPB7hua6Yg5N2fxjAnbb7zwh95rOEIGFf+odm+5c+luYvcnBy3Zf9CUXV3X
wBOW5Kp+is/yZbsN3+b4f+KHNUE=
       "]], Line3DBox[CompressedData["
1:eJwVz00uQ2EYhuHXoHq0PactK7ADa7AEI4mBxFBog9gBc4xp/Re1AiPTaiuR
CGXOCGHA2HUGd+7nfb73Oz/TS825xlhELKBeiXjJIl5xLW9yl/dqEfOoyUW+
4l414pJ3zVX+SSM6um/u6zLdhvsX/MCFJGLEh85T3Sd37d/ZLcuzKOHZzi1/
4QNP5p6djjv38jkPucIt/ZSdSZTNaT1i2zO3kMkl3ar8hxUkukV3JvQj8xmv
edYp7+jX5UQ+wYx8zL/6R7mJorntXTe6I3mQ/w/3eZwb/OasLS/LLS7gXXeQ
f4u7+7md/QNPITWC
       "]], Line3DBox[CompressedData["
1:eJwVzkkrxXEYxfGHBbnmlaRwzcNO3gO2Mi/tlMiwkeK94JpSLBSFrdXFyo4o
lJKZzPGx+Hae55zze/7/5OBo50hGRAyhOS8iURCRi8n8iFWsYK8ookmWxc/G
BG8fwzkRjfxv80BhxA/tQGlxxKH9CAdo0Oml/ehDuc6um8v02r0lWq/zZH7G
rGyanuqeoE72aE8lIlppM68JtfxV3ZT3ixjHNq8Gc/xPe4/eF21Hozn9/z8I
/1it987vtn/QMky5f4UW36qS35sfcIw3N+/oLZKyC3qJNu/SskxzBiplv7ww
z/DfzBu+sY4K2bx9h79Ax7DFK8cm78XepfdKS3Duxpr9jN7gDxB0Pxg=
       "]], Line3DBox[CompressedData["
1:eJwVzjsvg2EUB/AjLtFoXVYLpTaXtu67CYuOQosPUBMaIcHm8iXEaEIMdoKI
r8BqMBZl8nuHX857/uc5z/NmNzZL1aaIqDCbjhjIRCzwSDUVMSNr74wod0Wk
1Kz8krrvRnfEdMKZFv2qM61qv/my/IIb2TVTzpyqV/T2RLyrb0zKz9TFjoia
vTv9BH/u+bVfYkee0acZN5uTvbJir1k2b/7AC/cUnWnzxpr5OhXqyb/JyvYK
5o3kfnb54UO+RN5sT79Pn7vOZUOMyZ/0z2xzKysyKi+oR3za+eaLEXlOdkhN
f+L9Y4bledkBW+4ZJMc/bKwxAw==
       "]], Line3DBox[CompressedData["
1:eJwVzjsvg2EYxvFbQiT0wMgiJhtGVCzSQWwGMZhMDlUfwVCRIHEILb6FwSeQ
qmPQMPgOUkY0dfh1+Oe5r/99Pc/79i+szeRbImIe94mI/VTEAfaQxSV3mo7Y
NJe6Iu7kY/kEJezyvbjl+7ojPrlvfKGOG77uXtH8pzecjPh1/mADS3YDOLS/
1i20R0zyq+YX3YpdurnnnuUxZ0FOYdyc08u7mzEXuSTm9K74d/4DZ50RQ1yr
XRtqXEO/Byt6NW4aFfMOt41Z/WX5lR+VRzAlV/lFLoOqd9b97yP3ZC5zCUzo
PnCD3FuHbzuPcOH+lt15s49/7p055w==
       "]], Line3DBox[CompressedData["
1:eJwVz0suw3EUxfFLGomo9wKqGHgvgRUoMTGVtmhJSBh7hgV4T8TAYwOGQkIl
GCsbIJjSiSGfDr6555x7z++ffzq7OLFQExE5JBojzpsjLnCG56aIo2TEZUvE
vF2XrBPdOJQX7N/tZs1HPOAJFdkQTt1d6dViG9fYwg1K9h04oeeQ994bP6N/
QG/qDtCDKNdHFN3syzfkydaIdrfr9AuO6TaM079uynSfXpEvoJ/ekzforfE5
+tVcdjeJVTpb/R/fWOJTWJFN6+UxRmeQ0B9xE/jh06hgmK+r/g/9jRR69Xa9
+UmX6C/zj5+q3nnnTvYhuzV7sGN3b2YxKv8HHoo2xA==
       "]], Line3DBox[CompressedData["
1:eJwV0D0vQ2EYxvEbi4hqi6LUIAajwTeg7GrshL01EQkrdh+AGiWtdx+AjyAs
XhIGjZdEghjxO8OV/3Vdz/2cc58zslAtVVoiYpEGUhGPXRFPlOMr1Ef38iXu
ZCLm0hFf/IMujUXK0LezK113Z8SPvG9uTTdFrdSjH8UTqjqvyzXsxdX2iGk+
SxeU05XN7VJevvGswWQXfTobsSk3+A08wGtz/fgmF8y94zA+26fW4buc7clN
+ZBf4o+w6d6yLs9/6Cb4dd0kzSbv1I/huPxHM8m+VNINOdvClN0/dcfyivsF
nDe7nXwr34an2DBbT/ZK/o/u1uwLncl3eI6v+OtZZXP/WPs3gg==
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzj0vg2EYhuG7E2rBjKQDSyVCDD5WOzE0kZiKokNJ+QEqEokJUX9CIhG6
NVGxqFgYDKwSEl8x0MTk6HDlvJ/zut/3eVLZ1ZlCIiJy0tsSMZaM2G+POJBz
52fnCmY7IkbNb20R73LBpVsjarig++Cqsill35Zwmd/GP7m2d2+/jv3Ox+ZZ
rNkZN0/KhGTcUefv+Mfm/dwTDnKn5ht9V6f3uGPKeR6ncRHzum5dpvku50sZ
khffD+Mr5rDg30W7c/bWcYn71I3gFxb1Pfy7fgd/ubyugRu6FPfgPX0Ydn64
PXPCPM5/4xnXhmk+iQNYxRP9ra5k3pUtWeEaWOEP8UrKssYf4T/1Mzwi
       "]], Line3DBox[CompressedData["
1:eJwVzD0oBHAYx/EHg7fligmlWyiTBQMmsxtukcF1KYvBKRZXt1mEYlJIXQxG
E3J12105deWtjAwWgySXMt3H8O33+3+f5/knF3PplZaImMdge0RfZ8SlrHZE
XMl1735cJyJOucmuiEI3p5f4AblkNsWXvStufuQLV9Ubet1OTd/kHvU7fc7+
tD5ifu997s8HmeFrXFZ+2p+1c6unZJZ/lxf8qP1X+wmzN7nM1c0XzD+QQY7b
slfEGCYwjjX+SB7j0M0znv6dHPLfMFrd73Ffsg032MA38lh1u2/vDL/2trkT
fUfuosj1yD/0YsbfB7IJIa01Qw==
       "]], Line3DBox[CompressedData["
1:eJwVzbsvw3EUhvFTS28L/wEhDLq4RBAzg8tgckkaMWrCYGKXiMXKQMVeW3Wq
hMVEIrWVRIjE4DYSpD4dnjy/8573e34dy2uzq4mIyKM9GbGRjnjORGzycSpi
itcxibPWiEvZuV7V/IFr2Tvn5J386m0X95nf7GbMi9mIab6Q/+AXW3ZjOvPy
OeR1FppdbNvV7Wr+kzbfcYZzOr3I+q7rPMqv3HrigrkhD/sWJFB241a247vG
fzpLshHzKIabt9oiPr2/ceeLd3W+uWx3igpSOj3cjQMcoogj3ap7BW/v3V/h
IvdjAA/mCb1xDJpf9Et8giHsebuPf7mVNy0=
       "]], Line3DBox[CompressedData["
1:eJwV0M0qxGEUx/Ejb+PtjxWFNFciLzdgaqxmYy6AW1CiNCPLSdaSSRmRlFhZ
TJmiGCyMlwuwsLP0eRbfvud3znOe598/X14vrHVFRAn5/ojpgYiZRC7iSm7y
slzAkXqFD8ciitySt/hnMGKb63JjKOIMs7jWf9Crmv2qd7lm90TvVt5w5obb
8rO3dsy6U1YPc4crejl1hpH0jp17bqGMunyMqXG73IM+9OLSvS/OVNST5m11
Vf3Kb3j0PU/uX3Uu06/JTXmfS96e08vszfMCFjEqL/G7M5/u+MCe/MVh9s1/
7tvERPoOvXO+wF36P+anOFD/AyKxNHI=
       "]], Line3DBox[CompressedData["
1:eJwV0L0rxAEcx/Gv8my5W22UFaUsFqNjs3iYhLsSd0y/szAog+eJmE3+AuVM
HkoZlAFJ5gtJnYmB12949/5+P5/v73cPHdOLo6W6iJhCV1NEtSXijE+5wjMZ
eXNEp/3S3m2+4oI81xpxYh/T9XAfejGnm2yLGNZ/mDf019hEvawBz/IH73l1
/8i3unvZLhf0ezzPC/iSj7urYgJFe1F+5+bNs7Oyd16SJ/K8vcw12af5my90
eff9KKW/R7+GH92T7JdrbrZlW0jcDMh30u9rPuBG3ucKv/Cf+xXzoXmVj3id
Bz13rsuYl/0PWb7hMhIcoz0bMcQjyKW5z/8HeM84NQ==
       "]], Line3DBox[CompressedData["
1:eJwVz7srxXEcxvGP6ZzDctxWh5SysZiRy34GTJTBINczEbFIFuUSZfAPYHAt
RCnlZDguk43CYpSSCa8zvHs+z/O5/L6/usHx7FhJRAyhIRExk4qYxW0yoq00
ohUf6YhGvrcsog89OEO6POKUZs1c0EucIyNvMX/tzi/+sOhGu6zgG0+0X7aC
AWzp7cvy7izYv6Gv/Kret3qNHvN36iX9Aq3Es70qWo0KPOAX9zg0V+Mdj+oN
+yl+kw65My2bwqf9YX5OPY8a1OJNnqGnehOoV7/LJtXL7iSKb+OTNFd8L/JY
l734RrP5Jnzpj/AHGMUVv1v8N+xgDz92OvRO0IltM930SK+L5vAPQII8hg==

       "]], Line3DBox[CompressedData["
1:eJwNzT0vA2AUxfFbi7dF+QJMamCtQSVsQkKwGah0sbS7EiMxNGEwqIahEV0b
EpUg3cRgsGiYjGIQr7Pf8M8595z73GdgtTCfT0REDoPtEamOiFPMdUZUeyJm
6b35i37jE42uiCfdJb3CAqrdEYs0bXeGHuj7ZdN8IIE2bMvv3HjwV8tui+7K
XvkR+TCm+BVvk8mILF3GLW6Qw5K+7M0bXbWfRdP86P4GNrGmK9KKfJ2+m9P2
RvHB1+W//i7pkm72oRcN3Yuspi+Zn/kUMvw49uVD5jIOsWX/iP7JK3THnPHH
GH74CXqtq9NJ7Mlq9opundGmOS8v4Ji/kJ3jhP8Hrqo6BA==
       "]], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/H3GZwfJQbcYDgil8XgRwabiYGSxaArEaWoWw51dfm5UFIW
hosBgyuDv4D8EWYlPxaLDAqP7/Ds9Xm/Xu/Xuz6d82vTq6mIWEQhHXGLoYaI
47qIcnPEivkGX+br+og73hVd4F0meJdly7Qia22MWPLOyy7Q7dYL/9d7FpXk
np0mO4f8gu6enSpvl87Iz9BjzrZEPNB7rNgb1GnwHqCTdk5w4EabXgbtGOfV
6B3Rb3M+uam7YW8s2ceEOc0/5dXSUd4+utx+kuXcr8p66TB/B3OylHlE/ijb
9v7U3aL98hI+zK94xxtyvM3k37p/en3otF9CFh2yIqbkP7IM1vnPukV6bv4H
6+Qz3w==
       "]], 
      Line3DBox[{931, 693, 2297, 2066, 4225, 1900, 1965, 2294, 743, 4283, 
       1893, 1959, 2703, 4340, 1246, 1888, 1955, 2167, 4325, 1077, 1882, 1741,
        4238, 2688, 1736, 1785, 1375, 4080, 1778, 1473, 1871, 4321, 1942, 
       2665, 1448, 1449, 3907, 967, 1435, 1352, 3897, 1437, 672, 2123, 2009, 
       4213, 1853, 1928, 2266, 4270, 1999, 1847, 1738, 2256, 4361, 1548, 1840,
        1918, 4292, 2963, 1717, 1833, 1410, 2251, 755, 839, 3532, 656, 823, 
       696, 751}], Line3DBox[CompressedData["
1:eJwVzL8rxHEcx/G3lO+5S7kNA7H6MZhuY7FY/DoDkvwo2xks6gxKBgNlUOcy
SMJRVyR2i3+ADX+EzSKPz/Ds/Xq/Xq/3u39ta7bSEhEL2M4iHrBbiHhqj6jn
IrrpHrQVI7rMiryJY9m9zmVnxJ25yWvgm/7CB7+gs8q7Qof7cffL9AXe5DW9
efo8kXZ5HWeY4dXQ6i5nz7Di3yTvBMV8xAY+3a2bE7wj5P181BvRv5ENm2P8
Q+zTr7pN+ZDetfzHPkiX5Ad4ly3ZFzFq38Op3q99Wncq9XlVvPCDf+umbM5h
gL+DZ9kfvy/B703Q//1PLLc=
       "]], Line3DBox[CompressedData["
1:eJwV0D0vg2EYxfGrk5d2ICQijaSN1UBMgrLoYuvAQodOJl1EIixCSAwGm4G0
CUsbHmEyVUJH8Ql8Cq8JEr8O/5z7nOu6z53nyVeqpfVURJSx0RVxi82eiGG0
uyNuaDYdkdDnvoiqeYJBvmU+RxvyAl2TNzDgvG9W742ooSK7xI7s3O42LfN1
jPTr03+NJf4MGdkMP40Sf4qsnj/8YpF/1XNCf/hlfRPeHMe9vCg/xqH7admd
+bu9D6R0v9F58yPU7LT5xM4TfcSU/AB5sxZ/ZTbk3qrzCibNdrHnrU/93/jC
WOcb8SJ/6PwfFO0vYFTelG/RC30F2Sxyzv95nzSl
       "]], Line3DBox[CompressedData["
1:eJwVzrErxHEcxvGPxeHIqXP7hbIwqJsMyuLS3XIWgwwnkURXd6WE5A8w+JVN
uoHBqC63GeRKBpsoi4FBFqvFy/Du+TzP8/l8f798dbuy1RURy2ikIq4xn44Y
7oko0Rqf6+Vx2RcxKG/KDzIRF/yG/gqn5qadPXlWP45EdoKa+UHecHtuJ8O/
0hc8oy5f9Ma7nTP6zf/QutuCPsEAskMR6277zSt2qijb23SX0E9+Abt8kT/G
qjcqsh3ZmnlWlnLfjTf5DH51t7ol2bS+Qw99557e4Un/KC/gCFNuOnRMN0mL
br/szNEJ3Sha5rL+g7Zpzr/ve/PG3EL7/3/piN0/7r8yNQ==
       "]], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/E3Tu78yJk4MRjdZhKDwY9CBqkrZSKJcnfJjwyirpTLSOws
FJPNQEix8TfYLFZEPG549nx/3q/X+9td11xxqlAVEUtoT0aMpiJ66yMy5jHz
D4/zL3fWRWyb++U35mEexHs6YoizdkcNETs6hxV796DP7YXOK1fLcro1vI9u
TONW/qI7pJPwXkctBuzu9DfkJd8ckb8hKUthWP4je9LZlU/IZs2f+MKZ7JsX
kZNl+NjNh/0kL9t12DW4TbRENHIT5n07L1vgB91m3tNL80zlP3HZ+898Ld/U
Lbgr4hmP2LI/18tWfofeAi69t+3X5Osou1vlE51T5HVK8gP7e7Tqr6ANV/gH
qVw0mg==
       "]], Line3DBox[CompressedData["
1:eJwVzr8rBHAcxvGPUudXcUahjluom5gMZGExuB8yWZgsKIMyWohBYdId07Eo
8R8wKGXiFqX8OmRjNLi8DO+ez/M8n8+3b2p2MbdQFxEz6GmIyDZH5JAyT9I8
plDAXltEOhHx1Rgx0hRxab4wd+kSyYhumpGtyzZwZX+NH8Sw9+75X3nZ3jGO
MKQb053qHugWP4oVPsvf2O+1l8a4fFVepbt4NE/QAd0n7fCnffokz9Nv3Lq/
QwXTfJEu///Fbs1eiT9AqzcO6aa8Xn+t2zEnZe2Yc5vhW3QfuhNZn5t+zOvK
um3ds/wFr1iS/9g90xV1Vdkbzvl32un2D6G5NPQ=
       "]], Line3DBox[CompressedData["
1:eJwVzT8oBHAYxvHXhJN/ycloYXMldgaxuGIUixuOcOcGA4tErMrApHRuMpmu
OCabrBaFxYn8KaMonxuevs/ved/n/fXM5adydRGRoaOGiHRTRBdOYBLXsdgW
scev8buYxB3sbpfzV3wqEdGC/diMo/JSY8QJ3dONG0VclC/RNf3VR3S6scz/
8tu6x3by+hnc8v7Wm/desJPFTVkZB8wLZh96q7J3LGCeps073M3xK1Q1O9V/
xn29M72qnUfvVvMHTNhP2XmSz9oZr81pjO5ohA7MD3WH+Um9Cl3Ihrx/5DP8
IP8l/6SsrM/7lnppwzztdql20+yNL9u79P85X8FXfJH9A+kDOhA=
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztyDENgDAARcEfUICDogQPSCBhrgUkI6FbE5g6dri3vOT2q573kqRsyZre
8/17cM4555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPOOeec8yH/xTnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555zP4Q117GNV
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{349.3996258279964, 308.8568080555143},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-2, 2}, {-2, 2}, {-1.0337717065182486`, 1.091189652787496}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.2790397452273675, -2.5000364340601267`, 2.2631735790600263`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.725795351681167*^9},ExpressionUUID->"d1617d7c-e357-4887-9e45-\
11b838f2ec55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", " ", "#2"}], "}"}], "\[Rule]", "#3"}], "&"}], "@@@",
      " ", "points"}], ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "y"}], "}"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"1", "+", "1"}]}], "Input",
 CellChangeTimes->{{3.7257954527347565`*^9, 3.725795457233612*^9}, {
   3.725795532981612*^9, 3.7257955345895996`*^9}, 3.7257955815060196`*^9, {
   3.725795817244066*^9, 
   3.7257958190832605`*^9}},ExpressionUUID->"81659896-066d-4910-add8-\
0add5f564ed7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["1000", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7257956950616894`*^9, 3.725795937868035*^9, 
  3.7257961812763605`*^9, 
  3.7257963895386486`*^9},ExpressionUUID->"9efec707-f534-4a7a-b091-\
513dcd6e438f"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
eIzdFu1byfizmEtIe3145twqxp/FnKxP81ueQjXjz2Ju+UirbfJF1YzOfO6I
UcnR8TI5jM58rmlls4NKLqsznwu9dqJ8XyarM5+7cnT+wFWRrM58bnLwwt0R
x1id+VzJlpkX6pzLGJ35nPf5jAZnFQGjM9bP/1dnPndrxe2LWoMrGJ35nIWH
rE7v7xWMznzOND7q/df0Skbn3/vpWzcfaR2rYnTmc7LrdH/stKxmdOZzs9dd
j78kX8PozOf0YrfXbUyroTrDPsZU8eTNB0tRZ+A2EX/PetO7gOoMfNKr6qE7
P6POwIcUe7+UqkCdgftsbk04/gR1Bh72yD5C5TrqDNxhxoZ5V46hzsChfg46
A68YePnVWcNKqjNw2faQ98OaKqnOwI8PGfHkYEQV1Rn4Ju7YkterqqnOwC9c
3d5jvnIN1Rn49IMiccxz1Bl4QaRqaQARsf5MfB+9mTjZp5M/E5PGD1yWZgHr
zyRnWtPUG135rD+ToO2KNxuqOvkziX/6o2vGvU7+TKzseBlJAZ38mcw6oah5
waKTP9P6OePPxNs0MFQpoJL1Z7JYOGfTdb8q1p9J0jclntGsatafSUTgMenZ
36tZfybN6qcSfO7XsP5MDAf3ClkxWcT6MwkfrjlhyBlWZzFR2efa+9lcVuff
+5aJ/hVJnzrFZxLzKks+Lq9TfCY/lCetG3SjU3wmtrJGe//Z3ik+k7fGvS/n
DmZ1FpMS1Tv99e6Ws/GZ1s+Z+EwCpAL8bFRYncXkYOKmRdkXWJ3FpJ/GQ2uX
NFZnMTlxpWd4Y1gNG59JwPusrFRtERufSdbZSwem7Gd1FpO0R1ZhoypEbL5B
jhfenNOS0ynfIMXmL+PUA/LZfINMsFET7gzqlG+Q0iMZ12IXdMo3SPywAW9e
NXXKN0iNVs62HP9SNt8gp1y/WISNL2fzDVo/Z/IN4ltR5bM7oILNN8jnwfeq
4w2r2HyDDAhKHv8wvprNN4h+9V7TAU01bL5BwifefGmwQ8TmG0RRbqnx9xIR
m2+QEGXn08/H1LL5M5nwYOuj9y5svtFCPHsu9TZ+3Sl/JmELpN4O02b9uYVw
t4JSzqd2yp/J7RdzDbYuLWbzZ1KgoXTe73MJmz+T0qS2uMtRbL6B9XMmfybB
Uq1r/d8L2fyZnM2fHzsooZLNn0leUP6rjTasP7eQfRURfq75rD+3ENVWk8jE
I6w/t5BMg1VHN/apZfNn8jqxtvjW/lp2P0g2TfUULA/LYveD5Oi+ZRmvvuey
+0EyclzfqIMhBex+kAwdd27aMG0+ux8kFt3uv/mQWsTuB4mz3YR1T91L2P0g
yR1zwe3koDJ2P0jr58x+kCwY7OwoYydk94NkcfgovqNOJbsfJLpvjXZdqKpi
94OkqbxkYd89Nex+kMga6fbI8RCx+0GS6PQj8a5qLbsfJPNPX726JqqWrRcR
a97GUbejM9m6EAkIleG71eaw9R/SqNYjv+1zPlvnIVmVL4/MPVHI1nNI8cOQ
AXVGRWzdhrx95OHxobGYrcOQkZ9GTpYKLGXrMLR+ztRbyF8n4y9F5gnYugpx
/VXTI/hsBVs/IcJDWU2VNlVsnYScnKxq2yBdw9ZDyIBVghcT5ovYugdxPDJ3
tHe3Wra+Qb6/6VI/lYc6Q71u3ZaGn16BnepyxFl+3/HHp7PZ+hv56+DS8fci
89g6G2l6Pnb06/YCtp5Gzg81sNVK5LN1MzL3xY6BZRuL2foYcbk//pF991K2
Pkbr50y9i7zh51clmQjYuhaxtRDrNv4QsvUrsrvrMrUezyvZOhVJTg3SL/Cr
ZutRJE7N8G1GHxFbdyJTfl4yNCnH+x1cLYOuf4vphXqezRsoMgv6wR1sUMsP
24V1y5t7LaSDtNo51bMP/1pij/VJqEMfGd6SWK+BdcjKkjhzLfOf3OXY2JID
V/Kpnh8lddroYQXGq90KqJ7y+mqBCS6/uIsbR6kGDS2kem74j/qht8T+xDkD
H/pqYJ0Q7I8W1u3KbsK6H9i/LGpd9axYrO+B/SF71O5c88A6XoXEfnfllc9G
TMd6Hdj/o3nrQdmB5VTPlMS5VxNcvnCOT/SaNR9jHIDrA4OL33d5YBz4oBz7
xizoK9fsk+OQV47+KfektleQVhtX1WvQqLQV6J8aLv31KxLauKmnT0/dOQbr
b5PVzK21zL9x9b7GIcMqsB67KMPLw6XiG3e4+Xrppf1Yj43+j/pbqsT+cpWa
j1leWH8TSuxvLUlKOmeO9Tewv2n3fefXMlh/A/szvx8q5ZVgvRTsN+zWw3F5
FNZFwf6va3xvNB7C+udiif0x04hG37VY5+y2OPKIS0ULd9/oo635A7yvDW6v
jElw+ciFWEq/rO6H+QNc+avcLw13w/vaghVzPpoFfeKkXYr+kQnFeOsos3tA
kNZnzjP7mnvbPowDXneip1QkfOb6t585931aEdX5tF2NrZZ5K2e//7j6TBHW
OZv+o/7WXWL/gU3nex6sKKU6D5HY72lv+a4tFOtvYP+BqSval23B+hvYn1Wj
p/1zCtbfwH7vodY7rihg/Q3sHxD14LbgFdY5z0jsJ55ygXuuY53z9J/fUQM3
/P7W2e7qmKel/fm9NHLLw7ID1P9Pntbxu3jPla65ohFjgHkaXFUmjQ9TjMD8
gXde+MMsqJlrtl32bf7/yR+emClqBGl94Jy6nK9behHjbdlnk9kVCR+4ghSD
tu2mJcx9rXP97azE/r2j8t9vNMT621OJ/W2GrnOWfiunOoP9C6XjIw4XCqjO
YH9u0wl522Ah1RnsLznz+cNnpwqqM9hvu2ZO3XqNSqpzucT+mdWX84+Lsc45
6M/3/oJTSTkx3t8Vdbb88/3WcU6c45Ge43Df0fE9vuR+Oi5acsgHde74Xb/i
dKJ1TExX4L4DrmkL4850FWI+3PE7fcPxvh67/fAN5mkdv8e33AOF/JXut/G+
1vwf9bchEvtlFqpa6xzD+9oCif07j4oSqtbjfQ3s9+q/r2aPJtbfwP6oOwvc
RlZhnVMgsT/5XN+x/sFY5wT7DYNHCQ7NxzrnFIn90+3bX1S+xDrn/D/2FHPD
T/yYavs5m8mHSzm97VbnJ0ejzvJ/Xl/AcRFXdRtuoc4b//hbBTfDQX3I7BOo
c/ofv6riRsgEjCt1xX00XJP3fv0lUsR9dMofP6nlLF5sim7shfu7D/9Rf1so
sX/Pva0tfh8wH46R2L9G0aJY6wrmaWC/yLy9Mt0a8wewP6tWLWtnd6y/PZPY
n1whpbDnOtY5wX6jCe4xY+ZjnTNVYv/BxyNISBPWOUV/7A/n8vpn+2bMZ+sV
cVz3tZqlRd2wLrT1jz0PuUaLzAWFL1HnT3/Wp3I34usfrHiKOt/+83nTubYE
t7cFl1DnLX9eJ5sb6D0oJWU/6gzXH13Wzz0/i62/8ZLZ+pvM1Q77V93pemJ9
L6xXfJXYf3un77T0KNx3uEnsFw7ZOClyAebDYH+L4ScVnWbUOVZiv5+nzQDZ
M1jndJHYP8/aK/boFKy/6UnsVzqcnlIixDqnlsTeNW8HBT70zGHqFdlk3e90
zHYI6hzR8b7E7Jxwo8t31Lm+w07yRsW0l7YAdV7Z8blIwvuDQSqJqHPH9xtH
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
tI8feEqctqLfuwISKek7Bz5t6sW5wXJFtK8UuO2h7cavf9u5QtIHCfyNeKdZ
y+JyAn2HwO2/j58g7SEg0CcHPKL60J23B4QE+rqAl1W+nGYVgn3awKFPG+Zk
4D4et+uk/ZTW53TeA/jVoeVjm6bn0vkE4HbHK3UvZRTQfnrg2W/6Rl1v5dP+
b+Dxe7PKT2iVkM2SPlrg36dUmySvLCfQtwp8+/L+FtPWCWifIvAlO8OiDm4T
0r464LOU1o9dc6yC9oEBf+poanT1eCXtWwKeP+NbBn9TFY0DcF8+al94NiHv
OeTblOvPOW8WqpkL+TnlqXfXOvg9LIB8nnLfafInTH7vc6FfHziXbWIV0r2E
QH858CkDRhZKTSwj0KcLPNDjRt239UICfaXAYx9INYfuqyDQBwl8oF/waEu3
SgJ9e8BX6TfG6i2pgv0R5Y4PLW9sGlMN+ynKC4YuOnpFtobOccF92U7Szwx9
2MAvHW54v+2ekJyTxCu435nqJnVtz8imc0rAoS/3kySOAQ/NM6/gywvJGkkc
A35uzsn9aj8qaByD+9TF4upzpW+zaBwDrlz916Sber/zJkkco/3girPndl0s
oP3KwMMmBbZ2IxW0vxZ4e8VrA8G4KhrH4D5lu1w542WvLBrHgDc9jra+rZZH
4xjwmzF6M8r7F5IWSRwDPrlFMXzXpXIax4CfPK3vUOstJA6SOAZ8X2abWcn+
ShrHgC9vjpx40baazsXB7/6BWmSa+6/nNI4B9w3VDlTrh3EM+NbBawQX3Qro
/AzwK9q6l9wX8mkcAz79i88g6YYyYiuJY8AvFs1c1i1dIMmvcP7p2/3NLqsf
VtA4Bnyf/5Q70slVtL8T+BC3z0o3AmpovIL7uMzqNxO/tmTQeAU82y112NS0
bBqvgNeYLx80KSCfxivgM58k/Uw8VSjJr97g678z/TrboYi4SuIV8JOzP94t
/f07pX3qEp4aEby2UhHjFfBZocc2pbRhvALOTZ26rEK2isYr4P5C9W35b6tp
vAKuk6J379BKEZ27g/wh3XLzROKWRefEgH+L7Drwg1IenWui9ZklDb0+5xTQ
ORz6Os1Pdsjx+HRuBLicX77cz8vFZJwkLtB5a0lfH/TlA28QbOzf+69y2kdO
+0PnTa9cNVlI+56Br27oPnuQWSXt0wXeVyd4w6B51bSvFLhp73GvDvQU0T5I
4O+S9/pqvKN9v9ROT0nfHeRDkF8N106N+pSA87O0X1Uxfrfbd5yfBf7oolFd
Qj883w+4z705+tLeeF4fXb+RV6u6rJDth+RMa3Kb3+ngczvg7JwscJNKF/02
NTw3j/a/fU5LHyON5+PRPreA5qhNH3FOFviS6thrJz7hnCxw5TRP03hpAdUB
dArbE2VZooJ9ocCVvbdOS7qBc6+0P0159Ey5SJx7Be5VMzJw4TF8bg28sScv
29oWzwkEzs6xAv9kOSZRSx/nWIH3fV806OloPEcO+JbQWf7FE/EcOeCiRRXd
9abifCXlFZkTLfUxX6R9We6i8JQk7IMFvlJ+7OBredi3Adxn7dLBRzicPwX+
y3aHvsvpYmo/cO+ALXubNmB8pHOx/5QX396E86HAZXa3+Vs54PlswJ/O2Hrw
3O/fEdhJ8+SMmp2BddivCzykbbSnahPmE3S++fzPvxbnlVB76Fz++Lz+toE4
RwlcaSx/5jgXnKMEvkbGIMx9dhV9X7DLpnHrZqECzhcA3zBIwfGELPoncOkZ
Hnd6bsb5QVq/Gm2cdnlkNX0dOp86d9dwLQM8jxH4heDX/wgV2HOoeMn/fg4V
L/nfz6HiJf/7OVS85H8/h4qX/O/nUPGS//0cKl4ynEP1v+dN8ZL//bwpXvK/
nzfFS/7386Z4yf9+3hQv+d/Pm+Ils+dNsfWr/z2HipcM51CBnvA5Cl2XFfcd
hnoC/3xr+uUZUtjPB1x3UKXMw0rUE7ivgUXS9ATUE/i7AM2Rx46innSObeYe
lxVW2E8OfLmLkc4jd8zzgI/2vBo5ZyzORwAfoXLJuO416kbPjbj8M6jHVdQN
+FK35bOrxuAcCvCHU1svHD8iwjqyxK7um2yXtQnQr4DLxlt5adxDHYAPGuDv
L+2DOgCfYtF7uslE1AH4kl7znR4JcJ4auNz6l2eL7+DnBT51U+3G3G04pwDc
o/sTsrEv9s8Dn1D+l8ceF/y8dC5z38nSw5ki+rng/VutnRWknfBzAd/mfSjv
mhp+LuCWzw4fMvs/5xACtx2nXXpjLc7dA5+jc/eYQR3aD3zVnnndBvyF9gN3
Xqw+s889tB/4pd4yzQ6KtdROeB8v/8cfhlzDuR7geo5x334QtJM+N/9y1ORZ
I563AFxz047N6wPQHvocf1CjyawvaA9wX95gRbMVtfR94fUizNXq1qXinAv1
U77inpM7Ma4Cd7hY8KhZDecLgH9sOn254VQt9mlJ/p+vxXRVn7ZSnJeXcGv/
u8VqN2vp7x/i6xZJPz+tr0niga9i7q4hhzPperZfnfYPSXj3AQP/MV1SQl+H
9lHHzViU5IVzW8AfH3gdmF+bS1+f7dOm84AwP5ddrplxAM95oOct/dM6crNb
GX1f8N/ISg0fkzZ8X5ofxbhGH7+H82I0f1xo3F2sjuelsP3MYA9wx7kkals8
nvtK+6u1FmUODcffL/BpflvtZK8KqJ3gp39ZdT2RNBvrgLTupBGXuWcAfn7g
GWnHVK+7YfyhfcVDCu/4zsJzM9g+YbAf+NOmNru1tXieA/BNZWWbNlfgearA
te72qplciOepAjedpWln9OC/61f/O2ddw03N2ZYecxk/L/DpO8Vuchvw89J8
zezJGGEYfl7gm3TXb9D0w7gE3PLOiJk+9niuBdvHCzoAj74TrJmkhHN5wMeO
Tko+LotzTMB3j1t0fXYz7vOBK8dcu6j0FM87Bf6gaIGhkz+enwC/18q9Jl/m
KmI+A9zdOTLsUBnqAHyXnoGmbj7qQPPB/hNmqt1GHYDnXZExlwvC+AzcY2fs
WOudOE/H9rWCPsBt1JM9rAjOhwIf7zF32UoVzGeAO5wr+FFfi+ckAPdasn/p
+ms4vw/8EPdCZokjzu8Df2Zz6k6/4ZgHgl0wpw/2s/2WsJ6eU/K5pz/PCnVm
61o0L5Rw6Cek53JIeJLl3n80jNCf6f15fPGTM23oz/S8uolHvNXvYl7I9tHB
6wPfOjks0/oR6gy8/4jh45Sc0H/oeWyBXxraLuL70jrVsQE3x+ih/9D5/uGr
7/VdgfGN7Tej/bUSnhWzr29vY7QHeMvVF+KMb/i9A9+90/yjSyCeXwHfc8Hj
/KhDamgn8Ksu8dZ2JzAOA68bXGI4tAHnSYG3e0udmhWAz4nZPi6wH3jNWdPr
/RLxdw1cP2Bn5CsftB+4O6ejsHMc5lfAG2O2TbqUhH5IzxFMuKl9xQ7vL8Dj
Vo+8c/0OzskCL33q8yPDFT8XcDO3gkC3rji/AdxBObgg6QrGc7afCj4v8K35
G+UUjPHzAl9Ukdz1eVf8vMCndV94dB6H+w7g0VvWphbbol7AL/+M7B3mhnOX
kF/sYeo29Dla87Rb7+7hOV3AXc9+Xh2ei/dR4KdtUpzD9uH+HfiOnnL3XXRw
Xwz80dpr6zMqcV/M1rtAN7ZvCnQDvirOak33R7jvAJ4SFb27ux/Gf+DjNvMX
TjNH3YA/vTeuxfQz7juAtwS8rA+djXkjcOPpeVeiumJexz7H/H8gIYOi
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
c91fNaLvUutG5TgLUutG6aVLonNV7SU1i86zVmIvpT2ReA9lT+o6iWrXqsNs
yddau+gcWXXLKZlzNum99vlzKk5dF52T1svX7Pp8vXSNzmEb5jpxqsaE/8/I
nONJJ3ePzklVz+wGj0tcP7wpOj9VzbNHdExUvOgYPQ6qkV4fnVcqHrWJrgmo
pvp5as0pTXtQcTRx7f2y6LxYY7s7tS+SPwz5nJRf+jt1nUp1+HmpdZq09NzU
elUaW+OyJV/v8jPSKZrf8kXSdJWY552i6wmqu/aMzt9VP6yQxw6tp6ui6yfK
45U3aO/jHcbn5Og9KdWQp2bObxVnX8m8d/U9/G3qfEG5be3ovSTVQutE722p
znlr9JirDtwwej9LOvmU6D0m1UuXpq6taa9kUuY8XHqjUfSel+qoV0T7c+2B
jsy8r6b5/H0eZ6VXP02tXaVvx2ber1qtNR1db1G9dHTmPS3NvbrRe2SqjU/O
XBeQtvksdX6hHKRB9P6d6revZt6rWwqfl4+bNMk3qfM45fv1o7WK4vLXeaxX
Xj8xcx1BfmZM5n24VXCT6D01jee4zLnrGrhldO7/E7Z5dL1C518eXa/Qe51G
G5R4T+Ss6H067df8kLrmqf2sCZnz55+1PjLvI2rtt4quJ6i/cfSeoPLis6P3
7/SOV0bX3LTX2SK6vqFnuzqf85ozp0bvaWr/aHzm/FzP/D+cl+Wm
           "]], Polygon3DBox[CompressedData["
1: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
Q//OlSMf/5Tjes/J8WnnX4l4M29d37/BS7teUqznr3Pk19ly6KHM+F7w4vBr
cIH7w0vkuH9ztIJ34/0f0+/RivN3hT+i/yPnz+v6qPnkpxLxr3uN36vwOTub
G2kf+l7Gr2H8GF6/BV6f9hB8L+Mztwl9YXxZJ0c8eqDquUGMn9SKHLhQCk1v
buxqHKI/nTbRawJ/7fygXey9yjGXndOuZWuCTeBtmqgVOuXQZuYYc42atk+K
mlKtqwZeL4XmVRurEddNobHVjmqEv+h3bkI7vJVibbnGPldr0qbRH2+e5f87
C/4Avt44B58Jvw9f57yD7696aiCfM7IVmqNJsQbUIqcx/g79q+nP3iY0/jYp
NJRa6nTG36V/jXGtTWiQf5qY42qTUxl/uwlt1pXxU+C3nL+uM/hk+E3nq+sC
no32iFo3xfnmrJxiTZnLrCmsla2ZrTUUT9ZS5lhz7RYl9MIA+t9z7tol8ttO
OfL1hiX0Sd8c+W+rEvlhvxz5b8sSemHfHPll+xLrSRNAvWO9eTq8TY58tFaJ
fLQj/DXcq4Q+2Bj+At64hD7qlyMfnQi/Bl+So54YCb8OX5qj3jgJfsP1DHdu
E2t28RQ1h2vZmLAYvGwTscKaZVl4lSZqGWPmEik0tbH09xS5wJyg1rEGWy5F
jWZtZo26QooazNq1fQ6t3rsJLWONsyq8ThO1jxp9tRQ1r9rdGmz5FDWNtdnK
JfLv1jn0gxqrlSJmqr2MiXOmiEnGyn/ga1No7kG891f4ghT3cDe4PdfgjhSa
bpi1OuNLwivAr/L+R3ltCP2Dee0MxrrBs5eIAye2ou2XogZ3zBr8qBQ1i7W5
79FneaTEZ83F992QQwNPqevLnJbrenNOOjefaWJum0NvzLH+za2b5FhLrilr
FWOKudMcaqxRI6mVzBnzw6vmiFPd6fcw9tBfnfH1GP+4jhnLjIGe45zaHz6k
ibnmHD8lxRx07htTN0sRo421xug1UmjIn+ocHZJijjp3zWFzpci55rYh8KZw
H/jHHBqlbYoaQu3yeYpYa8xVe1pjzJQiR1l7WGOoTbrV882hc6TIaeZWNf8C
KTwBawFrigVT1PTWGuY4tYqaxdynJps/RY2uVjNH9nRON5E7zaE94J5N5FZr
oo4pcqq1kjVFlxQ1h7WGNVqnFJrP2k2N3L7+XrXzJPj2FDlwYIkcaDx6uonc
qAZfKoVGVZsf3Yp8s6dhs4RmnSdFTlTL3ghfA99oDiuhIWZLUVM9UHOiXoEa
2Fx5LXw+fCm8eYma+uQUHoK1tppabW3Ong/esYQeGJyj3joKfgo+J0e9qUen
V6eH17WEx9W/zscZ6/xzPrlGXCt6dnp3emKzlPD89P705GYt4cnpzenxdS6h
EW9IUbOoHfWY9Jqs8fUmrdH1ro6v62GZHLWE81/tNLyuD2uCmUt4qHqpeqB6
rXoqelsnNOG1uL6G1vnr/F+ohGfqGj6jNmOBnp9jemh6aXoqeqd6Ypem0AR6
ZXosei16gnq3epSHpfAU9S7NiQPrenN9qgkG1fU9ZwlPwtpkWF3feop6i3qI
eqMnwwek0BRzl/DsLk6hgfXy9PzGwVc24QXunKMWM2eZu/TY9Nr0NPQy9eT0
5vQ09Hb1pa29zTHmGmsMvbXRTdQeeiB6P3qCeiN6LnpfenB6MXo0emd6Yno3
ejxnpfDU9H70mMbA45rwnvTQ9NL0oPRK9dj02syJ5kY9Lr0uPTy970Ny1FrW
XDvB++eoxcy55l49yPNSaHy9yaE5vBM9lL4lPMdLUtQkepHWDBPhSU3UEtYE
V6fwvK0V9Az1DvWo9Lb1fPR+RjbhvetZnZuiRtDLska4Cp7YRO1wJO1J+mfn
8GdOYfzAFB77vOY2eHAKT30B13MJ/+HIHP6Ev9nfPiRHvblHCb/oqBz+gznN
XHdEjlxnzjO3jay5cL8S/sxxOerTvUv4P8Nz6PsBJfyjY3Po+31L+EsjctQD
XmOv9cE5/JgDSvglJ+Xwsw4q4fecksO/Ohp+Fj4vh19yYAn/5WQTHnxECT/0
rBz+02El/NAzc/hhg0vo6VNz+F2L5qjN+vGatfQQ2lS6o3L4TSPgF+GxOfT3
MfBz8Pk5/Jzh8PPwBTn8n2PhF+ALc/hTagBz77k5tMGp/k8p9lR6Oj95fWqK
7/C73AO5DZ7cxN6I+Uv93KXmCz0YvVU9Cr0ZPZ5eVU/q/Vizqq8713ynnupR
85n6696a77rXfGWNcWMKj8baw5qke81P6i9rlm41fz5f9ZZ6Tn2nvrI+UM+p
z9S3elDqW/Wd9YI1vXpO/ac+0yOaDD/chHd0Wo7axnvivTk+h9fnnHJujfYz
UtwT7401r7XvS014UXpK96XwpPSa/vNsaj7Wy9Ej0CtQT+p9WeNZ6+kh6OVM
qfnb/PxG1ec9a/5Wn+oh9avx3bh9Bu09+tcy1r1NzCm9Vue8c+3mElpIzan2
vLVEbWRNZG10S4nayJrA2kDNpDacMYeWuqmEVlXDqmW9PhNrvvJ6OWcn1Hji
9XKN6P26pg+omlBtuDBtkRJrQq/RNe1acQ2Nr/HKtTWhxL3zHqrNJ8GbNVHT
WdtNLKGV1eBq8etLaHU1vlp/dInayxrKWmpMidrHmszaTM27EPhXCi2sRvP6
zFG1220ltJs1p7Xn7SVqS2s2a7cb4TWa0Pxqf9e03rIxxbV+Q4laQE2vtr8D
3qWJGtVaNdXPX6xqH9eoXq0xxbXrGr2nzj/XrjFFL9YYZKwxBo6t8d/YaIy8
qOa/vjX+j6v50fhujLi3zu8RdX1PrvPT+boj728Hzw7fzdhe8NwprtHjOWpM
57v6zdrTGK2XbI1n7LZmfTxFDLKWVc/rjRnjtmlFzftYihhpLXxuiVrGmtTa
1Jis92KNaKxWg42q+Vhtpga7ta4/tZk5Re/fmG2uMebpZRtzjYXGyEk1Xg2p
69X4pR4dWtfzVTXfGc/MEVfW/OX6tkbVm7fGtXY1R+gFqREH1Hw8puY/8505
44qan80l5ozRNd+bS6x3rN3dX7E2P6/Etbams7YbVSKWGlP1Jt4qkcvNseba
N0t8l9+plni7hLY155v73ylxr73naiE1r1p3n6qF3y2R+9VMaqdpJbT0fzkf
/qDEtfgvh8Pvw9c2ofHUervW7zu8avH3Smg/NYXa4pMSc8k5ZSz91DXfRAw0
Fg6s33dirQ2mlNACajq13eMltJ6aUe34WAntqCZUGz5cQouqGdQOD5XQDuYs
c9eDJXKXGkOt8XoJraYGU4tNL3HvnQPmso1aoU8eTOEPfMz4HU3kHHPPhyVi
mzFOrfRRiVykRlerX15ibVjzWfu5Rryf36RYO5eWqM2t2azdtmjF2ngiRXze
vBVrwTXj2tmqFfn5qRT+0matyM+uGdfOhSVqLWsya7ONW1GfPJTC79mkFbnI
NepavaBE7WZNaW25ZSv0wJMp/KrzS+Rac6615qatWNvWaM7PrVuR+9UA+l/G
hHbmqhSxYnyJ/KBHolcyrkStb01mbXZRidrMmtHa8ZISud6cb615WYlaWQ9D
L0OPoGMTXqDewRUlcp850Fr2yhK5zxxo7XpdiVxvztfLubpE7WtNbG08tkSt
ao1qrXpNCe/RGtla+aoStbM1sbXxtfBSTXiUepVe04dqftdbuynHHv+0JrxB
PVS91P7e4xK/2d8+Hf6ixJ6D/s86TfiXF5cY+4T2Zf089YKe+TfONfjjJjx/
/Uc9EL2Qz2hfl/CUfbbDPQy9Zu/J1Ko3/D3Wg+Ymc5T1nh65z1q4p6F3rmfv
XnTvJrz8c3jtmyaeWfD79dx9VkU/0nrS+sL6x/rGekpPz3rKesh6Q8/Oteka
tV7R43MvyXpL70+P0Pry+CbqL/d4fNbDPQT3ftzTca/YPQT3etzzcO9Dj9u9
IPfE3BvTY5+nxB6JeyX6we4lOYedy64ZvVjrPetj61vrNfdA9I/1i9XP7gm5
N69f7F6Rz+z47I57TB1L7AnpJ+uHulfknrZaSE2kP+szQz475B5VhxL6XG1g
DjeX+0yNz9a4p9WpxBp2LbuG9I7dU/JZAfdAf6kazVjgmlS7uQej3t+zCd9N
T9NnJawZ9DqNUcYq17zeps/k+GxOP9dciT0F9/rdE3WvQQ/UZy+Mcf95o63Y
23EPwr0C9yx8dsg9M/cyfAbIZ4Hco+tSwnN079J6XC/SPQT3EvY25pXwYN0b
tF61XtYDdi9Uz1Jv2Hraetb61nrXPSKfzXCP170j/X21pJpSP///uqK9fg==

           "]], Polygon3DBox[CompressedData["
1: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
A3eyV9kudpBNYf/NJP9DHo/1yLiM+A0hPNI8
           "]]},
         Annotation[#, "Charting`Private`Tag$45114#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvBVEYgOGxr9cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
cu1rRMTW2NfwnETxznMy92TmO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xntd817aewz0tG2iH
K4xzlbtc416Yifvc4AE3uaXD8BwecYfHjPOEuzzlHs+4z3NOO8cNP3Shl3BG
jZlti0NcZB/n2MFJNnOcdRxhFQdYxlJ1WWewlZ/e0cA71vCYFeFcLOKtfVd8
U66ewl4VmjGHBYwxn9lhD7MYYyazmBHex3SmMkVp1klMDd843OOvkvUTftOX
jBHNuNz+/x/+AMQfSu8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1000, 473, 689, 1106, 912, 691, 1107, 913, 692, 1108, 
       914, 693, 1109, 915, 694, 1110, 916, 695, 1111, 1006, 1206, 696, 1112, 
       917, 697, 1113, 918, 698, 1114, 919, 699, 1115, 920, 700, 1116, 921, 
       701, 1117, 922, 702, 1308, 1001, 923, 1002}], 
      Line3DBox[{704, 1007, 1207, 703, 488, 705, 1118, 924, 706, 1119, 925, 
       707, 1120, 926, 708, 1121, 927, 709, 1122, 1008, 1208, 710, 1009, 1209,
        711, 1123, 928, 712, 1124, 929, 713, 1125, 930, 714, 1126, 931, 715, 
       1127, 932, 716, 1128, 933, 717}], 
      Line3DBox[{719, 1010, 1210, 718, 1011, 1211, 720, 504, 721, 1129, 934, 
       722, 1130, 935, 723, 1131, 936, 724, 1132, 1012, 1212, 725, 1013, 1213,
        726, 1014, 1214, 727, 512, 728, 1133, 937, 729, 1134, 938, 730, 1135, 
       939, 731, 1136, 940, 732}], 
      Line3DBox[{734, 1015, 1215, 733, 1016, 1216, 735, 1017, 1217, 736, 520, 
       737, 1137, 941, 738, 1138, 942, 739, 1139, 1018, 1218, 740, 1019, 1219,
        741, 1020, 1220, 742, 1021, 1221, 743, 528, 744, 1140, 943, 745, 1141,
        944, 746, 1142, 945, 747}], 
      Line3DBox[{749, 1022, 1222, 748, 1023, 1223, 750, 1024, 1224, 751, 1025,
        1225, 752, 536, 753, 1143, 946, 754, 1144, 1026, 1226, 755, 1027, 
       1227, 756, 1028, 1228, 757, 1029, 1229, 758, 1030, 1230, 759, 1031, 
       1231, 760, 1145, 947, 761, 1146, 948, 762}], 
      Line3DBox[{764, 1032, 1232, 763, 1033, 1233, 765, 1034, 1234, 766, 1035,
        1235, 767, 1036, 1236, 768, 552, 769, 1147, 1037, 1237, 770, 1038, 
       1238, 771, 1039, 1239, 772, 1040, 1240, 773, 1041, 1241, 774, 1042, 
       1242, 775, 560, 776, 1148, 949, 777}], 
      Line3DBox[{781, 1149, 950, 779, 1150, 951, 783, 1151, 952, 785, 1152, 
       953, 787, 1153, 954, 789, 1154, 955, 791, 1155, 569, 793, 1156, 956, 
       795, 1157, 957, 797, 1158, 958, 799, 1159, 959, 801, 1160, 960, 803, 
       1161, 961, 805, 1163, 963, 807}], 
      Line3DBox[{806, 962, 1162, 804, 1255, 1054, 802, 1254, 1053, 800, 1253, 
       1052, 798, 1252, 1051, 796, 1251, 1050, 794, 1250, 1049, 792, 1249, 
       568, 790, 1248, 1048, 788, 1247, 1047, 786, 1246, 1046, 784, 1245, 
       1045, 782, 1244, 1044, 778, 1243, 1043, 780}], 
      Line3DBox[{809, 1055, 1256, 808, 1164, 964, 810, 1165, 965, 811, 1166, 
       966, 812, 1167, 967, 813, 1168, 968, 814, 1169, 1056, 1257, 815, 585, 
       816, 1170, 969, 817, 1171, 970, 818, 1172, 971, 819, 1173, 972, 820, 
       1174, 973, 821, 1175, 974, 822}], 
      Line3DBox[{824, 1057, 1258, 823, 1058, 1259, 825, 1176, 975, 826, 1177, 
       976, 827, 1178, 977, 828, 1179, 978, 829, 1180, 1059, 1260, 830, 1060, 
       1261, 831, 601, 832, 1181, 979, 833, 1182, 980, 834, 1183, 981, 835, 
       1184, 982, 836, 1185, 983, 837}], 
      Line3DBox[{839, 1061, 1262, 838, 1062, 1263, 840, 609, 841, 1186, 984, 
       842, 1187, 985, 843, 1188, 986, 844, 1189, 1063, 1264, 845, 1064, 1265,
        846, 1065, 1266, 847, 617, 848, 1190, 987, 849, 1191, 988, 850, 1192, 
       989, 851, 1193, 990, 852}], 
      Line3DBox[{854, 1066, 1267, 853, 1067, 1268, 855, 1068, 1269, 856, 625, 
       857, 1194, 991, 858, 1195, 992, 859, 1196, 1069, 1270, 860, 1070, 1271,
        861, 1071, 1272, 862, 1072, 1273, 863, 633, 864, 1197, 993, 865, 1198,
        994, 866, 1199, 995, 867}], 
      Line3DBox[{869, 1073, 1274, 868, 1074, 1275, 870, 1075, 1276, 871, 1076,
        1277, 872, 641, 873, 1200, 996, 874, 1201, 1077, 1278, 875, 1078, 
       1279, 876, 1079, 1280, 877, 1080, 1281, 878, 1081, 1282, 879, 649, 880,
        1202, 997, 881, 1203, 998, 882}], 
      Line3DBox[{884, 1082, 1283, 883, 1083, 1284, 885, 1084, 1285, 886, 1085,
        1286, 887, 1086, 1287, 888, 657, 889, 1204, 1087, 1288, 890, 1088, 
       1289, 891, 1089, 1290, 892, 1090, 1291, 893, 1091, 1292, 894, 1092, 
       1293, 895, 665, 896, 1205, 999, 897}], 
      Line3DBox[{911, 1005, 685, 910, 1307, 1104, 909, 1306, 1103, 908, 1305, 
       1102, 907, 1304, 1101, 906, 1303, 1100, 905, 1302, 1099, 904, 1301, 
       1300, 1098, 903, 1299, 1097, 902, 1298, 1096, 901, 1297, 1095, 900, 
       1296, 1094, 899, 1295, 1093, 898, 1105, 1294, 1003, 1004}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1106, 252, 488, 280, 1211, 503, 295, 1216, 518, 
       310, 1223, 533, 325, 1233, 548, 340, 1244, 563, 1150, 355, 578, 1164, 
       370, 1259, 593, 385, 1263, 608, 400, 1268, 623, 415, 1275, 638, 430, 
       1284, 653, 445, 1295, 668, 460}], 
      Line3DBox[{253, 475, 1107, 254, 489, 1118, 281, 504, 296, 1217, 519, 
       311, 1224, 534, 326, 1234, 549, 341, 1245, 564, 1151, 356, 579, 1165, 
       371, 594, 1176, 386, 609, 401, 1269, 624, 416, 1276, 639, 431, 1285, 
       654, 446, 1296, 669, 461}], 
      Line3DBox[{255, 476, 1108, 256, 490, 1119, 282, 505, 1129, 297, 520, 
       312, 1225, 535, 327, 1235, 550, 342, 1246, 565, 1152, 357, 580, 1166, 
       372, 595, 1177, 387, 610, 1186, 402, 625, 417, 1277, 640, 432, 1286, 
       655, 447, 1297, 670, 462}], 
      Line3DBox[{257, 477, 1109, 258, 491, 1120, 283, 506, 1130, 298, 521, 
       1137, 313, 536, 328, 1236, 551, 343, 1247, 566, 1153, 358, 581, 1167, 
       373, 596, 1178, 388, 611, 1187, 403, 626, 1194, 418, 641, 433, 1287, 
       656, 448, 1298, 671, 463}], 
      Line3DBox[{259, 478, 1110, 260, 492, 1121, 284, 507, 1131, 299, 522, 
       1138, 314, 537, 1143, 329, 552, 344, 1248, 567, 1154, 359, 582, 1168, 
       374, 597, 1179, 389, 612, 1188, 404, 627, 1195, 419, 642, 1200, 434, 
       657, 449, 1299, 672, 464}], 
      Line3DBox[{261, 479, 1111, 263, 493, 1122, 285, 508, 1132, 300, 523, 
       1139, 315, 538, 1144, 330, 553, 1147, 345, 568, 1155, 360, 583, 1169, 
       375, 598, 1180, 390, 613, 1189, 405, 628, 1196, 420, 643, 1201, 435, 
       658, 1204, 450, 1300, 673, 465}], 
      Line3DBox[{265, 481, 1112, 266, 1209, 495, 287, 1213, 510, 302, 1219, 
       525, 317, 1227, 540, 332, 1238, 555, 347, 1250, 570, 1156, 362, 585, 
       377, 1261, 600, 392, 1265, 615, 407, 1271, 630, 422, 1279, 645, 437, 
       1289, 660, 452, 1302, 675, 467}], 
      Line3DBox[{267, 482, 1113, 268, 496, 1123, 288, 1214, 511, 303, 1220, 
       526, 318, 1228, 541, 333, 1239, 556, 348, 1251, 571, 1157, 363, 586, 
       1170, 378, 601, 393, 1266, 616, 408, 1272, 631, 423, 1280, 646, 438, 
       1290, 661, 453, 1303, 676, 468}], 
      Line3DBox[{269, 483, 1114, 270, 497, 1124, 289, 512, 304, 1221, 527, 
       319, 1229, 542, 334, 1240, 557, 349, 1252, 572, 1158, 364, 587, 1171, 
       379, 602, 1181, 394, 617, 409, 1273, 632, 424, 1281, 647, 439, 1291, 
       662, 454, 1304, 677, 469}], 
      Line3DBox[{271, 484, 1115, 272, 498, 1125, 290, 513, 1133, 305, 528, 
       320, 1230, 543, 335, 1241, 558, 350, 1253, 573, 1159, 365, 588, 1172, 
       380, 603, 1182, 395, 618, 1190, 410, 633, 425, 1282, 648, 440, 1292, 
       663, 455, 1305, 678, 470}], 
      Line3DBox[{273, 485, 1116, 274, 499, 1126, 291, 514, 1134, 306, 529, 
       1140, 321, 1231, 544, 336, 1242, 559, 351, 1254, 574, 1160, 366, 589, 
       1173, 381, 604, 1183, 396, 619, 1191, 411, 634, 1197, 426, 649, 441, 
       1293, 664, 456, 1306, 679, 471}], 
      Line3DBox[{275, 486, 1117, 276, 500, 1127, 292, 515, 1135, 307, 530, 
       1141, 322, 545, 1145, 337, 560, 352, 1255, 575, 1161, 367, 590, 1174, 
       382, 605, 1184, 397, 620, 1192, 412, 635, 1198, 427, 650, 1202, 442, 
       665, 457, 1307, 680, 472}], 
      Line3DBox[{277, 682, 1308, 683, 278, 501, 1128, 293, 516, 1136, 308, 
       531, 1142, 323, 546, 1146, 338, 561, 1148, 353, 576, 1162, 1163, 368, 
       591, 1175, 383, 606, 1185, 398, 621, 1193, 413, 636, 1199, 428, 651, 
       1203, 443, 666, 1205, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1294, 444, 652, 1283, 429, 637, 1274, 414, 
       622, 1267, 399, 607, 1262, 384, 592, 1258, 369, 577, 1256, 354, 1149, 
       562, 1243, 339, 547, 1232, 324, 532, 1222, 309, 517, 1215, 294, 502, 
       1210, 279, 487, 1207, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1301, 451, 659, 1288, 436, 644, 1278, 421, 629, 
       1270, 406, 614, 1264, 391, 599, 1260, 376, 584, 1257, 361, 569, 1249, 
       346, 554, 1237, 331, 539, 1226, 316, 524, 1218, 301, 509, 1212, 286, 
       494, 1208, 264, 480, 1206, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
y6fuyva//L6+yd8x/w9sghw+
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{346.5401077905247, 173.64528632187577`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-2, 2}, {-2, 2}, {0.1534082615069337, 0.5703004323362713}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.09730072694401255, 3.3249526435149854`, -0.6206629414738047},
  ViewVertical->{0., 0., -1.}]], "Output",
 CellChangeTimes->{3.7257956950616894`*^9, 3.725795937868035*^9, 
  3.7257961812763605`*^9, 
  3.7257964026201563`*^9},ExpressionUUID->"83e2da99-eff4-4d06-976b-\
1338907d8f5e"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7257956950616894`*^9, 3.725795937868035*^9, 
  3.7257961812763605`*^9, 
  3.725796402631689*^9},ExpressionUUID->"8812d7fc-15fa-44bd-816c-\
86ed32613b95"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7257959505123167`*^9, 
  3.725795968519065*^9}},ExpressionUUID->"418e7620-1076-4a20-9f60-\
3c4e0307d05f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7257959431898904`*^9, 3.725795970486045*^9}, {
  3.7257964836278934`*^9, 3.725796532448717*^9}, {3.7257965664612465`*^9, 
  3.725796583991377*^9}},ExpressionUUID->"e756dea4-d7df-4825-a3a5-\
22edad490de0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["1000", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257965462717896`*^9},ExpressionUUID->"9a5131bd-696b-4fc7-8707-\
5ea7a12651c9"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHlcTV0XgCPJEFHGkFRIJCqVpI1ISkKGKEqFRIUyFMpQpmRIk0SIVGQo
osSpKHMRogHnXCklpUFp/np1116+c9/XP/fnsZ27znP33XfvddbeI+xcF67u
LCYmNlRCTEy8/XXER7OEtrY2Bl4HvJ5W1GohIGvcb5xKdG6ifM3Sh7LvZwhI
bE/Z3c4FdZT7lve+vHmigFRc2LJGeU415dMSGle+Hi4gq/9c5zvlJ5Ylt1X1
gvYCyvNnv3n+pokT8hzKpT7rXNtayhEx4R/g3zKljn7Ipe0J8FldI30bHgIX
UN4oJav+4QYH8VC+3lDwwu0MtK+m/P0bz23PD3Fwv5SH5CmEft7CgR/K+5pL
Hru2ioO/Ux5jnZMy2YxyBryGNw2fSAzRM7xK2rgsKpyInoGHLT7xaIoCegau
Lp06eWVv9Ay8r3jUpenN1APlO5+2dS4uRc/A+/1KuTrnPXoGXh8mo77hEXoG
Ptfui+bcm+gZ+OEd0TdKz6Bn4PLhKmkzDqNn4NFWnxQtt6Jner9p1mpj7NAz
8GP6umKJ6JNybfEG5zZd9Az+JO/nx8/SwPiA2xbYGF1WQM/w6pGzNvpZb/QM
XN3h/bXrzfS+KN+yb57d4jL0DPxk/+fBye/RM/D0Q0oxnx6hZ+AhzcN3pd5E
z8D9J5SMtDmLnoFr3Ti5Lvkwegb+8tIx29db0TNwJa3455F26Bn4AKNMeY15
6Bn4YplF43ZNRs/ApYty++9XRs/gqSTCT11mBHoGPnd18AgdaYwb+MEVGfHD
WmiclK/d271rRhl6Br4sXvrd2A/oGXj5PCnjBRnoGXhUa8RzrXj0DDx3lXXl
27PoGfiRgeZPJvqhZ+CfRpt9n7MNPQM36h9+SN4ePQO/XrFq4bV56Bm4+qXt
wY2T0TPwi8lf5kiMRM/AHykwjVnS6Bl8PJNYmx0pjZ6B78yYnevXQt+X8p+Z
m8dqfUfPwC/9qvUO/4Ce4XXZ2llnHmagZ+B9r/U9Hx2PnoGf8fq0ziQCPQNf
+Lz7w2g/9AzcUdyp+8Nt6Bm49+jpnqH26Bm407tBN1TN0TPwTwYVctv10DPw
ARbvLHxGomd6vxlZD8z7oGfgpeNeny1sZHn9WcDE75a70dDC8fqzgGEOyFyK
/M7x+rOAGWbleq1XHr8/CxhLTe8l2pn8/ixgRq8feWVoAr8/CxjNkmGGqRH8
/ixgip/tGapwhN+fBcyS2VJOU7bz+3M7f22rIuvA788C5pDy4vlR5vz+LGDq
A24Pq9Pj92cB89v2aoj4KH5/FjAL/G8bvurD788Cxu59XGebJpbXnwVM6RV7
/fivfM85jITH2H6y5XzPOUyerN5Jrzy+5xzmUELTjehMvucc5kPwy7fHE/ie
cxipyLicSef4nnOYpUc+mYYc4XvOYRaE9k6/tZ3vOYepP7M0xN+B7zmHKdbS
OqQ4n+85h7n7XPeO2xS+5xymcd/dtXtH8T3nMEWNjfXz+/I95zAPWjv/Ztt9
/r/nHMbF/lzIpGK+5xzG6Uak08JX6BnuwzhIz7EyDz0Djwl0qpN7jJ6BT7w8
MajLLfQMPF1BUffKOfQMfJrXrY29/dEz8COyOzTUPNAz9Wp99bXkavQMf766
TDlzdj56Bm4bK7e7agp6Bh5mQH51Go2egX9suHLkdV/0DHzoKMsfds0s9Qxc
IrlMMqkYPQPfdUhT6j36pPzqjk2tacki/ZnsVzzk6/9YpD+ToNPS17ffEunP
xKjMolnhvEh/Jm93jXvm6y/Sn8nw2LFSUR4i/ZmIRRz03LtapD8T3xynI3IL
RPoz0ZtKylz0RfozCYy6033PaJH+TPQPP+m0UEakPxNlK/OBX9t98voz8ds0
2l6/hOX3Z2J7bbeU9WuR/kw23nLtY3xPpD+TiRda9kpcEhmfyRVLpaTyWyLj
M0nL7rk2+LzI+EySjYYuaPYXGZ+JQ3eZXHlPkfGZ9L7r5du8WmR8Jj8tN+kH
LxAZn8kqyfEO5foi4zPJWbX7bdtokfGZyJiu3JAjIzI+Ey3T/OY1LSx/fCZz
0xSSmBK+ZwEhsSUu7Gu+ZwH59HpM0st7fM8CMn/4qPAjl0TGZ5I8f5LXiGMs
f75BHvmYFPa8wPHnG6RnjWGt21GR+Qapi0i/HuIpMt8gMU853W1rROYbpDJg
+3yZhSLzDWJRW3N23VSR+QY5VZ4d46UiMt8gZLTuNAtZkfkG6RYZXfKthaX3
CXyV+Pb8Gd9Y/nyD1F6N+O6Qg57p/Drj3n6LFJY/3yDBGwa2yESx/PkGeRh+
wSEGfVLex/Lsj6Ee/P5cTUrFzjFlR/n9uZqYbHn1U3oHvz9Xk1rPQIOqNSLz
Z/Llm0TPowtF5s/kTHPLjJKp/P5cTYhdWXWLisj8maT9cv38RlZk/kzO2yW/
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
8pU=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
c91fNaLvUutG5TgLUutG6aVLonNV7SU1i86zVmIvpT2ReA9lT+o6iWrXqsNs
yddau+gcWXXLKZlzNum99vlzKk5dF52T1svX7Pp8vXSNzmEb5jpxqsaE/8/I
nONJJ3ePzklVz+wGj0tcP7wpOj9VzbNHdExUvOgYPQ6qkV4fnVcqHrWJrgmo
pvp5as0pTXtQcTRx7f2y6LxYY7s7tS+SPwz5nJRf+jt1nUp1+HmpdZq09NzU
elUaW+OyJV/v8jPSKZrf8kXSdJWY552i6wmqu/aMzt9VP6yQxw6tp6ui6yfK
45U3aO/jHcbn5Og9KdWQp2bObxVnX8m8d/U9/G3qfEG5be3ovSTVQutE722p
znlr9JirDtwwej9LOvmU6D0m1UuXpq6taa9kUuY8XHqjUfSel+qoV0T7c+2B
jsy8r6b5/H0eZ6VXP02tXaVvx2ber1qtNR1db1G9dHTmPS3NvbrRe2SqjU/O
XBeQtvksdX6hHKRB9P6d6revZt6rWwqfl4+bNMk3qfM45fv1o7WK4vLXeaxX
Xj8xcx1BfmZM5n24VXCT6D01jee4zLnrGrhldO7/E7Z5dL1C518eXa/Qe51G
G5R4T+Ss6H067df8kLrmqf2sCZnz55+1PjLvI2rtt4quJ6i/cfSeoPLis6P3
7/SOV0bX3LTX2SK6vqFnuzqf85ozp0bvaWr/aHzm/FzP/D+cl+Wm
           "]], Polygon3DBox[CompressedData["
1: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
Q//OlSMf/5Tjes/J8WnnX4l4M29d37/BS7teUqznr3Pk19ly6KHM+F7w4vBr
cIH7w0vkuH9ztIJ34/0f0+/RivN3hT+i/yPnz+v6qPnkpxLxr3uN36vwOTub
G2kf+l7Gr2H8GF6/BV6f9hB8L+Mztwl9YXxZJ0c8eqDquUGMn9SKHLhQCk1v
buxqHKI/nTbRawJ/7fygXey9yjGXndOuZWuCTeBtmqgVOuXQZuYYc42atk+K
mlKtqwZeL4XmVRurEddNobHVjmqEv+h3bkI7vJVibbnGPldr0qbRH2+e5f87
C/4Avt44B58Jvw9f57yD7696aiCfM7IVmqNJsQbUIqcx/g79q+nP3iY0/jYp
NJRa6nTG36V/jXGtTWiQf5qY42qTUxl/uwlt1pXxU+C3nL+uM/hk+E3nq+sC
no32iFo3xfnmrJxiTZnLrCmsla2ZrTUUT9ZS5lhz7RYl9MIA+t9z7tol8ttO
OfL1hiX0Sd8c+W+rEvlhvxz5b8sSemHfHPll+xLrSRNAvWO9eTq8TY58tFaJ
fLQj/DXcq4Q+2Bj+At64hD7qlyMfnQi/Bl+So54YCb8OX5qj3jgJfsP1DHdu
E2t28RQ1h2vZmLAYvGwTscKaZVl4lSZqGWPmEik0tbH09xS5wJyg1rEGWy5F
jWZtZo26QooazNq1fQ6t3rsJLWONsyq8ThO1jxp9tRQ1r9rdGmz5FDWNtdnK
JfLv1jn0gxqrlSJmqr2MiXOmiEnGyn/ga1No7kG891f4ghT3cDe4PdfgjhSa
bpi1OuNLwivAr/L+R3ltCP2Dee0MxrrBs5eIAye2ou2XogZ3zBr8qBQ1i7W5
79FneaTEZ83F992QQwNPqevLnJbrenNOOjefaWJum0NvzLH+za2b5FhLrilr
FWOKudMcaqxRI6mVzBnzw6vmiFPd6fcw9tBfnfH1GP+4jhnLjIGe45zaHz6k
ibnmHD8lxRx07htTN0sRo421xug1UmjIn+ocHZJijjp3zWFzpci55rYh8KZw
H/jHHBqlbYoaQu3yeYpYa8xVe1pjzJQiR1l7WGOoTbrV882hc6TIaeZWNf8C
KTwBawFrigVT1PTWGuY4tYqaxdynJps/RY2uVjNH9nRON5E7zaE94J5N5FZr
oo4pcqq1kjVFlxQ1h7WGNVqnFJrP2k2N3L7+XrXzJPj2FDlwYIkcaDx6uonc
qAZfKoVGVZsf3Yp8s6dhs4RmnSdFTlTL3ghfA99oDiuhIWZLUVM9UHOiXoEa
2Fx5LXw+fCm8eYma+uQUHoK1tppabW3Ong/esYQeGJyj3joKfgo+J0e9qUen
V6eH17WEx9W/zscZ6/xzPrlGXCt6dnp3emKzlPD89P705GYt4cnpzenxdS6h
EW9IUbOoHfWY9Jqs8fUmrdH1ro6v62GZHLWE81/tNLyuD2uCmUt4qHqpeqB6
rXoqelsnNOG1uL6G1vnr/F+ohGfqGj6jNmOBnp9jemh6aXoqeqd6Ypem0AR6
ZXosei16gnq3epSHpfAU9S7NiQPrenN9qgkG1fU9ZwlPwtpkWF3feop6i3qI
eqMnwwek0BRzl/DsLk6hgfXy9PzGwVc24QXunKMWM2eZu/TY9Nr0NPQy9eT0
5vQ09Hb1pa29zTHmGmsMvbXRTdQeeiB6P3qCeiN6LnpfenB6MXo0emd6Yno3
ejxnpfDU9H70mMbA45rwnvTQ9NL0oPRK9dj02syJ5kY9Lr0uPTy970Ny1FrW
XDvB++eoxcy55l49yPNSaHy9yaE5vBM9lL4lPMdLUtQkepHWDBPhSU3UEtYE
V6fwvK0V9Az1DvWo9Lb1fPR+RjbhvetZnZuiRtDLska4Cp7YRO1wJO1J+mfn
8GdOYfzAFB77vOY2eHAKT30B13MJ/+HIHP6Ev9nfPiRHvblHCb/oqBz+gznN
XHdEjlxnzjO3jay5cL8S/sxxOerTvUv4P8Nz6PsBJfyjY3Po+31L+EsjctQD
XmOv9cE5/JgDSvglJ+Xwsw4q4fecksO/Ohp+Fj4vh19yYAn/5WQTHnxECT/0
rBz+02El/NAzc/hhg0vo6VNz+F2L5qjN+vGatfQQ2lS6o3L4TSPgF+GxOfT3
MfBz8Pk5/Jzh8PPwBTn8n2PhF+ALc/hTagBz77k5tMGp/k8p9lR6Oj95fWqK
7/C73AO5DZ7cxN6I+Uv93KXmCz0YvVU9Cr0ZPZ5eVU/q/Vizqq8713ynnupR
85n6696a77rXfGWNcWMKj8baw5qke81P6i9rlm41fz5f9ZZ6Tn2nvrI+UM+p
z9S3elDqW/Wd9YI1vXpO/ac+0yOaDD/chHd0Wo7axnvivTk+h9fnnHJujfYz
UtwT7401r7XvS014UXpK96XwpPSa/vNsaj7Wy9Ej0CtQT+p9WeNZ6+kh6OVM
qfnb/PxG1ec9a/5Wn+oh9avx3bh9Bu09+tcy1r1NzCm9Vue8c+3mElpIzan2
vLVEbWRNZG10S4nayJrA2kDNpDacMYeWuqmEVlXDqmW9PhNrvvJ6OWcn1Hji
9XKN6P26pg+omlBtuDBtkRJrQq/RNe1acQ2Nr/HKtTWhxL3zHqrNJ8GbNVHT
WdtNLKGV1eBq8etLaHU1vlp/dInayxrKWmpMidrHmszaTM27EPhXCi2sRvP6
zFG1220ltJs1p7Xn7SVqS2s2a7cb4TWa0Pxqf9e03rIxxbV+Q4laQE2vtr8D
3qWJGtVaNdXPX6xqH9eoXq0xxbXrGr2nzj/XrjFFL9YYZKwxBo6t8d/YaIy8
qOa/vjX+j6v50fhujLi3zu8RdX1PrvPT+boj728Hzw7fzdhe8NwprtHjOWpM
57v6zdrTGK2XbI1n7LZmfTxFDLKWVc/rjRnjtmlFzftYihhpLXxuiVrGmtTa
1Jis92KNaKxWg42q+Vhtpga7ta4/tZk5Re/fmG2uMebpZRtzjYXGyEk1Xg2p
69X4pR4dWtfzVTXfGc/MEVfW/OX6tkbVm7fGtXY1R+gFqREH1Hw8puY/8505
44qan80l5ozRNd+bS6x3rN3dX7E2P6/Etbams7YbVSKWGlP1Jt4qkcvNseba
N0t8l9+plni7hLY155v73ylxr73naiE1r1p3n6qF3y2R+9VMaqdpJbT0fzkf
/qDEtfgvh8Pvw9c2ofHUervW7zu8avH3Smg/NYXa4pMSc8k5ZSz91DXfRAw0
Fg6s33dirQ2mlNACajq13eMltJ6aUe34WAntqCZUGz5cQouqGdQOD5XQDuYs
c9eDJXKXGkOt8XoJraYGU4tNL3HvnQPmso1aoU8eTOEPfMz4HU3kHHPPhyVi
mzFOrfRRiVykRlerX15ibVjzWfu5Rryf36RYO5eWqM2t2azdtmjF2ngiRXze
vBVrwTXj2tmqFfn5qRT+0matyM+uGdfOhSVqLWsya7ONW1GfPJTC79mkFbnI
NepavaBE7WZNaW25ZSv0wJMp/KrzS+Rac6615qatWNvWaM7PrVuR+9UA+l/G
hHbmqhSxYnyJ/KBHolcyrkStb01mbXZRidrMmtHa8ZISud6cb615WYlaWQ9D
L0OPoGMTXqDewRUlcp850Fr2yhK5zxxo7XpdiVxvztfLubpE7WtNbG08tkSt
ao1qrXpNCe/RGtla+aoStbM1sbXxtfBSTXiUepVe04dqftdbuynHHv+0JrxB
PVS91P7e4xK/2d8+Hf6ixJ6D/s86TfiXF5cY+4T2Zf089YKe+TfONfjjJjx/
/Uc9EL2Qz2hfl/CUfbbDPQy9Zu/J1Ko3/D3Wg+Ymc5T1nh65z1q4p6F3rmfv
XnTvJrz8c3jtmyaeWfD79dx9VkU/0nrS+sL6x/rGekpPz3rKesh6Q8/Oteka
tV7R43MvyXpL70+P0Pry+CbqL/d4fNbDPQT3ftzTca/YPQT3etzzcO9Dj9u9
IPfE3BvTY5+nxB6JeyX6we4lOYedy64ZvVjrPetj61vrNfdA9I/1i9XP7gm5
N69f7F6Rz+z47I57TB1L7AnpJ+uHulfknrZaSE2kP+szQz475B5VhxL6XG1g
DjeX+0yNz9a4p9WpxBp2LbuG9I7dU/JZAfdAf6kazVjgmlS7uQej3t+zCd9N
T9NnJawZ9DqNUcYq17zeps/k+GxOP9dciT0F9/rdE3WvQQ/UZy+Mcf95o63Y
23EPwr0C9yx8dsg9M/cyfAbIZ4Hco+tSwnN079J6XC/SPQT3EvY25pXwYN0b
tF61XtYDdi9Uz1Jv2Hraetb61nrXPSKfzXCP170j/X21pJpSP///uqK9fg==

           "]], Polygon3DBox[CompressedData["
1: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
A3eyV9kudpBNYf/NJP9DHo/1yLiM+A0hPNI8
           "]]},
         Annotation[#, "Charting`Private`Tag$7912#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvBVEYgOGxr9cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
cu1rRMTW2NfwnETxznMy92TmO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xntd817aewz0tG2iH
K4xzlbtc416Yifvc4AE3uaXD8BwecYfHjPOEuzzlHs+4z3NOO8cNP3Shl3BG
jZlti0NcZB/n2MFJNnOcdRxhFQdYxlJ1WWewlZ/e0cA71vCYFeFcLOKtfVd8
U66ewl4VmjGHBYwxn9lhD7MYYyazmBHex3SmMkVp1klMDd843OOvkvUTftOX
jBHNuNz+/x/+AMQfSu8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1000, 473, 689, 1106, 912, 691, 1107, 913, 692, 1108, 
       914, 693, 1109, 915, 694, 1110, 916, 695, 1111, 1006, 1206, 696, 1112, 
       917, 697, 1113, 918, 698, 1114, 919, 699, 1115, 920, 700, 1116, 921, 
       701, 1117, 922, 702, 1308, 1001, 923, 1002}], 
      Line3DBox[{704, 1007, 1207, 703, 488, 705, 1118, 924, 706, 1119, 925, 
       707, 1120, 926, 708, 1121, 927, 709, 1122, 1008, 1208, 710, 1009, 1209,
        711, 1123, 928, 712, 1124, 929, 713, 1125, 930, 714, 1126, 931, 715, 
       1127, 932, 716, 1128, 933, 717}], 
      Line3DBox[{719, 1010, 1210, 718, 1011, 1211, 720, 504, 721, 1129, 934, 
       722, 1130, 935, 723, 1131, 936, 724, 1132, 1012, 1212, 725, 1013, 1213,
        726, 1014, 1214, 727, 512, 728, 1133, 937, 729, 1134, 938, 730, 1135, 
       939, 731, 1136, 940, 732}], 
      Line3DBox[{734, 1015, 1215, 733, 1016, 1216, 735, 1017, 1217, 736, 520, 
       737, 1137, 941, 738, 1138, 942, 739, 1139, 1018, 1218, 740, 1019, 1219,
        741, 1020, 1220, 742, 1021, 1221, 743, 528, 744, 1140, 943, 745, 1141,
        944, 746, 1142, 945, 747}], 
      Line3DBox[{749, 1022, 1222, 748, 1023, 1223, 750, 1024, 1224, 751, 1025,
        1225, 752, 536, 753, 1143, 946, 754, 1144, 1026, 1226, 755, 1027, 
       1227, 756, 1028, 1228, 757, 1029, 1229, 758, 1030, 1230, 759, 1031, 
       1231, 760, 1145, 947, 761, 1146, 948, 762}], 
      Line3DBox[{764, 1032, 1232, 763, 1033, 1233, 765, 1034, 1234, 766, 1035,
        1235, 767, 1036, 1236, 768, 552, 769, 1147, 1037, 1237, 770, 1038, 
       1238, 771, 1039, 1239, 772, 1040, 1240, 773, 1041, 1241, 774, 1042, 
       1242, 775, 560, 776, 1148, 949, 777}], 
      Line3DBox[{781, 1149, 950, 779, 1150, 951, 783, 1151, 952, 785, 1152, 
       953, 787, 1153, 954, 789, 1154, 955, 791, 1155, 569, 793, 1156, 956, 
       795, 1157, 957, 797, 1158, 958, 799, 1159, 959, 801, 1160, 960, 803, 
       1161, 961, 805, 1163, 963, 807}], 
      Line3DBox[{806, 962, 1162, 804, 1255, 1054, 802, 1254, 1053, 800, 1253, 
       1052, 798, 1252, 1051, 796, 1251, 1050, 794, 1250, 1049, 792, 1249, 
       568, 790, 1248, 1048, 788, 1247, 1047, 786, 1246, 1046, 784, 1245, 
       1045, 782, 1244, 1044, 778, 1243, 1043, 780}], 
      Line3DBox[{809, 1055, 1256, 808, 1164, 964, 810, 1165, 965, 811, 1166, 
       966, 812, 1167, 967, 813, 1168, 968, 814, 1169, 1056, 1257, 815, 585, 
       816, 1170, 969, 817, 1171, 970, 818, 1172, 971, 819, 1173, 972, 820, 
       1174, 973, 821, 1175, 974, 822}], 
      Line3DBox[{824, 1057, 1258, 823, 1058, 1259, 825, 1176, 975, 826, 1177, 
       976, 827, 1178, 977, 828, 1179, 978, 829, 1180, 1059, 1260, 830, 1060, 
       1261, 831, 601, 832, 1181, 979, 833, 1182, 980, 834, 1183, 981, 835, 
       1184, 982, 836, 1185, 983, 837}], 
      Line3DBox[{839, 1061, 1262, 838, 1062, 1263, 840, 609, 841, 1186, 984, 
       842, 1187, 985, 843, 1188, 986, 844, 1189, 1063, 1264, 845, 1064, 1265,
        846, 1065, 1266, 847, 617, 848, 1190, 987, 849, 1191, 988, 850, 1192, 
       989, 851, 1193, 990, 852}], 
      Line3DBox[{854, 1066, 1267, 853, 1067, 1268, 855, 1068, 1269, 856, 625, 
       857, 1194, 991, 858, 1195, 992, 859, 1196, 1069, 1270, 860, 1070, 1271,
        861, 1071, 1272, 862, 1072, 1273, 863, 633, 864, 1197, 993, 865, 1198,
        994, 866, 1199, 995, 867}], 
      Line3DBox[{869, 1073, 1274, 868, 1074, 1275, 870, 1075, 1276, 871, 1076,
        1277, 872, 641, 873, 1200, 996, 874, 1201, 1077, 1278, 875, 1078, 
       1279, 876, 1079, 1280, 877, 1080, 1281, 878, 1081, 1282, 879, 649, 880,
        1202, 997, 881, 1203, 998, 882}], 
      Line3DBox[{884, 1082, 1283, 883, 1083, 1284, 885, 1084, 1285, 886, 1085,
        1286, 887, 1086, 1287, 888, 657, 889, 1204, 1087, 1288, 890, 1088, 
       1289, 891, 1089, 1290, 892, 1090, 1291, 893, 1091, 1292, 894, 1092, 
       1293, 895, 665, 896, 1205, 999, 897}], 
      Line3DBox[{911, 1005, 685, 910, 1307, 1104, 909, 1306, 1103, 908, 1305, 
       1102, 907, 1304, 1101, 906, 1303, 1100, 905, 1302, 1099, 904, 1301, 
       1300, 1098, 903, 1299, 1097, 902, 1298, 1096, 901, 1297, 1095, 900, 
       1296, 1094, 899, 1295, 1093, 898, 1105, 1294, 1003, 1004}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1106, 252, 488, 280, 1211, 503, 295, 1216, 518, 
       310, 1223, 533, 325, 1233, 548, 340, 1244, 563, 1150, 355, 578, 1164, 
       370, 1259, 593, 385, 1263, 608, 400, 1268, 623, 415, 1275, 638, 430, 
       1284, 653, 445, 1295, 668, 460}], 
      Line3DBox[{253, 475, 1107, 254, 489, 1118, 281, 504, 296, 1217, 519, 
       311, 1224, 534, 326, 1234, 549, 341, 1245, 564, 1151, 356, 579, 1165, 
       371, 594, 1176, 386, 609, 401, 1269, 624, 416, 1276, 639, 431, 1285, 
       654, 446, 1296, 669, 461}], 
      Line3DBox[{255, 476, 1108, 256, 490, 1119, 282, 505, 1129, 297, 520, 
       312, 1225, 535, 327, 1235, 550, 342, 1246, 565, 1152, 357, 580, 1166, 
       372, 595, 1177, 387, 610, 1186, 402, 625, 417, 1277, 640, 432, 1286, 
       655, 447, 1297, 670, 462}], 
      Line3DBox[{257, 477, 1109, 258, 491, 1120, 283, 506, 1130, 298, 521, 
       1137, 313, 536, 328, 1236, 551, 343, 1247, 566, 1153, 358, 581, 1167, 
       373, 596, 1178, 388, 611, 1187, 403, 626, 1194, 418, 641, 433, 1287, 
       656, 448, 1298, 671, 463}], 
      Line3DBox[{259, 478, 1110, 260, 492, 1121, 284, 507, 1131, 299, 522, 
       1138, 314, 537, 1143, 329, 552, 344, 1248, 567, 1154, 359, 582, 1168, 
       374, 597, 1179, 389, 612, 1188, 404, 627, 1195, 419, 642, 1200, 434, 
       657, 449, 1299, 672, 464}], 
      Line3DBox[{261, 479, 1111, 263, 493, 1122, 285, 508, 1132, 300, 523, 
       1139, 315, 538, 1144, 330, 553, 1147, 345, 568, 1155, 360, 583, 1169, 
       375, 598, 1180, 390, 613, 1189, 405, 628, 1196, 420, 643, 1201, 435, 
       658, 1204, 450, 1300, 673, 465}], 
      Line3DBox[{265, 481, 1112, 266, 1209, 495, 287, 1213, 510, 302, 1219, 
       525, 317, 1227, 540, 332, 1238, 555, 347, 1250, 570, 1156, 362, 585, 
       377, 1261, 600, 392, 1265, 615, 407, 1271, 630, 422, 1279, 645, 437, 
       1289, 660, 452, 1302, 675, 467}], 
      Line3DBox[{267, 482, 1113, 268, 496, 1123, 288, 1214, 511, 303, 1220, 
       526, 318, 1228, 541, 333, 1239, 556, 348, 1251, 571, 1157, 363, 586, 
       1170, 378, 601, 393, 1266, 616, 408, 1272, 631, 423, 1280, 646, 438, 
       1290, 661, 453, 1303, 676, 468}], 
      Line3DBox[{269, 483, 1114, 270, 497, 1124, 289, 512, 304, 1221, 527, 
       319, 1229, 542, 334, 1240, 557, 349, 1252, 572, 1158, 364, 587, 1171, 
       379, 602, 1181, 394, 617, 409, 1273, 632, 424, 1281, 647, 439, 1291, 
       662, 454, 1304, 677, 469}], 
      Line3DBox[{271, 484, 1115, 272, 498, 1125, 290, 513, 1133, 305, 528, 
       320, 1230, 543, 335, 1241, 558, 350, 1253, 573, 1159, 365, 588, 1172, 
       380, 603, 1182, 395, 618, 1190, 410, 633, 425, 1282, 648, 440, 1292, 
       663, 455, 1305, 678, 470}], 
      Line3DBox[{273, 485, 1116, 274, 499, 1126, 291, 514, 1134, 306, 529, 
       1140, 321, 1231, 544, 336, 1242, 559, 351, 1254, 574, 1160, 366, 589, 
       1173, 381, 604, 1183, 396, 619, 1191, 411, 634, 1197, 426, 649, 441, 
       1293, 664, 456, 1306, 679, 471}], 
      Line3DBox[{275, 486, 1117, 276, 500, 1127, 292, 515, 1135, 307, 530, 
       1141, 322, 545, 1145, 337, 560, 352, 1255, 575, 1161, 367, 590, 1174, 
       382, 605, 1184, 397, 620, 1192, 412, 635, 1198, 427, 650, 1202, 442, 
       665, 457, 1307, 680, 472}], 
      Line3DBox[{277, 682, 1308, 683, 278, 501, 1128, 293, 516, 1136, 308, 
       531, 1142, 323, 546, 1146, 338, 561, 1148, 353, 576, 1162, 1163, 368, 
       591, 1175, 383, 606, 1185, 398, 621, 1193, 413, 636, 1199, 428, 651, 
       1203, 443, 666, 1205, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1294, 444, 652, 1283, 429, 637, 1274, 414, 
       622, 1267, 399, 607, 1262, 384, 592, 1258, 369, 577, 1256, 354, 1149, 
       562, 1243, 339, 547, 1232, 324, 532, 1222, 309, 517, 1215, 294, 502, 
       1210, 279, 487, 1207, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1301, 451, 659, 1288, 436, 644, 1278, 421, 629, 
       1270, 406, 614, 1264, 391, 599, 1260, 376, 584, 1257, 361, 569, 1249, 
       346, 554, 1237, 331, 539, 1226, 316, 524, 1218, 301, 509, 1212, 286, 
       494, 1208, 264, 480, 1206, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
zbHiCC6I89edv2jloymQeSF1OrwQLVxQzLE0Ig+1c3zeek/SXHGgzXxd8h4i
yp/F3aoKri36dX71j/JdtPDreoQIUyvUv9jqzS1hLjz26/eZNeODgPA4IFoj
UBzfTX8+08qfGit9JhveRI7n9yTH8/eT799wIt+/wUh1/0Y6OV49giouXczr
niI/9jA0cbd51DFE/36JEgVL07O2GVAwL9R3WTqKj/aeh6DLHcGd+inw0fLp
ajUNk+99RWHkscPfKSnI3KznP/S98lfj/638FY4cv4v7wTjedX2a2/zZCOCo
uBjfNqFSKLMxukHoGH7M7gGYbPxVKDmelVKuJ8e1euJm3yPZBCLlh3O8Wnqf
eoCDApE1lVABDGZ1zUgl4GHV9vvztetaxz1/n5rXcqTDa3l5XEp2I6G8lm1R
k2qc7NjlM04Ur3U24rgMp+lLpF2Gsorj0bldP92v3eR4sy0/GG9GzWsZa+2S
DK2qAQXGn6srvpzPm5/+bSeR0w7eigkmnRZA+ZYPXZ/Vdpn8/P4uaeuhEP9l
H2eed9B/5D5eR47jsiPHZX10PXhbsqABSuD8DBT/ygZ2mwoG7BvR88OHUobd
6/IboV665rr9s0hAKfO0gEtGHbjStJLJurEUijgcHThhSaSZb6ua6qOCW4LG
ba46JkPcsLtzwvJk2aw7TTAk9H4/75xEJk2zul+T9+r2XH5M6pkA/GP6R4Uz
d5H/rxBm9uMNDzf3vwTWVHms1r/4vr7Z5O+YveTvmP8DzqLgDg==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-2, 2}, {-2, 2}, {0.5039351700634122, 0.5727533777303815}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3, -2.3999999999999995`, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7257965632521977`*^9},ExpressionUUID->"2b2633b6-c8a1-4f5a-86cf-\
a438f24e00d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7257966262069635`*^9, 
  3.725796648008107*^9}},ExpressionUUID->"76376aec-3e25-42b1-a040-\
c40b5f060e5e"],

Cell[BoxData[
 TemplateBox[{
  "Predict","mlnasetl",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"SupportVectorMachine\\\\\\\
\\\\\\\\\"\\\\\\\"\\\"}]\\) is not an available \
\\!\\(\\*RowBox[{\\\"\\\\\\\"method\\\\\\\"\\\"}]\\). Possible \
\\!\\(\\*RowBox[{\\\"\\\\\\\"methods\\\\\\\"\\\"}]\\) include \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"DecisionTree\\\\\\\\\\\\\\\", \\\
\\\\\\\\\\\\\"GaussianProcess\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"GradientBoostedTrees\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"LinearRegression\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"NearestNeighbors\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"NeuralNetwork\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"RandomForest\\\
\\\\\\\\\\\\\", and Automatic\\\\\\\"\\\"}]\\).\"",2,319,51,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725796590931237*^9},ExpressionUUID->"e0b4dc2e-3d6d-46d2-a307-\
d01119096574"],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-2, 2}, {-2, 2}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725796591774587*^9},ExpressionUUID->"9c46f1a1-a025-4b68-b5f9-\
67ecf6008b10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"##", ",", " ", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"#1", "*", "#2"}], "]"}], "+", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".2"}], ",", ".2"}], "}"}], "]"}]}]}], "}"}], "&"}], "@@@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", " ", "#2"}], "}"}], "\[Rule]", "#3"}], "&"}], "@@@",
       " ", "points"}], ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<GradientBoostedTrees\>\""}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "y"}], "}"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], "]"}]}], "Input",Expression\
UUID->"9b827fbe-5be3-493d-bb23-a204f2f1a1a6"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
D5cGMo73a8jGg/zn4BhP/Zn7+tzepBHz41H/Qn486gfzCf2/suf7kcOH59E8
w15QxLhwz5WLZuW7GjxVifdcufjI48bDfihEPyL57coVZxxy+b0e8uG60xbF
7ou5PIB76HeD6HUdErn+E3mIHwr+A5AP57efEDOkWg5x3BfMezStEbmI+/9D
n5/VbUUDg+GZ4jzLM/Jtlta9WCrOs9zit/mT1WtLZWF/kKe9uSkbJ3F7Ae5z
kCeF75HkUnyP75k8+dDogtOGGtzfJozJsd+PmfdsnJ9GHP0/PDbJtb4B5z5M
z/+oWfGuL5UzRT8xkvdEv3pb5lcv8jGCvz3JdW1iTXbODqZzE3Jg7bPn+/xJ
yKJ5g9w4bpnTxLTl3M8Bcuy+Tfpbz3lEE4cce1jgGE/cpSpzjyx+LO57clDg
26GDXDPIDwp+CMeZfCjYbeX2T/cv3dfgnWi3lU0FDv/YNfo7t1ZZkiH4Tyrl
nuuzR7refEzfC/wcclmdLHD4OWQJnP5k+eRJzhe44Aclh/kvfGe/iud/gP3i
8NHaTetYcP9JZt+XUzwH2RvX5fko/tv/gh6K/v+Ql+D/j3nIYPr2Ud0/3sk+
xPnvcjhrL3U7aX381VSt9lJXxgV5TEq4fuu89QkteUy6VPtk0vZJJaJemuIR
hPcifdy6Rh4x5LF4f5eMWHyB4Ocm6Qmc8uhPaWhdLy1f9LeR1vfptvOefRI9
F9q3Z/IDxXsyvfHz+62t346/J+YHk4q84sJKxiTLgn1Q+vi415jZnXNE+6ZW
/ALyFNVs91/8guDvJBUKcQ3wNzh6fF2v11IcccgnNpXP+81eyv3t0X5J0yqP
R3RJoO+O7TPSiiMz+o3uXSgL+4A03X+fo/fLLNHfXnpxRHO7ggm340PP7Kx7
7PsSRbJox5dafBnWte3tNOLIZ/5hZ4+Yzs4psmCHlQZv/tVy0VOur0P83YPz
4UvHe/E4Msgn4ydaVJ5Ss5A45JlxAodclH7k7n7Hk4WCf8gPyYrFZZQXrwFO
498i/W429gVx5HkW4zuY3kBa1K7CnKprud6AnQuSV8+yfqHLi2ie8bshk+pO
Hz+E64HBd5U+G/VmgIbmDXIL5BzBP0Ga00Fvzxg7pXguSydNd0+bHMD9aaHP
Odg3frnreK08h/IyddGO+LBs2u/eC34XwnhkQ+WpHif1i8V4QDmr8GZFR1eF
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
/ovsdxOYXgXtRfsRuGjf/39lcCVh
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXX8FcX3xu/n3rt779279THAQAUxsLDFFgGxBWwRUFTswm4Ru7sbAzEA
u1vsbkwUOxFbUX/Pm2e+r98f9zVzZ2dnZ2d3Z8485znn9Nhpv833rVYqlZWL
SqWmdFyrUvm9o1KZ0qxULk0qlceVv1H54e1K5Snlb6E8qlQ210nv6v8qqv+k
0gkq79aoVAbGlcqFOn630kXV4CQd66P0etV/RvlflH9N6cv6naV6m6j8FeVX
VPnrSh/TbxddK65XKvPq+rOUTlfZm1xD/ys6Z7zSPdNK5Vn9PbOsVHZWH8ap
nZWVfqB2JqrueB37TmVvK9/Ub5zOmar0HvVzPZ17sY4fmFcqh6ifo9XmurrO
2bruOapzvOocod8hyu+j9B4de1TtnqH/laxSOVLJtUrvUvlpKjtKv/l17eOU
Hqr6n+laJyh/pPKHq81DdY3DlPbX71iVH6jyP3XuNOXf0G+s6p+k9GiVj1Cf
xqj9tdXHHZUfq/xEPZu6xram31mqd4Lqn6f0RNpRnefVt12U1tWnY1RW7axU
vtK1llL9L5VWVP8Xuq5jo1TvNOVvVtpN9a9Svr+utZr6/4LanKQ6PXTeZurz
1RqX53VsWdV5RenK+u2i/CY693P1aT/dw9PK/65zx+rcw3XuispPVv5i5VdQ
v67SM3hU/1dSeVXpwio/Vn1aWfn+yj+p80er3oJKD1CdXVX/P5W/qj7Prfxb
yj+j6y6m6x7CO6o6nyv/t/r4L31VO6sp7av6n6n8T5UX+i2rNvtX/V4foH4+
q/Z3V7qbfivonJFq5wneE527hdq/TeeuovFoq52PdW6k9H6Nwb363al6V6le
h9LuSpfTufcof6XySyn/j86dX/l+uu66+n2ja7yl3128L/rVlP9U6av6za3j
a6vNUzW2N+ga76vsfp27Uepn8Z/6u7Ta/Ff5BVT+JX1XnUi/r3U/Tyut67ey
zo2VLqY6j6m9aar3MOOu8nVV72uVX6lxfpB3X/mhavMylS+j9FWV91X+K74F
9WMz1VlVv5dUvqbKP1f5Bfr9pT50Vbq3xqO3ji+j3106f3mlfVXeVfXv0vlz
K+2pdKj6UNf5Q5R26leq3jOqlytdQmmqe5xPbR7Fu63jc+u3lI7tqfYznTdd
x5ZVOxvpf1v/hyt/vfKLK389bSp/kOp/q/OHqr3d9J731P0urrLV9f8G9a2p
uq9yX6r7p8qfVr6X2tle58c6toPKF1V5T/2GKr+dfmqu8qOOzVLZnPx0P12U
LkebOviPntkSutaiutaXqjtL/1/Utfqpzsa8g6o/RddYSOlJehYj1eYqHNNv
Q8ZN5/xU9bvN+/q30j+r/gb+0jmjdM5+Sutqc0WV9VObR6u/8+k3UP83U3v/
KJ1Lv4V0na31v6rzb1f9itIXeL7q24K8F8qvk/gdX5fvSPUHKL+kqh5Z8ze1
gf6Pqvp7mV+/O3SP86pupHv8Rm1erHofKP1e516t/Pk8D+UT9ecnnfuj0pX1
e0/5/3TsZ6Uf8g7put8rfVRtMai7Kb+z8n8rv5PS3dX+vJqvL9I5q+p7PFvX
OJ0xIdXvNOW7K11Iv/N17sk653zlL1R5L+YVtTOXytZQOxvpWr/rMnPwnuqb
eVr9qSrN9A2fq/JJypc6Z3fWE9X5R9d7VHVmKW2rztmqs67a+0b1LlF/Vlf5
/Orb1rrP/io7Tuceo+t2UTpQz3s9/a5VvRV0zmid+5b+/0afVPar0ivV9lTV
H63rfar/hyvdV9edpfb+1m9tPd/Fdc6Wyi+sujspnVPnLqFzxuv/ovodqnM+
1jkHKN2D+Ub93JFvQtecynhxfaU363+V70nj8LX6epLOfVvl7+t3ouoso/Rl
9eFAtZ0p/U/1d1A7vZVeoLrdub6uUajusarTVXUe1a+Pygao3fdVb4jS7dX+
WPV7HZVvRLn6fKfqr1Nx+pXSWOetqeN36P8K+n+y2rxL+X7Kz6f0bv36hnd+
sn4rKb95h+t8qzq7h/KllV9DbS2tY1Wlc+Vu8xmNwcu67mvKL6o6eyp9Xb/l
lN+l7vIvlP9Idd5QfkWeTeY616f+5iaF7+4NlT/B+UovqDo/ruJv69aqv68n
dewW5Q9LPR+QZ054XuUPK/8c/dHvUeVfUvqqfo8hwyjtGbv8ArXZT/fwJ9+c
xu9jPfdTlb9Q6T/q50PMbfq/SOxzL1R+J9qoem17UW09wnet9AWdsylzptLd
wr0spf9PZe7z4ernFOVvU/7Y1HMd+e58e0on6reI6i8cu83zld83PJf+Fc+7
E8PcS7/26/D7MLz0GlvqHRilb+3Nqt+5DVpez1cIMtcL+j3AGqz2n1P+PrWz
Vuzyx5WfoTZeYI5RGul5vcSaXnGK7PMga1/La9qVus51zCvMlaqzuspfqVgm
mVvv1UkqP4J7V52Tlb9IbXZV+SnKn6Pyi1rOX97wM2I+maD0WaX36vgtDY/t
qfp/k9J5as6foGMfKv+U8jcrf2nVedZ1zn1EfVse+Y51Xf/XVvnhSt/Rb2vl
f1Bb7yo/Vemglstjvhf+6/iCei7vZj73FuVT5F/lP634++PcGcrflPqbeD73
t/t21c/+wJrfjZ4Vr+FTqpYPWMOfRl7i/a+5/BblB7Yss1yuPlwe6tyq8kND
m98jX9bcB0SUAap/HWuE0qjl9WJTnfuKxmuYjo9Veq/qbqb80cr30nP6BllF
+TEakzXrngsWVv+3QI5S//doeb19We08wJzOPkD5Y0rLAMgCu7YsL7yo8p76
v6XK39Z8dmDidecL1vPU82Vvld0Q3g1kgI0aXqeQRy/X+3ZV3XPvsMhjyniW
Nc/hvNM76Pgo5lvll068pk1V+98yT6psL/VhsOrMiZzBWESWJZAtFkn8ffyu
az6QeL54XvXvSzxHPIeMhMxV8dy4dWJ5aW2V71q3vMTa/GzTMtHSSt9FnmZ+
0P2+rPE6lG+D/YjO3Ut1dledhRPPPcuyt4q81s+n/2uw5lQtI22b+Bt+TXW6
q86CkWWDdzUmdyg/r+p3Rt7TJcgQkeUiZLIOXfNX1hxk8ZrfS97JtTUmI1i/
1Pb6ba97X6tsGnKJyvdXeo7OPUu/HfS/qeOHVH3O+So7V7+Ryj+sc7ur/D3V
305jt2uH349OtfVjxd8IMsK2HX727+t6h6l+wTNhTlN5D6VXtywnrtn0e8j7
m6vsXF33vqq/sfN0zfuV/0H5byPnBzNvMj/pt53yv2hMZui3MN951eOBfMh4
U2d7pb/p+LY6v2f4Vg4M19tbfRuq4yNU/wpd6wpde1/9v6nutX5/1hCVHal0
H+Q6tbOz2hmp3zGJZdj3de5R6veeOr6b8gM1PmOUPxgZKbacwNr/u8oHIF8o
3arpOaFD6TtqZzTPnfmZb1O/IXybba+177BnbXl93Ub5mvpzMHMIcqjanp/5
SvnhOrY+z0LpKer/Ovpto/8tnbue0kEq71LzHMu6ta+O74qM1OH1FnmANXc1
ZDzGXt90Vc/pEPbj7GN0LzfrnONV7yGdt3TVe+Tt9H6vyNyuuvfn3gufp/pX
qv6EuseuZL9V87k/qM5xqn+N6k/Qd7Kc8jsju2kcbtTxc9TPfTPPXV2Ubqry
65U/W+WT1M5E/W7Q/8WVvlXzseFqcyW1s5vqb1R6z36++lBmljlZ02/UtZZV
nZ2U31Xj1lv5Y/iO1M7daufEDq9HtHOm8uMorxsfuEPpA6xJyk9VO4vr/wRd
c2+1s6d+y+ucGzOfdwt7Z2Q2ZBWV7aPjKzDmOvavyq9lclYb3dX+FLV5rv7f
Xjhtqv417E9rxg420Dtwj/J/6RlOb1gGZh1s6Le/2l1Z7T6vOvPrnE2UtnT+
iapzie79nLbbPEHjNla/g1Q+r9o5U+UPq82/le/Qdcdx33yXmcd1c5Wd2XQ7
y2vsJ6jtBdnz69ip+n+50tN1fKGa5RzKkXleDXX25ttmrtO9dq95HPiPrPJy
zeefrGtfofSMpuWrV2r+/3rud7YTmZb9tMZ5O/3fKvN8MkPl2+Yez1EqO6Dq
d35D9fU+1b1M+eMrfm5LIVfQV93vzWp/hq45Xm0+qGMXqfw2tXOh0vd0v/Pr
eJ+q/y8eZI8JfBe6xs3M80q/0phfA5am9AOdc4vKF1L5kmrzg6rrLa9jy+k3
XvleKn+n5nf6AJ4r84mu+UzdYw5e80XD+MA1ShcJ3ybvx9+57yVHtlX5xR3G
jz5tWCa6TOlTKr+0w1gS78Ilyh+n/Jc6drXSa5UurDqrVX3tG9Wf+3XtCxj/
MDcMRPbWNU7vsAzcNfa3Df71F+ezL9Yz+qPh9X03pcP1Dqyl8/srvSPx3vEJ
1Vkt8d7xPuXvyr0PHavntabKZ6j8cZWfl3k9RYa/Krd8MU75sXXvPQbRD+Xf
DN/157reZapztdI1VL563Xv1NXW/hyg/R9X7hYNUf1nVvyvxvvUpXeua3HWv
03zwb9X7DvY0c6v8D9bxzLJSK6yPyMvI1qcxV6i9Xsr/pPLjg3xI345iPuPe
O7xmHRrWEdalhcI6Vej8XyuW87dRP4+oel18j30f64Dud4ba31jljQ6/Dy/p
/2/IT6wlStcHa1TZkA7LZDvp//HIiy3vseatev3YSfeyivJ7qO2D9Z7fqrbG
qO4DubHBK3Ste5VfROU3Kd0q91y1S+bvgHmbZ79qZjz1adVfRWO9sn5L6/hi
mfG9HuCfun6/qvGy83WNafrfUHqy7vFb5QeyT1D9WTwvtXNH5r0Se6YjIsve
6yDbqJ8bqe3NdO6dWWW2sPoAGFJm+fce5WusHTWvwaPV51uVdud5gRWr/FC1
Obhp/KPSsix8eZCZ1wGL02/DumXn2zvc7sTMx+8DF1H+D+X3UdtngQ2yhqqd
uzPjY+wlB+o6RZCphqjOBvo/XnVubLl8SV1/GV1jfZ1b0/++4F1BHpugOn9T
xvrFWlzze/aA7ms5/b5BrlT5cnXjfeuFc3uBFdf9frb5ruqeUxnTSerr38hT
mnvmVL0zmOd1nw9mvv6juq+HMu+5Hlf+CeWH6jrHK92Z6zNXKv991e89cmE1
7M3XUntvJZ4X9lD6tfr4lX5b6djMlueDY1XnLD27J8GtVHab0rHIrspPYm2v
eu1fhnen4TX4OdV/XMdmqc5a6tOx6vMFSvu1vfaOZp/YNv49pmm8Hqz+YJ6T
zjtBbZ7c4fUZbPxnld+rOr3Ae9XPw8HgY7/r/4F1q96/St9nfVTZqUrX0fXO
VP5KpX31O0v5q5Se2vS8eorSTdWHs5k/lb9J7T0c1hJwrCuVnsTaWfPeE3li
Sthj8p0fDI4B9sUar2ufoXRhMKTYuCtr6hpVv2/045bYe13WgAdrno+RDb7g
2shOYLB6TmcpbXR6bWSt4dmzfp5f9Tt6pNpZIva6s2jL69X5Ta/DYGu8M//o
XXlN10qUvqL0jZq/pYP0LnVo/Hqq/fWR+avG3U5seT++oNIfmDOq1q88qPFa
EMxX9ZdU3y5Tfk7ld1a7p+n+dyrYmOl91Dhuq/JM/z/hO2U9V/5o8M3C+AI4
w3Xgfar/rq6Rqryv8tNV/zDVn0v/v1f+aOX/0fXXYvz0WzPslzuZy4MsiX5i
ou5jG56F2hxfs44GHc/MxLqCb1XeB1xF6Qxd5072FEGWW0Plk8Ea6XtiPdX1
4JO59VDoo/5Q3cFV68nW0HivHls3tpLKr6tal/aT8lsq/xJyY9t6sT661591
rR9r1gdc2bLe6k61fxn4Yc36tmsT69zuUvnvqv+bfh/p/1wq31bHf1P5zm3r
yu5Q/readWdgLEVifdMDYOPqF3q033lf+IZV/rDKV61ZB3c746Pjq4OPq92e
+ja2iT12Wyi/uX6f6viGideiEqxAx+uR26oHDJB9yJYaty2Ubqs6vcHHdew1
9Cfs48Pe5C2d92ZkrHxwZny6J/Ot6i6oOpvo/4DEa9zWaufDyDgn/5dWvcF8
j3oXLo69vrL3HNzyGvq20lbNe1T+nxd7veQc8Mzjal6vt2waV+tQ/Tdz60S+
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
sjjcGGLeoOcgljr75rN1P3N02q/3EWrjBzDa2DEX72s7jw6lU3UKtfmr2s86
7Tv7oNJ2FsQM+Av8srQ9FvbXP6X2WTUfc2rbcc8fbzvW2cwgz88IefQf5H/R
b/cO28ERD4K4ENT/OdRBpz0j1IFPAa8CHRh4G7gbutoH2+YYIKMuGcrB4vDb
i5+VlxJz+7ExJp7C2pE5H/A9fg16qXdVvlqn7Sj+Un7+1PZBlGN3M175r3lW
usanOndI0yl+PPGvAn8LfGJs2/p6/Jw00B10ek1CHzqk0/65Tiy9ZyOWHnu4
LTrNtWVPtJXyf7SND2+u/JsqOz41T4Z+E69n0077lGHOB2MEk2SP9mfp2LFD
wZqUv7lqH5Ub8zwa3ms/E/hX8LCwo4eXDj8d3J593UJKd1X9v9X+bTq+YafX
TnTBxBRDhtpN6dadti2/UOW7dNrGn5hBYK9g9/jxhZOJv0r8VnZr2t/LOYlj
88GBhAuJX8gDWvYTie0McaPPYN1Wm+fj4wpdbW7eysqdtrs5gjmp0+85nGbs
lLDNPq1iW6aunba3JDbQ3J2Ou3BUaT40vGjilc1iLtb/o1Lbws+2f+fdL23v
fUtuXB3OIdzDuto5G8Bd5f+qTtS0D0xscLA/+UflNdU5HX9vetf+Yy1Wfgnw
D5Uf1rQ/CmI/Y1OCLgK7EmxITkxsE3lGbN0k/tXOjq13nZqaX/YSMmbp2ND4
CSSWHLxe4kjBp4dXDx8YDAksCTv2t5SOVv3TlK6rX79Qf5HU3yI+5ZZLjV1V
Az+Hc8GgkL/6NyyDwT3mXORidM7E3CXeLnpl5r/vUsf7Ie4Ped4F7CeXU7uz
2m6/ofJ3m/52icO1Qek+0JdNwfo4hzWiad0rcWL+aph/VGvZP+/WYW8IZ5H2
8SnBek383o9Kz9NgIGAh/zUds2H/lmMRwoFkLww/mbgHxBsn7ufhOv6J0hdb
Hnf82xF7F87YYonXZeLiflratwc2iuuqT/0Sy12ss3zzp7O/Aq/U9T/T8b46
vl7pe2eM12+YM8F+Ac4i3MX+qjOlaXwO36pxy7G3sBfcoGneI3xFfHEg7yH3
IfPCpcM2l2fAmKMvZ+07XunMws9yZBj7VdWHY5Q/P7U+eomG+V3oonuFZ80z
Jw8vi/jnxHph3f2+7Zjj3yGntM3BWET9upQ9PZh808eo8y2yfSjnOPM612Le
/jzMzw+GOY42mPPYl6HfBYsAl1gj7NFOaNrfGd8F9eFegBttzfyIjNGw3xJw
JPaKvxX2nYa9Fd8/ccqxbXyraZ9SxJKbURh7xn8OdoTYDbJmE69qiPIleofU
On7iAx+qNjZteOz25j+6tdLz4saMT9tjzZgjoy4V+sb3idzyNXZXzBOpx7Ke
el/F2GKXhQ/QnVh/2v6+BoVvkzgpxK8FL/i67bjz5zas/6HPs3VA6ve42HaX
1F0n1Gc+oB24/sgU18b293Zo2/dzeLsy22EnMsl/yDQN+84nvjj8VHiq8ITh
r8KDjXQPFzbtt445+eXwPMuWYxDv1uH2urQc66Wv0kMS22Jjd068dWJKEluS
OOzw8e9Uvk9u/374+bu24VgZxF8/T/kx7L+V79oyzw8Mfs6mY9D3VNkXLfu6
/JA9VNN+lNhTEIsZTiH+LPdt2jfcjJZlYGKBTi8dfwp5G27I3ontlLFXXjvs
t9GNEfeZd2Bn9jrq83b6nyhdG3vPmn1pntmw76N/1P7fqedI4jBf1nBsk/Oa
loWQf7bKHLMeuxF8aOF7H34s/NxT1davauMlpd+mlr+Iff1jav4pMbeJIYfu
+jSlZzcsA//bsn8M9DvoxLpmjseyL7xW1u/Yazf+WNj7rKE6ZzTczhj1rVdm
3Is4n8TJRpeBTNJfvwFhHj69YTxvlq61Uur8qanjLqELQY9EbFFijMaqnzaN
Y0F0IzY399LBfST20YGvDmLW45+JuI5zt417Lti2fRF2RpczX2WOT8Nee0DT
OmP45sSQvb1qfv4hpf3lvxfW4R/B3VuOz4KvcvyRz9k2N28unm/T3EC45Ydo
TD+Ga6g+DG5adu3VdpxlOMBgGsQwIJYBMsNdLfvVxL8m8gI6beIXb9S0vAeH
vG/TWBq8d/a12FgMTezv+lgd/7y0nyCwX7D3Q1r2u47f95kt+0jEhyK+d5A9
kEEWbDk20rot8xLAUDdVnbxlP/LEgh6b2M4Zvz7E79hWx95FtmrZ79hXOn5i
0/68vgAraDnG9Fotx7WZqfPeL43boE+uojtq2A61X9v7eHS505reB6P7Hajy
p5vm+CBfzhd8jeGz79OWfd7i+xZ5B78Xv7fsbwp/KehTjm16Tvq75WfAs0CP
w9y/elgLwNDQiaIPHYjSqm2Zk33VObHnKfjw58bmwG/Qac7N3oW51qzR+OLC
9hgb5DlKy3x3xf8fs+ju2N8M3DB8GeHTiHmTuRjcD3mHPHPyB8gcYPKF8Qby
11XMr5vNwQvt31SxjPlZwzZ2+CLCXhH7NOy4sFEjj33bAWE9ZV2FN8Z6DP6D
rQ6cWWx3Nuk0n5X8t2Gunj1nq43JsWMsLZhZ/8xe40K1dabqXND2ceqxNoOL
Tw55bKPxvYiO+Jym9cbI5Cum9v0LHrJ86rUJfIMxwSYN/Oj4hnX6U/XsHq/a
n+O1+r9Rp3nGg1W/Q797Vb4x873y9yj/H/uG0Df6SHyk+2LP+zeWlm+Rc3k+
jCN2jciD2zQ854KHg3tjYwG+i78n9AdwIfBPR2x4ZMGDYvvFwFbjtNh+Lvp3
2qZ3f13nc/XjVJV/Vth+9jjkndJ2MJSj/8MfFn6x2mFPcEhsnTNzOfMq3L6d
C9uWYmP6OjIy+D39LWyHu2ZpWRCZEJ4h9kzgGWD48BPW470qfO/Yi3xcGq/A
1uR1jcOLqfEicCP4IdjSwCfBBgaZEMwTzvBJ8f9jJeSx2blFx35Tm/eUXgtG
qfztIvDZY3PawcTRhYGRT+UasWMnMWeQx74bfiWxNNCr4R8IX1346VohjP+T
FfvuohzeIb6qGP9xqdv/U+NxR2mfW/jewp8C9unYsPcs3T6cTnyH0Tc49/Bd
eoT6vGfYU4/WscF8f21jTc2WbQqQVYk/yXgxbjxTuPpbq3z+0rws/L7Bw2K/
wDOevR9RvduUvyr1u8p7SMxr4ggRTwh5Bd8j+P4YxPesOofp2k+CawX5BDkF
+wvqwJ2doGNfgsshH4b2uQ5Y0VWxdfd3pPb1Oyl3XE70UtidT04t28wLt03n
v48cWZpbe2FsfixY5vmxfXFhr4Qfkw0q5qbil2cw8mVm3wPXK72vYT74vIll
CfysrKTv4H6Vv8NamdgPCu3gWwVfPrQDhxifcfgqw6dZN7V1U4fjCK+m37LM
0aX36BNi80N+aptDjd+7h1Pzn+FB46NgfGyfD2ChyOP/5ua2w1WYzW+PzV3A
jhTcEVkWHt51qX2lXKX6mybGdc9M7NsCbhx+MJhXsQdnLgWH2zZgZEc1PR+M
Ae/XdS/ucLzgtUrbgk+Bg5R6bmFP2ifM0XzT+OyAS3JasCWnb+goqcO5tLFp
WJvQ74DnXRFb1sRHyOWx/Zxg6/xEbP09GB9YH/I2ts+U39g0pje84f1z19TY
3qzU9qpPqs6Epu9nWKhDDDfKn63YThC/S/iCwg7uVR07CL8+2f/HyXmxYb05
+nPss7HTxl/Azpn3IeD8O2XWxYDtD21Y74Ise2fAuMC6sIN+NHY8oGmhHWy9
2TPRN/oNVsC5+Jr/vrDdEr6wWAf4piaGte+RsA4SAx29EfzibwvHcsE/CT4/
8P2BT5rz2957naN2H1AfL43tJxqfLMwl+GnBDxD+lcC+iW8LD4O4iPh52ati
3Axbbfp/I++Tzn04tj01vH1s7NHnHgNupfMnlbanxa4WXdJlbfP84fvzjnIu
fm/RF8F7nBzkVuznqYd9OXn8laIvpn1sGGqZ30mwMtZ99q7oX/Yp/B4ht9yQ
2sfmeZltl5irn2o7pgB2X2sq/7t+62k8aqljARAX4Bv0LpntM4hNT0xr/Crg
a4FYCdvVfG/gf8SzILYV8VTgKxNHfsvcvmSJf01cM2z85srtPwQ/IegBwSPB
L/5sOyYNNuFwHoYX5r8M0NzyX2pZ8cbc16YP6NPH5+ZIDWQezf4/jhY+evDv
sm1pfxH4u0BXiP4e/T56/lsC3gXuRQzB0Sr7snR8d+x1xoIFZtbPjsntYx/7
Z2J/EW8R3x2s+8irxCGBn06cEWKOYFtEXBJse4Yk9tWPnTXxefA7AefnLaU7
5uYQj1Q6srCfB/w9sKdGv/6v0gm5/XP+nHtvhZ3H96rzT9sYAnVuzy1D4dNy
VG7/nrvl3nOBAYzqdLwMOLjYfoCJbdkwlkMMaWJJg9V/1nT+4rZjamATRawt
Ympgs0wMrl5N2xhxv/Bpif3SJejiuO5/Lccvw68I/kWuyuxDDXwb+17sfMFj
Vw56HPQ5LzXN+8L+emhmTtwVhffFcHO6qf3hme3oiDNOTDV4/+DJL4e1k3UN
/zDwANiboPcj7sn6bft7/07/F1A7ozJzBIjLfHFiXw34bCAWAP6k4N1dkjnO
00+ZeTzwebBNfDToGx5rO6YtsUGx43i1bU4C3ITBQa5Ad3aZjh1atY4Dfzjo
1Nkr8W7jLwW/Kb0T46lfgMdk5uOfktu/NPv6auJ9JXZCi6j/22XmGK6psqMy
28wdn1ufybt0FmtBZp9fxJeHG/G4yp9r22cLz+V15XfIXc5xfBFjg/du27FC
wDrWavudhJuwnq57ZtO+Yru3HAeaeNDEeX8+NecaG/RhmTmSA3hXW443cG7Y
U+MHnHgy8J3wTQwXfs7CPFrkVeLFECPm/MRxEPDvQxy583Pr2edA/6h2Bqu9
D3Sdf5qOp3Vgy/EUiN0wNbcMgSyxdWmMcXnlfwAPSMyZx3bhwaZ9KvwWvlW+
WeIFvZsaF8eWGr06fkCQZyYEnBO886u2ccw4NTf4RZXvm9qPOjYVc6BnyLx/
RU+ya2ZfSsQEn9kwp/jaxHY0cE4+VbpXYbsV7FcmJrZZwHbh3oa5cuOZn5v2
Tblny3s2sA32cEVi39H4kL4hCf46lH+qad9+xJwarx/kGebYXQPPnrjBxGjE
rht7+dtb5tMTx+O1zHuwT1g7WubEE1tpZGZuSA/184Ggi8H24oDCMbzgf35Q
2l8A+ugVg04W3ex9ie1BsAvZNjHPCd+xyH7guzvrXkZk9iO1cW77F7gj1bbl
jaEBK8MGB3sleDXYJTFuDfJt6xbRMb7Ffqzh+Z/Y89iC75FYB8ueGvu2tTPb
WxCDjPjl8C7gX4xrOc4Ucah2y+z7ijjjdyS2j8BO4qGG7WrgP7Du4AsbLut1
QT+BzgrDTfwc7pRYjl25YUwE34zoj9AjEYsKGwP8E+B3EZ8P4FG8n3Du4M19
3vQem3eY+XrLsEYTBwefA/gewO8iPg16t40zg8GCna6UO24s38tCmbFWdKzE
JcGmfZW2MeStw/sMz4J4P0sn1q8zP2NLfrjO3UDt5LntnbdDDwrGWTrG43el
cVfs0ubVfR2q8bwz8p59RJhnmG+yzDL2w8q/ntu3Gz7e+rQcU3wT5orM3NdE
5X80LS/Bzdix4fjTcAaw54LT9SHzWGYfZt+q/u0Nc2KJcQmPq1uo84LSewI2
xTzOfA7G+3Dm+I/otYkND28H/g78sR7h24QzwB4bvgTxgPDtgI8H/GvBmx3R
tl9N7PPRx43WeXsyP6vu2i3v94hr80rDHHFw7OczY2/tTvsdwocR8TmxEyRG
CbFK8P+Jr1E4Bldmjg35l9Jupcef53C/8u827CcfrAHMAf0s+kr8MIL3/dQ0
VzdLHBsRu2781D1YGo/D9uHS0jxt+NrE0iam9vZhX8M+iD3KA03zT4kPSKx2
dPfo8Il/jN9M1lfiK2PHjg4V/iSyFjIXvMQjNH7TCsfyJtYvdrL41id+PLa8
7O/wQQa+Qbxy4ucSgxj/0f+z0SFuO5x7xgFuIhxF+Cp3Nh0rnbn3robxVeaN
d0rrhu/he0nNgYUrTTzIvVq2WyKmJLEiiHEGvgbOBj+DWMnEckbfOl/TMdPP
Uvs/qM4UtXNb03Hhu6jO35nxCPxog08QA3K3lmNCYmsANxWOKhzvuYPsR2w8
7HKw6YFHPdsPTGQdN3x4ePHEDp5WNfYKNn17eK9mwJmoWT4hnib+PtA1ohMc
2LA8nOr/AVV/p8zjzOf9kHHCPoX9CrgfGNqlyo8Gm1M7zdz6kf06/Ix5RvgY
g/9R5E7hg7AfZJzgs4BLgAtu0+m4591V58yW4zIvXXMM9j9Uf46a40dk6B5q
nk9+DbwaOEst/V9J5UfmxvQmxZZFf9exR+rmToxsOR49cenZP7PXZz89PjOO
PT3gZmBTf7Gf67TuEHkAjjvfLPWXbzl+NDFgwX92is2XIxY2MfyQW+Aqw2dG
B8E9cC+XtMxpxzb+JqVz6ro9a+YSHN2wvAd+TnztHgjKubnQ8OOGopfMHWNo
vdx7FfYsw9vmAyJYv5x4b/hgbJ0FseyJO79d29gduB864fcT+8XA3wbx6PH9
V8uND+8Vez/zdul3F5+W+EiCM05MZGKaYLezn+q/WXqtwnfx+6l1FvBu8J2E
3RuxkhvKd1X9WUpPzuxbB179b5ntW37P7M9hSsU+APAVhX+nJQvrS9Cb4BeL
Z8878L3Sgfo9o/L1lX6W2e7xc6VvqJ091ffrWDtajl9MHGP8MeFf6AulfTPb
mxLblFjdV4R2iEm3ZMM8OnxI4feCeNbEICc293otx7JHv0aMEXRkoyqO6UE8
FOKk4EeDmOnz1OzL8YrM81u/3PFNiFGC/dvlmec67h0OKvxSeKfMx5NV57eW
9RfERcEeDn4sOmJ0xcdn9iWFrcENuXFK4h2gC4bvTPx5eHRbqL0fSstVyFfE
Sj204ZjB8Dy3yWw7/lFuLu5fYV8Pr+dm1T+9bYwR3jX86x7qz+lVf5tTS/Pt
8CdwX2m+InpAYqfOCnI13BiwJ/zUTmxYd7YxupXSHEV0dsgA+D3A/wFxfvH7
/F1m/434H8APwfDSONKbmePPwvFM8Nvfcgx1nku/gPv3b1lPgS8AdHsb6P9z
Vfv0wB86PvfhmN/S8NrN97tRy/x7+jYD/C/IEsQ1/iXIzMew3tasM5uoPuzS
8vtGPHjiwvNdE2P+vNAH3sGRsfm3cOrAAR9oOw4y/suIB47/L3xtfaV0P741
tf9P5pjI+MOCH0Is4J9DnTEN4/zsH/8PQzhfoA==
           "]], Polygon3DBox[CompressedData["
1:eJxFnWO4JEnXtavq1CnrjG3btm3btu0e9Ni2bc/02NYzttVj673vXvVd34+4
KiKDmZUZsWPvtVdMutnOq+1UKhQKa9cKhTK/73UKhdOIbFbkWrtQ+J30PaTP
JG+xVqHwT7dQuK1SKNxA/hTkn9UoFD4m/9TBQuFv4jXyXyB9Hfm7UvfAZqFw
KOWnpv4j1UJhtnqhcBEdPkVYhvi/lL+d/Bsp3yT+N3UeoP4plO/Q/sRcK9H2
5+SPIN0g/RL5Z5O/FONZkmsV2tqWtn7u0Tf3UTVNmfUZzwH0fzDtz0T9tUif
3R/vMNq8nLJP0N6i5N/E2KYeKhSmIz0WeWNQ/kja/onyh5HukP815e+jvdXo
exL6uJ/47PQ5FXlrUv5bxjMt9cek/GiUmZr4u4RdaP9B0mMR/5CwP+lrKP8S
7e9IG5uRXpr8/Wlne9Kbkp6b9B6k/yW9Ir97c21v4mvT35nUPYaxfEH8Y9o7
mrwduKfHOknvRHw+ynxkHuUOpa2z+nUe435mZXxtxr8O8SrhgwGu0cbatD8d
z/FM8h4hLEH8Ldo4nbqTEf+c/rb0mdL+4lxbiWuP0+fOpGcg/Qz3vxbX3qfu
k1w7kf6up85WtH0I97AVz3dW2puU/sdhTDMSf42wBfmrkj6e+BuEbUlvQ/oH
2p6J9ASUH4/2F+d5PcoYtyF/WsdIfCfC5qT3If02Y5uF8hNRfkLKH0X5EVyb
jHSZ/K0Y27mM6TbyniC9FOnVCO8Qf4jxHkve6qTfJT0hz+Q40pcy/s8Zy5S0
8wrxD2h/P/o7lmtbMb6HuD417U9Km/NQ/nmu7VNOnYt5Hjf6TZD/NfkTEG9T
/y3y7yA9PeP7g/L32TfpQdKbcz9r0v6zhCt8F6izB/kLkb8J8aMJI/rfx3k8
08n83ojPx7gbPN/dfSbUfYBrN5K/HmO+irqfMbaviJ/PmI73fSDvEdLrUP9g
xvcl+d+RXpn2V6D9dwgXcm0Nyj9O/euJf0/+uoQrSZ9M+kviJ1H+WcreTJ8n
cW1P+t+T+E/00SD9Eve3Xznv84XEt6D8vqTnIb0nY5iXcV/F8z6aMdxA+Q1I
f0L6VcqcRXpsyv/Df/Ez6bt95xnv7PS/Oddn534foc3tyZuGa08x1rmofyn1
j6S9qyi/PmO8mrwpuf418dGo/wnln6T/U6k7jPGewHjnIv0E43mQdqei7vik
n6P+0eSfTv56tLEDeQ/RzjaMZ1vCw8T35D9bgv7Wp9yLtP866Z1J18hrMb7f
qHMU7S3FtQ25tiX9n0h6Rd8x4t/5PZFelPSZxFcjrM74uFTYxG+GMieRWIn8
kxjvurTxEfFzCTMRX5oxzkrZF0mvSHpV26B+z/erlmfss361lO/1UtIXk/7Y
MZO+iTZnLuddeYnxz8i1/wrpYz3iC3DtIPov0t79PN/1GM+hpH+gnz/Iq9LH
m5Q9nzb25tpo1FmL+q9zbWXilVri+xKGSI+gv+UoO7H1qL8G194j7wzCtMTv
cU3x/oi/0Mtz9Hk6R+7AM761lfJrcr3N812XPrekvfEZ3yK0uQDhF/Ln5/+5
kDJrkL8u+VQrbMM9Frg2HT8/UmZr4jNQfiTxP6n/JPHzGd/YlJ+ZMk9TaRPK
fEH+0oSR5G/me0T8eJ7BX7Q9J+lqMdc2J/4YZT6i7sL0fwnpi+uJr0ibq1B+
Sdq/ivQi3MtEjP9gyu9H/Wu59iNlf6gnXuZ+j2a8U1FnPOpOT5trUHYK0mP6
PRF+Jf9Krg0UM8ZNqfsZz29T4n9xvUv7//E7B/l/cm038hck/avrI6FE+m/S
kxXyzLYn/SD1ryR+O22/zPOfgfEezngKlHuV9NT0PwF9T0iY1rWD8udTfmbq
duhvi26ezfJcG07dOvXeIn455Q+g/KvdrG/bNTOfzlvLf7El4V/HQviM+MWE
OWhzTcrfxPjP4PritL9rPfeyDaFI/Ev6/5f4HsR75K/UyPt1CUOenfhwrk/E
+K+mz1Po8wza+5XxHcr9PUX/97Xybl/Qfx+d8537xyMc5drQzvt9IPEnyd/T
74O0QlOV+FSEU0tZM8ap5Xv43rlvIHUsvxjpMun9iD/AM1le+Yhrq9H3/n4j
5B1A/TGIF+nvEMazB+083cu66/o7AWWO8V7qWSvGID2M+H20twztnUN79xI/
op68EYQTuMcVeAZLlbNeLUP8fsosS/pk0m362rqaue4Twu/E/65m7ZqPMjsR
P7qevp8inF5NH/b1KfHXGN9pyjDO15R7opf3S1mgxbUduDYWYQfSbeofWo+c
uUgxz3Av0icQJiVvQcJFxO8nbE58ev6jFyl7CunJSe9N+ivGfwn9XkT/03Pt
TPus5dtdlvRVpEdnfPMRv4D4mLwP4zC+qRw76dFIn1ZP+kT6n6KePu17MsJJ
ygfVPJtpSJ9ButyJvKDcMDr1T60l76RS1pT32pF3xuP6/1xPCb9Sf9lGno9z
kHPRz85JlDmtFtlPmWMs4jPyTi7g+k6dJ+l7EerNQ3q8/v+xOOkFy5njnetv
VWal/ly0eT5tL0f+EuX8x0PkXUGdqyk760Dm0BG1PI8rlWGb+U79XpX5Kr4b
hEWo+6PyJ2Ur3aznEzhvM/5TCFuTNwvlZuT+9yX/XuUx2vqJvMNpb2q/b9r7
1vmHctuRfxRjHEYbz3HtEPLe4tpejO0Y6p3Nt7g9+XtR9kue75WuHX6DPMs/
af+6Sp7hja2ssa61v/bfp2cI+5DegvSOtHcB7Y2g/L3UP5/4+Mq0tHcZ/f1C
/zvSxpfOr1z/kfHeQ52vSA+Q/zPxc6lzL/XfoM5axK9rJO95rt1P/a+dr8nb
hTobM76d6pGdt2cMjxD/nvzryd+H/C3JX5Xx70n9eZxjydvb/5R7OXEg38g7
XDuV8ptSfk7iF9Pft6Sfd02i7LiM8Sf6foixjMfzXoX2dqO9I8hfifjYhJGU
f5P6N1P/K9JnUX5b0v9yrz9x7eZynv/VxFcmf1fqN7mXh2j7Xvr4hrzLfT7E
J6T/OuXXo42t6XMe5SrSc7iHID6/+yPK3k7eL9R/mXZGU77ifl7kfo6nzFM+
b9pckfiZlLuRti4n/Yn/P9cWpv6HXHvFOY32PqP8U9zPU8TPJf9T0g8Xs361
uvkvbiJ/Te7nVPJfd2NazPt6Nu3f6f6TS18z/tepcwpjWYY+/kf7e5MukP6Y
Mq/6PVDnd+q/SP17XCu5h4fIu4piK9P+r37frk3kb83/dwdtflhMnZ+IL+Aa
T7xO+w9S/5L+//UEbdxOut3Ms5yCsr+Snrf//M7j2p2kJybdVP4g/TDpQe7v
GdLn0v919LeRMjTjfY1xj8P/vQlj+l8x3/YPrkfUf5jyf1P+dOqXqP94f/87
JvVPoszTxOehfJ36I/jdgvYepL/tGdMStcjGXnuAvEHau5fy35BuEt+T+3+/
H5/S/W8ja7vvrO/u1YQbiX9LmZZ7A/eXtL0v19an7hikv6D8+crN1F+D8dxP
2eN5LpOQXoL7eYd0ifzJSS9L+S0dG/W/ov78jbxr75K+r5r/yP/qJ+p0yTuO
di7iWR/JtcNIf0HYkfrHuCZyPyfT34uut5RblvbPpv0/yD/MdY30uJSv0P7r
lLmLaydS/gni53B9AfJPpN6ltL8H1w5z/8eY7vB94vrE5J9BukH97+nvIZ73
z7R/GeUPp+yDtLUb7Wzi3oY6uxOf1D0e5d+n/KOU2ZZwAXkz8s28T3wn5yTX
E659xPg3pf1HiL/H2CYdyhrrWnu/5Ykv4/6Y+9mOPpaj7LZc24j89Qn3Kity
7Xjam41+P2M8SxEmd36h/JLEN6P8KpRdmXAD5VekvZ1pbz9lPupuSv6K5K1A
uI78y5RXiF9LmY3Im5HxLkd6ZtKP0se0pJceyJrr2vsd7V3I89iT9r6jvd9I
X0X6HPL/Ij1pK/qST93Lcn+zUWct6k9Me/fT3k3uWUiPT/o+0r9Q/3KfL3V+
Iv5DN2N9s5r3aXzSs3F/j3BtPOJb08cz1P/AvTD5/9LeAeQ9y7X/iP9BmWtp
7xLGUyR+hWOi/saU+Y+x/c61a8g/i/S1/L/fMob9GMvCPP+vG9lTuLdYg/Zu
o7396Gcpyp5B+m3St9aTdxd1tiDvwEbWS9fEgxqRMZQ1PiCsTXwa+hvDtdj9
Cv3twn+0L+mRjci3c/A7A+Obk7Z+cD2j/38KGZNjUwZSFvqMPmvEz6fcdJTf
nnv4xP1CLXv/mWzD/Srp9wqZw5zLbG+fweh4pnf/yLXFyPuZMi3yFq1F9lAG
WZi8J5WPGOtz1JmS8fTIX7IcmUMZR/nlTdc7yixG+j/GsFA5e4RpGll3XH/2
Ynx7UXYq7rdImSeIL8b9TuO+eTB7slUoezN1Gj4f15xGviG/pTbp20g/xnh2
5N7H4dpCtcypzq3WuaWRNdm1eUza25H49X7/ypL0f3Uz693IYnQy6mb2dE1h
rAfyPMak/GSUeZK8WYv5v11PxiBvEWUCym7q9+z8TXvD1UWRPqecNpRn1B9u
RPk/uL4Q97co1+b1edHeCly7nfdvIucGnsFMQ/n+H2W8h7nf912m/jK0fSv5
05A/Xy26xNFpY3LaOqOVb+O0/nzxTz3zx+7qz6qZ7/5XiA5pC8Y3NfX/Iv8c
xj9Aemme/9KU+109E/U3UN86kD3oVu3IT2urG6T+VpSptjKXTEb/tVbmt58o
u6EyRzPr2w+k11dnR/qFRuSFJQivNqK/edt7J38T8v9mvA/R3660eSzjuLMT
+XPJvnw5A2X+R90ZyJ+O+Kzq11xfaON45Qf308Sfp8xU5E9PeI34slx7jfyf
CSvR16Su434/tL8h/Q0qoytrKnOR/sK9P/19TJk11FX4/RCflvDqYNq0/40p
/zDlD2E8G7k28Az+JT5DPfLxga3sn9xH3ej+2GdA3cUYz7POD428uz3CHcS/
aWRu2b//zTsHOheuQx931CPDKMscwT1vRd4z7kcHM0feTP6z6gBIf9/XZ7pH
cq/knH25srL7c/KW8x6cLxjfGozldcp9zPia7hlIL0/+6+Q/zfVx1ccS7vHd
aSRvBcIbxGfjfj4kPod7AOK7UH7rwaxnH9SyJrg2qBN7kLaP5P39iPSclH+D
vmcnPSXpB7zvobwTvhvDKf9yPXKD8sPTjpn0XPTxGfnzF5L/ivOi+ifK71OP
fOv74Hsxz1DG6FjPJv9d8ueupb/1SN+j/kW9J+UX5f/5mbZfcr4bTJu2rb7P
d0MdrrrcCwlfU/440n/6/tLf4gPR6SzE9/FeK/Vf9j2n/zf5XZn0OZR53/2J
MrO2ENpcspY9lXurbbn2iX2Tnlv5h/wy5a/iWpH0F/wn99Wih1Uf+245+sAT
eH7fkj7V/9e9LffwveN3jib+B2WOGcyaOLd7xUZkqe9JX0r8rlriyqTKpjNR
5z3Kz16I/O6c7tw+hfpP0lcqRxQzpquV7dXBDsYmcpfzD+GWQnSW6i79Bv0W
p1Ser0dHq672R8Ll5F/WSPziwcho3u8blC302z+O+/ua+Cpcepf7e5JrXZ7N
nFx7qhE9o/rG991j8B/uTJi2kGf4tPsN+jtiMDal2d0L0N6Pg5E5FiG+diP3
ps1D28dLlJ+N+Obl2D+ucz9Ujgz8rfoNro03mDXm0Xr0UaVidLjqcufnHn4m
PhF19iD9uPI+6b0Hcv9v1iNbTKJNpBF540Dq7+x3yvvyVz3ysfOtuj/neef7
P7j2A/H9Kf8l8btVVRI/hPAd6Wcovx/v32GkfyD9HOn9SR/EeA6rZM5y7lqV
MAPpGQmrEb+SNmcmfgvlv1J2bOS/H65NhvyV1UMSn5CwEvExGdO0ldio9td2
V0veBIQVSR9F/7/7bGhvn3Z0WOqyBvr7hyF+fxvIf3y3+gvqH17JGA+mfsM5
SfnS+dS9tO8H6edp7wdlBUKdsjXCYpQ/vJO9gHuCA9QP1LMXGL0SGX1J26yk
zhLEvyL/EspvSfuvVKPzUvelzWY/8velvU8H8g6vzdgv6EY+/1Q5lPEf34tt
4Dy/JdIXKR+6d6et1UgfUstaOx7tLUd739VjiypVotNVf+veZmzSy5I+jv7+
c25izIcy/kkJ1xO/hHa+oa9DKXMsZd/n/5tZe2IztohPnUOJ70O/Iwczhz9F
fAfae20g+8dlGP/J3cwHzgsrqU+mzE+kt1Jmq0bPqb5zG9dM4nM30953g5k/
7qL+LPT/PfHVqf8HZXavRP5TF+W+zf3blfT3ZTUynLLcdeXYd7QZajtUh3IO
8UMoP6wYG5C2oNO6+V78blam/Q8ase1pw9ulf7+fDGbN2J32T+D+iv3902Ha
Aqj/O3kLUm6Voezr3N/dyzN/oRobmLYw39lVKPNWI7ZEbYLaBn2mPtsPBrN+
7esz9V2vxp6qTkrdlDKs+red6f917vc8dXg836NJ/0n6db/XduSNMUt9GYX4
aI18u+rk1M15D97L8ZXYk9ZsZG7UBq0tev9u1sbHyXunF32WtnFlBmWHVejv
FuVB2ruQ/r6k/KnUPYq8Ofr7G/c7+6tToo216HNYOTL3EvRVJn0C8ZMIO7u2
1CJLrEJ7axLfnPafoP5c2lS0nfl9lLOGuZatzbW7B6LP2rCd/e3p5ewpZya+
E+FE4ndRfyHGsjVtnlXu67BJv9CJfe/IZuxz2rS1bZ/Rny+/r+d7cg/sXlgb
t7bBI8nfmvxzW/lez+zv59RHT0N6nHJssJdRZ55KbPhiD34kvZTzk8+TPtfr
RPc9O+Nbt5M107XzDfqdjvZWp/xw6q7r/WkjaWWvol1j2qH0a//ucZZvqFjI
XvKA/v7I/eZzpIeT3pL4e/5n2of8hom36GeZQvrYjrobUWeFYp6x9sPPyN+y
mGeqvuDwVuaLo/vzyz7a8JX1uLYWeRcRdnW/StlZhzJ/m1YHpy5uWd850ruV
Yx/W/jG9+jvGsw7jmbMbeUS5ZLah7JncO21WDh5C/fICpHchvWEj66Vr48xc
W7gW+5p7ITEcYjl8n63rmufad2wruhP3Hndr6+9F36febxH6W0GbL/lHkf8c
edMpn5ejQ7hCXVUv9mbtzjNT/jHGuzB9va5cTnr6RmSDk9XB+v64ryJ/TNp7
lTJLKNPT1l6McQPe13VrKauOdVdlWfKv679vG5H/Qj229D3J34z8a2vRRc5H
mxvS3kOUX4O81cmbhf6v1G5QjE1V2+rMteQPESZrBDcifsQ17Dvii1H/Mtdy
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
ZO9xQt++9U4jelT1qWNRf4jwdiUcAcobS9DeO9rOB4IPPr4eW9CFtDdpPXi0
g4jPVAq+TPuBcW0y2mYm7MVWoo1BW8M8nei6lAn05VInpG7ou0rkV+VZ42IU
xSr+3oq+Ub3jp+RvWYseXn28tvh/2vFFPVUbDfH127Fd/FaJPcP+jf9FezO0
8h/4X+jTpH/Ha63olvcqR15crB5cn/g+uSi+aUf2XYz2x9JXh7B0MWu4a/mE
nfgP6Uf0OHU/aAU/7Jrv2n9YM3pr+7CvkX5v6u+UydvxedX31fVMf08xT+p0
1CeJhfqCMj+5X3f/3NcP6JMg3ma7XvQXnzez53Hvo77iH/XcytC97Ge1A2gP
2LwXf2R927URrNjKfl/cn/i/TXpZH5evBZ99RS/6hH2a4deQG0F9h3pu9d2b
9rIev1SPv5u2f+UpfeX1sditl/3Aj83sGdw7bME7V6lH5ldfsOVQ9nTuORen
7CxcW5L4UtX45+xeD1bY/aD7QmViZWMx+mL19WvWv1mMjv79rvmu/ep0tyE+
hf+He+Nq9p8P+DyIH9zfH4onepq6i2gTJu+iWnDQ4qEX7WX/oY3QNXX3XvQP
G9djr3uA+tvV47s6Ovm/1eLTqt+H/h/6AqufWKce/5a73MvWY6vX51zf8z/7
uqnF6WMxyt7Ti41WzNBOvdSRb0Adh23d1oq/izKastoo/UI938DOru3uXyrR
Udzcjn+uvsAXFaJPWdf5sJ41wv3LWcRnGMj7oO3o3XZ0HZa/UX0WdS4spM0i
7Vd78e1Tv7oZeb+18i6vUo//tzKzsrNlav6ftPFAJTK3sveP3fiT6SOm/5Lr
q7KYmECx8Z8QjvFdJLzcCn/KjuVc+7Sb70mcgDrPZ8l/tRWs7p4Dkd+6lLmi
kD5LygrqZ9R9c21VypY60d14T7u242+xWyEyxVPKmoz/rGbyvfexKHNpMRw8
cvF82g4fgrwIN/T322JIlccO6+UZ6Neuf7vP5vle9BX6cyzU3///Qv5NA8F+
OUfsWw9+37lDfYB+sPrDbt3L/lE/ZdfgXd0Lqb9lLNfT3nKUH9N3lrzp6GPu
XvgN9H2YhDEf3VYpyX9bjI+Xvl6+s/IhqEPzXdZfUt8vfYr1Lb5AnVsl38ci
xNfmeZzazLW/+vknqBsn/bdYEHVk6udL4euRf0iuIjmQ5ELSp1GMrPanPbjf
72qRzfQ5uIDr39YiK8ppIP+HMqGyYYfyPylbUv8l9Rak5+7EZq7tvEr6W/In
acW3UB8A+XH0afywHgyOvo4/tuL7sBL5C5L+uRVfBHUe6j7Gpnynnj3Kda3M
Yc5lC7qfpvyb6ggLmbOduxcg3EH6wlLku5GtyCLuQY/qr1dimdSxqGsZYszz
DmQPs1Mra7hruTo+dX1zdXJvm9HmZOTNTPqYgcIoH133h75DvktvlLJe6PO8
QS3+da6f83ai63GOc65zz+ve1zH/TPlD/D7Jn1IdDfFfW3l2chKobzqbsKDq
+4Hs/9zPKrupQ12lnf2R35YcO0+5X2lFFpAzaLZu1iTXJvvQ/qw+6KtSbPSj
sNPt2PY/KOd71EdE27k29DH77U1QiA+Svkg/tvPfi7ERa+P++6D+81qtHZ2j
ukf9V8btJBjXp0VfGjFhYsO0MWtveKIdLNECpMcgvVcrXAijU34qyu/fim+R
Mo+yj9+Hc7s6InVFu3Wi6/icsF8nPkLqWLQnXuh6UMvcrU5Dvqv52sHqv+Se
kvju3djftMNdXc/7495ADJhYMPfv6n6f6u9fZxL/MBCfomHUXZhrfxTjEylf
1nqUf7mYPUaXsluRfq8YnZP+nvpEn1dPm+oD3K+oSxQjeGY3MpSylHxQ+7o/
a0WXvG41+l/1y/81Y+8ZR3mTcGIhHEkTOLe0kqcP1ZrtcAZcw3f8TCFcAtVu
ZA3nBOeGJzvB3s5H/yu0w4lwZz3PXK6EI6rRBTuHvcjvebXYnbU/D3bCuXRO
PXhEuZjkWLquFv929TkftaN702fiAPdS7WDN7iN/dfJvqcV26R71LeWQdnQN
PkOf5Rzt6OYuoI0q9Sud6AK1Ed/n/NUOl5sY/7r2s05sG7ORf3c3nGrbML4J
C+FaU8ZQ1virGd33gZ34ho/0ne5kfdYWcmd/Pd25mfJ+v3824/Og74N8Dcf2
YmPV1ipe7RLi3/bip6INdhplfe5h12I4WLTfKY9qa5yX5z1HN/pz/fmUqZbo
hXOpVAvfkVxM6mdeI344/9Fr1G0S5hwIhkcsj/g1uTde6+tvnmrH91oblLao
5lD8sL32dDvzpXPVwYQJW+Eg0i9fHZT2I+UZZSF16urWxZ/Kl/J+X98k/s69
2YOkX1T/4v9D/Ly+/UQZX1l/RF9/pT7L+LnF2N/E851WSJ3n2/n+bylFRpQL
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
LP9G/f3JjK3IWvr06z9yeDf+3/rYq089uRNfNjEp2nPVR+9bi4/PRe34sOrL
qo//iuSvRf0DB+Ojca9ttYOVElN8B+mT29lbqcOV/1oZz/7FeOgvos/e7/XI
oPryacPV9q/foLZdfc62rAYDoy+aNittV+4R3Svqs3hCLXvIUXtJwlGF+Cz9
1sl+zL35pv39lz4wjXowVaN8Y5qxtcsJvVszeAmx4cq7Yh/n6kW3+lkz/Fxy
IMq/N3s1nADqTNSdiDEVS6cNWVuybYi3mKKWsvZhX9rktM25R3WvulYvtv2v
yNuMvI+r4dgUMyp2VDykungxiLe246N1EG0eWYjvlj5C49YiUytbi3dRNyLm
8j7S39DuLLQ3azXy5gr17O3V1+iPo/5H7J+YL7Ff2q/VbboHcy+mvKUv5rHi
a7uxLx8+GAyUWCh9sG8uxKd23W6+N23J7u/Fbrpf01Yo56Pcj2M1wgssB65c
uPLXyvWjjn7KdmzM2pr1OV2jm/3H3cVwvqj/0b4vF7Z7WPeyynTKdo5J/9ZP
OsEy6xOwEOkTO/EFliNarmixk85VaxTC/7A97e8xmD2lfJTiF+TGVn527yvG
Q6yHfW7aDeZV7Kv8+Bt2g5cwrry7fivfg1zVckKv3Y1+VuyjHBPi8dSnXUD6
s2r4weUrkQtYzLvY9w1b8bUWA6M/gfwmy5aCgRcLLz5GrIM+B/oe3NONL/sc
1fBP6xOuDOV/pnysP6bcTXKiiKdftK/P+7Ca903+ELm29dGW61/Mmtg114gd
u8HX6Yukz7G+x/oj68svx4nyoPwP+pLI0SI3lxwUH9TDX+p+SRu8ZyUo22ib
F78nV7c+s/rObkp7y1XCwXVMJxgssVjLcu058rdohRtLjhfx/892k2cd68qH
oa+MPrH6xqojUFegT+hnrXAQyREtRsv51jXItUhOSf0rtb/J9SF+7sRuOELm
beb8AuUJOTm2qAUjI1ZGff3qhXCInNrNns+9nxyb8pWKeRL7JCe0+CZ9CuR9
E/MjHly8z0uDwRw7v3uehFgFOX7k+hHjKNbx6sHol8TYDzbzH4hvFN8jd6Z8
RbvQ3iTdfMv69Ojb01R/NBhOJv0nJ2nEj0V/Fn2LtClrWxbTIv+U+iz7UuZS
9tJnRB4ifZT0JdFnQN+Bl/r4pKO74V75eDD2Dvmz5A5xDTmimz2pe1N1EPrD
yh+qr6qcinIrjtcK/8O6g/GfF4+05mA4UMQfzdcNl5w+xe+2wr8mV4WcmnJr
jtYKX7scCvN2418i9nW1wewP5cz7uJE9sngY+Wn1NZdTU27Nb0ivT/31SC/Z
jQypLOkY9L8RkyKWartasCrad7xX1/CLO7EhaUtSJ/BTKxhUsailcvjn5VPQ
N1lOSrkpJyA8Wginvdz26i82UN4lvVQ3+petCvFBc/27vxpeSX3O9D07mz62
q8RH1/n+f93MXZ4Z8TrxM1vhvtUnU99M/XPkNnK/dTvpG7rh4pEDT/489U/6
GuhDrC+xeD2xeF+pA2zFJ0HfhIkr8e+cgmdQbsTeqD79gl6wur7TvtsLcG2c
Sjjy5Ds9vRVZxj7t2/RhhfiMK9+4p3Rvqb+mvqz6x05Zik+tvrXyVUxTig+v
vrzqYNTFiHH7lbEd2YpvqxwGchnc2A330tnF8HX7PBz7ovrg0dbMpDuVcIaL
z1bHpa5LDpmVyd+8nbxuJfKV8pZx61zVTRu2JUej/MLOPyMKORPA+Wn3Ts5+
0Qfghk44+vRb039N7j59WvRtkR9Gbj35VNSXLtjHP4ufFPvxtTaWVvhA5RIU
0y0/l/jl6QrhSFR/ICeivOPyj8uVuGsr3JVioOWD0J9c7icx7Z4PIqZdbPsi
/fGo39urEB90fdH9T9WfyO3lf60+cZ9CfOb1nVefKBZLH3d93edX3qyEA8f9
21zOuYPhXJGLRZuptlNtWK+3gq/3WXhmiWeXyO8ulkobtPhr+RKmKIWzSHut
Nn9t/57Z4vks27aiG1Mnpm5sG9e4SjDg8i14Zoa+zHLmiy+Xs3HLZjgMxIfI
DzdxOWeoeJbK7q1wM8o5JZ/DDq1wOYq5lu9gt1a4GuW0Pb0Tfip9NeWAkAtC
fulZyjmzxrNr/B63rATfP3krnNLyk/jNvmnf7fgu71AJvtfzYuQi9X3Rd0S+
KrG6YjpubwUPbFk5am7sRJ7W9iMGRP8D+Zf0dZFjUf8DbVDaouT0139Gjipl
TjH52l+PaMU3Xs4NuTf0h5eLSwzkH7R9TjfYKH2+9Z+X/1lbmBgRsSLiJ/TV
8YwB5TP5AWYVK1WMf4ecPHLzyMkgN4MYK9vT513/ePnE9AW4pxj87Wbt8L21
KuEfubwb7LcYb/3Vtb9p+1LmE48/Pe0NVsJRI7+v91OppA/HvnFfP+w1+US0
B+obJCedePyZWmnfPuWz1Z57XzE6E/HrYiic27SpaVtzfnFs1nFs6qd3LIQj
w/2W9mOxPtp0te1qX5+oEB9sfbEXrgcP4x5W/ifxS5uXgl+U71B/oyWJr1QL
/48Y4TmL4X4TOyw/9SSFYIrlo5aPR1lCDiO5jMSgikUVoyVWa1gjvsZyAh9R
C+eO3DuekTJTLf7Z8qkOlOJPLaZAbMFqffya+l1t5XJoyqXp+SoblGIzsr5n
Tug74Zkvnt8jZ6T2ds8MmasW/0+5k+XIlCvz0Fb4qJyjnKvkyJUrTZ+7J/r+
4XIzy9EpV+cBreg+3eO515PPdepi9JfqMf9oBusl56Lci9f1wkfkN+63Xuzv
/93DyP+mfta9sPplz//wfCi5zMTDiYtTZ6DuQPylfGjyeYuF0OfE8zp8nnIb
iJHXf9vzIRYvB4Pv+QHq791LiX8VB6suWV8p8Wu/NcNp9EMhNhdtL/ITqE/9
vhD/djFlYsvEnLlf0uar7Vf/rper4acW+6a+1/Vi1V6wTmICxQZu0Mj74p7W
87s27oVLwz2te1sxbGLZKsX4r3h+llyM3xRyPoz+SSN9BWrhU6+0ovvYuRD9
hpxWclvJSSTfpefDrFOOTcD/W5lJ2ck5+1vnp0ZkOWU6ub30pRQ7JF5I3JBn
xsiFvcxAztuRP3m2Yvbz/ucL9fVx71SDldI/WK5tOTXl1pRfyrrLE66t5zyQ
dQrBYMunpgylLKUMoX1ITle5XcXkqO+UI1OuTPv0/Tu5j112T3y2Op9ufGGU
KU9tx3dS24P43dFr4XP2rAXtg/KdeV6YukPtgdoF5Z9S9tB+p3++5194npL7
d8/HkNNcfYf6mp/q8dHXV/+icmRM/VfUrYnPF6cvf6O2OTkK5CoQX6huVPuK
52Ms3gz3oxw/u9XCi+9eRo47ue58PzzbTU5JuSXHr8dWJefPXrX4g047GJ2v
ut/tXPeLuaZ/qD74+uKrj9mhFg5HZTllOvleluUZDRXDZTvWUPDIa/X/f2V7
5z+57/Qp/l89OkD57+TBUzfo+RByG8kxKteo52Noq9PHX1//dxuR5eWAkwtO
/khte3I4yOUghkcszxBtPNkOn6Jci+LPxaGLIffdn7IWbLl6m+n69mZ1e8vX
g7UR3y2frj6Q+kI6h+g/2ejrc9zj6Q8lH5jYF/fM51STr6+UmE11Pu7h3Mvp
S6XuTpuOfFOenaStR75vZWt9AuUf1AfiJNIfVXM+nef/OF8o88o/oU3M9UKs
q7YybWryIXn2kLY2zw/RNq0Mp3+W/E5yFaojli9N+5tYf8/w0t6nzk5dsphS
dXlL1mPrFNPo+XXKlMqW+kprq9KG5Pu2RT22JXV8YhXfqEb3J2bd9/2oRrDs
8k+4X1J/Lb+DNir1pepNtV3Jn+LZG/uXwg/huuX65Rkl8j/rn68vuBzy+pfJ
8aZvtz7e+qfr/60vuJxf8kXJL64+QY56+TfkEJGbRB9zfc3Fc+krJ4eI+CL5
FtwrqaPW/8zztr4rxP/A87fkw1u9GBlR/jx9bZXllOmcj4/qz81i7ORL1d73
azPzvbjlHXvx5VSHry5fX8/NCsH0iVuUH831Xn2jc7T8iuLH9fGU/1A+Sudj
dQDyV8hH6V5An0v5rUfZc4s5E0T7rvxd6oLVWfs9y2fv+65MOlcjGBixMGK0
xWqLqRBbIQZcLLg+3a5nYr7Ffutzq++ta6PYcX3O5bsXYy7WXMyN2BsxxmKN
xVP4vn3ZiO+4+0XXy5Oa8W33PATnh7+K4ZtwfVF3Lj79i2Yw4J4Hpo+o2HAx
664Xrhti2eUPEYuiP5d8Fp7X515LeVb9rDYTbSdvVeM7v3AvvudiesT2eD6h
49WnzvOmxMSIjdEnYqid89rUlR3Y1895vqHPS58+zxsSfye2Tw479y/yASlr
6+MpX4/8tnJfaY/SLiXfmvZeMQHOx9v3wm+sT7C+waf3wvXl3KQ9Tz5mZekl
S7Fnyu/j+Vr6qGlPlW9R7mD3L8o48nMrO6sDFC/r+SRyMcvJfFEj/FT6o4lX
Erd0VTXyrBhhz3+Zoxb+to3J/7OW8yk8W6FbDL+k/NdyE81VDh+25yF4lseP
hEdq4YPxLEb9c+R/8XwKz5qcoBi+xpNb8UU4sf9/yN/g9zs2YVbiW1VztpyY
zbu0rfbCnyOPjnzP05I5ZTlnHH3Ryf+p768+AvoKqP9Q1y2nufsp8VOe0SRH
wL2t4M8WrYefTf808TZy4mkf3rsXf74F6rFBaIuQf8AzFP0/9d3V32PxevTr
+vqL/7qpkfNsPDtSvJxn7Ck/XdMKHsuzrsTwTdeOvdFzncSsiF1xvtVWck05
9jv9jw5vhK9SbnbxjWLu/SblStDf6dBG+Ij0T9PHQl8LfeIXbgX/o4+D5xdu
SH67lbP39qjEX1p7oX3pg6Yvmmdm+P961pd4U/HQcgKrczqiF5lPmcH1SFlQ
PJe4FPEpg734M9q+XCX6s2hfkRvS9WLsds6I9Fwvz/fSP0CMizyZ8mWKfRG/
WG/k/A25nMV7fV7Peiq+WZnBMyI9/0xZYpF6uIr1J/QsNPHN+gw7X//Qigz9
TT3rh7L1OrWcaeT8qG+65//oO6s9RXu1+jNxLOJZ9GUTP/5WPToz9+dywMlD
7R54FDdcHw90dTnyrPpB4+eT/2039qS7SV+hzoH0ab34isrVKd+s45FHVT5V
z67Sn2u0WvYL4tHEB3mWlZx8cvOJR1+/GJlolGzUzr2fW4798NxefIfVWau7
Fq++YTFnaHxIfrkbrjE5rtUXeF6Kc61n6nq2rvrgwcH4/IvHHd6Krc65Slu6
/mlj1GK/l/tMzma5m60jH5SYaLHR+jh80g6/v9xXcvLJzTdDN/zv8sDrf6hO
X92++IVPOznPVF9/MRL6T2of9d7OcT7qxh5/RjFnunq2q2c0eVbTY+WcP3NN
J7ZqOZzlD/a8Y8/KkVPrH+KXtXO2kf+J9r1jWpmLR52Vwf3p72BbcjjI9fFZ
J7K2MveUreh0lbu99rn/dSvftpxzcs9pP/JexNSKrf1InX05GHT9v+XMU9+0
fzn8dNq35WqU8/nNTvx79fWUA0YuGG087jmUH7X9iLEVaysHoP4G+jOuXwsn
n/6d6iDOrsVGpG5C/LNnHmhT2r8X/3q5D/XZbtfjP/VLMzLHrNoD6sEKDCvk
PBBtPNoW3WNp+9F/T9u3c6p8jsowtmFd8URb9/fUcgh83co3fhFlv6jm29e3
UV/04/r7I+fcYwrBADsX65/nnlD5Ri4L7We/N7J+6Tut/O1ZFupQb6jGv/nr
ZvBw+puIt/U8F/f+YpnkwBKzoA1LW5b2ELmHtIFs3835U659YszU123al/nV
oapLFZMiNsX1UFJJ/VlOa2aP5/yqPdJzV7QxaWvSXuK5LeoI1RWqo5GrWRlf
3Y3848q66uzVH3sGjWcUPEv6hF7OyJbzWJvjcb1wZsudrX7h8lb8Ld3j6LOi
74rzn74Ozs/ytWvz1vatDXLjbs7zUvevDlZ8lOcBehbPeoWsl/pbXdqM/Cd3
gf7NYl/EHKnfk2/ZudM9s3hKOc7EqGjD05an/7iysBxu6tf115XLQQ6Dt1tZ
A10L1TGra9b++Usj8ov+xNqT5XYU4yjWUXy/HH7qmw7sBR8vrkh80eft+AuI
oxNPN1G3MAq/IpeqPuXft7MW60t0cSFn8WrvlpvUb77czlou1lgd+q7V2L/l
ylTeu6UVPM+uzehY1bXq73BwPT45+uaIp1+9GRuJthL9CeTg0Wdg7nb2qO5V
1S8c3gueUN7rUfzXrezZPCfc88Ldy2mv99wHbRDaIvS/8Gw6fbrbnWDsxdqr
X9B29Wo7a7njFzst/kEOQvd/w3uxn8opqo/S/J3s1zxrXJu4Z1fKYSano3sm
907yK3lW942FnEXnGVmem6NNfc2+PUxOD/eL5/fi3ygHtvKm3AjaOz0bQRvo
Sd3YOz2LQI7WbXrBP+sXp3+cvvdyRMo7oo+3vt7iUeQO1uf36F7wLHID62N+
cS/+4uIAxQPqay7eUu5jfWTmb/9/Ti/3eO715MD13AptGNoy9LeZtRkbo7ZG
/bXvbOS8Fc+S6rRzvoEci56nJl+43GauUa5V+r/7rnpmiGeHaOPQ1qEMvVcn
/oDKLups5HNapL8fkXPBuck5QllMXZZzx3694FPF4IvF119SWUhMkvxQ2oP0
dbuC9JKt+L8VGzk/zbP+nB86jZzZob3d+WP0RvBC2s89s8SzSzzT2/OB5U/w
XRuF0WxHplK20j9cLpY9epF/9LHQ10I+DOdV51ft6Z7fJrZNH0D5ruRzUFb2
TDz5xC7phLt5/HL4StSB+a56RsGLnfDzKGvK8XVBf7107fOM+1c68W+R+8cz
ijzrUE5SMcnuV+Uq9YyKUeeTlcNnuQf1u+WcYSF/9dmd6KvljJdb3jNAPAtE
DkP5MdVHiG0drRx8oHhB49axrnwrjl0OvdF5Ftu1cpahnKCeXy7+Q9usnN9b
kzeC9j4vhoNWfwTxTnJXaFPStiSHqJhp9Sdyi/6uzayUM4bl99KHR18efdzk
O9JfdT7ydi7HP3W1XtZi9QByP8lHpG+5NjJtZU93wq0vZ4r2PvlF9LXeh2vP
d8IhIJeAHCraY1fvRR+hXkIuMGVOZc/PCrG3yY+wVC0+Vp5l4HmH05bDGSd3
nDKv9dVFKAvL5+LarQ5AXYDy1vBC6ogPFN+urlwdgLoAZXbvR58NZXn3bO7d
1L94do98CZPX4uPk//9oJ1woO5H/WCfpHcp5fzw7XD6UeYs5k96z6cVvirXQ
x18+qolbORvotHLOO5LTUW5H9TOeVeF6+k8186e2VDmZxGGLIfX9kQ/5uHJk
ZvmsxO+LRVHm1l7vmak3FXKmwoOd8DGLNdQHVF9Q8Y9y2+jDL3/cRb34dqqb
Fe8pXnKDYjhB5WcTzyiXjzoe+ePkC9C3Tp2SfFnyo8v9o85HPIMYIbFCcojK
D6oP+i6M5+1qfNP1l1O36ZkU/p/yQcjd8AJ1at2caaN/i2cQy++jf/LL5XDO
7dSOz5e+X3LOPNUK/uAv8p+mv3ov/om3F8KR2+vmzCDPDrLMhN34u73Yl5/l
QtNnT9+9W/r61qVakdfts9kN56Dcg57xpv/l9m72B3OGgefXTkKd58vhtNiV
9mbqRjaYlDKzduNPJ/ffW5RpdzNHOlc6Bv3t/g9nvmUc
           "]], Polygon3DBox[CompressedData["
1:eJwt1nuQl1UZB/AXFthdlmUXViqIWE2bMUJQbsulMQWkaLBQQJDFiOV+XUDA
xRBQlhQwYLmD3BElhEQisGBYcppmJAc1UOQyICU3QeUirEZmn6e3P77z+z3f
8/0+z3Pe97znnNtKSh8eWz1Jkm1QE4rqJMlrGUlyIztJrsPs/CT5Wd2UqxJP
yUqSsbhVcLp2kowTP1UtSUpyk6QtbxvoTr+d/kG/PeFLvpN0TRXqJR4aOcXZ
+FJc+7wkycKv878lbqOx8TR95Nqhpys5SXIVtuA2wkj/R0HDGjx8BbiPaiXJ
TtxDvMf5TuGnyJcv32DccJqxeuyAW5uZJPNw3xSvxFeax3beE3J0wZ3gf9j4
Qfx9HkoH/RXCJt4dvFvwTcQPqPGp/A3gKWNdxef5M/1/O2riz4n7w2TPaDTu
C9wcNQ/RTtX/ELmq47eoOVvOs+q11cshuhl0/XBXaS7S1FW7Ga4pbYZe76c7
TVcec8P1VfcW2gKYh/sFZPCViheodUzNWbgzPCPwE/RUrLdn1DipbnP53jU2
neZROKveuqgZz5ZmA+1MNb5N8wT/aJpd+ObGe/H2hA24vep0Ue+n6tanK8HN
ojutRkuae2Atbo6ej8j/Vn66bmL9tPS/EHeNr2a8Z77NUFeNH4svqP0szUPw
V7oJcEremTS/U7epuqtx1dSeKD6s5xF6zuC7iX+M7238IOM1cKOMvSPujT9u
fDbMgYPiP/Ne9oz262U7/XLcbnVa6OVlmhq4ybwf66uF+ILfCr8LYT7tt4wP
xvWmH2Fui3iv6XW68WNqF/FW0DWhG05XTDeBbgGuEW4ori9uNK4Yd55vA1To
ebve/gNz5bkVVuuznngXbWP9LuB/CdcIl6gzn+Y2WIurj/uNfPk09eAIyUi+
pXAyvg11N6p7Vb8v4D7Efc37lm96qFyZ8c3wtOXdSJsl/krO2foqjPcTay7W
AW4Vrg7d7bg35NqGv8lTCkPUOKJGA9xF/6epc47/XjX20hby9KVrbexPdAvp
HpCrK5SbR3uaN2kneucDg6c/hPu9ugvVLZarCW4PbgnvdJoxWem3mBH7VXwL
8u/JSesXiXvB0XgGsM98+8n/Cu1y8/0IN572RZqf6+eCfP+M78g77SHeiv/C
+Jc56WY6St2puDX62Ed3Ud1KudrlpeuuJv5B/BCaJ2GJeDGsYi+l6w2N6Y7j
+tNdkS8/viPz3aKX7biONGt471Dz9liHvLnxHdF9Vw/79DgkvleavjHfzHT/
i31wDO842lbytaOrlO9xmtG82XIV4VoaGxPfn+fwE55tvKvkyxV3xL9D8x5f
N3M7JddwOWvRHODvDuvl+x5+g2f5Md8JeAa3DlobbwNn9PmcXO1wzXjP487B
b8XjYKn8rbLT86FXzF/tlfoajv8Q31E8U43DvHP5VnmXl+gG8NakqZedngUN
aebCB5np+RZnWpxtE+l6i3vF2eP5FZrDizCL5zu4aXLUEA/MTffMa7jP4Tm+
V/l/oJdWnkNDuh3yV89N1+dHsT5gNd3T8AFPM/Gt9IV0C+lGqjFeP1/BJtzd
dAX+fxZnBe1A8/ga1uhrPX55rC2af6n7rPEK8WbzraLpLF8jdXepszvOpFhX
clbyvUp3hC4XV56X7pmxd/aLdUlTByL163x/jDnTDYtzkKfEQF21nse1zU3v
Cpt5t/IWiX8de1N2uj/HPt2Cb3N8R+JjcU7TTouzF3e3/5fie4P24m/QdpJv
Wpw78Z7iWeH+Er2pOcyzeiPOStx+XOustM/o99+x56u3BLEYbor3QbH//SO/
sUpxJzk7x57L2x6/ANcH9w/cytir5cvR3yl8Gc8UmjLYRLMYBuhjhniOscPq
dquTfqN99NsXJtHsxDWSfx7tAT3XkKsE94n/63E7Y5+g6wH71BwEu7yDJ+j2
QpHc/dTIpp1LswfXBvcobqUav8pPz6gT/z9f4pypFC+Cnjwt5C/w7meZx7C8
5H8PaR3+Unwn4sHxHdK0wTXH7fdMX9ZfEuczbhLuQHBxrvJOws+Qb5B8zeOs
iPeGu077WOwPsccaLxfPhGU0XWJ/pqvivwGviC/TrjOP58VP0y3FvRnnFm8T
87ofDoi74bvzlsN12s6xfvQ3j3eWuBxewo2CifroKs4x1pzmR/ruYyoFcl2C
+8Qt8ffE+qV/X87dcZ/BP0JXn+ZJvZwTL9NflffwQ/lO4mfG98fXga4s1iOU
4R6J+648KzLTNRxreQyUZaX34thL4u58r3w95DuKn6LGmVi7cUcwXls8gHYy
Xw68p/9t6u7Gr4i92XMYbLwq3mWcN+LWsT9Dz/z0rvS63/V107vvML5i2s+M
V8Ax453iPJZ3oz5ey03vCsvkXBn3b/Ek3gy+3jnpPSbuM/PhUz2X8ZfQ3Yz1
TddAjTtoq/D91c2k2+K9LY67MwzC1cpP19hWmvVy1ow1qk4PNd+HCvNuLdcL
+L/L9W7t9NluwB2Newnv2Hgu8g2LewRuP24OLg83EHdFvonmMVWNGXJeFjfM
Te838+luifuZnkfQlsaZAHfR34X7Q156f4177Ar8nXzfV+NgnGFx/spxNu44
een9JpEvl+6Xcs2uk66dv+Wn7yDeRTzXeL6dzfVxupHGWkA9uk/EN2IuNJ/D
gli3uE3018X96M5lpvt47OeN9VJNL4v0cWecb3opwP0XRKTOMQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$74795#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl00lIVXEUx/FjpWmOBFJgVEZCFgUSSJG1kFqZIoVkZlkuKg1yY9Bg7UIX
tgjCKGgTZESuKm2yRdhCCiIbbU5JikYIdSGEfS7Be/f8ft8z/O89973CxpYt
B1MiYsx3w8yIRP+cEZFF9KRGZGZF5GEn0iKKsfvYIr6dX8u35UY8wlZhp7Ev
6qvw9fy57IhDZm2mv6s7L58cNqV+R3IOdgE7hqWKK/Q24xfpTmy+WIYdwS7T
Xdh1PYV0B3bK7HL5s/QmsVvMlf80K6KXXu/8IT3l6h/wGR7kIT2KbRWfYVNq
R/i+2RHP+b/85+R+xBf8tDjG35R/yd8SX4m3xWGxPz3iq/x2817zVzIjntDf
sDtq3mA/6Lv0W3pI7he/T10d/Q77zffLv0/ueU5EqTM/0ANm/5GrV/eR75XL
sbtxbBf2CevD8rBJrAEbSXbAT/C55rTay1NsIpmJ7eUH+BK+lr6RPAN+NMe7
8/4v8Y/lFttdDz6MdWGtZh7A1th5kXPasUm77qbPqBtUdxgbN+ea/g4sX26d
M5rwIqyYrqM76QK6gq5XV6LnlP6y5HcmN5rk8JX8STNK6Rb5hfygXBF/z/04
PnaqX8o3258xcVz9kmQ/6pswtxy1avbTWmOvmJm8d7tt8CzWF9vkV/ML9NXo
y0h2IlHgjGksPdmXyzy6Wr7RDJ+o0ZePVWJ7gLTkeczcTWuNNmCu/FUDK9Qo
jyqX5Wbl4lAso7PpjYzWqHZupZqMlP//x3/a8XN5
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzrkyBFAQheEWKcsMArtE2fdBPmMPSJRHkEmowpjFWmXNReMNJMQCga3K
g9hyMgLfBH/16XO6+97O1Y2V9YqIWENNbURTMqKnLqJZTSciGtVN/X1lRHV9
RBfdjWPZI355WXsZuo8/gH5M6a+rIrboHXmv+sZ7x42dE/XK7ZyspD4g1RBx
KTuVPSEvq9GXkJYNunHGf0ZBVsu/q44Y5g9hmp9Vc1iWLdrZppN0PeowY6bF
W3n+krzoToI/oh/HKGbN7PO+UdDvmmmgx+gUzuV/+r3yH3BA32KfbnV70kzG
7SvenNk2XjsO5BPl/5X/Iv+QXeAFh7J59Uf2qX5hAR32inaO5K/4BxA7MWg=

       "]], 
      Line3DBox[{1473, 869, 3399, 867, 2993, 1758, 1322, 3400, 1044, 3739, 
       1104, 3401, 4374, 872, 1326, 757, 4272, 3465, 1046, 3740, 4188, 4273, 
       3466, 686, 1329, 2757, 1123, 1664, 1121, 1663, 2940, 1122, 3402, 1476, 
       4428, 3958, 3271, 3467, 1125, 2941, 1665, 1126, 3765, 4398, 3201, 3778,
        1128, 1333, 2761, 1332, 3763, 1651, 4274, 3764, 3202, 3468, 754, 4275,
        3470, 687, 3469, 4349, 762, 3471, 688, 3278, 4317, 1666, 3968, 1668, 
       1669}], Line3DBox[CompressedData["
1:eJwV0EkrhXEYxuHHzsJYx3AcG0tKyVAybLBGQlaUkpMFa2s7FijH8BkMX8Mn
UKZCOTJmlpnrLO5+93M/w7/3rRmfGZjOi4gpShVE7BdFvOJwYcQLnqnbqb80
Yr04ooF/lnfyT3iqPi+JmKM1WZv6Gn/11tyYyI+o1uuRVcm6MaXe4Vf1f/kx
SqpP7Kb5Pm+tmGvhm6mKutQZajWTzGVmHu0MufGAlRT0Qwn9b6ygtLkvXLT7
iV16S3yvfBnv7X/IM/iOWf1ZKudvZVc4iCO+49jbLbRgrx6PaFv/Mve+e6P2
DmVNNG+mEQ9oUr5LK+68mb3DMqzTq7C3xe/xm7n/r5fAP/O1sgu+w60s3uht
0D+akEBy
       "]], Line3DBox[CompressedData["
1:eJwV0LkuBFAUh/GjJLYpbMnYdzUz0cwiIWoNLRElz0CNgkTE1im9Bw+AYCjs
IhH7oPKb4sv/nO+ce29y22cWJubLImIW/ZURj9URT9irihiTo2hJRPSZ/XJ/
2MUPlsojevm8nRHscM12c+osesy+uSK2kTJ74O/RbbZUG3GEjZqIYa6LG9fP
2TuQp/wJOvkmLm1nXZ+SHVySy6jr7KaRwjTXbpazt4Y8Gvkp7zfIrL5eFioi
2uyt6I+xin13DTi/aN5qdqlf5q/kpPNDZnfqDHdb+hc7F/yguiAPnSty5+oX
nJX+Q/8pE85+yS184B1Js+Bf1W/YxI27rvHsjX/nOjkt
       "]], Line3DBox[CompressedData["
1:eJwVzjsvg3EcxfEfBovrO1DXwSbCLgZto8OTEINLFWu9CLe6TwxCUoKiVtf3
4U0gbQeJ1cdw8j2/c06e/5MqrCfFpojI03BbRKYjYqozIouL7RFpLLuT7ogN
/Tf/KUvjFy7ZXPJXtKk/w56uiF5K0bK+hL90rduyycsyfJ9s3nfPsSC7lVVo
2+YG++UDtGBTwRWbe/mO/u6fsifKUUk2iVV6po/WiBHZC7+Lo/TK7+EYTfv3
N/c+n+OL/DuVvVFzH8hr3qjzdZz1Dyf6Fn0ie5Ad2jS7L+QT+kHMyldlMzZV
/simgae6cZshbOjWbObwUXds88P/ATrYNw4=
       "]], Line3DBox[CompressedData["
1:eJwVzrsuw3EYxvH3b3aoWWi60jpExHmqtiQEbeNskRgawU0gaUebUDbcgXtA
dxehQw1WPh2+eZ73ed43v1/m5LJ8kUTEHhZ7I3b6I3Zx3BdRpRWkByMWdB3+
ayDih77iDTndbSpiXp83P+lX6JH7hvwXJdm2bM7OJt3q7ukTt+f6WXmdtrCu
mzF/8hVM8x+0jCn+1E2eX8MGemSTKPBFvLjP2rnhJ+SJd975M4yb//BsZ8xO
TZYzL5sfu3+UXcsO3YzQNIaRtXOvb+IBB/pVN0W+REf1V/aG3N/JlmT7dtq0
YP6mbfoPEiYqbw==
       "]], Line3DBox[CompressedData["
1:eJwVz8sug1EUxfGtkVQT1zfQmfICHeABxC0NA+paCSrCq7gXs2LSgYaOiPsL
mBt4CEoZ9tfBP2uvtdc533fShd3cTltEzGG4MyLfHTHeE7FA17vkdB4zvRH9
fRFfdr/8BG3QDZ1Fes3vOV/mAw/6+/ylfMv8iHu9A9mF/Tb/hDEcyrK0gmcc
8SN4Mc/iHaP8kvPL+ExGDMgyGMIgNt1Zpv+48c1j/Spd0V9F2r+fyL5l9dYb
8INX/Q5nb801lHTu9CfN05jCm05RpyBfw6lOii/Js+6tyyr40D1rvdkuIW+n
V/izO5c37JvfOzVX
       "]], Line3DBox[CompressedData["
1:eJwVzrsuRGEUxfF9iLtxlxD316AbbzAal2hGR+YmKi+j0SFnZhASap0C0bgU
KsELjCnE7xT/7LX2t/b+9lKxUignEbGN/GBEayiiPxdxpr4MR3yORBzjRK/F
T6h/3oL+RYJJvQ61jdSOEr9u5hk3srco0sujEZ0yu/weTuW6+BX9urlpvqRf
RoU+NDPmbSq7BwXZNVTp+4GIGfWC35D7wqods3qb9Ddq2V12zal1bOn9IKXf
0ZBvqvm+iA97Huh59NA7cne45B/xlP2V3eueprnU3le5NyzoH8jmvJ17u+aP
1Cu1Wy+RHaf3UaV7zdTURf4fCYkzOQ==
       "]], Line3DBox[CompressedData["
1:eJwVzksuQ1Ecx/F/kypFizQhMSsSr7CCDr0fEwMMxVjaRImEJdiCkQU0EVqq
ZRkeEyzAYwXU5w6++b3uOecW9ytb5VRE7GGxP6Kaj6jhCONDEQu67ACfi+jo
Juiv3IslWx/9w7C+jBF0O7dse+OfBiNu+LRv6vTAHSs0Iz/bGvyo725pxbZK
j/UvuONrtiZ9pw1nLvXfmJTr8hT9ktd805GD3/X+upzip+1XmEFBn/bGhu0e
17oWzes/+E2+y37R4y15Fjl3nuia9JG+urOdnJcfaEne4bfRwpn8k/wDP5f8
O+aRcbatO7d9oqirYgyHtlP8A3q5MyQ=
       "]], Line3DBox[CompressedData["
1:eJwVz7sug3EYBvDXIWmHajURexM6VYqKRoQQu0MPjlt1dkhoSHAtZjdAEK1D
ZzsTbsBq8+vw5Dm+/3xfrnFYOeiLiCZspyIGhyPmhiIWe5yIeMtEjOJaNqJL
N2AfyrIFm66bT3wDW/R5OqLo/gSukxHL8h37Td2Zbol/owv6ojebfEdel6Xs
5vmSt6u6O/5V/mN7ZXMJI7K87kX+KH/GNfh1V+ZnocqP2bTsb+1P8Thfkbfp
Dn6wa+MPdy24kH/LnmR5nPPtX3iDH+jd03VvrXjnyL5Gr+uSumP+He5tZiAh
W+vd9f7dviTL2k/jCdkevar/o3fpAp7SpelJ3M9n6H+Nxi8Z
       "]], Line3DBox[CompressedData["
1:eJwVz7kuxHEUxfGrwBizScxIqLwAGolYOkStM2Y3lsKSSOyFpSA8igr9WJOp
SHgAD6FV+Si+Ob97zrn3n/9wY2dxuyMimlhLRQxmI4bwkInYoptY6ItYlZ3z
2uYLepKOuKFNcyFJ5afmN/MZPZbP2aubx3IRNbqiU6DfGMC9XlEnIe9GQ75L
v3An+9B5R51/bc77zoS7bXMNP3ppfgZH/BTtRVWWcLdT3oW8GxtYxzy/Ir/U
u8KhvdtERJn3LH/FCw74Fd2q96gbFVrS6fn/dySxrzOrU5aN6JTosk6LPuER
n/w9vXEUZVl7/XZytMWbxhL/V2/KO2dnks7gD0SoLsA=
       "]], Line3DBox[CompressedData["
1:eJwVzrdKw3EUxfHrGLElQVCwxUVXnXUOroKzIFiSaGIbY1cQLEnsj+DgM1gm
G1jfxCfw8x8O597zPb+Sm6lMlpsiokjrLREnbRFf7RGnfLc14oZX7APNEWv4
kf3Tfsx38Gtetk+kIxodEas6l7IrekrOy5qxQZ0VrIt/UDdt43msZB7VK/Jl
nTXzDz3iK0lGFXnWnZ36VewBy9jTyfvYqWwYe9c9lG3hOXMh+Tst6fzp9Jn7
6R6/0Es5U5cv4j/yX/qmvGwKu+Ml7FX2Rlkal58k/5WfuyMjG5PVZAXZCJ+2
3/JN75zpNGgB2+cv+gd8A6vzOXuNz+PHzgw5+yzbk1V1es2z1EMp/B8DyTeX

       "]], Line3DBox[CompressedData["
1:eJwVzrkuBGAUxfGrFNtYWlsItTWSqfQE04pGQskD2BISNaETMZZ4Am+AMcMw
lpEQYhK7B9D7Kf6595xzT76vdXI2NVMWEdN4rYzorI7oQKoqokQnayJ+ExEj
dDu/DaP2F9lgbcSWbI93gH3U00+ycVmdfUF/CYsY1jviTWGA3qCvdQrocf/N
u9S9oXdQpO/c7iNN78quzEs82g/5JXy5+8QqHvhz5jN/DCv2PG+5IuLezOte
oJ+fpru8u+muaG/hNyOHO7pb1ucuSw/5axYN9jPzBwn5xH/XvoYMkuUR6+aF
fsbth/47bulX8w2n/BNs45xf+L/Va6R75Tn62N6EefoPreBC/Q==
       "]], Line3DBox[CompressedData["
1:eJwVz0kuhFEUxfFrZFIdVlASCSFESIQJc12wARHNjKmZJgRTCyh9uwBbkBhp
qxKhUoVElG4H4leDk/+955z3vvdlpxbG52siYobeExH3qYhrHExG3OBwXUQu
E5E0F9MR+5jTOcBpWb8sZX7QP8RtPMIWWRovdP9qIy7x2N6KK+5pw3tnT3hX
5lPMO7sqW+IXKc/rsRewXWfdvMN/pQpvzf6Jc76Vqb6ZP0pf5iH8xi6clO/i
pv4G/fD33PeL3bIPXt5eZ7/FAp2Z7/AcEzoFb6s39+rOumuAN8J75GX1Oqhi
L8meeH16z9jIb8BFfplK5jG9MjbJtvSW+S/V/+JNyN6wWdZJ/ycyP44=
       "]], Line3DBox[CompressedData["
1:eJwVzjlOQlEUBuBjRCmY3YHuAhp0CVqIpSLigJEFOXQ4oImFnYmNQ+HsDjAx
Me7ACE/lo/hyzvnfvee+6Xp7YWcsIpZo5SI28xHzhYgNdds8RehTpYiu/o1X
/inxx7hvJ+oLzxS5K0a0+dUf88QjBW7lK6Nv9ibkZQP127t9tWzflZqTn8s+
0hFH+jQJWb7cr5HRz2Uj6u4smiuUWTXPyg9I7BhQk1XN+9w406En3zNfeu/a
vMy7rGnelc+4s65fo8sZn86cqofenhz9Ox0yzj6o92wxwY9zDS7sHAKmCTaA

       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzr0vw2EUxfHbCbW0YcPQHxMNImIRNk2sbSQkrVQHo5d4qc7+AI2pg8HI
aDSYJIYaJCJe1u7W1kJ8Opx8z7333Ps8udp+cS8VEWWqDkQU0xGzgxEJzmEJ
57MRP/wq35WZwh7eZSJ+9Y+GItbwWX9BtsDv8FVa51/Ma3zwb3Y2MEW7eu/4
Yb6Jh+otPMAZmnbr0yzPf+G5N9v2j2UKwxEn+IQVuQ7fkTvFMdk6PvT/Z/5H
dWrQGT3qt9wakZmUXbY/yl/Yb2ITx/v/ksubT/CXei0sq3O4iAn29Cv8N9/l
t9169caNekn/Fq/VV2YrZhnM0r33/wHOCzEi
       "]], Line3DBox[CompressedData["
1:eJwVzzsvg2EYxvFbglIS6htI2BziCzAyS6Ql0aowqoQwGPARJFoGH6COozBI
FxFsapI6TA61mHXzM/zzf+7rfq/nfd/e+eXJQlNELCCfiDhtj0h1RJzxfVvE
ZdLZfMGjqYiGbMnuGgVUzRm7G6QxZr6V9+vc8YR5RC9nty3L8qPswW7IXOW3
bl3ZuvMG1pDAJrbwYd/Fz7oFnRpX+IVf8Wm3yisYxoD31WXjnvnmc/3mzogW
tKIu/0JFvuOfd53TOkUuYQ/7ePdNPfKSO4roQxoZPOkO8gym//8FWSS9P8c1
+7J+3vlANsc/5mPMuvuEF3nK/b/cQNlzRzjElf0fVto7QQ==
       "]], Line3DBox[CompressedData["
1:eJwV0DkvhFEUh/HDRMYyBUqiUFDaGkOhVCgkxtIKEjq+gAaV0jfQKozOLhok
JtZKYiyFEGIpJGgk/N7iyXPO/55773vfxvGZ3HRJRExhPB2Rr4iorYpY40J5
xHalTL/FOziQN+gPucf6iGxWP8xHOJY36wvcZ31evYA5tKINHWjHQ3XElZkN
9SbW0YksutFfE9HF12b2eBc7eMSYtSducWd5JiKNX30pp/Cj/k7OdMeidxWx
r17iF/mE/a/8hnd8JOe655TPcIIB5DCEwWTG/mczF+pLnCfvRso3NDmvisuw
jJD3ykb5Hnf4tPeGb1HEn7ms/1Rhrk49KavnL3N5zuhXeYX/AUedPrs=
       "]], Line3DBox[CompressedData["
1:eJwV0D0vg2EYxfGribZaCWrwMhowsmjSQVJTFzTp2NFAQsJi8LJ5GehAExID
kegHkIiXMhnEpFM/htGgFvHrcPI/51zXfT93nvHlzcpGIiKqtJKOaGYiXuhu
MGJV7lAxG/GL97qtvoh5eaE3ImlvER/0n7o238JiLmKJz5iXMYt/dpJ8jk9h
GYdo137e/pruS17HPd0on9Bvyz/8Dr66Y4zf50+94wDfdGf8IX/kXD+e4AC+
mx3zNb7i3DCe0wh9mNXNpvSXdKWbwWu80N9034jT3jDBz/KTmMeG71X1j/Kt
/IQpXQ99d/8LlszT+CwX7DSxgXP0DyW1LFE=
       "]], Line3DBox[CompressedData["
1:eJwV0L0rBHAcx/GvQe7BQBYGHYvsylPKZJU7kpJFnpKHCaUrprvFaL74B7g6
k8UdGZksSigTKQbpJnnd8On9+X6+D/369S5u57aaImKJ1loiZlIRg4mIy2TE
EJbTEVey8faIO3WVr9Ew/0cjVGmLWDUfNKXutzNvPstf8BV64Pf07+3m+Fc7
CzhN67JWvRdcVl+bX8FndYf8k7rdS8jysiRmZU/4606d3+D3aZMOzMyaz/OH
/I57KX4X01iz8y5/4wt2C5jBIt7qFfmjxtuwE/uw2b0ufsDeJM25lVE/mi9h
Dx3LP/AbT/DHzCmW1F9Yxwl3zhr/5uY5jmJKVtarqsca/4s39A+zPDdb
       "]], Line3DBox[CompressedData["
1:eJwVzzsoxmEUx/EjA14JJQblsiiDoiiDhaKsYrCJXAe3iV4MXhaXRSFmFhtl
EBksFgsKJUouZZBY38TH8O17nvM753n+/8resY7RjIgYwXBWxHFORGluxAlf
ZEcM8Gkiop/zCyPSemPqcfyqJ/mnIGKCM9CpV2W+2ewVX+IaU7JpPJnN5Vu9
G9zhwbnJm4/8Ih90x4w6iSLM4wMp3Mvm7MyiFjXeaeU2JGUv/IwW/XN3vqrf
sChb4BQaZXW8qlfhzmVk6i3xmp1l2QrW5Xn6Xf//hWpsodvMNn/61nczm2Y/
sYF6fMm/cS9vMNeHXqRlxeiRlfCR3V3ecd7hBLd7r0w9pC7nMzMHvOe8z4f4
A3wxPhQ=
       "]], Line3DBox[CompressedData["
1:eJwV0LsvpAEYxeGXiJ0xDcV2WNO51baSbKKZUkSFSFZlEDQkCja22k3ctW7R
bunyByyFygiDKNwlu5GNVVCYyjPFL+e855z5Mt+X7hvpGC6JiAkMfIj4XRGx
h8NERDYZ8VIZ0U9z7m55D9r4b6mIS90UbUAjmtGEU/2R3at+x53j8zj2nBb3
Cb3T9doNyX/IBukFrnWt7vaqiBu+32Zc/lM2Rj/KnlCr/yL7z1/a7PH7GMWN
3ZXsTffJLiMr8JOy77oZ9zT9rDvg//B/UW1TKpuyq+FnMIs05lGmm6MbWMAi
6rGMct0SffScBLo8N0n/ec9Nz1t1r2EF6/ICevlzdPrtGX22yxe/X/Eb4a34
H5HkMzZf6QPu8WJ7S++K74sEUqizz9I03bfZpr/cW3QX7/++SlU=
       "]], Line3DBox[CompressedData["
1:eJwVz70rxWEYxvH7WLx1vCwWEo4y+RMUshiU/AGGs0kdLCblJYrEZjTgHIMM
LAZ1yHCk5GUwMImURHGYMPA5w7frua7rfu7n92tNjw1lEhExgoPyiC/kqiO2
qyIOKyJqaZqvoR31EXv6d9zKkrKimZ86Od2Rv5V2yF/5T/qtK9Ks/AVlzil7
EnSdf8KEXc/m2iojlrCINfk9qs328M1YwDxW5Xdo0a24+yubLr1H+/liaYd+
SH9Dl2UfsoyZR9rDP9BG/Zz+Ct18A2YR8hk6JT9Hl3MSl/jznRd0Un6GTrt6
/cuAO+3OKYzLCzg11+fNY3qEUdkJ9s3k+WtdjjbxWTqsy2OX3+IL+k1ay2/Q
Qe/8A80MQFs=
       "]], 
      Line3DBox[{1029, 717, 2235, 1014, 4040, 1603, 1013, 2225, 824, 4372, 
       1963, 712, 2353, 4441, 1729, 1957, 1715, 1716, 4093, 1233, 1950, 1221, 
       4089, 1707, 1220, 1942, 1065, 4326, 2610, 1207, 1561, 4013, 960, 2330, 
       941, 1543, 4002, 1542, 2878, 1532, 3997, 1533, 700, 2327, 783, 4369, 
       1917, 695, 2318, 4375, 897, 1499, 691, 2310, 4452, 1853, 1865, 1132, 
       3781, 1134, 870, 1474, 1044, 2595, 2106, 1887, 4347, 682, 2246, 837, 
       2088}], Line3DBox[CompressedData["
1:eJwV0L0vg3EUxfHLUi/LY7GzSJtYrF6aSJtoLHQlqTBJpNLJ5F9gJDEYSJWN
xWBBJLUxINGFhP4FJBYtn2f45tycc+79PXlGVjfL1Z6IWMFlJuJkMKKBOtZw
0RfRoq+oDEWc63QGIrr4xT6OdR6TiCWdZZT6I+YwgSPZg+zAXLdbpAXkkHFv
R37Ib+NZr+Rewpune7xRnXf6p9/FrvlKr0VnvVXTLdAifvjfOl9446+jbV50
Iy//NH9gy+2MbNt8b2eBviCPGVTlFXlT9pT2vZXjZTGWqnsdXg1T8kn0YtrO
Br3FDYb1rumdnXHZmTnxHae0gSYvi3r6P+g/Q/o4sg==
       "]], Line3DBox[CompressedData["
1:eJwV0L0rxWEYxvFbR3mvc0xeJpvCJAtno47EwHAmCp2JOMKAP0FhI5YzYVAy
GkxK+QcomzMZvEykED7PcPW97uu+n+e5f7+u+fLUck1ElOiyLqK9kW+KaMN8
LuIIK+qT+ohD/hhH5B/8C/+OB9jfELGPw3pvqUdP6md8pU6+x8x9NqKD35UV
1Xv8BL9Dg862qsf4HI7jKG15/9q5Flmom7GAV7K19Kb+Kt5gFafdU9Vf4R+p
nN6W9ck2aE69bXYWB+Sbsgd+CWvTPGawTe/OjsX0zbI//6cbf3EGh6mQ9jez
Tlnz33oZ/gt/9Bb5C3vm+Qo/hAv4iSU81+vlb9OONOnOU/kZ/QM3MDUj
       "]], 
      Line3DBox[{1978, 2036, 2732, 2237, 2731, 4338, 2730, 1970, 2032, 2380, 
       2359, 2978, 4360, 2977, 1964, 2029, 4388, 2564, 1959, 2026, 4333, 2201,
        1952, 2022, 4329, 2193, 1945, 2017, 4450, 3050, 1938, 2012, 4302, 
       1930, 2005, 4453, 3061, 1924, 2000, 4380, 2535, 1918, 1996, 3082, 3081,
        4456, 2146, 1912, 1993, 3073, 4455, 2138, 1906, 1990, 4316, 2847, 
       2849, 2848, 1900, 1986, 4428, 2846, 2837, 2839, 2838, 1891, 1982, 4426,
        2836, 2835, 2096, 2097}], Line3DBox[CompressedData["
1:eJwNzz8oxHEcxvGPyflz5d/A6BZ27PbbLNjkrBhMN8jiimx3C2KwGVz+/JS4
K4NB/BgskpIyIEoMTIrX8O75Ps/z+Xzq2zs5OzLTEBGjqDVGfCPbEvGTiehq
juhEf3tEIv9CB5/oNpv4togNWpV/oCr/lO3Qbf4da26N2V+lW/wL3sw8mylj
nX/Cq2yZX0KFf8CFnV/3V7yP9Lc0pSV6gx537/UL3tco2I3WiD97Rf4SJ97H
uNNNmB/0HsIA5vTnKHkv4tHtvLkrN/v4lE7rzzDPj/v7sP5QnuMTOqXLu3tK
d2UHstTMPu3m92jd3j9Wfjmu
       "]], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/E3yd0hncGqruwGBtwg7FzUGZSBs+HKj+kmy50UJSYs8gco
MSjFxikKi0H+AAsRgyiPG5693q/X6/15f+8y08WxhbqImMJ5IiLbFNGPXlwk
Ix7SEafyDxzITmT3siN+qTliEW/olI+3Rbyb89jDLiaQ8G4bjehKRbTa67A/
aT50Z5gOoWS3Xf5Jc9jXrXnTZ79Ct2Tr+rJ5R5eRv9BN+Z/3G+Yzv+2JfvNf
uOUr/CNe+WdUZav8HdJ8wc1Rt7LuLLtdks+b55DUt+jq7czqRvgVfcFc1nfr
ZswNtf9g51h2wxftXNMqrjCAwdoN+a/vX9Ie/gf/WK81OA==
       "]], Line3DBox[CompressedData["
1:eJwVzrsvg3EYxfGnDCgRIgYNQyNlM7j8CyStkhjpZFCXpF1MplpYbBISDUM3
C4vb4paYMFXEYLRIjBbB4GP45jzPOef3Pm96vjxTSkREASPNEactEcP0Mhlx
Zj7HZ0dEqjWiB2OyWdldU8RQZ0SJ/iLDe9Jb1lnBKq/Im9Mf1dvkLdqfsYQ1
+atvF+Qp+a38GjeoyBZ4P+YyvlHnbeDRjRd6QbdoxfusPId7TOJLNk2n8IB1
nTx9069ix91tXoZ+6L7zati17/G73K7ScfsEDmVt/rmfNyDbN2f5ORzJuu2D
skY3EmjAyb+ve6BzJWvn9eodow9F+x/gujGx
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztyLEJgDAARcGPTuAImcQdHEEQ7LKCIztCuoCSMuW95sGVsx7XkuTekjW9
5/t355xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzvk0/8U555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec85E3HC/6
1Q==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{363.8823497910459, 211.71449910152128`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-2, 2}, {-2, 2}, {-1.043222512206989, 1.059489206740143}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.3218514403542242, -3.249914272728934, 0.8857024727608431},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7257968658481455`*^9},ExpressionUUID->"22d8f123-dcbc-4ced-b18d-\
9e61f511a0db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Predict", "[", 
  RowBox[{"\"\<NameAge\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Tom\>\"", ",", "\"\<Stacy\>\"", ",", "\"\<Claire\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257969333202925`*^9, 
  3.7257969333749423`*^9}},ExpressionUUID->"e521a1f5-e832-4bb1-acc3-\
2ecc8ef92949"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"59", ",", "48", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257969599238305`*^9},ExpressionUUID->"d3d21250-84a6-48f0-916c-\
66fa11873e99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
   "\"\<NameAge\>\"", ",", " ", "\"\<Claire\>\"", ",", " ", 
    "\"\<Distribution\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725797043118589*^9, 
  3.725797068308341*^9}},ExpressionUUID->"33e2b9d5-7f93-40be-8075-\
30bdaee9ebc6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DataDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQrbh4+4v//3/vZ4ACN0n3p76rfsH5EVZTuO6Z/4Tz
PR26O37d/Q7ny+Xe/Xm/6xuc/8Dl7WR26a9wfiPj8rbdhz/D+QKZcos2+n+C
85u+f9hQ8OgDnL/86i2DCun3+3fItb4O3LHPXkXIP3CyxRs4P0FCXPl420s4
PyVn6u2eR8/gfCex/qfXWJ7A+fc77yywjHgI569e5hXt+OQOlH/PXv2qh5Ox
8XU4X2H6u+6wJxfh/DmcYh9ZXE/A+U/EbeTruXfD+QLRZo7bOfrg/EdCNpKH
ZDbbH/6qEdN/6Kn9zECGE68sjsD5EU6ltsknz8P5fG1ny/Z4XYXzE88XNy6e
egvOb9g28csBzQf2s2aCwEn7CbtFy6dffwTnH8uSW/Fy31M43+RMwaeVM17A
+U+S87sDHV/D+TuXfrpUovwOzn/BN3GLfdYHe1j4CCzx5fmz+yOc79XnY12m
9RnOXzp5oWBKwxc4X/idxX7+z1/h/EXJaiL6vt/hfN9NO0pbF/yA2nfTnjus
d91MgV9w/iuRHX2KGb/h/Nsaqm7pd/7A+S9FzbmeeP6D88Xl5pdemfcfzl+z
VyXGsYPBAZZ+7v5UCbxkwgjnz1lUfubfXQT/aWm2cddUJjh/XxhX3nkHZjh/
wsXoL///I/gAmJdvuA==
              "], {{{}, {
                 EdgeForm[], 
                 Directive[
                  GrayLevel[0.85]], 
                 GraphicsGroupBox[{
                   
                   PolygonBox[{{9, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35,
                     34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
                    20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
                    10}}]}]}, {}, {}}, {{}, {}, {
                 Directive[
                  Opacity[1.], 
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5]], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50}]}}}], {
             DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, Background -> GrayLevel[0.93], 
              BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None, "AxesInFront" -> True}, 
              PlotRange -> {All, All}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
              Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Histogram\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["95", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQrbh4+4v//3/vZ4ACN0n3p76rfsH5EVZTuO6Z/4Tz
PR26O37d/Q7ny+Xe/Xm/6xuc/8Dl7WR26a9wfiPj8rbdhz/D+QKZcos2+n+C
85u+f9hQ8OgDnL/86i2DCun3+3fItb4O3LHPXkXIP3CyxRs4P0FCXPl420s4
PyVn6u2eR8/gfCex/qfXWJ7A+fc77yywjHgI569e5hXt+OQOlH/PXv2qh5Ox
8XU4X2H6u+6wJxfh/DmcYh9ZXE/A+U/EbeTruXfD+QLRZo7bOfrg/EdCNpKH
ZDbbH/6qEdN/6Kn9zECGE68sjsD5EU6ltsknz8P5fG1ny/Z4XYXzE88XNy6e
egvOb9g28csBzQf2s2aCwEn7CbtFy6dffwTnH8uSW/Fy31M43+RMwaeVM17A
+U+S87sDHV/D+TuXfrpUovwOzn/BN3GLfdYHe1j4CCzx5fmz+yOc79XnY12m
9RnOXzp5oWBKwxc4X/idxX7+z1/h/EXJaiL6vt/hfN9NO0pbF/yA2nfTnjus
d91MgV9w/iuRHX2KGb/h/Nsaqm7pd/7A+S9FzbmeeP6D88Xl5pdemfcfzl+z
VyXGsYPBAZZ+7v5UCbxkwgjnz1lUfubfXQT/aWm2cddUJjh/XxhX3nkHZjh/
wsXoL///I/gAmJdvuA==
              "], {{{}, {
                 EdgeForm[], 
                 Directive[
                  GrayLevel[0.85]], 
                 GraphicsGroupBox[{
                   
                   PolygonBox[{{9, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35,
                     34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
                    20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
                    10}}]}]}, {}, {}}, {{}, {}, {
                 Directive[
                  Opacity[1.], 
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5]], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50}]}}}], {
             DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, Background -> GrayLevel[0.93], 
              BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None, "AxesInFront" -> True}, 
              PlotRange -> {All, All}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
              Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Histogram\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["95", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"6", ",", "99"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel",
     DisplayFunction->(
      ButtonBox[#, Active -> False, Alignment -> Left, 
       Appearance -> {
        "Default" -> 
         FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
       FrameMargins -> 7, BaseStyle -> {}, 
       DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
       Baseline]& )],
    DynamicModuleValues:>{}], "]"}],
  DataDistribution["Histogram", {CompressedData["
1:eJwB9QIK/SFib1JlAQAAAF0AAADqOdQfyiSmP+t4sa+nBaY/srIlhVQhpj90
1dVHftGkP3w4kX5h26M/rgtOa7rpoz/JchgW0UuhP11Tg5TWcZw/lKmeFymS
nj8/+TM2dlGgPxDPhEKKHp8/xjk6j1mjoD9PekDoPPWgP7UUIqMOHaE/CGg4
nCC4oD/yieimztqbP+KB6VilGpk/1VET4fuulj8hYqpWkTSUP7GE8ka5qpE/
SlIhJ74hkj/3FlFXk/qQP9B5My2CS5E/J97z8nTLjD+x27cw3LWIP2m4eTzq
zYY/EyeiWqRchj9cLkxeIUmEP0VjCARe3IA/hXBtc9mDfT+msDO4xSJ8PxHJ
UCAje3c/BeN7eoWecz/xeqmmm1FzP54X8b3/JHE/CoRy8Z8JcT8W1UWRzc1q
Px7nMcAKTWw/EK6Ilq2qbD9V8uuVQSFwPx1Vvaf/tmU/awspwubSZz8FJ7QH
wBprP78RPedCG20/uzyovF1waz8FBtryr49tP7GRr2lLLXM/KH4KfVbvcz+4
W7/XGmB0PzbwY04ueHY/DlpGUnEOez/76Q777gV7PzEA5p466n0/G/dw/BVh
fD8JDGVEeSt7P/MzkkDlVX0/3IrBQhUZfD/uxA8Ury58P1lh2vfxBnY/Eibh
tAQHdz/GuRCJA/d2P5O26MimkXY/yNofsUcMdj+brpCfcyZxPyUXTKuWLHA/
zUWCtjqfcj9hptIsiZFxPx5wiOyAAG0/wFlMNWuSaT8BOl1iC4xpP03w27FE
fmo/eCQRmrKGaD+6BCLHUoBoP0g9EcyfMGM/kEbGEfYYZj9w5yAcsfNjPxSp
LSXliWY/MFzSvDpXZz+h8hJpTAdWP7Q9b6uI8FY/8Zk1qSArWT8LSlJnCodb
P2Zos1+GrFs/Q8WD0WMcUz+OXXhyy3pTP11QgTWrplQ/UPuHYDW7Uj8QJBAs
ugFRPyRvbG726kE/AH2B0iHYPz+zbwUP1X8+PxdVDYg7zzs/859fvR6wNz8Z
Akod
    "], {6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 
    24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
    42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 
    60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 
    78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 
    96, 97, 98, 99}}, 1, 95],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725797071728842*^9},ExpressionUUID->"9098ea95-0821-4784-928f-\
e5a449d1d46d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"distribution", ",", " ", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
   RowBox[{"Exclusions", "\[Rule]", "None"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257970822194023`*^9, 
  3.725797132646617*^9}},ExpressionUUID->"0c39a7c0-3105-4404-a539-\
81619e7fb6f5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN23c4UP8bN3A7RSJ7JEmJJNIwO4fslR2FVGTL3pusJCRJoSIrZSZkJ0mo
pBIqShJ9hWSP5/dc1/N4d/451+uP+37fnz8+17nuP86OsxcMbKgoKCieU1NQ
/N+34JWV7Ez+pqMU/+95TC+y3dkui/j/bvJ9mLPHrnjdrRJutnR2Detui+9W
/2v7at0vZCOqf9l+WXd7Ur/bqO3vdWvWbdAdsV1bd+fmwxtpLJjJ/+9ura1p
XYFwb+zE7hu34GHaPGXxAXh5hTPU9BTLukUnFmaLzLauO6arbtjYhG3dCYzp
HgLecIqmN9X4NTirVVwg9B1cWZ91qtCIfd3fH4Z1rxpwrHvsl8WZF+7wpKjs
5NVkeDl3erNIN8yWdU7DUJ9z3TyfiN5tbrAAL5/taCK893pPZNBrWOJdCav6
JHyY9fLdrcxc5JhMz/Z2oVxCXt9e8tN+WOmKSmPecVjK/gnDmjr3uoWOSZ4w
UeJZN5/Er2XKBph9W97dB3K8606+GulF7Q8zbTqrblYFaz97LRn5AY4LJXiL
Z+E2uYc0fex85LhvaXEebS5BN8c3QXMInnudLGMuvm3do4X0F8uF+dc9eP2p
6Okc+GNk8OtNO7av22TpVLbVabjbTca7MgNm3pd/eqgW1h3l0GAcgOOzLx44
sgTb7F/cLLlZgCwr23XRaEcucTfBtt05Bf7yX09UIe+OdQdnMHxXPw3z6Sgd
+3EXHs+xcK9sgWuWfe9cHIHv5tPJOM/BcUYpr43oBUnPd+/Ugt/kEO4Ugnby
3LBZUfHaTlE4lWFbrVUp/NYhzjdDeifqeZreywXCzO1zB/sa4Hmvix1Nr+Ev
O1itC4bg1s7bS4nT8EM/8au+1EJkoHRS8Jn+bCL4jUaz2i5YR8RmikMNrjk6
qqjzDN5t5JgccWzXugc+F9VkhsNX7Se+VjfBZMdqUegbeEJ8i4/aEHwrabsi
0xSsObOf4R3FbvIhg65jzc9s4l61XtZZAZgixE1qkoCdUmYidtfDHwt8eszl
hdedeLB62ScAVm1YFLpaA9+J5K0W6IOXNeR1Hi7AhUXanF4b95Av3Lk43mjd
IU5ssRiS44Zp3J3vU4nAZT1BXi+k4XPm5QOJTTDb8OgxU02Rdf/Ki5h7kgA/
c+S/v/0tXMtHmyY9DJd1jkfq/4Xzg7vdHOhESQvDiJT3breIzP3VlhGccFxS
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
       "]]},
     Annotation[#, "Charting`Private`Tag$967133#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725797135777774*^9},ExpressionUUID->"5e04bb98-3b54-428b-b14b-\
41a62f18d768"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"DateObject", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2014", ",", "5", ",", "5"}], "}"}], ",", 
        RowBox[{"TimeObject", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"9", ",", "53", ",", "6.301579`"}], "}"}], ",", 
          RowBox[{"TimeZone", "\[Rule]", 
           RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
        RowBox[{"TimeZone", "\[Rule]", 
         RowBox[{"-", "5.`"}]}]}], "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"DateObject", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"TimeObject", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0.`"}], "}"}], ",", 
          RowBox[{"TimeZone", "\[Rule]", 
           RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
        RowBox[{"TimeZone", "\[Rule]", 
         RowBox[{"-", "5.`"}]}]}], "]"}], "\[Rule]", "2"}], ",", 
     RowBox[{
      RowBox[{"DateObject", "[", 
       RowBox[{"{", 
        RowBox[{"2007", ",", "8", ",", "23"}], "}"}], "]"}], "\[Rule]", "3"}],
      ",", 
     RowBox[{
      RowBox[{"DateObject", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2016", ",", "4", ",", "4"}], "}"}], ",", 
        RowBox[{"TimeObject", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"15", ",", "59", ",", "18.273754`"}], "}"}], ",", 
          RowBox[{"TimeZone", "\[Rule]", 
           RowBox[{"-", "4.`"}]}]}], "]"}], ",", 
        RowBox[{"TimeZone", "\[Rule]", 
         RowBox[{"-", "4.`"}]}]}], "]"}], "\[Rule]", "4"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7257972809405155`*^9, 3.725797280993116*^9}, 
   3.725797335727662*^9},ExpressionUUID->"7bdb0fee-7301-4319-b4e6-\
f95f56bd857d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"FeatureExtractor", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteTime", "[", "#", "]"}], ",", " ", 
         RowBox[{"#", "[", "\"\<Year\>\"", "]"}]}], "}"}], "&"}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257973518283606`*^9, 
  3.7257974331651015`*^9}},ExpressionUUID->"14272058-b8c3-42dd-97bb-\
7ee2dc94a509"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Date\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Date\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725797436750924*^9},ExpressionUUID->"03b860dc-fbf9-4344-87f4-\
886e41f4d21e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"data", ",", 
    RowBox[{"FeatureExtractor", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteTime", "[", "#", "]"}], ",", 
          RowBox[{"#", "[", "\"\<Year\>\"", "]"}]}], "}"}], "&"}], ",", 
       "\"\<StandardizedVector\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725797480334714*^9, 
  3.7257974803948812`*^9}},ExpressionUUID->"e00b45da-f087-4d80-97e1-\
3c0bf62deaeb"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Date\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Date\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725797485373208*^9},ExpressionUUID->"63ae32b3-ebde-4a5e-8472-\
d095fffee9fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"DateObject", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2017", ",", "1", ",", "18"}], "}"}], ",", 
    RowBox[{"TimeObject", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"23", ",", "24", ",", "10.098993`"}], "}"}], ",", 
      RowBox[{"TimeZone", "\[Rule]", 
       RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
    RowBox[{"TimeZone", "\[Rule]", 
     RowBox[{"-", "5.`"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257975039421773`*^9, 
  3.725797504003284*^9}},ExpressionUUID->"9c1d34c2-0db9-4ed1-90a1-\
f424b0d34de8"],

Cell[BoxData["2.5`"], "Output",
 CellChangeTimes->{
  3.7257975055104885`*^9},ExpressionUUID->"43f08c12-9a15-4730-af23-\
5978dc457a7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.3", ",", "\"\<male\>\""}], "}"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.8", ",", 
         RowBox[{"Missing", "[", "]"}]}], "}"}], "\[Rule]", "2.5"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Missing", "[", "]"}], ",", "\"\<female\>\""}], "}"}], 
       "\[Rule]", "8.4"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.2", ",", "\"\<female\>\""}], "}"}], "\[Rule]", 
       RowBox[{"-", "2"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Missing", "[", "]"}], ",", "\"\<male\>\""}], "}"}], 
       "\[Rule]", 
       RowBox[{"-", "4.2"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3", ",", "\"\<male\>\""}], "}"}], "\[Rule]", "10"}]}], 
     "}"}], ",", 
    RowBox[{"FeatureNames", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<age\>\"", ",", "\"\<gender\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257976611540356`*^9, 
  3.725797661205679*^9}},ExpressionUUID->"41fef210-e105-4bca-97e7-\
2c889806cab2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725797707286613*^9},ExpressionUUID->"ce44af3f-39ee-48ee-89bf-\
2e22988d56d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<age\>\"", "\[Rule]", "3.3"}], ",", " ", 
    RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725797731276094*^9, 
  3.7257977583511567`*^9}},ExpressionUUID->"96447f07-e6c8-4293-8f2a-\
b2f285fd9d36"],

Cell[BoxData[
 RowBox[{"-", "3.848253008796294`"}]], "Output",
 CellChangeTimes->{
  3.725797759226267*^9},ExpressionUUID->"2a178888-d3b2-492a-9272-\
842384ba146c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<example\>\"", ",", " ", "\"\<a\>\""}], "}"}], "\[Rule]", 
      " ", "1.4"}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<example\>\"", ",", " ", "\"\<a\>\""}], "}"}], "\[Rule]", 
      "2.7"}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<an example again\>\"", ",", " ", "\"\<b\>\""}], "}"}], 
      "\[Rule]", " ", "2.7"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", "trainingset", "]"}]}]}], "Input",
 CellChangeTimes->{{3.725797846520687*^9, 3.7257978536287823`*^9}, {
  3.725797944339986*^9, 3.725798067021398*^9}, {3.7257981164758983`*^9, 
  3.725798166771727*^9}},ExpressionUUID->"6189cc50-1219-4a51-9040-\
2a852dcdcb3f"],

Cell[BoxData[
 TemplateBox[{
  "Predict","bdfmt",
   "\"Argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"example\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"a\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", \\\"1.4`\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"example\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"a\\\\\\\"\\\"}], \\\"}\\\"}], \\\"\[Rule]\\\", \
\\\"2.7`\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"an example \
again\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"b\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\
\\\", \\\"2.7`\\\"}], \\\"}\\\"}]\\) should be a rule or a list of rules.\"",
   2,334,52,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257981279817104`*^9},ExpressionUUID->"046d6e09-4c6b-480b-95c6-\
a62e3b712736"],

Cell[BoxData[
 RowBox[{"Predict", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"example\"\>", ",", "\<\"a\"\>"}], "}"}], ",", "1.4`", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"example\"\>", ",", "\<\"a\"\>"}], "}"}], "\[Rule]", 
     "2.7`"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"an example again\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
    "2.7`"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7257981280819907`*^9},ExpressionUUID->"91579b7e-be72-41a9-931e-\
f585a47bb3a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<example\>\"", ",", " ", "\"\<a\>\""}], "}"}], "\[Rule]", 
      " ", "1.4"}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<example\>\"", ",", " ", "\"\<a\>\""}], "}"}], "\[Rule]", 
      "2.7"}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<an example again\>\"", ",", " ", "\"\<b\>\""}], "}"}], 
      "\[Rule]", " ", "2.7"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", "trainingset", "]"}]}]}], "Input",ExpressionUUID->\
"7e767586-cbc3-4142-b3d9-9f653806092f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725798175090167*^9},ExpressionUUID->"b5158327-093f-45d8-9ff0-\
3bf8f719e05a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<example\>\"", ",", " ", "\"\<a\>\""}], "}"}], "\[Rule]", 
      " ", "1.4"}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<example\>\"", ",", " ", "\"\<a\>\""}], "}"}], "\[Rule]", 
      "2.7"}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<an example again\>\"", ",", " ", "\"\<b\>\""}], "}"}], 
      "\[Rule]", " ", "2.7"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"FeatureTypes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Text\>\"", ",", " ", "\"\<Nominal\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7257983450856752`*^9, 
  3.7257983665588045`*^9}},ExpressionUUID->"65eb6b1e-4f10-4a34-92ea-\
ddd831ff4fd7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Text\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Text\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257984101337376`*^9},ExpressionUUID->"79040f89-e547-4a94-bf04-\
4579f0b1cb04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PredictorInformation", "[", "p", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.725798495351639*^9, 
  3.725798504228674*^9}},ExpressionUUID->"85f42f39-ea44-4d29-a86e-\
beee775e92c8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Input type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              RowBox[{"{", 
               RowBox[{"\<\"Text\"\>", ",", "\<\"Nominal\"\>"}], "}"}]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"GaussianProcess\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 6, "Length" -> 6, "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`UnknownShape]], 6, {}], 
                    "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[630234427], "Type" -> 
                    TypeSystem`Assoc[
                    TypeSystem`AnyType, TypeSystem`AnyType, 6], "HandleQ" -> 
                    True, "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[630234427]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "AssumeDeterministic", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key[AssumeDeterministic]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key[AssumeDeterministic]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["CovarianceType", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key["CovarianceType"]]], "Mouse"], 
                    ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, ShowStringCharacters -> False], 
                    FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 422061934][{
                    Key["CovarianceType"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key["CovarianceType"]]], "Mouse"]]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["EstimationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key["EstimationMethod"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["MaximumPosterior", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key["EstimationMethod"]]], "Mouse"], 
                    ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["OptimizationMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["SimulatedAnnealing", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["SearchMethod", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key["SearchMethod"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["SimulatedAnnealing", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key["SearchMethod"]]], "Mouse"], 
                    ImageSize -> {{172.8, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation["InputFeatures", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    GeneralUtilities`Slice[
                    Key["InputFeatures"]]], "Mouse"], 
                    ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], {}}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 422061934][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    422061934]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    422061934][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 AssumeDeterministic -> False, 
                  "CovarianceType" -> {
                   "Numerical" -> "SquaredExponential", "Nominal" -> 
                    "HammingDistance"}, "EstimationMethod" -> 
                  "MaximumPosterior", "OptimizationMethod" -> 
                  "SimulatedAnnealing", "SearchMethod" -> 
                  "SimulatedAnnealing", "InputFeatures" -> {}], 
                 TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 6], 
                 Association["ID" -> 220014122980201]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Standard deviation\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.433399976992021263`3.",StyleBox[
                   
                   TemplateBox[{"\" \[PlusMinus] \"", "Indeterminate"}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{"\"95% confidence interval: [\"", 
                  RowBox[{"-", "2.3158417847463239085`3.*^77"}], "\", \"", 
                  "2.3158417847463239085`3.*^77", "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", \
-2.3158417847463239085`3.*^77, ", ", 2.3158417847463239085`3.*^77, "]"}], 
                "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.6890646191649706376`3.",StyleBox[
                   
                   TemplateBox[{"\" \[PlusMinus] \"", "Indeterminate"}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{"\"95% confidence interval: [\"", 
                  RowBox[{"-", "2.6815615859885191222`3.*^154"}], "\", \"", 
                  "2.6815615859885191222`3.*^154", "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", \
-2.6815615859885191222`3.*^154, ", ", 2.6815615859885191222`3.*^154, "]"}], 
                "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "13.`",RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}],"milliseconds per example",FractionBox[
                "\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Predictor memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"210.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"3","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"3.37`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{5, 5}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.7257985055990458`*^9},ExpressionUUID->"b807d3dd-631b-430d-8b28-\
004ffe7564d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<a new example\>\"", ",", " ", "\"\<b\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725798548073639*^9, 
  3.725798565680724*^9}},ExpressionUUID->"c75cc232-3c03-4a4f-a68d-\
f75bf08213d6"],

Cell[BoxData["2.2666000318648734`"], "Output",
 CellChangeTimes->{
  3.7257985701235847`*^9},ExpressionUUID->"b5cf0686-a8aa-4ee3-a412-\
5eef37c9c35b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<age\>\"", "\[Rule]", "32"}], ",", " ", 
        RowBox[{"\"\<gender\>\"", "\[Rule]", "1"}]}], "|>"}], "\[Rule]", 
      "4.3"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<age\>\"", "\[Rule]", "41"}], ",", " ", 
        RowBox[{"\"\<gender\>\"", "\[Rule]", "2"}]}], "|>"}], "\[Rule]", 
      "1.2"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<age\>\"", "\[Rule]", "17"}], ",", " ", 
        RowBox[{"\"\<gender\>\"", "\[Rule]", "2"}]}], "|>"}], "\[Rule]", 
      "1.4"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<age\>\"", "\[Rule]", "11"}], ",", " ", 
        RowBox[{"\"\<gender\>\"", "\[Rule]", "1"}]}], "|>"}], "\[Rule]", 
      "5.1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", "trainingset", "]"}]}]}], "Input",
 CellChangeTimes->{{3.725798684994706*^9, 
  3.7257988813659544`*^9}},ExpressionUUID->"584c989a-b17b-4cee-a56b-\
cdbd47bc5a50"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257988882115183`*^9},ExpressionUUID->"2ad77b85-0d7d-46b3-a820-\
3f1b838e4954"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p", ",", " ", "FeatureTypes"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257990029557333`*^9, 
  3.725799017786463*^9}},ExpressionUUID->"8a55550c-7763-4202-8746-\
16ecb0a3c136"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"age\"\>", "\[Rule]", "\<\"Numerical\"\>"}], ",", 
   RowBox[{"\<\"gender\"\>", "\[Rule]", "\<\"Numerical\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.725799060020561*^9},ExpressionUUID->"f320df9c-da84-48bb-8a0a-\
9464ad7dd7f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"FeatureTypes", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<Nominal\>\""}], "|>"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257992311929007`*^9, 
  3.725799262371251*^9}},ExpressionUUID->"fc7a2c14-7d91-4c8f-8957-\
8c235d2f5f55"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257992727123766`*^9},ExpressionUUID->"ca5545dc-f32c-4fb9-b8bb-\
7fec1d85e715"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictorInformation", "[", 
  RowBox[{"p", ",", " ", "FeatureTypes"}], "]"}]], "Input",
 CellChangeTimes->{{3.725799290222187*^9, 
  3.725799302023379*^9}},ExpressionUUID->"2bbfe588-a2b3-4e9f-998a-\
56ffb4f08035"],

Cell[BoxData[
 RowBox[{"predictorInformation", "[", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "FeatureTypes"}], "]"}]], "Output",
 CellChangeTimes->{
  3.72579930305934*^9},ExpressionUUID->"ca94ea24-de49-4ed4-b7f7-37bd619a668b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "1.2"}], ",", " ", 
      RowBox[{"2", "\[Rule]", "1.4"}], ",", " ", 
      RowBox[{"3", "\[Rule]", "4.5"}], ",", " ", 
      RowBox[{"4", "\[Rule]", "6.8"}]}], "}"}], ",", " ", 
    RowBox[{"IndeterminateThreshold", "\[Rule]", "0.5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725800705598753*^9, 
  3.7258007577425194`*^9}},ExpressionUUID->"c212ec6e-fb8e-4c8c-af2d-\
bff9a0205605"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725800763891184*^9},ExpressionUUID->"9123b1ec-f706-4630-8a5d-\
b0b1a91e0e26"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"example", " ", "=", " ", "3.4"}], ";"}]], "Input",
 CellChangeTimes->{{3.725800803314602*^9, 
  3.7258008080698614`*^9}},ExpressionUUID->"91f40b9c-3512-4635-882a-\
e2d16f7f25d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdf", " ", "=", " ", 
  RowBox[{"PDF", "[", 
   RowBox[{"p", "[", 
    RowBox[{"example", ",", " ", "\"\<Distribution\>\""}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7258008363463464`*^9, 
  3.7258008660085073`*^9}},ExpressionUUID->"a3e8491b-aa1c-4ec1-8866-\
17108b8e864c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"#1", "-", "5.420000038987538`"}], "1.9177818554576294`"], 
       ")"}], "2"]}], "]"}], 
   RowBox[{"1.9177818554576294`", " ", 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]}]], "&"}]], "Output",
 CellChangeTimes->{
  3.7258008771637125`*^9},ExpressionUUID->"8fee9778-f675-406a-8846-\
27d3e13f3ee5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pdf", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "2", ",", " ", "8"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725800897326758*^9, 
  3.725800924520064*^9}},ExpressionUUID->"50e2bec5-0af7-4f43-894b-\
c7487218bee8"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nk8VN0bAPCJLNmKmXvJNsra8iYpkuU8JEsh6bWkUFmSpEiyJ1liKKKN
CtkKSYpJliIxcyUpSbYfhdcSWqQo/I6/7uf7mXvOnPOc53nOXXX4hI07D41G
419Coy0+b1mfWIEfYChjYPWAnYu+LB38WM9Lgw+3rNQ31+YivQrH7DgBGihn
9YxVUrmoc5WJFn05DV419Px615OLyB+yB1TkaSC1Q9pZZWkeSrpC5Vvo0SD5
UdKZf/fkochOZXQjkAZLCkPd28fzkIdb9/FN32jA+nyt4ZT6XXRI4UxS8fQS
uGu659zqFYVoVL2opH2UB4Tckjdqfr2Ptj4oqtzcyQt7JXMGaWdK0JP2TlZ3
z1IYJglf1Q2lqGFP9r6Nb/igpcrIW7LnEeI/feNLczs/7M++d9f4ZRkSFtzv
ldUhAErqM+k5bDbKmCgfVOAKQuayM23y1yqQWxiojDYvg/dFIcUfCyvRExc3
N5daIWCPUFk/cqtR68O9iUIlwiCaU635Pe0Zkik6GbJQKgJaO5yKxnueo6kZ
1SOZOaIwfsSx40lnLVqYFJFiFYjBq9B6rWfDdajFtvpRYeFyON6/PEB/7AW6
JhClUmW5AqRKsoOl2+qR89bnto0tK8AufLn/upcv0fhl7nk1c3GoucQfveJG
A7pSezS1+JU4tN7ZVvrxeCNi3j2R1mIpAUEhOm3W6zjo5BOjDJMGCYgzXctf
zOEgnoN9Yns4EtA+OJ28vomDUgTCw/dTElBTl3PzXjMHldtVOJ18LQHVzKz1
GW85aG5KXTatXQJUOok1gd0cFK8hd2N8SALeXslQ6p/koNyCX5dTBeigtVz7
KYvgos6bRTGfzOiwK0J/Qu0AF9GDdlhRO+lgrpBQzXTmIgvbXqLUgg5j/nyK
xEEuqhZdkXvOmg6T2uIP/rhyUWb4qRcKDnQI3sytZR/jIo+D22guR+jwVvtw
1FgwF31X5AR1RdPhbPQ8E13nonW0Q4YvYulwclhXWDCNi9y6ZwQL4+jwJKDv
XEs6F71PXXc9OJEOSybIFY4ZXPSE71L5yit0OMqwynfK46Lw/2x/2OfQIZU6
ECz/mIuECz97t9XRwbp7mBX1mouU5G0yS+vp0Pss15B8w0V6yc/fJTXQId/6
c2xeKxd5n7m1zZLC7zdw6+vauOj1dnvBhlY6CJ0r/T3SyUVJ3VQ2u48O12U0
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
       "]]},
     Annotation[#, "Charting`Private`Tag$1022158#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.0000001224489794`, 0.04241702871427445},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725800926145259*^9},ExpressionUUID->"98957421-16f2-481b-baf3-\
c988e9bbaa82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "1.2"}], ",", " ", 
      RowBox[{"2", "\[Rule]", "1.4"}], ",", " ", 
      RowBox[{"3", "\[Rule]", "4.5"}], ",", " ", 
      RowBox[{"4", "\[Rule]", "6.8"}]}], "}"}], ",", " ", 
    RowBox[{"IndeterminateThreshold", "\[Rule]", "0.5"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7258009556556563`*^9, 
  3.7258009612431774`*^9}},ExpressionUUID->"3ff611a9-654e-46fc-b633-\
56cc2eb1d821"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7258009642717876`*^9},ExpressionUUID->"1513375c-f0fa-48b4-b39e-\
63d26e625daf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"example", " ", "=", " ", "3.4"}], ";"}]], "Input",ExpressionUUID->\
"acebcfda-e76a-43ad-a1f5-33ab5cc377da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdf", " ", "=", " ", 
  RowBox[{"PDF", "[", 
   RowBox[{"p", "[", 
    RowBox[{"example", ",", " ", "\"\<Distribution\>\""}], "]"}], 
   "]"}]}]], "Input",ExpressionUUID->"0b60b85e-c775-4ad3-b8c3-e45389899201"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"#1", "-", "5.265995448304369`"}], "0.9452512893732948`"], 
       ")"}], "2"]}], "]"}], 
   RowBox[{"0.9452512893732948`", " ", 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]}]], "&"}]], "Output",
 CellChangeTimes->{
  3.725800980270677*^9},ExpressionUUID->"8ebc6ab0-c2e0-4223-8317-\
79ee4f1ffeeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pdf", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "2", ",", " ", "8"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",ExpressionUUID->\
"500fb4fd-fbbf-4b36-bcee-4a21ee673c56"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVlnk8lN8Xx8fYxlJhZiTLjBQVRSUlyTmhkpJooYhCiq9CtkKWkL3suxDa
LNlTWbKGFEqYh4pKSVQka+n3/P66r/fruec52+eee1daORqfoVIolBwuCuX/
a/ohRxFywWOZAnpVBUYwxjPMaeSm4I7LM+67241A89GJ7FB+Cv4do04sjhoB
sXLPVvoyCmbR/vRwrzMG8V/S5gosCm7Mpv00v2MMUfFtdw5oUrA9ViM6tOAw
XCXkIfkSBT1vv8l+NnQUuq6n0iy8KfhDLubkJ75jIKsj+krOj4KlWUPXNNYf
g5q8Pzb5wRSMfxRtHedxDBa8X4fVJlCw1u7CLJ+oCbiy/XuGyyg4LLPsmLKh
KdjaDJzfPEHBbvfAzR3zJ+BYh62F3m8KdmRLlAYomcEejYmDFnMUHPl0f1WI
uRkoiPBtDOPiwv8yDbOv1prB5ycqk0OiXLi4eGlQP9QcztAD3KM3c+Gtv3Ma
UestwKZ+ne9PFy6ssFnqlEucgiMbyhz5LnEh/En74jJ7CnSTtE5Je3PhvoJS
iYvip2H1hcO79AK5UHPZ+5JF49PwccUV7sw4LkyXTVxz6uVpsHLuDDYs50Ip
qRuifi+t4LSsR1ThNBeuS/kyuGraBjKnZjb6znOhJY/IZn6JM/Cu5VKX4SIX
7vc6NSylcQZOOHuKTfBScaJK24HwOQPG9VfiVJlUfMQwfFsiaAu6NoFJlapU
NA8IUBZYfxYU7kZn1jtRUX+lXdvyRDuw8RbbFetKRXmZInpurR3cOhQ7ZH2J
igyHDn6HETtgzcXJ8fpRkZP/XvCuhj0s10/K2XuDio+9KDqDQ/ZAG7t5t72A
inFaoTeidjjAqEp+Uc8oFbk9vAxmZBzhy6a+tXHfqRgZe+niEQNH+KTKk2U0
ScUtRZ4LE96O8H6beXT7HBXf/Sdv82PAEbpB+GI9jRtL9hl/+mvoBDWGDqqF
CtwYJCRSc3CFM0Q7rq8IsuJGYZEnSfTmi3Dd2VRZx5Ybv/7t30j/cBEiXAJv
U+y58ehT4eFtixfhmsdAgpczN3burt07sdUFPH0jPJz9uFHasz9k7X0XsLkx
pn7yJjfq75lafJHoCuoP8p9sIbjxc1gQ7+pod+g5O35C5x037o7mNfhS5g6u
ssrzRh+40WlJWcFAnzsURT9QdxzlRrsQ8VyLlR6w1rWk/N48N+aVCww2lXmA
xPbKBywpHuz7xGo9OnwJZusbsmnmPGj2ZHfWGkcvSPDi0Vl+igd1igL2ZCd7
wZYtuz/I2/BgyizfQ9NGL3DKbZbVceBB26RVf50lvWEkuDX9ijcPWq8KhzOt
3tB3oCNxMo0H6xUzDEM2+0BlDxE+8JYHO5vPb2tP9oOcWdH+3CEe3Ke49cL2
Yj+Iktyn6DjMg0UmQz4NLX5gZ/GwhWuc9G92PEt51g8kP8fyrvnDg7QnWstt
TP3B+/cBX2dJXmy7/uvsGdZVAEbtRT4TXpydBq+YugBYv3W6ruMEL+Y48EL3
QABImG4QTbbgxVezK9K2zgbAz9TUB0q2pP2Z6ZsnVQIhc9WlsUNuvFgyOLxF
PSMQqKqbbFNjeXE0PVZvR1AQNBtlH9/YyYsZ6ttnj/8XDIcVf3Tod/Oi8bGf
/LGRwTBI3bHnTB8vdtvWyc48CIb50lebUwZ5Ue7P8PJdv4NBWZwqzDPBi6HV
RMugfwgkEKdqekX5UIS7+otrdijYWrNW+R7mwydH99vJCUTArx32yckmfFh8
X6pZZFME+DEqlpWZ8eFQ1JN7KscjIKXJ4M+INR9e5p59/O9eBLxcc+WNsSsf
nsfvlO8GkbB1rD9YIZ4PVSPpmkoZ14HPLXnsRQ8frkTe7q1lUWDsFaXxhuDD
BQ/zqum2KLjpHxwy8I4PUzeMvOkcioKt191Wf/vMh5OMzTOvl0WD7R0jc9oM
HwrWu1yQOB8NzzgC7drL+bGw3nFd4foYCNHyzHtowo9qIZ1qhU9joVvXea7G
jB8/Gl96PEjEguz+c3ubLfnRb77u8MbfsVBpcuxj91l+HBG8KrdGMQ6+Om2W
mvTgR9Fsnma3+DjQzx4NW5/Ejw8a8GOeczwI0czss/r4MbBGM0xuVyLc9tA7
Zz3Aj1M2OaayJxMBv6jZyg/yo6dftrDG5URwbRaxuveFHy2l/rjUFSfCu8Dm
48XT/Nh6r8ZWbnUSFHFt3lfHoGGT/Q5JraXJcHSBtnboEA0fCCRJnJ1NgZ/2
0/LZR2hIvww9/BKpEEZ8XHXGlIY8x/ZMNm9LhZpHNeyvljS88mIsLtMjFdZe
cl0+cYGGbfPixQ2zqTA/9Z6PK5KGj99y7hGUdMj4XjEs20rDGcb5mp61GUAw
HglueUFDyVvWEf8ZZoD4jicqe7toaN0r+lfBPQMigmsvn+fQ0Kr3hpJYYwZc
km1Z8vgrDeNr78G7jZlwyJijdlhQAD9c5QTueJUJ1IqFoKD9Anh4eW/4itW3
wOYKKoy+EEDTkwGzy/lzYVx4+8LDLgEcN/m4dkYmF9zTNnUGvRHArn2rBr5u
yYXQJ3KeK98KoOZ+vwkB61wonON5aTomgDUCJz+oPc2FObdWt2eCgtjzO1Zu
t89tuH7BuClnryAe8cnfdVXgLlRa2thY1gmiwF4lvvMWeUCRoYlKNgmixfVF
1y+X82AfkVfd3SKICy+Em9zj84A48ktcv1MQN1DfK3S358HCvqutW94LYu3x
5rowzXzQ2pKpLPhXEDkpT6vH2QXQSBuYLVMXwsrA35ZV04XQVXw4UrBICBvD
eC/9vlgMj+WFT4uXCWFA/gatzsBiyElu3CJXKYTu99SwMqEY3P3VBrY/FcLq
nYM8RY+LQdJouZJdpxC6raz4qsVdAjY/iZZnP4XQaMXky4GEEphWtuIJ2iSM
sktulKxvKQWpfCevfyXCiB/Y6mmHK2Bqbs3ZzJwluJa6odrv9hP490NYIvz+
Usw538Fukq2DjqPVpXl5y5Ch8oIT3tAIifyBClUGIvh6tpc7yLUFLNSfHn3W
IYKqj4Qty0rbYTymNWDtPlGs/rBxQulMJ8TX2cUVtouiZOFhhnXqK2DfdUzp
MBDDZwoeJcHF3eBUqZ2xp1kMKXmUgQTvHqCeGlxq1CKG6hUSSt8DeiCW38fH
rE0Mn29wOLgrvAcqjj066fRSDAt7dReI5B74O6UindIjhjrvsg71V/RA2CaZ
5PHPYljpksYv9LMHcu/PxMTx03G71iiVYtkLRFr+tQ96dDzOMlCmK/cB/fLu
g236dFTg7H3crtoHB46+Y5YcoCNfk6mn//Y+qF4ikut/iI5yA5nXBnT7INPH
pUHWlI6J9HRLU7M+sD2lQbE8S8fbDkKp1sF9MLmq5XJ/EB1XuOQvLejvAyXK
6V0NwXR8sS03qGmwD2wG5mh5oXRs/XaivG+4D97EKSV5RtLR8vDpjT9+9EEl
742KFfF03PvgkMoANwd8vhz9ZZJDRwc3N5VSRQ4I5X106K6n4/MfiZ80XTmw
mmWcWdJIx9hbXwNuXOKAZvTT11HNdPy6Nen2gDcHHDzSNQza6EgZ/2VnG8SB
lzomtOYuOgqV1MdtS+BA1EBb9sNBOvrwWH15UcEB5tISImWRjvMzPbkVvzig
7C+79DKFga+fXlxxZIYDe6au7zKhMnDTs6yKb/MccCf+u0vnY+CYhY+1AJWA
vtvy7hFLGOin5oSLywhIgWRRH2kGJkSov3uuSADb2U/vtAYDbVgLap/NCAiB
y8vOaTLQaWfHZqolAT+XXOy5oMXA75ZWc+JWBNTft7bx1magaLkJR/EcATaf
9vgl6jPwz/rWtAUXAu6bLKl8cYKB+kpP+MnhBnQFPt9ucwbOz8+4fI4gwHtq
cXe/BQOzIyevXrtBgEH0z9cjVgx0aNriVxRH+mt7/YP7Pwb27ep8nHeTgK1a
KWs0vBhoZNJktrOYgAzh2O94hYF2JnNT50sJoPWHl+/1ZSAtiiaSWE4Ax+OK
ztEABmYOnWh89Yj0V3zK0imcgR6Nmb9+1BHwyfe4gkck+X3LEbtPDaT/g8bj
V26Q+S5rN+5qIoD1TccrPJaBB4PcPeNaCahbvSbxdioDuS5L/aztJEDxF9ui
IJ2MJ0ex1+MVATF1EvJlGWR+k77ya7vJelgIltZlk/lJq0869xLAlzT+ciCP
gaFvP6++/5YAR9vP8R8LGMiLVLb8e7I/W96bjz5goJLXVbekQQLudXWOzpQy
0NOwavO5jwQcECrjo1cxkOh42Z43QoD50rvyM9UMDL9Gi+j+SoCDaJpufy0D
40u3pk2PEhC+PPBqdgMDo2pE8hXGCWhbdWRR9TmpFz41l60TBBAKejISLxio
LmiXvW6SgNF1mpp/XjIwePQwS/wXAYIbV3s2vmIgy/f6BDFFwD7Nqd9HCAYK
RDsv0GcJMIURxvYBBn7mZzh2kXxOe0BV5h0DU8yc1obMkfrRa3QeHiL9ZW2z
H5onIGl/ZVTrRwY+LMqYCFgg4O7B/AcFwwx07HlSxf5DQMuRuHG3rwycFteW
1vlL1sMkRPjENwZq3+160EbyyAlvJa1xBp7TOhW0f5GA2ZNO+nI/GKiqFpnW
RDL/aRs7vgkG7p/+M6X+jwBxG9OQ0UkGls2ZXs8lWeHsgTsvpxio0mx4TojS
D3vObxlOmCXrtXJooJ7kY05rebzmGbhHaNKdwdUPti7Sqyz/MHCva9ghS5Ld
3UW0dRYZeHPzRbtskoMu85xeQ2Gi9Ab3ukGS47xnfYWoTIw3O2e6nNoPOb5j
N39wM1HuGVt5L8llVwerX/MyUT/skrYTyY1B3QMP+Zm4retwfAzJ3SEtC6kC
TORwEhUKSf4UXiXpJ8REoSmV6XqSp64XbbdZwsQsf2GeLpJ5YnJM9ZYxMXxa
7lAfyYz4JI/1okzs7TtP/J9XJ0UkiNCZWPV07NYrkrek+pVPMZiYYppzr4lk
nZuu3X3iTJwyv/m9mGTjrHO/qiSYaJv21TmRZKscc7EsSSZGziSrupN88c6h
TUHS5P5TLaoHSb56X/eQHYuJvwZiLrJJjilQdzSQZWKwv/TPr2Q9bhWtv75J
jonr3CPzC0guKZUtYK5mYvIvsbv2JNdXMNrn5Jl4X+f9B1mSXz2ifXu7homU
unUnO8l+fKj6I1C/jomtPcrLL5M8Wftz7W0lJrpSNopKkczV8Glv2AYmnm51
2V9B9lekuc/2ggoTA9t3N+uTLNvaHmS8iYmCZdP+faQ+sKOsQVKNiTlyRtXv
ST1lblB1X7ONiYyPrvcMSKZEFK/dsp2JUqPR90tJPdbpFUYa7GTiw0tvx8+S
epW7sx5PABkfbtxUQer5Km/epO0ush/PG8P/kHrXrr9j4rebiWLb9UKdyfNw
S1ZBMHIvE/v+xWzInCGA6ptTlbyPiV+Me781T5Pzc0fWylIDJtY1H3r0hzxf
OuUp34aPMvHi+ruFAuT5zKGvuDlpwsQjiyrb534QwHMx8dC/40z0qDv/afA7
AY3KceUSFkzUyR3LTBojQPdupO9+WyaeCMh5ee8Lac8nvNn0HBMdVpt6nfhM
2p8J+2RjT+Zfv82Ie5iAppXB+3wuMHHeVf3Kzg8E7En1oxe7M3Fo7fjs4QEC
bs8tNlVfYqLSah/RZoKcX6ZXLrV5MrGx/OzJjRwCnjE83370If9nPBA3/oYA
vesud8SDmfhv2fh9wQ4C9P1td3gnMjHx7eDLzlryPnj/aTwkmYkbTz191VxN
zhct68z4VCbOdpxZVf6EgOfzlrwPMpgou0GvxPMhOe9cj3cM3SH9iTQ/vldI
zuezB6z3VjJxrdoqleRUAiLMM/31HzPRTSfniWwyAe1GUxkGVWQ9J6QWMhNI
e820gcNPmWjUa54aHk3GIzp29FQLEz+Hu6QLBJPxPgnXu9zHRJvh8fT7TuS8
Knpv600wsVaN37rmPDmPclWDfAeYuPO2z782ewL2RvXXBQ2S50fPseWlDVmv
M0o7YkbIeHh/DPqZkvVf9nxD3iwTswNmXKK1CAjkYR8onGfi7QfTH1V3kP2a
u2hf/IeJ9fOhRzu2kf3+JHnnIUUcz6s/1ZvYSOrnkb1sI00cZZhfa4fkSL1a
C9LfSojjpi3ywR68BGg+3De7dLs4Pl+w141o4sCqoaQLPzTEUeXgwYz0Og4I
Co186tAURy2zNZr3qjnQZ3GtKwrFkU9DZO+Dcg648DXcF9MTxzrWyIR7Lgfu
H9U8KW4ijp7HjdbNBHBAYkq5XsZNHD+8kTzQqcmBXxsZEeuLxdHd8KRays0+
UKwYj1crFccj6+LtPyT1gdWOZxla5eKY2tLZvTq2Dzp3e5YeeiSOO1uFzZLI
91b+iUHCtU4cr0FgiYYT+R4LzF9X3SWOVSNmj5ywD4he3WcGk+JY4YV7Ggd6
od7HjeqouhzHPJsM5fl64fh0tgd/wXLUHVy8y7f3DbySV/+gsVoC7602b6We
eQ0266xVYnMlMKml98jjnV1QfczMaxdrBcpYRBxmnH0JKqaj9xhZK3CGP/TO
62VtcC5gT+9OKUnkGu8Ps1RthkBb2jxXrCRef3/dn1lYD49kTv8bZUih9I9+
TsDFGihfvMateF0K/SQ2TjTWVkLYxMrYbVFSWBNd+O3R3Uqw+FQltztGCqs6
dkhXR1cCX9vkrlMJUii8NUH2u3UlmMZb+CXclEJBBYEn87RKmFfa+pf6QArD
RN1Ua44+BDw+PN3fIYURpdE3vs2VQ1upzmikqDQ+9XM/nuNQCj47y4aj6dL4
7F+9nvfxUtj8bPVQPFMao+MO3Dq9pxRSCN6+9BXS6PD9v7AjsqVgx9XSVLBS
Ggentn4lukuAZngg68UmaeQ68DbhLJbAntEjpkuMpZFf2DnTYWUx1MnaNkfE
SOOoldTRN4xCkH7fteJCnDReSvtVrjRTAO7pO88bJkijy13J34mcAlgvyWSI
pUjjjcQTk8U3CyCJ3ng6MUsa1csb5L6tKwAnPrm/WUXSmLb78VIH3XyQHXur
+vClNAaFeI+6hN4Hv4dHs4YEZTDkkXrGoNEdWN+1P+SbsAy+k6R9t952B3pH
dzn+XiqDsW5aKYvSd0CZpbxTgC6DdZW9by+P3Ib+QD7ORikZfN72ofua323Y
avxQxE9JBjU50oE/y3JhbEzCj3VABj0ihZOLlXPAVG7AwixSBsNlYwoNrLPg
vtOLdO0bMijysRaKDLPgb03NwLpoGZxK9o5drZkFt8yyTszGyaCh3dRxbWYW
jMXZHotPk8EY+4LdRi2Z4Mc/YdCRJ4M8rjz3Sjdlwt0x3p06bTLooHaxOEju
JsxrzHgptsvg8eOMV7H/0sEgdOSx6EsZ7Bky/FI/kA6T8s/VB7tk0G79v7SA
xHTQtIzacoUjg+kVXL8ilqZDZ5fk+ocjMpgRU6RWQE2DmQoVKSV+Fh4tSXOO
paaAYtp0E02Ahd9/HHqq+ikZzP2rnT4LspDrmiNONCXD0/37m7OWsjD61u7g
htBkCBm0dZYQZ+EK9ZUiDWLJICF48xmvPAsbPEskZRSTQP2ksOugNguvbhYa
Lj+fAPbar1k1uixUeBXztcc4AdLWpLSm7mHh7EnrCjH1BKBMrmGb6LOQMu9m
TlAToOWaTtsLIxbKj+g23kmOB9MiT9knp1gYmVN9UrE9Di5xf22P92GhUOIt
G33dWJjX0RBK82PhtbwNyjcVY+FKYPi+W1dZSF0YKl8qGkvep8rNhddY+N/S
iczd72IgnN+l9tl1Fkq9tTakecbATaG/xXM3Wag6HeXSXhENTXTRxJO1LPzh
VJKRrxsFekes3ljXsbB9/cALe+UoaIsrpds3sHChF19pS0TBS+axKPdnLDTP
fsvr13cD+panht7oYKF4fgiDo3gDxqTkveves7C/s4bnd18kiK3eflqewkbV
fj/V9OPhoJkcNEOjstF/7rJli1o4nFn6KnKMm43Dbn8fS4mFQ+Ws/eNSfjaK
nKS6aTwPA4sXaXTtZWy0SpZYcwTC4L47pdmCRbLhgh6hHArarc8UkzTZuEG7
c4mOYjA4aDHqvLTYeGDKrGqTUDDEl54ysUQ22nnkmeuOXYOR9LkABV02Jjrp
/eguvAbXLyq9LdvPxmzBda0ZateAkLpxo+sEGxVOWn2v3RcELheOTQleZqOu
SUKCfngASGy1aVHwYmNmLM8r8/MBUPXXOU37ChuNdqQMJhgGAF9kpK6nP5lv
rdgLf0YApOQ1xn0NZePjTkNt5cyrUD+yWa0lhY2TBjhVVeMPYtbL3IOq2MiW
PyYYs9wPHirK6GfVsDHWgV6R9scXzCcVWdVP2ehhGthyos0XbvvvaZ5qZGOR
8F/abVtf0Mi8Im7zgo39cyZ+Trd8wOrttwrtd2x8/kZfL0bhCvDnzoVZDLLx
USF7YuesN+Q78Ft6fmBj9Qb9vYpt3jC9IMdf8pmN6kV5rxoueEOY5AmTlT/Y
mGpfenjysReofDirtHOCjY6NDw6nXveC7ntu/0x/sdHiK0/5VSsvYG2PvhM1
w8aP8Us9hYS8oIGS4ZU/x8auHb4G+e894VxLvmHLAhvfDT09HVbmCcJRj1d9
+kvul9NxzA31hGKTlpl//9jo1/pA+a+FJ/wP26TqLA==
       "]]},
     Annotation[#, "Charting`Private`Tag$1024695#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.0000001224489794`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.72580099171635*^9},ExpressionUUID->"c49574f3-1e0d-45bc-8e11-b34aadad2928"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", "example", "]"}]], "Input",
 CellChangeTimes->{{3.725801035429489*^9, 
  3.7258010385612755`*^9}},ExpressionUUID->"a3020878-7279-4373-bd6f-\
367de60c2273"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{
  3.7258010408822217`*^9},ExpressionUUID->"0c5abb73-0114-43a3-ae34-\
0594c34cf597"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"example", ",", 
   RowBox[{"IndeterminateThreshold", "\[Rule]", "0."}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725801044998204*^9, 
  3.7258010614889536`*^9}},ExpressionUUID->"437ca58a-7c8c-467b-bc32-\
2350bedabbe0"],

Cell[BoxData["5.265995448304369`"], "Output",
 CellChangeTimes->{
  3.7258010626851597`*^9},ExpressionUUID->"8c34da08-4c32-43c6-92af-\
5ee3a52ff1de"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "5", ",", "8", ",", "9", ",", "7"}], 
     "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.72580113029399*^9, 
  3.725801158223715*^9}},ExpressionUUID->"33fc67d3-db86-4cfb-a39c-\
4352e282df7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linear", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725801170813752*^9, 
  3.7258011993432884`*^9}},ExpressionUUID->"a79c6483-2cb3-4cf6-9b51-\
e048712b738e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7258012015605597`*^9},ExpressionUUID->"c30e1614-f802-4a01-ac14-\
9a75790f936c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", " ", "\"\<NearestNeighbors\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725801228749047*^9, 
  3.7258012540563297`*^9}},ExpressionUUID->"195e7efd-c582-4570-8617-\
f0bf7d030fac"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.72580125815876*^9},ExpressionUUID->"e1e29d28-e174-4b3d-ba2d-d64d3bd9bce1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"linear", "[", "x", "]"}], ",", " ", 
     RowBox[{"nn", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "7"}], "}"}], ",", " ", 
   RowBox[{"Exclusions", "-", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7258012685700517`*^9, 
  3.725801295917898*^9}},ExpressionUUID->"709178dd-5ff6-462a-8a21-\
7ff9d5358c00"],

Cell[BoxData[
 TemplateBox[{
  "Plot","nonopt",
   "\"Options expected (instead of \\!\\(\\*RowBox[{\\\"Exclusions\\\", \\\"-\
\\\", \\\"None\\\"}]\\)) beyond position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"linear\\\", \\\"[\\\", \\\"x\\\", \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"nn\\\", \\\"[\\\", \\\"x\\\", \\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\
\"7\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Exclusions\\\", \\\"-\\\", \
\\\"None\\\"}]}], \\\"]\\\"}]\\). An option must be a rule or a list of \
rules.\"",2,360,54,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725801297437498*^9},ExpressionUUID->"921cbe02-02f5-4604-b32d-\
e6c3bafa4962"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"linear", "[", "x", "]"}], ",", 
     RowBox[{"nn", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "7"}], "}"}], ",", 
   RowBox[{"Exclusions", "-", "None"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7258012974449773`*^9},ExpressionUUID->"32d86dcf-e38a-4fec-8204-\
37352385f91e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"linear", "[", "x", "]"}], ",", " ", 
     RowBox[{"nn", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "7"}], "}"}], ",", " ", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7258012685700517`*^9, 
  3.7258013165420685`*^9}},ExpressionUUID->"85fd565a-73a2-4b94-9f1d-\
b3c26bbb3450"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVjn0w1HkAh5eSl3Sst11+rKxfISrlTCG+n4SRaouQDYWQ14l04rwUrkid
tqNFL947L8m1uWhQpjKU0wzKW47epBNX7XLasOfcH5955vnjmfkYBR3zCJFn
MBh7lvY/S31uNmZZZDjUqgjXS5wlpGJOJ71cGEi2fvxetM9dQvacVzBLEcaS
qpRZQZ2fhJQ9T14IF6aRArewsog4Cek6uTU0QHiJXOtnNb8rkZA3O3Wu+gpL
iaCs0LVvXkKmNp+x5gtFxPNTa2ujaJrEVrbI+wgfEtWEwfIUg3/Ihg23Cu/s
7yXBl71j7DZLiXmrOCbVdph4qOX7/a4xT+QyuyN3zb0hBz1WcJvHZKQ6z2OL
QsM4qS0b5MwlMiBM2Vv2ZvUkSbl+NuTEBzm0dsXfiPz4mTga+NZlxi1D5H0z
6TOehFzzfKAaJF0OdrpX9NdTM8Tm6Mpe3SMr8C5RWHfy9SwZrIiejJhSxL5X
eeQc+xtxabKoLvRVhtVM9Ey08zy5n61ILj5WgfU2vx+qS2XE0orB4LipYkis
6BLft0hi6r1CshtWgRcdLN6tLwfLu04qgu1qiLC54+7qKg/ZvcoddUHqONAy
ylcNWIbMOgO3DBYTLwa1nyRdXI7u4IAvFcNMcGvNR+trFCCX2RN29xcNLLJ3
H8wfWQHBqS9JGnxN5I/ww8ZUlNDXWSvrpbTA4Ltw5oyVUZyfsDu9RwvSaHvb
Zk8VPLWVWKcKtfHQRvNfp9iVWGPiIAnj6cDZv3//1ixV9CcpsRvlWeDrVagN
LP3udIh66d7OgkPOvjiHnu/wp71J5HAyG0PPMoqq5NQRv/5sschRF7EM767x
fHWU315jNblcD8dzWDxlmgl2tkaRZpMebMNH0+VamJi0uVWelUohsjhv5ehO
DThHHoifstZHYtp2/88vNPBT8Iam+gl97L09HdgfqYkMTu/1jloD/Gx7ualU
qon3V0xJZxAHucxt7Y6XtJCd1pGna2oIeafeNU8MteG96H3nwGtD8LiHeek3
tSFxHC5IdluNoD1iM40dOigIja2Kq12N0efH+We7dZBbY7/2raIRuJXf7LrD
WfjjYu7YbIQRdqw9+YHHYMOEp3bIvssIzxhj46ILbPRbPHSeX8uFoal34Uda
F2fSbBMOn+NiqKaxWLFeF+1Gtd/ZvecidkjtGN9BD38fS4twJcbo9owWn+7T
Q0522cJ8iTEKzJs6LgRRcLmyRdFkwRiDEyfy5EMoOIkYRg9kxmBXbQxMOErh
9PR5S69FYxTSN+aORFFINuIEZ8jTuGIgWG8XT0H8vL3hlRKNq2qhuRPnKFxb
5R1aoE2jaJp52EVEIWpAelt5I41RUZd5Sz0Fi8eLL0osaXBiMqWbGiiEKZwf
27KZRvHUwiWDZgrlh16tCrWmUfL+Q9tMGwUWMyvgkR2N0oH768oHKTxyY6kn
udJ4eznhK3uYwrZ7wdoabjS4nlZtOSMUFsojbap30SjrrvL/8S0FaY8saoC3
5E9zBe5TFGp+C7tr5bXUZ/L8Oz5RGBdPt3V6L/UuyuvsxRR+HZn7K9CHRvmj
1MemsxQ4QUwlgS+NsdM2giIpBf3El0Ym/jRoMuOnNU/Bpzlk04NDNIJldWbZ
MgrsyigvrwAaFc3hs4uLFDwnvgZPBdL4D84fHe0=
       "]]},
     Annotation[#, "Charting`Private`Tag$1031045#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFzllQUwcUBuCbEIgGSoISQaxsJirCSF2oGjHclhhBMKxaUmGkmeqAIWKo
YmPrlkihqCwDJuLG4CjgXsIYpkAbUUalQE0REEaJUixYKkqA0iCEW/rQcx7O
/PO9/P/xkaXH7qQTBJEyc/9lWcL1mpwAjfA2O4JGEAzyzcqsIKm2KuR/Kyvq
6QnaBvDy5TdL9HFtYH+jZe9hwTMwLdskj3jfC75aHLvG3tAP1h6KutTr/RfY
2JJ5RT74Diz/yc/aKhkBu6u3Kv45MgbuU2lvHXg5Do5+URzyvfsEeNWYYkyx
cRIcFJy4/2qZDcx00/fk102Duy1McWYHBfaeGJLlv0bvItqPVE6iGepF2Wfp
BJkdPmWjKDbZaZf0azITXZml5S5xQquYpsQhDtrobFA58ND2885rvdagC3kp
ppgk9MJVq1nHNeiPo1sOvX6Mlii+tER+SAMnxp0o26xH716njwkLo4M/qzdL
nZLtwO1d3Eff5DPAvjf8zdXX7MEFv68/zxc5gCn3yM91PWh+7uMLg0uZ4IjJ
2N4N+9DmalfNQAlamdbJKzSia8Nq/t7ZhmbwzzwQ/IH2K5oVeOUtWkJT6dhW
dPLaqubGKXRG+p+UijaLVHxtmfF88ni5z+pAB7SuR5ryioWOXBAdmq5DE1Kx
5/tFs8FWxQZBXTwL3LBu7rRI6QjemNQZtzbHCSz1uMx+avgA++MPNrBEzmBh
XvRXwt/Q52J+5t9fyMY914CuTbvR5eOyFbkF6K1dJbktBnRAeFDNUBOaUWvq
c+5B783wPFjaj362LI3z0TCawyzabh1Di/t+LL87gf7W+NKSM43ubtVcrKRx
yEab3Yy9Sf5A2p2HkWglsa2lX4fOyHOTzOa5gAWpZjWtHi0vLXY0h88Bq459
kvSuHR31w+gXnfK54D37Rc7BevQpwenaMit6sOO+kDGJFitH7u2yoS85+Wxq
otDTFVHN/nRXMoG7eYqivEiD+caTYQf0Hi7r+R1HtFnd+CaEi5YMH7Y1eaID
m0c9zSvQnPIUckSEbtseq/GQo4tcgh98Woj+ZRkzM6sLTRe18R95cXHPd4dE
fR0t22LxmxM6D/97kiH9zoT2rZhYb0p1A4cuPjAgIdzBrcSr/qqTaK+l20oG
efPB3ddqSpnVaGU3O10q9ACb4hWWox3oM/61D0/KFoAvjrrsEFehL9eljlMU
+l/zlBc/
       "]]},
     Annotation[#, "Charting`Private`Tag$1031045#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7}, {0., 10.191256671202304`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725801319395505*^9},ExpressionUUID->"fa5e61a2-97ee-402d-af4d-\
b5da668854bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<BostonHomes\>\""}], 
      "}"}], ",", " ", "\"\<TrainingData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258013979261684`*^9, 
  3.7258014337396307`*^9}},ExpressionUUID->"fb722483-40f0-4715-bf6b-\
4856c290c316"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7258015097445426`*^9, 
  3.725801542283785*^9}},ExpressionUUID->"575366d4-413b-4e63-8b6b-\
5b01947fc23c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["338", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725801558817532*^9},ExpressionUUID->"ef396c76-1d66-4a2c-8d87-\
2a63c7aecbf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<BostonHomes\>\""}], 
      "}"}], ",", " ", "\"\<TestData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"p1", ",", " ", "testset", ",", " ", "\"\<StandardDeviation\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7258016074585066`*^9, 
  3.7258017034848146`*^9}},ExpressionUUID->"784fc011-1b49-4474-a2b0-\
fa0b9b33d6a0"],

Cell[BoxData["3.833068124762637`"], "Output",
 CellChangeTimes->{
  3.7258017155141172`*^9},ExpressionUUID->"3f0bf029-1122-4eb5-be81-\
729ddd339f79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725801769591092*^9, 
  3.7258017956947374`*^9}},ExpressionUUID->"1c12b8ee-aad5-4b14-89c2-\
2dab4aef6be8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["338", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7258018179962063`*^9},ExpressionUUID->"84aab1c8-ec99-4d33-a311-\
41a4dece88d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"p2", ",", " ", "testset", ",", " ", "\"\<StandardDeviation\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7258018072832975`*^9, 
  3.725801844698001*^9}},ExpressionUUID->"1ae6b329-7321-499e-ac52-\
caf932be74aa"],

Cell[BoxData["5.645434097883092`"], "Output",
 CellChangeTimes->{
  3.725801856937601*^9},ExpressionUUID->"8d9d143f-649e-49dd-8eb9-\
d398248fddd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PredictorInformation", "[", 
   RowBox[{"#", ",", " ", "\"\<TrainingTime\>\""}], "]"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"p1", ",", " ", "p2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.725801869670086*^9, 
  3.725801908307787*^9}},ExpressionUUID->"603045a1-57f8-4acc-af24-\
d612f8de6aeb"],

Cell[BoxData[
 TemplateBox[{
  "PredictorInformation","wrgarg",
   "\"Input should be a \\!\\(\\*RowBox[{\\\"PredictorFunction\\\"}]\\)\"",2,
   368,56,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725801910010152*^9},ExpressionUUID->"9e70e715-0540-4553-abcd-\
7903261b6a97"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"PredictorInformation", "[", 
     RowBox[{"#1", ",", "\<\"TrainingTime\"\>"}], "]"}], "[", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["PredictorFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                   AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {All, All}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{1, 1}, {1, 1}}, 
                   Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                   FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                   AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {All, All}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{1, 1}, {1, 1}}, 
                   Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                   FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["338", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "]"}], ",", 
   RowBox[{
    RowBox[{"PredictorInformation", "[", 
     RowBox[{"#1", ",", "\<\"TrainingTime\"\>"}], "]"}], "[", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["PredictorFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                   AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {All, All}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{1, 1}, {1, 1}}, 
                   Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                   FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                   AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {All, All}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{1, 1}, {1, 1}}, 
                   Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                   FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["338", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7258019100873685`*^9},ExpressionUUID->"14ac9a85-35be-4df0-ac54-\
8f6ddfde7e8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PredictorInformation", "[", 
    RowBox[{"#", ",", " ", "\"\<TrainingTime\>\""}], "]"}], "&"}], " ", "/@", 
  " ", 
  RowBox[{"{", 
   RowBox[{"p1", ",", " ", "p2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.725801869670086*^9, 
  3.7258019287162256`*^9}},ExpressionUUID->"6ad41528-ec10-4a30-baf5-\
b5e0d081eaed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"12.199328554175484`","\"s\"","seconds","\"Seconds\""},
    "Quantity"], ",", 
   TemplateBox[{"12.156023950778696`","\"s\"","seconds","\"Seconds\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7258019302087865`*^9},ExpressionUUID->"dc34d1b0-4cdb-42e6-a42f-\
87d1bc9fbdec"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
      "8", ",", "9"}], "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8", ",", "9"}], "}"}], "^", "4"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.725801953143074*^9, 
  3.725801953192711*^9}},ExpressionUUID->"f156e0df-03e3-4d6c-bea1-\
d2ff8a3c7cc8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"neural", ",", " ", "linear", ",", " ", "gaussprocess"}], "}"}], 
  " ", "=", " ", 
  RowBox[{
   RowBox[{"Predict", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"Method", "\[Rule]", "#"}]}], "]"}], 
   "&"}]}], "\[IndentingNewLine]", 
 RowBox[{"/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<NeuralNetwork\>\"", ",", " ", "\"\<LinearRegression\>\"", ",", " ", 
    "\"\<GaussianProcess\>\""}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.725802027419443*^9, 3.725802089191423*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"e0a0674e-fa2e-490e-9554-1843cd5cf51c"],

Cell[BoxData[
 TemplateBox[{
  "Set","shape",
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"neural\\\", \\\",\\\", \\\
\"linear\\\", \\\",\\\", \\\"gaussprocess\\\"}], \\\"}\\\"}]\\) and \
\\!\\(\\*RowBox[{RowBox[{\\\"Predict\\\", \\\"[\\\", RowBox[{\\\"data\\\", \\\
\",\\\", RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \\\"#1\\\"}]}], \
\\\"]\\\"}], \\\"&\\\"}]\\) are not the same shape.\"",2,372,57,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725802095809758*^9},ExpressionUUID->"a5057a3d-180d-4c02-8ed1-\
6ecd8572dcd1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Predict", "[", 
   RowBox[{"data", ",", 
    RowBox[{"Method", "\[Rule]", "#1"}]}], "]"}], "&"}]], "Output",
 CellChangeTimes->{
  3.725802095816778*^9},ExpressionUUID->"8a5732b4-1f63-4edf-b8a9-\
ec36f6f9e781"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"neural", ",", "linear", ",", "gaussprocess"}], "}"}], " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Predict", "[", 
     RowBox[{"data", ",", 
      RowBox[{"Method", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
    "\"\<NeuralNetwork\>\"", ",", "\"\<LinearRegression\>\"", ",", 
     "\"\<GaussianProcess\>\""}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.725802027419443*^9, 3.725802101658493*^9}, {
  3.725802143816278*^9, 
  3.725802192814968*^9}},ExpressionUUID->"2f8be6ec-edb1-41bd-9ff6-\
a928e7dcc164"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["9", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["9", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["9", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7258022122477517`*^9},ExpressionUUID->"1975d612-87bc-46a3-91b6-\
cb182832778b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"LostPlot", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"neural", "[", "x", "]"}], ",", " ", 
       RowBox[{"linear", "[", "x", "]"}], ",", " ", 
       RowBox[{"gaussprocess", "[", "x", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
     RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7258022392695494`*^9, 
  3.725802309057438*^9}},ExpressionUUID->"bfd57d4b-b926-4c61-951e-\
1d4d04056b1b"],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"LostPlot\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"16\\\", \\\",\
\\\", \\\"81\\\", \\\",\\\", \\\"256\\\", \\\",\\\", \\\"625\\\", \\\",\\\", \
\\\"1296\\\", \\\",\\\", \\\"2401\\\", \\\",\\\", \\\"4096\\\", \\\",\\\", \\\
\"6561\\\"}], \\\"}\\\"}], \\\"]\\\"}], \\\",\\\", \
GraphicsBox[List[List[List[List[], List[], \
TagBox[List[Directive[Skeleton[3]], LineBox[Skeleton[1]]], \
Function[Annotation[Slot[1], \\\"Charting`Private`Tag$11953#1\\\"]]], \
TagBox[List[Directive[Skeleton[3]], LineBox[Skeleton[1]]], \
Function[Annotation[Slot[1], \\\"Charting`Private`Tag$11953#2\\\"]]], \
TagBox[List[Directive[Skeleton[3]], LineBox[Skeleton[1]]], \
Function[Annotation[Slot[1], \\\"Charting`Private`Tag$11953#3\\\"]]]]], \
List[], List[]], List[Rule[DisplayFunction, Identity], Rule[Ticks, \
List[Automatic, Automatic]], Rule[AxesOrigin, List[0, 0]], Rule[FrameTicks, \
List[List[Automatic, Charting`ScaledFrameTicks[List[Skeleton[2]]]], \
List[Automatic, Charting`ScaledFrameTicks[List[Skeleton[2]]]]]], \
Rule[GridLines, List[None, None]], Rule[DisplayFunction, Identity], \
Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.05`], Scaled[0.05`]]]], Rule[PlotRangeClipping, True], \
Rule[ImagePadding, All], Rule[DisplayFunction, Identity], Rule[AspectRatio, \
NCache[Power[GoldenRatio, -1], 0.6180339887498948`]], Rule[Axes, List[True, \
True]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, List[0, 0]], \
RuleDelayed[DisplayFunction, Identity], Rule[Frame, List[List[False, False], \
List[False, False]]], Rule[FrameLabel, List[List[None, None], List[None, \
None]]], Rule[FrameTicks, List[List[Automatic, Automatic], List[Automatic, \
Automatic]]], Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, \
List[Rule[\\\"DefaultBoundaryStyle\\\", Automatic], Rule[\\\"DefaultMeshStyle\
\\\", AbsolutePointSize[6]], Rule[\\\"ScalingFunctions\\\", None], \
Rule[\\\"CoordinatesToolOptions\\\", List[Rule[Skeleton[2]], \
Rule[Skeleton[2]]]]]], Rule[PlotRange, List[List[0, 10], \
List[-629.5653615842352`, 9272.761295682809`]]], Rule[PlotRangeClipping, \
True], Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.02`], Scaled[0.02`]]]], Rule[Ticks, List[Automatic, \
Automatic]]]]}], \\\"]\\\"}]\\).\"",2,374,60,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725802322041557*^9},ExpressionUUID->"77da190a-2388-4678-a166-\
8974926abf83"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"LostPlot", "[", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "16", ",", "81", ",", "256", ",", "625", ",", "1296", ",", 
      "2401", ",", "4096", ",", "6561"}], "}"}], "]"}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
kiCHUJXq4f+nKJXn
         "]]},
       Annotation[#, "Charting`Private`Tag$11953#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwVz2s0lAkAh/Fxawstk9iEMeMVZWhz9rBq6f2jXSK2SGW6MbmVCJkI1bjF
rFWT60SzY4zrWySHzpZNk0giFVttjWRdUqTESi6tbT885/f5YXGPeAUq02g0
jy/9r/gkd5F1QMbGvuhTAy8aneXN3cwtO5kHyT52lbOarbN84U5jMpN5nCx6
cNnBtMpJLpZnGqsxBSTfoi//UKGj/LADL2za+DwJeaLo3fuN8u65kJxx40qS
n/xMRZ9rK/9K0W8+ZnyNpDUlFM7q68ql9ySRo8ZtJE2A443j9qi+LFAcXvuc
HJeRKTZ3fRFMPjr/NmqALCprmGj7NRDhQ2sG6qrfkDWdy9d9XhIOdVaK+Uu7
cbJocK1mreQozmi3W0j9JsmHoaskDaMx4Cq231Tp+Ehqs60Te7MTENmSwj1i
PkuKTBamWdl8XInQ9F6x+TNpu/TLfn0SpPGhI+t20rDpB07EiGoqkiTz2/55
qwT20WEvvlUaaN19+CNOBbaX7DnfuwtgFh0Uu91CDTWrR1tm8zIwOJW/Q+PG
ImzdHdh6sCETbkOHTmRFLkZNyIW8iUVCeA4K2QyGOiLirr6VW5zDyG0u/26V
Bh4GbFMMbsjCWvoTI+f9S2ErvmKkxc2GOjnl3zP5NfxU9y85y8uByxhn2sRH
GwcPqNnpFuXir6YAJY4lHaq3tWbYLXmoT2/ex5yiQzmLFiF6ko8gNV5fZ+cy
tFulsDQWRDgQFV+vWaCDRE9WZrdOAb4NZndu8V8OcN6ftiQK8WCZpQZvvS68
XJNvZmy+gIbqpEJLFT3cLf1chT1ixCtZbO14oQfDuYiXc6m/Qb0nzjW87hso
ZuOzXCgJhspYOZKEFXh6yDY9em8Rclbrq17z0Yfhmh/9XD8UQVgQ1OrPXAnP
HCu6S7wUnJy9nZrDK+GtG691RrkYnzaVzkgaDXBjns7elVuMgSGn2KY0Q4jL
6gkPhgzFDtYG9/2N4Cs9YtNSK0NVKo8ebMWARHDBMsShBGk+B9xVphhY6ZIb
4N1SApseaWXafWNE+ZTU39pVCtGawqr77kzATD7A6S/FKXmmyP0aE/NRu76L
iSmDh4FP6T1TFuwdfYYUS8rhGN66my5g4dzsfrfQrHJIDLmmHVMsvOF4PDth
VgHT2+V5nrtNcK+iyqOhpgJCqyaLrkYT9Lc/U3a0q0TQpOqjNgsC87mv/97c
XgnulQmm4CyB2Glx7ontFA4nec+7nSPw7laydf8OCjzvuqea2QR+6bfp/cmX
QvoU74wwj8CxGCU97X0UqtfPzOWLCZz3sC4vDqYwc2vhSdlFAtdlzb+3xlEQ
dmlmNrcSmPt5VEGXUiiQhYWcbiOQHyFOPyajIIvudHZtJ/Bq8KqOopTCVT3h
bHsnAYaZQVgJRaGHoxPS/ZiAYdnJMds6CuYD+s79AwS4Xr1ae1oprKuLY5QM
Eai9M10gb6OwIVUxEzhMwHO40mVVB4Ut5uKaNyME/Loche8eUogKZTI+fCCQ
UhHJSnxOIcE+caZ2kkCXYcaloR4KqUv7/4yeIhDu4ODr9pKC6LIs49MnAvzV
j6U6gxSK+arB12cJfJy47hD7isLFbYFOCfMEsnTCRnpeU6gzuWO08V8Ci3u9
TjuOUmicNJtZWCBwssLOpGyMwn+4J0Dv
         "]]},
       Annotation[#, "Charting`Private`Tag$11953#2"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
/wMxDA5L
         "]]},
       Annotation[#, "Charting`Private`Tag$11953#3"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 10}, {-629.5653615842352, 9272.761295682809}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.725802322059108*^9},ExpressionUUID->"d11e5204-7a71-418c-aa8e-\
6a26f38ab022"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"neural", "[", "x", "]"}], ",", " ", 
       RowBox[{"linear", "[", "x", "]"}], ",", " ", 
       RowBox[{"gaussprocess", "[", "x", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
     RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7258022392695494`*^9, 
  3.7258023340579777`*^9}},ExpressionUUID->"9c10fd0d-4a74-401d-9ecc-\
79c2c4c538f5"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., 1.}, {2., 16.}, {3., 81.}, {4., 256.}, {5., 625.}, {6., 
       1296.}, {7., 2401.}, {8., 4096.}, {9., 
       6561.}}]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
kiCHUJXq4f+nKJXn
        "]]},
      Annotation[#, "Charting`Private`Tag$39899#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVz2s0lAkAh/Fxawstk9iEMeMVZWhz9rBq6f2jXSK2SGW6MbmVCJkI1bjF
rFWT60SzY4zrWySHzpZNk0giFVttjWRdUqTESi6tbT885/f5YXGPeAUq02g0
jy/9r/gkd5F1QMbGvuhTAy8aneXN3cwtO5kHyT52lbOarbN84U5jMpN5nCx6
cNnBtMpJLpZnGqsxBSTfoi//UKGj/LADL2za+DwJeaLo3fuN8u65kJxx40qS
n/xMRZ9rK/9K0W8+ZnyNpDUlFM7q68ql9ySRo8ZtJE2A443j9qi+LFAcXvuc
HJeRKTZ3fRFMPjr/NmqALCprmGj7NRDhQ2sG6qrfkDWdy9d9XhIOdVaK+Uu7
cbJocK1mreQozmi3W0j9JsmHoaskDaMx4Cq231Tp+Ehqs60Te7MTENmSwj1i
PkuKTBamWdl8XInQ9F6x+TNpu/TLfn0SpPGhI+t20rDpB07EiGoqkiTz2/55
qwT20WEvvlUaaN19+CNOBbaX7DnfuwtgFh0Uu91CDTWrR1tm8zIwOJW/Q+PG
ImzdHdh6sCETbkOHTmRFLkZNyIW8iUVCeA4K2QyGOiLirr6VW5zDyG0u/26V
Bh4GbFMMbsjCWvoTI+f9S2ErvmKkxc2GOjnl3zP5NfxU9y85y8uByxhn2sRH
GwcPqNnpFuXir6YAJY4lHaq3tWbYLXmoT2/ex5yiQzmLFiF6ko8gNV5fZ+cy
tFulsDQWRDgQFV+vWaCDRE9WZrdOAb4NZndu8V8OcN6ftiQK8WCZpQZvvS68
XJNvZmy+gIbqpEJLFT3cLf1chT1ixCtZbO14oQfDuYiXc6m/Qb0nzjW87hso
ZuOzXCgJhspYOZKEFXh6yDY9em8Rclbrq17z0Yfhmh/9XD8UQVgQ1OrPXAnP
HCu6S7wUnJy9nZrDK+GtG691RrkYnzaVzkgaDXBjns7elVuMgSGn2KY0Q4jL
6gkPhgzFDtYG9/2N4Cs9YtNSK0NVKo8ebMWARHDBMsShBGk+B9xVphhY6ZIb
4N1SApseaWXafWNE+ZTU39pVCtGawqr77kzATD7A6S/FKXmmyP0aE/NRu76L
iSmDh4FP6T1TFuwdfYYUS8rhGN66my5g4dzsfrfQrHJIDLmmHVMsvOF4PDth
VgHT2+V5nrtNcK+iyqOhpgJCqyaLrkYT9Lc/U3a0q0TQpOqjNgsC87mv/97c
XgnulQmm4CyB2Glx7ontFA4nec+7nSPw7laydf8OCjzvuqea2QR+6bfp/cmX
QvoU74wwj8CxGCU97X0UqtfPzOWLCZz3sC4vDqYwc2vhSdlFAtdlzb+3xlEQ
dmlmNrcSmPt5VEGXUiiQhYWcbiOQHyFOPyajIIvudHZtJ/Bq8KqOopTCVT3h
bHsnAYaZQVgJRaGHoxPS/ZiAYdnJMds6CuYD+s79AwS4Xr1ae1oprKuLY5QM
Eai9M10gb6OwIVUxEzhMwHO40mVVB4Ut5uKaNyME/Loche8eUogKZTI+fCCQ
UhHJSnxOIcE+caZ2kkCXYcaloR4KqUv7/4yeIhDu4ODr9pKC6LIs49MnAvzV
j6U6gxSK+arB12cJfJy47hD7isLFbYFOCfMEsnTCRnpeU6gzuWO08V8Ci3u9
TjuOUmicNJtZWCBwssLOpGyMwn+4J0Dv
        "]]},
      Annotation[#, "Charting`Private`Tag$39899#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
/wMxDA5L
        "]]},
      Annotation[#, "Charting`Private`Tag$39899#3"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.}, {0, 6561.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725802347468355*^9},ExpressionUUID->"5ddb4686-8ee4-4635-b6af-\
45a7dc5ee251"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"nearest", ",", "forest"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Predict", "[", 
     RowBox[{"data", ",", 
      RowBox[{"Method", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"\"\<NearestNeighbors\>\"", ",", "\"\<RandomForest\>\""}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7258024418666134`*^9, 
  3.725802441929739*^9}},ExpressionUUID->"2710f495-d073-4274-a080-\
a1464f982a21"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["9", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["9", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7258024592750454`*^9},ExpressionUUID->"5c23a146-0bfa-48ec-a1a3-\
e75feb89249d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"forest", "[", "x", "]"}], ",", " ", 
       RowBox[{"nearest", "[", "x", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
     RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7258024883071966`*^9, 
  3.7258025608440776`*^9}},ExpressionUUID->"07bd8473-c648-4c6f-8a88-\
24f0ff7d8763"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., 1.}, {2., 16.}, {3., 81.}, {4., 256.}, {5., 625.}, {6., 
       1296.}, {7., 2401.}, {8., 4096.}, {9., 
       6561.}}]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$72760#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFzWtU03UAxvHhBtKYybiFCmOAym1eKEVIjT9eAoRIidk5KJdNbgFOMEgc
2DgccpmKqBxAUBamCSfRBOyoXIQxRWDMC2ggM00GCoI3LnKb/+pFv+fFc77n
8+qxF+8Kjp7FYDCO/Lv/eup7sZF71MHPMp3rZDM0n5rd89Rp2O6q9/8ubVUk
v7BrIb5w8UBP4tKHxLHed08M7e4llvS59FZfGCBm22c7PfZ8TZxj2uZaGjlC
LO4Juc5UjxMn38gW73KaIuYW33q4/so08aUkzlfW/nrirWayqniH98RTVW/M
66ZhNcttQ0wcTVwijEqZex++IksoOvMU7ijf3eD1Gn7Zsbdfo4dZMsqo0pBB
PfnZUkt7+1G8cl+Brzns2REUrOXDiU5hJUZr4NL0hMHlX8PH5qwoMXMwIM5S
zGwZHYIZHU+oWimTeHFKTFqIqyGx4UrZs4sjsG6sYKtJnRFx/aVA/hLX2cQF
Ow0GgwrgnJOS7QWVcHZbj+ZxO0yLzYyze2DplJ+P8wDs+bkubOoVPHZUJlWP
w5WP5heU6OEklz+qkljGlHHadT09N5oKk+cWGqyGN/XF7zuWDKt1+0K6fD8g
DtLluvF4bOLBJnHmrQoT4qXcB7brI+YQ25T1XT/i8iEx23tMpB2BX0QvuvGd
aC7+DgmdubfhsqM1KSotnJ1v37hnEH5bGBK75Q0cWSyf4zYBa05dq2LRMO/O
uODVLFMq09LrPi1Pp6Y6t+89bQo/6FbeEPLgnN6c8Fov2Hc49J2DEDbtisio
b4C7lFEGoQIu8eUfVeH8MTjGMPWJRmNGrFs90bpzhTnxjt3plzlFcP6uczXa
NrglsaPxvB4+KfBQtjAsqMHOylGamUMlDRUq+5nw+vPTSuZs2CoxvInPhmtf
OKpCTWFxwoAqzwq+GJ9y09gRnvmGbs5YBufHWbZF+cHLYt00gSKYrv1tKLId
vm0mMEn1siSuuZBVLGBaEacbuG5WP4KVkuBAW/+PiNlaqZ+kGo65/Co5pR1u
zIkqlvbDkmne7/q3sE1ctyqThv2Yxj+VzrKmzDfp3tN/n6S+LfH4UmkIl3hF
W/Qaw62dx7uZHNje5M2OjWZwmk/Qy/3W8NLRVT7HN8F9v9rnKTLg2ljbQMEA
nOc8j3VVOI84tyimWcSfTxyaF6bhPIPLEw2iHgQvIJ7YcHZSUQ9bTab5q/6E
P6kIPPH8NfxpkU+F+zt4ndyjUaqHb+qXBygYNtTaPdQ0HVlO+ae43W9iwurB
RRHPjeDNIv4Ahw1HrGZzFVawxHLU090RLttX3LVXCPf2rUtTymEl91pL8yh8
eq37gnaRLXHFD6nc2CU8YrlwRwBzDP6rMEu6UWRHvFJbWi5vh8841uicH8IW
CZ12rf2w+kNR3fxhOLtyODRhBI5kVZcfH4fXbJVO1EzC1mWUr24GnspgBhgx
+FR0Q/iM7E41Fa+y2X+OA3ebeDT6zYOvFMWtOvgxXOhSXNEeAHNSLX45lAXL
Gg4XBlyFv1ggPNu60J7YR9K8jXsAVtiIF6rH4IVN5/KDtjkQ5y5Rut6rh2NG
WHdbXB2JxZfe8g8cgXPvcQ6rmuH6kcWTNA3/A3dqaw8=
        "]]},
      Annotation[#, "Charting`Private`Tag$72760#2"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.}, {0, 6561.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725802565922427*^9},ExpressionUUID->"bfedc38f-2606-4429-8326-\
7c05f2f265de"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"n", "\[Rule]", 
      RowBox[{"Sin", "[", "n", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "1", ",", " ", "10"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7258026389244995`*^9, 
  3.7258026666692123`*^9}},ExpressionUUID->"977b91fd-9adf-4a9c-96f4-\
36e594b23457"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "neuralnetwork", ",", " ", "randomforest", ",", " ", "gaussianprocess"}], 
   "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Predict", "[", 
     RowBox[{"data", ",", " ", 
      RowBox[{"Method", " ", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<NeuralNetwork\>\"", ",", " ", "\"\<RandomForest\>\"", ",", " ", 
     "\"\<GausianProcess\>\""}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7258026900041943`*^9, 
  3.7258027772290206`*^9}},ExpressionUUID->"04952328-ad6b-4dab-b5ee-\
9a3d0a6da5cb"],

Cell[BoxData[
 TemplateBox[{
  "Predict","mlnasethl",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"GausianProcess\\\\\\\\\\\\\
\\\"\\\\\\\"\\\"}]\\) is not an available \\!\\(\\*RowBox[{\\\"\\\\\\\"method\
\\\\\\\"\\\"}]\\). Did you mean \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"GaussianProcess\\\\\\\\\\\\\\\"\\\
\\\\\"\\\"}]\\) instead? Possible \
\\!\\(\\*RowBox[{\\\"\\\\\\\"methods\\\\\\\"\\\"}]\\) also include \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"DecisionTree\\\\\\\\\\\\\\\", \\\
\\\\\\\\\\\\\"GradientBoostedTrees\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"LinearRegression\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"NearestNeighbors\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"NeuralNetwork\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"RandomForest\\\
\\\\\\\\\\\\\", and Automatic\\\\\\\"\\\"}]\\).\"",2,380,62,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7258027872673707`*^9},ExpressionUUID->"74557a4d-f946-4a28-87ad-\
d8e3f5a7759c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["10", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["10", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"Predict", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", 
        RowBox[{"Sin", "[", "1", "]"}]}], ",", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"Sin", "[", "2", "]"}]}], ",", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"Sin", "[", "3", "]"}]}], ",", 
       RowBox[{"4", "\[Rule]", 
        RowBox[{"Sin", "[", "4", "]"}]}], ",", 
       RowBox[{"5", "\[Rule]", 
        RowBox[{"Sin", "[", "5", "]"}]}], ",", 
       RowBox[{"6", "\[Rule]", 
        RowBox[{"Sin", "[", "6", "]"}]}], ",", 
       RowBox[{"7", "\[Rule]", 
        RowBox[{"Sin", "[", "7", "]"}]}], ",", 
       RowBox[{"8", "\[Rule]", 
        RowBox[{"Sin", "[", "8", "]"}]}], ",", 
       RowBox[{"9", "\[Rule]", 
        RowBox[{"Sin", "[", "9", "]"}]}], ",", 
       RowBox[{"10", "\[Rule]", 
        RowBox[{"Sin", "[", "10", "]"}]}]}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<GaussianProcess\>\""}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.7258028599139204`*^9, 
  3.7258028599725847`*^9}},ExpressionUUID->"7d160345-0176-4eea-bbc4-\
1e3e53ff2dc9"],

Cell[BoxData[
 TemplateBox[{
  "General","noinfo",
   "\"Input expression \
\\!\\(\\*TagBox[\\\"PredictorFunction[\[Ellipsis]]\\\", False, Rule[Editable, \
False], Rule[SelectWithContents, True], Rule[Selectable, False]]\\) contains \
insufficient information to interpret the result.\"",2,381,63,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725802861181175*^9},ExpressionUUID->"8c389464-5ffb-4332-bb47-\
958cf3750046"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "neuralnetwork", ",", " ", "randomforest", ",", " ", "gaussianprocess"}], 
   "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Predict", "[", 
     RowBox[{"data", ",", " ", 
      RowBox[{"Method", " ", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<NeuralNetwork\>\"", ",", " ", "\"\<RandomForest\>\"", ",", " ", 
     "\"\<GaussianProcess\>\""}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7258028599139204`*^9, 
  3.7258028783583803`*^9}},ExpressionUUID->"bd8999b6-2db4-4a33-93c2-\
57cb6a2d3fb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["10", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["10", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None},
                   Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["10", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7258028924556875`*^9},ExpressionUUID->"894ebcac-72d4-4c9f-82dd-\
702bf201321e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"neuralnetwork", "[", "x", "]"}], ",", " ", 
       RowBox[{"randomforest", "[", "x", "]"}], ",", " ", 
       RowBox[{"gaussianprocess", "[", "x", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "1", ",", " ", "10"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<NeuralNetwork\>\"", ",", " ", "\"\<RandomForest\>\"", ",", " ", 
        "\"\<GaussianProcess\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"List", "@@@", "data"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Red"}], 
       "]"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7258029387778573`*^9, 
  3.725803082224772*^9}},ExpressionUUID->"ddf56131-dc87-4550-8e73-\
880d1f47a7f3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, Annotation[#, "Charting`Private`Tag$11301#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, Annotation[#, "Charting`Private`Tag$11301#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$11301#3"]& ]}}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Medium], 
          RGBColor[1, 0, 0]], 
         PointBox[{{1., 0.8414709848078965}, {2., 0.9092974268256817}, {3., 
          0.1411200080598672}, {4., -0.7568024953079282}, {
          5., -0.9589242746631385}, {6., -0.27941549819892586`}, {7., 
          0.6569865987187891}, {8., 0.9893582466233818}, {9., 
          0.4121184852417566}, {
          10., -0.5440211108893698}}]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 10}, {-1.003121392207532, 0.9841584645742376}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"NeuralNetwork\"", "\"RandomForest\"", "\"GaussianProcess\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7258031135606723`*^9},ExpressionUUID->"55d9c57a-87b3-4c00-8bf3-\
5d627da96705"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<WineQuality\>\""}], 
      "}"}], ",", " ", "\"\<TrainingData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<TrainingSpeed\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7258035433104143`*^9, 
  3.725803595206317*^9}},ExpressionUUID->"53fc3333-208a-4c5f-ac78-\
195d76017df9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3600", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7258036278779907`*^9},ExpressionUUID->"8b782fe6-3ca4-4af4-b7e2-\
3c6aef2d3adf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p1", ",", " ", "\"\<TrainingTime\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7258036447715073`*^9, 
  3.725803655760366*^9}},ExpressionUUID->"9f99d78b-a21d-4abc-87e2-\
22781ca3f0a6"],

Cell[BoxData[
 TemplateBox[{"22.57465536182033`","\"s\"","seconds","\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.725803658082385*^9},ExpressionUUID->"ae250a45-8401-4881-b27a-\
1af01898efea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<WineQuality\>\""}], 
      "}"}], ",", " ", "\"\<TestData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"p1", ",", " ", "testset", ",", " ", "\"\<StandardDeviation\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7258036618478804`*^9, 
  3.7258037157406535`*^9}},ExpressionUUID->"caf82109-e2cf-4450-b5be-\
cfcdee669b73"],

Cell[BoxData["0.7890054036384747`"], "Output",
 CellChangeTimes->{
  3.72580372188428*^9},ExpressionUUID->"9fcd3dd1-db9b-4173-a732-7e78559cee3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", " ", "=", " ", 
  RowBox[{"Predict", "[", "trainingset", "]"}]}]], "Input",
 CellChangeTimes->{{3.7258037291560183`*^9, 
  3.725803742582485*^9}},ExpressionUUID->"2638d94e-e682-4ece-b671-\
4656d86af87a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3600", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725803774070265*^9},ExpressionUUID->"1baab36b-37f9-4e23-bd67-\
975d3044c0ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p1", ",", " ", "\"\<TrainingTime\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7258037970264006`*^9, 
  3.7258038100211363`*^9}},ExpressionUUID->"6b268794-1153-442d-b57d-\
ce880887522f"],

Cell[BoxData[
 TemplateBox[{"22.57465536182033`","\"s\"","seconds","\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.725803812326363*^9},ExpressionUUID->"c5bbde09-1093-4c60-9c92-\
e77fc9350cd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p2", ",", " ", "\"\<TrainingTime\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7258037970264006`*^9, 
  3.725803830913581*^9}},ExpressionUUID->"b4a13469-b984-41bd-9fbb-\
3969be874561"],

Cell[BoxData[
 TemplateBox[{"29.687012353339234`","\"s\"","seconds","\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.725803832255361*^9},ExpressionUUID->"9def62d0-1478-4815-85e9-\
c0caa84aa609"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"p2", ",", " ", "testset", ",", " ", "\"\<StandardDeviation\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725803835956095*^9, 
  3.7258038500687656`*^9}},ExpressionUUID->"1f50b0f6-0da2-42e7-84e9-\
eaf973b58643"],

Cell[BoxData["0.671153929956383`"], "Output",
 CellChangeTimes->{
  3.7258038563832273`*^9},ExpressionUUID->"222eae61-4655-48b1-a678-\
3adb05368ca6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p3", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"traingingset", ",", " ", 
    RowBox[{"PerformanceGoal", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<TrainingSpeed\>\"", ",", " ", "\"\<Memory\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725803864553447*^9, 
  3.725803903182977*^9}},ExpressionUUID->"d40fdd74-a748-4055-9333-\
96ba7964b2f8"],

Cell[BoxData[
 TemplateBox[{
  "Predict","mlincfttp",
   "\"Incompatible variable type \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"Numerical\\\\\\\"\\\"}]\\)) and variable value \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"a\\\\\\\"\\\"}]\\)).\"",2,392,77,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725803904330304*^9},ExpressionUUID->"7c6a48cc-0865-46ec-b147-\
5c50eb98d1db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p3", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"PerformanceGoal", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<TrainingSpeed\>\"", ",", " ", "\"\<Memory\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7258039123901925`*^9, 
  3.725803929896889*^9}},ExpressionUUID->"45ccc0fa-f7db-4920-b0a6-\
d45e72f15962"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3600", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725803952954545*^9},ExpressionUUID->"e110318a-22b5-462e-9e5c-\
cdfe2e060d3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteCount", "/@", 
  RowBox[{"{", 
   RowBox[{"p2", ",", " ", "p3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.725803976725916*^9, 
  3.725803991389656*^9}},ExpressionUUID->"caaa3ee8-abfa-4634-8047-\
3474eff9638d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"534208", ",", "251056"}], "}"}]], "Output",
 CellChangeTimes->{
  3.725803993533812*^9},ExpressionUUID->"871d3680-d9e1-410f-b3bb-\
e3b8ef6fced4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"p3", ",", " ", "testset", ",", " ", "\"\<StandardDeviation\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725804003193328*^9, 
  3.7258040195324306`*^9}},ExpressionUUID->"bd2827a2-09e6-4bab-856a-\
59b3dd5176cc"],

Cell[BoxData["0.7248968067657522`"], "Output",
 CellChangeTimes->{
  3.7258040392801943`*^9},ExpressionUUID->"a580f83b-1a2e-4c80-8902-\
ae83b3b8e949"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ",", " ", 
    RowBox[{"TimeGoal", "\[Rule]", 
     RowBox[{"Quantity", "[", 
      RowBox[{"3", ",", " ", "\"\<Seconds\>\""}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.72580414737418*^9, 
  3.725804191361896*^9}},ExpressionUUID->"42a061df-f1cd-4ba0-a759-\
e6ba4fb96a5c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725804199638626*^9},ExpressionUUID->"61a92764-8932-4e14-acd3-\
b7040e5b62b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ",", " ", 
    RowBox[{"TimeGoal", "\[Rule]", 
     RowBox[{"Quantity", "[", 
      RowBox[{"3", ",", " ", "\"\<Seconds\>\""}], "]"}]}], ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.72580414737418*^9, 
  3.7258042272671385`*^9}},ExpressionUUID->"8c24987b-1e08-4c67-8b54-\
bc3f4f353201"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725804232927185*^9},ExpressionUUID->"92ad51b0-ad49-4b6f-b4e7-\
0fbe8b071e22"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<BostonHomes\>\""}], 
      "}"}], ",", " ", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258042375986657`*^9, 
  3.7258042607044115`*^9}},ExpressionUUID->"287d2e88-e413-4ffc-b3fe-\
02fb12b52f00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"dataset", ",", " ", 
    RowBox[{"TimeGoal", "\[Rule]", ".1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7258043258119383`*^9, 
  3.725804341677513*^9}},ExpressionUUID->"0d1e5197-e9b4-4205-bc49-\
b0b606ad5bd7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["506", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7258043456268377`*^9},ExpressionUUID->"075618ee-a432-4fd3-be49-\
5dcccefe2462"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.725804409452942*^9, 
  3.725804433449976*^9}},ExpressionUUID->"482f90b3-d212-414b-81e3-\
0f48a2f58e3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Input type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"\"Mixed\"",StyleBox[
                   
                   TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                   GrayLevel[0.5], StripOnInput -> False]},
                 "RowDefault"],
                TagBox[
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                 Short[#, 10]& ]],
               Annotation[#, 
                
                Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical"}, 10], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"NearestNeighbors\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 3, "InitialType" -> 
                    TypeSystem`Struct[{
                    "NeighborsNumber", "DistributionSmoothing", 
                    "NearestMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"NeighborsNumber"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "DistributionSmoothing"} -> 
                    TypeSystem`PackageScope`AtomShape[60], {"NearestMethod"} -> 
                    TypeSystem`PackageScope`AtomShape[57.60000000000001]], 1],
                     "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[802125297], "Type" -> 
                    TypeSystem`Struct[{
                    "NeighborsNumber", "DistributionSmoothing", 
                    "NearestMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], "HandleQ" -> True, "RowTarget" -> 
                    20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[802125297]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NeighborsNumber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NeighborsNumber\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 912057924][{
                    Key["NeighborsNumber"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    912057924][
                    GeneralUtilities`Slice[
                    Key["NeighborsNumber"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    912057924][
                    GeneralUtilities`Slice[
                    Key["NeighborsNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DistributionSmoothing\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DistributionSmoothing\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 912057924][{
                    Key["DistributionSmoothing"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    912057924][
                    GeneralUtilities`Slice[
                    Key["DistributionSmoothing"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0.5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    912057924][
                    GeneralUtilities`Slice[
                    Key["DistributionSmoothing"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NearestMethod\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NearestMethod\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 912057924][{
                    Key["NearestMethod"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    912057924][
                    GeneralUtilities`Slice[
                    Key["NearestMethod"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["KDtree", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    912057924][
                    GeneralUtilities`Slice[
                    Key["NearestMethod"]]], "Mouse"], 
                    ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 912057924][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    912057924]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    912057924][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    912057924][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 "NeighborsNumber" -> 2, "DistributionSmoothing" -> 0.5, 
                  "NearestMethod" -> "KDtree"], 
                 
                 TypeSystem`Struct[{
                  "NeighborsNumber", "DistributionSmoothing", 
                   "NearestMethod"}, {
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[String]}], 
                 Association["ID" -> 44770867374739]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Standard deviation\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"3.4571664506986357068`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.3999587013177685613`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "2.6572490480630985843`3.",
                   "\", \"", "4.2570838533341728294`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 2.6572490480630985843`3., 
                  ", ", 4.2570838533341728294`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"2.5202473271171910163`3.",StyleBox[
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.1075826778025221336`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "2.3050819715121466658`3.",
                   "\", \"", "2.7354126827222353668`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 2.3050819715121466658`3., 
                  ", ", 2.7354126827222353668`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "88.`",RowBox[{
                 "\"\[Micro]s\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"example\""}],
                "microseconds per example",FractionBox[
                "\"Microseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Predictor memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"297.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"506","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"1.97`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]},
             {
              
              DynamicModuleBox[{
               MachineLearning`file5Automation`PackagePrivate`pos$$ = 1}, 
               DynamicBox[ToBoxes[
                 Show[
                  Part[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.9452009762487954`}, {
                    4.248495242049359, 1.6861266363666771`}, {
                    6.003887067106539, 1.24044930866629}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 1.762879419454841}, {
                    2.302585092994046, 1.4227708654602447`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.9452009762487954`}}, {{
                    4.248495242049359, 1.6861266363666771`}}, {{
                    6.003887067106539, 1.24044930866629}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.762879419454841}}, {{
                    2.302585092994046, 
                    1.4227708654602447`}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 1.8648099391726174`}, {
                    2.302585092994046, 2.0196074199208893`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.248495242049359, 1.5842377160346515`}, {
                    4.248495242049359, 1.7785874282792298`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.003887067106539, 1.1175019991802089`}, {
                    6.003887067106539, 
                    1.3499221267205115`}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 1.1892979779546566`}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {1.2012964382450397`, 1.9452009762487954`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 1.1892979779546566`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {1.2012964382450397`, 1.9452009762487954`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 3.3854679460228403`}, {
                    4.248495242049359, 3.18188349733833}, {6.003887067106539, 
                    2.520247327117191}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 2.821223288352367}, {
                    2.302585092994046, 3.024296792540629}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 3.3854679460228403`}}, {{
                    4.248495242049359, 3.18188349733833}}, {{
                    6.003887067106539, 2.520247327117191}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 2.821223288352367}}, {{
                    2.302585092994046, 
                    3.024296792540629}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 3.2670707729544652`}, {
                    2.302585092994046, 3.5038651190912153`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.248495242049359, 2.989248026932263}, {
                    4.248495242049359, 3.374518967744397}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{{6.003887067106539, 2.412664649314669}, {
                    6.003887067106539, 
                    2.627830004919713}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 2.476986296171908}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {2.520247327117191, 3.3854679460228403`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 2.476986296171908}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {2.520247327117191, 3.3854679460228403`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.2194921378800851`}, {
                    2.302585092994046, 1.2194921378800851`}}]}, 
                    "RandomForest"], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.248495242049359, 1.1574733162152557`}, {
                    4.248495242049359, 1.1574733162152557`}}]}, 
                    "DecisionTree"], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{6.003887067106539, 0.9243570423887847}, {
                    6.003887067106539, 0.9243570423887847}}]}, 
                    "NearestNeighbors"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 0.9029359467482873}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {0.9079606481948236, 1.2194921378800851`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 0.9029359467482873}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {0.9079606481948236, 1.2194921378800851`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}, 
                   MachineLearning`file5Automation`PackagePrivate`pos$$], 
                  PlotLabel -> Grid[{{
                    Button[
                    
                    MachineLearning`file5Automation`PackagePrivate`\
buttonGraphics[
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]], 
                    MachineLearning`file5Automation`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file5Automation`PackagePrivate`pos$$ - 
                    1, 1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file5Automation`PackagePrivate`pos$$], 
                    Button[
                    
                    MachineLearning`file5Automation`PackagePrivate`\
buttonGraphics[
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]], 
                    MachineLearning`file5Automation`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file5Automation`PackagePrivate`pos$$ + 
                    1, 
                    Length[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.9452009762487954`}, {
                    4.248495242049359, 1.6861266363666771`}, {
                    6.003887067106539, 1.24044930866629}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 1.762879419454841}, {
                    2.302585092994046, 1.4227708654602447`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.9452009762487954`}}, {{
                    4.248495242049359, 1.6861266363666771`}}, {{
                    6.003887067106539, 1.24044930866629}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.762879419454841}}, {{
                    2.302585092994046, 
                    1.4227708654602447`}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 1.8648099391726174`}, {
                    2.302585092994046, 2.0196074199208893`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.248495242049359, 1.5842377160346515`}, {
                    4.248495242049359, 1.7785874282792298`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.003887067106539, 1.1175019991802089`}, {
                    6.003887067106539, 
                    1.3499221267205115`}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 1.1892979779546566`}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {1.2012964382450397`, 1.9452009762487954`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 1.1892979779546566`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {1.2012964382450397`, 1.9452009762487954`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 3.3854679460228403`}, {
                    4.248495242049359, 3.18188349733833}, {6.003887067106539, 
                    2.520247327117191}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 2.821223288352367}, {
                    2.302585092994046, 3.024296792540629}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 3.3854679460228403`}}, {{
                    4.248495242049359, 3.18188349733833}}, {{
                    6.003887067106539, 2.520247327117191}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 2.821223288352367}}, {{
                    2.302585092994046, 
                    3.024296792540629}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 3.2670707729544652`}, {
                    2.302585092994046, 3.5038651190912153`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.248495242049359, 2.989248026932263}, {
                    4.248495242049359, 3.374518967744397}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.003887067106539, 2.412664649314669}, {
                    6.003887067106539, 
                    2.627830004919713}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 2.476986296171908}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {2.520247327117191, 3.3854679460228403`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 2.476986296171908}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {2.520247327117191, 3.3854679460228403`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.2194921378800851`}, {
                    2.302585092994046, 1.2194921378800851`}}]}, 
                    "RandomForest"], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.248495242049359, 1.1574733162152557`}, {
                    4.248495242049359, 1.1574733162152557`}}]}, 
                    "DecisionTree"], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{6.003887067106539, 0.9243570423887847}, {
                    6.003887067106539, 0.9243570423887847}}]}, 
                    "NearestNeighbors"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 0.9029359467482873}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {0.9079606481948236, 1.2194921378800851`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 0.9029359467482873}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {0.9079606481948236, 1.2194921378800851`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}]], Appearance -> 
                    "Frameless"]}}, Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                ImageSizeCache->{363., {129., 135.}}],
               DynamicModuleValues:>{}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{5, 5}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.7258044357942452`*^9},ExpressionUUID->"7cd42873-2133-4be6-bd33-\
fbf594a747d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"dataset", ",", " ", 
    RowBox[{"TimeGoal", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725804625245594*^9, 3.7258046381013803`*^9}, {
  3.725804683635605*^9, 
  3.7258046990182924`*^9}},ExpressionUUID->"cf99525b-052e-4886-b3c3-\
5f5ba69af286"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["506", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725804713646616*^9},ExpressionUUID->"643a44f8-cea3-4160-8ac1-\
b9a9071a0e34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.7258047219012938`*^9, 3.725804731205793*^9}, {
  3.7258047717087*^9, 
  3.725804772073657*^9}},ExpressionUUID->"5fa0b365-af5d-4167-8cf1-\
0b8ea8218bff"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Input type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"\"Mixed\"",StyleBox[
                   
                   TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                   GrayLevel[0.5], StripOnInput -> False]},
                 "RowDefault"],
                TagBox[
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                 Short[#, 10]& ]],
               Annotation[#, 
                
                Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical"}, 10], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"RandomForest\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 4, "InitialType" -> 
                    TypeSystem`Struct[{
                    "FeatureFraction", "LeafSize", "TreeNumber", 
                    "DistributionSmoothing"}, {
                    TypeSystem`Atom[Rational], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"FeatureFraction"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {"LeafSize"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {"TreeNumber"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "DistributionSmoothing"} -> 
                    TypeSystem`PackageScope`AtomShape[60]], 1], "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[1549530323], "Type" -> 
                    TypeSystem`Struct[{
                    "FeatureFraction", "LeafSize", "TreeNumber", 
                    "DistributionSmoothing"}, {
                    TypeSystem`Atom[Rational], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real]}], "HandleQ" -> True, "RowTarget" -> 
                    20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[1549530323]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FeatureFraction\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FeatureFraction\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2024829150][{
                    Key["FeatureFraction"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2024829150][
                    GeneralUtilities`Slice[
                    Key["FeatureFraction"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1/3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2024829150][
                    GeneralUtilities`Slice[
                    Key["FeatureFraction"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"LeafSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LeafSize\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2024829150][{
                    Key["LeafSize"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2024829150][
                    GeneralUtilities`Slice[
                    Key["LeafSize"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["10"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2024829150][
                    GeneralUtilities`Slice[
                    Key["LeafSize"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TreeNumber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TreeNumber\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2024829150][{
                    Key["TreeNumber"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2024829150][
                    GeneralUtilities`Slice[
                    Key["TreeNumber"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["31"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2024829150][
                    GeneralUtilities`Slice[
                    Key["TreeNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DistributionSmoothing\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DistributionSmoothing\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2024829150][{
                    Key["DistributionSmoothing"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2024829150][
                    GeneralUtilities`Slice[
                    Key["DistributionSmoothing"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0.5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2024829150][
                    GeneralUtilities`Slice[
                    Key["DistributionSmoothing"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2024829150][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2024829150]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2024829150][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2024829150][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 "FeatureFraction" -> Rational[1, 3], "LeafSize" -> 10, 
                  "TreeNumber" -> 31, "DistributionSmoothing" -> 0.5], 
                 
                 TypeSystem`Struct[{
                  "FeatureFraction", "LeafSize", "TreeNumber", 
                   "DistributionSmoothing"}, {
                   TypeSystem`Atom[Rational], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real]}], 
                 Association["ID" -> 216612508888037]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Standard deviation\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"3.1113035715241830204`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.2871383592482109615`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "2.5370268530277613195`3.",
                   "\", \"", "3.6855802900206047212`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 2.5370268530277613195`3., 
                  ", ", 3.6855802900206047212`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"2.5635509376600098541`3.",StyleBox[
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0750678658898974449`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "2.4134152058802147423`3.",
                   "\", \"", "2.713686669439804966`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 2.4134152058802147423`3., 
                  ", ", 2.713686669439804966`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "298.`",
                RowBox[{
                 "\"\[Micro]s\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"example\""}],
                "microseconds per example",FractionBox[
                "\"Microseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Predictor memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"364.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"506","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"13.1`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]},
             {
              
              DynamicModuleBox[{
               MachineLearning`file5Automation`PackagePrivate`pos$$ = 1}, 
               DynamicBox[ToBoxes[
                 Show[
                  Part[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.9442158191924641`}, {
                    4.248495242049359, 1.4832030641728804`}, {
                    6.003887067106539, 1.1350417932012231`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 1.7618942623985094`}, {
                    2.302585092994046, 1.3173633499951778`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.9442158191924641`}}, {{
                    4.248495242049359, 1.4832030641728804`}}, {{
                    6.003887067106539, 1.1350417932012231`}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.7618942623985094`}}, {{
                    2.302585092994046, 
                    1.3173633499951778`}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 1.8612393702203578`}, {
                    2.302585092994046, 2.0208315945359367`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.248495242049359, 1.3216485518680459`}, {
                    4.248495242049359, 1.6222515781760687`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.003887067106539, 1.038212820850351}, {
                    6.003887067106539, 
                    1.223317070935726}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 1.0763114203470205`}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {1.0900876806461544`, 1.9442158191924641`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 1.0763114203470205`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {1.0900876806461544`, 1.9442158191924641`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 3.3592740888499177`}, {
                    4.248495242049359, 2.9068807603579985`}, {
                    6.003887067106539, 2.56355093766001}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 2.7993950740415983`}, {
                    2.302585092994046, 3.0762611251920116`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 3.3592740888499177`}}, {{
                    4.248495242049359, 2.9068807603579985`}}, {{
                    6.003887067106539, 2.56355093766001}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 2.7993950740415983`}}, {{
                    2.302585092994046, 
                    3.0762611251920116`}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 3.2536752445235946`}, {
                    2.302585092994046, 3.464872933176241}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.248495242049359, 2.7787587284995046`}, {
                    4.248495242049359, 3.0350027922164924`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{{6.003887067106539, 2.4884830717701125`}, {
                    6.003887067106539, 
                    2.638618803549907}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 2.5237647801005143`}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {2.56355093766001, 3.3592740888499177`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 2.5237647801005143`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {2.56355093766001, 3.3592740888499177`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.2117249056488897`}, {
                    4.248495242049359, 1.0670806026267696`}, {
                    6.003887067106539, 0.941393382401143}}]}, "RandomForest"], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.710268632012483}, {
                    4.248495242049359, 1.1390263184487495`}, {
                    6.003887067106539, 1.4759718235597046`}}]}, 
                    "DecisionTree"], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.3826540586070892`}, {
                    4.248495242049359, 1.0798642473721618`}, {
                    6.003887067106539, 0.9243570423887847}}]}, 
                    "NearestNeighbors"], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.4576893101032613`}, {
                    2.302585092994046, 1.4576893101032613`}}]}, 
                    "LinearRegression"], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.3881411094630933`}, {
                    2.302585092994046, 1.3881411094630933`}}]}, 
                    "LinearRegression"], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.248495242049359, 1.2850464701376498`}, {
                    4.248495242049359, 1.2850464701376498`}}]}, 
                    "LinearRegression"], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{6.003887067106539, 1.1078039905443162`}, {
                    6.003887067106539, 1.1078039905443162`}}]}, 
                    "LinearRegression"], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.3141350267855092`}, {
                    2.302585092994046, 1.3141350267855092`}}]}, 
                    "LinearRegression"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 0.8673150721741616}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {0.8806952874096904, 1.710268632012483}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 0.8673150721741616}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {0.8806952874096904, 1.710268632012483}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}, 
                   MachineLearning`file5Automation`PackagePrivate`pos$$], 
                  PlotLabel -> Grid[{{
                    Button[
                    
                    MachineLearning`file5Automation`PackagePrivate`\
buttonGraphics[
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]], 
                    MachineLearning`file5Automation`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file5Automation`PackagePrivate`pos$$ - 
                    1, 1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file5Automation`PackagePrivate`pos$$], 
                    Button[
                    
                    MachineLearning`file5Automation`PackagePrivate`\
buttonGraphics[
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]], 
                    MachineLearning`file5Automation`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file5Automation`PackagePrivate`pos$$ + 
                    1, 
                    Length[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.9442158191924641`}, {
                    4.248495242049359, 1.4832030641728804`}, {
                    6.003887067106539, 1.1350417932012231`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 1.7618942623985094`}, {
                    2.302585092994046, 1.3173633499951778`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.9442158191924641`}}, {{
                    4.248495242049359, 1.4832030641728804`}}, {{
                    6.003887067106539, 1.1350417932012231`}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.7618942623985094`}}, {{
                    2.302585092994046, 
                    1.3173633499951778`}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 1.8612393702203578`}, {
                    2.302585092994046, 2.0208315945359367`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.248495242049359, 1.3216485518680459`}, {
                    4.248495242049359, 1.6222515781760687`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.003887067106539, 1.038212820850351}, {
                    6.003887067106539, 
                    1.223317070935726}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 1.0763114203470205`}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {1.0900876806461544`, 1.9442158191924641`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 1.0763114203470205`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {1.0900876806461544`, 1.9442158191924641`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 3.3592740888499177`}, {
                    4.248495242049359, 2.9068807603579985`}, {
                    6.003887067106539, 2.56355093766001}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 2.7993950740415983`}, {
                    2.302585092994046, 3.0762611251920116`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 3.3592740888499177`}}, {{
                    4.248495242049359, 2.9068807603579985`}}, {{
                    6.003887067106539, 2.56355093766001}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 2.7993950740415983`}}, {{
                    2.302585092994046, 
                    3.0762611251920116`}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 3.2536752445235946`}, {
                    2.302585092994046, 3.464872933176241}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.248495242049359, 2.7787587284995046`}, {
                    4.248495242049359, 3.0350027922164924`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.003887067106539, 2.4884830717701125`}, {
                    6.003887067106539, 
                    2.638618803549907}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 2.5237647801005143`}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {2.56355093766001, 3.3592740888499177`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 2.5237647801005143`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {2.56355093766001, 3.3592740888499177`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.2117249056488897`}, {
                    4.248495242049359, 1.0670806026267696`}, {
                    6.003887067106539, 0.941393382401143}}]}, "RandomForest"], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.710268632012483}, {
                    4.248495242049359, 1.1390263184487495`}, {
                    6.003887067106539, 1.4759718235597046`}}]}, 
                    "DecisionTree"], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.3826540586070892`}, {
                    4.248495242049359, 1.0798642473721618`}, {
                    6.003887067106539, 0.9243570423887847}}]}, 
                    "NearestNeighbors"], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.4576893101032613`}, {
                    2.302585092994046, 1.4576893101032613`}}]}, 
                    "LinearRegression"], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.3881411094630933`}, {
                    2.302585092994046, 1.3881411094630933`}}]}, 
                    "LinearRegression"], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.248495242049359, 1.2850464701376498`}, {
                    4.248495242049359, 1.2850464701376498`}}]}, 
                    "LinearRegression"], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{6.003887067106539, 1.1078039905443162`}, {
                    6.003887067106539, 1.1078039905443162`}}]}, 
                    "LinearRegression"], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.3141350267855092`}, {
                    2.302585092994046, 1.3141350267855092`}}]}, 
                    "LinearRegression"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1612182411200846`, 0.8673150721741616}, 
                    PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {0.8806952874096904, 1.710268632012483}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1612182411200846`, 0.8673150721741616}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.2225044485798944`, 
                    Log[506]}, {0.8806952874096904, 1.710268632012483}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}]], Appearance -> 
                    "Frameless"]}}, Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                ImageSizeCache->{363., {129., 135.}}],
               DynamicModuleValues:>{}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{5, 5}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.725804732092164*^9, 
  3.725804773433757*^9},ExpressionUUID->"7d555e2e-98a6-45f5-bf08-\
323d90820b01"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<WineQuality\>\""}], 
      "}"}], ",", " ", "\"\<Data\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Predict", "[", 
   RowBox[{"dataset", ",", " ", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.725804864065542*^9, 
  3.7258049267893143`*^9}},ExpressionUUID->"f0f05c62-cca0-47b6-aadb-\
bae2ab7127fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Predict", "[", 
  RowBox[{"dataset", ",", 
   RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Print\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7258049722892895`*^9, 
  3.7258049750177794`*^9}},ExpressionUUID->"db4401c2-b6a7-4b23-93bc-\
0d7a0247c1bc"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
  "  |  ","\"  |  \"","\"Time elapsed\"","\"Training example used\"",
   "\"Current best method\"","\"Current loss\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7258049766487474`*^9},ExpressionUUID->"5e20ce53-600f-4a9c-af84-\
0a5684b8dc6e"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1.1s\"","\"10/4898\"","\"LinearRegression\"",
   "\"0.874\"","\"0.874\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7258049771897573`*^9},ExpressionUUID->"90ddcfa6-5ad9-4f9f-b5b6-\
e1b197acca12"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1.6s\"","\"40/4898\"","\"LinearRegression\"",
   "\"0.836\"","\"0.836\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7258049777217393`*^9},ExpressionUUID->"d120b157-097b-46aa-9a4a-\
61032b090c98"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"2.2s\"","\"40/4898\"","\"LinearRegression\"",
   "\"0.833\"","\"0.833\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7258049782477074`*^9},ExpressionUUID->"8d82691d-aaf1-4e27-a28f-\
fcad3581ca1d"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"2.7s\"","\"200/4898\"",
   "\"LinearRegression\"","\"0.833\"","\"0.833\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725804978797738*^9},ExpressionUUID->"64d3256e-3f2a-4b20-8a51-\
49e126b3e216"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"3.3s\"","\"200/4898\"",
   "\"NearestNeighbors\"","\"0.829\"","\"0.829\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7258049793658247`*^9},ExpressionUUID->"12ff171d-33e2-447d-a414-\
c5cf846cec83"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"3.8s\"","\"200/4898\"","\"RandomForest\"",
   "\"0.781\"","\"0.781\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725804979917362*^9},ExpressionUUID->"de5286f8-aa97-47d5-a90b-\
420b3f1f84c9"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"4.4s\"","\"1000/4898\"","\"RandomForest\"",
   "\"0.781\"","\"0.781\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7258049804573717`*^9},ExpressionUUID->"f99ad3a8-ed0c-4b7d-96f3-\
80f057016d4a"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"5.s\"","\"3918/4898\"",
   "\"NearestNeighbors\"","\"0.735\"","\"0.735\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7258049810525293`*^9},ExpressionUUID->"0f5a4531-e770-422d-96d9-\
6cf6fc4462d1"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"6.1s\"","\"3918/4898\"","\"RandomForest\"",
   "\"0.705\"","\"0.705\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725804982224802*^9},ExpressionUUID->"5a901e43-348c-44a7-89a4-\
bd2bda3355a1"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"6.7s\"","\"3918/4898\"","\"RandomForest\"",
   "\"0.705\"","\"0.705\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725804982824976*^9},ExpressionUUID->"d0d7ef58-6074-47ae-8b66-\
856d0be7c748"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"8.s\"","\"3918/4898\"","\"RandomForest\"",
   "\"0.705\"","\"0.705\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725804984072956*^9},ExpressionUUID->"fa147aa1-52bf-4857-b333-\
8cf23252386f"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4898", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725804984290124*^9},ExpressionUUID->"b43c9307-fffd-448c-af2a-\
fbe57a27415e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "1.1"}], ",", " ", 
     RowBox[{"2", "\[Rule]", "4.4"}], ",", " ", 
     RowBox[{"3", "\[Rule]", "6.1"}], ",", " ", 
     RowBox[{"4", "\[Rule]", "7.1"}], ",", " ", 
     RowBox[{"5", "\[Rule]", "9.2"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.725805124278195*^9, 
  3.72580515816514*^9}},ExpressionUUID->"51e5689e-9ddf-460e-8af0-\
b86515817788"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<GaussianProcess\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725805191459426*^9, 3.72580520890682*^9}, {
  3.725805268511348*^9, 
  3.725805279846236*^9}},ExpressionUUID->"26963124-cd91-4df4-98e9-\
070aeb83ffed"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7258052132238913`*^9, 
  3.7258052858705053`*^9},ExpressionUUID->"65720bf8-1b39-443c-b440-\
4c93532e321e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"example", " ", "=", " ", "2.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pdf", " ", "=", " ", 
  RowBox[{"PDF", "[", 
   RowBox[{"p1", "[", 
    RowBox[{"example", ",", " ", "\"\<Distribution\>\""}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7258052038950367`*^9, 3.725805205080073*^9}, {
  3.7258052912519007`*^9, 
  3.725805313410606*^9}},ExpressionUUID->"8653b63b-51b8-4a67-8e08-\
ccb4849d41e8"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"#1", "-", "5.449633251362815`"}], "0.21627538991199827`"], 
       ")"}], "2"]}], "]"}], 
   RowBox[{"0.21627538991199827`", " ", 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]}]], "&"}]], "Output",
 CellChangeTimes->{
  3.7258053154440355`*^9},ExpressionUUID->"43bdddc0-02a7-404b-95a1-\
1aab56fa123e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pdf", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "7"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725805318215098*^9, 
  3.725805345036272*^9}},ExpressionUUID->"07b731f6-7c18-4f42-8ad3-\
589282cabc77"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
htjY3X4hLOD9FH78wHkevNgqjZ4YxoI3jstJu6ncuMWm/KnSyyxQOn+7jd6x
Hk8vbIn/dpU9byV3LeLOr8P1Lrw8xR3Dzi9dLPCfAwc+rvNJd/M1FhxZWHwU
/3gVi+acIWFxLLCIXapgDC9jqh1LYzY3WeD3+erHUuoSNnhjY61nPAsSCKSn
eaf+YX62IrFxiSyoWeWdt3/9F2uZUNNsT2XBDcmqcaHl39h/D2HjWDoLCvLX
CPsf/MIIvgfer2Ww4JTLwq8y7zmsHB0pZWWxYOguU0jE/Cdmw3v68o5sFgQ+
uFdkjc1iK90+tpb32Of0Ho/nnjPY3cTLSufy2PoEyXIHXJvCpmSyBnML2fMn
GKaqy/iG3ZguyW8qZoH9MTHj1xFfse2V9Zc+PGDBrweDrZKC49jbgA7zxVIW
zP+q0csuGMOCdw/JCFewQLGaP/nX0VFMRmD837YqFkSZdWU0y3zGOvp/dZnU
sEA7ynb2FccIRnUiel+uZwE5w/eP09B7rGaL6L6sBjaf5/2Py3+/xY7MbRF7
/IQF3MWSb3lUhrF1j7TmhppYgLbL3o26PITlhhi0/m5hweT6M6zI+VeY8V6r
VFIbC1yl4k8dDx7EZknH3RSfs6ChtAsSNg9gOncuCTt3sfmmhb0/kdOHfTwZ
PRnUw4LfNJsr/4X1YuEqKQ1pfSyIoDBExb51Ywp/c29W97OAyinj6jHdiXU3
VLj0D7JAc7zheTX5BXYhoknnx2sWhAysGs1bPsfoB3oJ/MNs/wQeH7Eqa8OO
v/9epf+BPa/C+/Yn1rdgvPf+Rdl/YkGhbYa16YlmrMiV18HvMwvMjIqhR6oJ
M9egqSeOsaD0D09w3fwTbH5JkrdsnAXJu6/vul3biKU1q77tmmDBiyQuvpL8
xxhE4w++TbKgqcb/8Jm6OiyKaWe9+QcLcHe35Ts7azCVzye3Yj/Z+2XN1H13
bhU2kO+1ZvOLBTsv8o2Nb6nELp4P6/f8w4KY7Xm/v7SVY2L/C08AsP85kaeQ
9xtAGO50/7h7sj3DAJ97rPkbQDgAaZXvRLE9aMisT8j7G0AUeskFMCKwPQyQ
uiPk/RtAzTGW/Wskrj2xV8j3//8bQEnzwoWiJ6w9eibm2Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$253636#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0000001224489796`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725805362980111*^9},ExpressionUUID->"1a91b596-33f5-414d-8993-\
7a57c30e3c27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "[", "example", "]"}]], "Input",
 CellChangeTimes->{{3.72580536523005*^9, 
  3.7258053685879736`*^9}},ExpressionUUID->"ebbe3cf9-aca2-406b-b72f-\
5ce9d5463490"],

Cell[BoxData["5.449633251362815`"], "Output",
 CellChangeTimes->{
  3.725805369764211*^9},ExpressionUUID->"e42cc9d5-1dd3-4f19-aa3a-\
adf7948ec846"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p1", ",", " ", "UtilityFunction"}], "]"}]], "Input",
 CellChangeTimes->{{3.7258053817266693`*^9, 
  3.7258053964303474`*^9}},ExpressionUUID->"0f80f044-f1c1-4865-bc43-\
d4b5ebfc6491"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DiracDelta", "[", 
   RowBox[{"#2", "-", "#1"}], "]"}], "&"}]], "Output",
 CellChangeTimes->{
  3.725805401941025*^9},ExpressionUUID->"30342446-c11e-4975-8f82-\
336370c600fe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"utility", "[", 
   RowBox[{"a_", ",", " ", "p_"}], "]"}], " ", ":=", " ", 
  RowBox[{"-", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"p", "-", "a"}], "]"}], ",", " ", 
        RowBox[{"a", " ", "<", " ", "p"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"3", "*", 
          RowBox[{"(", 
           RowBox[{"a", "-", "p"}], ")"}]}], "]"}], ",", " ", 
        RowBox[{"a", "\[GreaterEqual]", "p"}]}], "}"}]}], "}"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.725805462554737*^9, 3.7258055343873277`*^9}, {
  3.725805572341427*^9, 3.725805576322879*^9}, {3.725805610884365*^9, 
  3.7258056128471413`*^9}},ExpressionUUID->"8d51dd25-a7ec-4f1a-b4e2-\
454e60e2dd3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"utility", "[", 
    RowBox[{"0", ",", " ", "p"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"p", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7258056329200697`*^9, 
  3.72580565289688*^9}},ExpressionUUID->"eb911823-4975-45f2-bee4-\
b42a718d596d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
MvCJovifAoEA7eBcZnnGMfD/AGfzLmA=
       "]]},
     Annotation[#, "Charting`Private`Tag$254108#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 2}, {-14.186468606546981`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7258056553913364`*^9},ExpressionUUID->"bee5cd2f-c132-45a3-8131-\
9735d2e590e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"UtilityFunction", "\[Rule]", "utility"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7258056696760817`*^9, 
  3.725805714659498*^9}},ExpressionUUID->"5b345bfe-8a3e-4d97-8538-\
5823910b4eff"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7258057242682066`*^9},ExpressionUUID->"7f8d477c-0160-4faa-9ce8-\
79a845df924b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "[", "example", "]"}]], "Input",
 CellChangeTimes->{{3.725805731694826*^9, 
  3.7258057351693916`*^9}},ExpressionUUID->"d6b89107-d67f-4a34-8895-\
42dbac58b286"],

Cell[BoxData["5.522821329209576`"], "Output",
 CellChangeTimes->{
  3.7258057527764673`*^9},ExpressionUUID->"4f8ed544-f620-493f-98cd-\
d0eb52845769"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"p2", "[", 
      RowBox[{"example", ",", " ", "\"\<Distribution\>\""}], "]"}], "]"}], 
    "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "7"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725805755864341*^9, 
  3.725805794516245*^9}},ExpressionUUID->"18d005f2-8a92-41c0-b9d2-\
e32e808eae25"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
PWrVFIXQrS6uhhXvEdPs193j2qJgVP2E42JLC9Ig+oTFmIpCTBkprVGrCVXn
RVxwPywKNnu/P2tre4sAuxVobiEKJ9xuiyu6vEWGZ594ih8VBWq1BakvsRFZ
NS04ljiIQnWD9o2BdQ0o4PIF7W53UbBOlNhsR69HK2LX8FpPUdgmFmtS8KIO
hZZnaOZ6i0KVbbGv3Gn29/VQrYqbvyjcT6jty33xCqVoc8pwhojCzFOpZu/z
L1HFv8vrt10ThZxeMQIyqUFXZ6Ru7o4XhXv76Se+lz1HDkPV0noJorCwh2U5
IvEc8TbN7nVIEoX9mONN1moVsr5lF5qUIQrPihpPmrc/RYpRi6Tcu2x+FvEh
Vw48RZznEzMfZ4vCJydx21/vKlGhQ1NN8z1RALXPkjotFWhFftcq50NROOm7
7pbOWDlqE/9wlfxYFFLLviae8C1HeZSzG8VLRYG3KE05an05OjCftUejQhSC
w9LjymXLUOYrQpB7rSh8Vhk0/RdagrSP/pj7+l4UdvMeWE1lPUQiJqGXxz6I
Qvr+U2V8bg/QOM4SmW8Xhbzvu3jK6orRzU2matQuUSDvTrWMDihCQ7+qvQ37
2Pr1V52d4SlAlQNH1lsOiELmFrPt0573UVzHbILTkCjEnwoNbun9D+2q2lJy
cVQUCPUpF+br8tGVy4nTZdOi4BD9QKSrKA/ZBO4IfTUrCm7hLU2pCnlI6WwT
qe2PKLz4uzA2+CgXdZly7Pi5IAqCtaaqozU5aJvY2XNS6+gQqKkgkTSfhZpL
dcbjKHQ4v1DXS7iXjkKxsh83hOjw5Fd5dvFsGtrZsKn/Fo0OZ0Z5e3l10lBa
N3dXOoMOJypL9B9N3UZn1jW+Lpaig3Z6q/F6jxQkHqv+8rEMHQ5/jP/7vCsZ
fRS+X10uS4e1hnz5J7rJSHNLTOnzrXRoKJialZFLQvwHTbJalOnA8dg904GQ
iGq6qtM+qNKhUXqI0+vaTeR1XCGlQ40OxvbzZgepN1G3L/F6jwYdtLa3XlCX
TkD309qCJ/fSwf9xe6W1YzyykdsbMKNDB+IXm87aqeuI/Oix9189OnT5S5Ym
SVxHAXUJp1eN6LDlqOo64+txyHDc3IpgRgflldcfjXJj0Ir368MUczrENRcc
Uf4TjR6tqh2kWdLh5KaqKiXDaESniOqLWdPhZz7hkMzKFTSy+4uqwnE6pOaV
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
9///G0AtLlohoPnAPUZRZL8=
       "]]},
     Annotation[#, "Charting`Private`Tag$663234#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0000001224489796`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725805820587401*^9},ExpressionUUID->"58dc8a04-c49b-41b8-bdf6-\
0af06f005894"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"UtilityFunction", "\[Rule]", "utility"}]}], "]"}]}]], "Input",Exp\
ressionUUID->"c362588c-30e0-42c3-86f8-90cb4101cae8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7258060889749694`*^9},ExpressionUUID->"36d7c166-cfc7-49f2-b7e8-\
6ddc9efab14b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"p2", "[", 
      RowBox[{"example", ",", " ", "\"\<Distribution\>\""}], "]"}], "]"}], 
    "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "7"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",ExpressionUUID->\
"3fdf3a93-9512-4a63-a27e-8411cca510d5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nk4VVsUAPCbOcQ9595MV5KxMqSkIs9aZI6oniEVijRLZYqICkmkhERJ
g0oSZS4ynlsRCfU0IklKSYY08La/7vf77lr77LPP3muvOZv3rNkiwGKxRKex
WFO/y7PeKrNYg/DzxbTELTU34OX0x3djRQehbCJKTqvhBgTvK7LkSA+ChW7R
3qHWG1C44sQuDaVBoO9sSI7+cAN0ew1L7YwH4ahDSUadWA4oayU7pAUPwk21
5shUhxwQKloZvuj7ICSLv7BMfZsDjQ9LX3l3f4dH1LXKoWm5UIVflTcO/ABx
VQnt/FN50OLhuulW+wg0tF9Igth82OW+Lmh74RjcGxAL+N5cADtuFcmW3RsH
x9rtMxzhLkRftrzrefE30J0ns1WzCkG4f1FH+q2/kNcpmj86vxik2MVtZgWT
4BUqHWRVXALpX4s/KD9iYZO9WcGIdhl4hqFG/5NpOMA0LI7nl0Ohh7e3R7UA
Dr0ur66wvg9PCtbGi+cL4t1TV9tHqitANtcvdPKOEPLin880d30Ag+OaWy9e
EUbFlAk7qa1V8PubpFxcjghWBMDpjTrV0OBUcffmTVG8f/GjwtL+apgnLWYf
nC6GUotu/G1KqoEyv4ibCZnTMTo/NWnRilp4oZ4kuvq0OM7jt1w+86YWNI+0
zt2YJoHqcxfX2B+oA2PHd4sz0yVR6d/142rC9dDpF2USf2IG0k/98p+F1EOR
4boZ9aekcL2eepTb53rQGDqecSZZCisjCx+8+1IPZ3Pua3mnSWFzYgvb+2s9
HOQp2wpmSeFPm56R7d/rwexvb7RpvhTqaFfW7xirh6Yqf1ZlkxR+WqXvgIIM
fLRK/FEsIY3Ts7OzDRUYkHfmd1yPksaxadOK3SwYsDW+gltipXHn/nMp5y0Z
CFGJvDYnXhp5cbpx76wYeP3VKODcGWlMvXLhtqctAxdi8tgnLktjeI5kl4sD
A2plyVZ7qqUxp+R7tfw6BnQVvYsM/kqjwO9wz/6dDOhFKksdYLHxpOSSvdK7
GbAeTjB1EWDjne53ifq+DAS/3HmdI8LGjuJ9f4L9GHiZrR54YgYbVdJ2Rvz0
ZyAD0qhwRTaai9YqPA5jYM7eCOtNRmz0bJU9W5zAwHE4IL3NmI0CvfZhrScZ
GJqx77mvCRuHI/eafktkoC7Hy/ugGRvFT7VsUU1iwKfHMiLVlo2b5+sphKcy
kOsyo/SJGxvbdJsl/mYysMzknKZRKJlf4dOvs/MZyJJM+ophbDy6oMlDroAB
8VdxRVaH2Kh8JiFH+g4Dr4LCVjgdYaPFhsrGX3cZCC/w9PCLY6Nx2G2oLWGg
Vk0zNTudPK9X9oHiAwZWSRSKcO6z0S4YNb83MuAudV19rIKNapvL9xc/YcCX
yjB/9YCNOuXc+yFNDMTLHj18uZaNzvIsZD1loFH13wn9BjaeGWyiJp8xsNJ4
eOTfl2wMWJfDNPxH1nf34g8pP9m43Hwv/+J7Blz95gqF/mKjddcnd4seBrbt
V1T1+MNG0Sa9b33EMQeENmmyKBQ/8XRcu5cBJqrtdYkohb2cwcLrfQxYXPBv
+0+GwpiGj7d9Bxgway6sVTCg0G1j07zFowxc0tEP1FxK4dz3Nbk1xAInCuYu
NqRwl2PqmMMYeX/rvHj7fyjc6h3V4/OTAfOaay4RFhQu6BeVj/5Fxi869/mD
E4Wm+e0dsRMMZHPkLwy5UGiplfxUaJIBkX2pjpPrKFTV64oPJ2Z0zxTJuVNY
3vZ0vS+LD5bX4w+t9KEwaNeYGQjwwTo9glMQSMZLsNfNFubD9fGJ+opgCrna
8lEzRPgg5hoW/DiEQhERx6z9xI+4IW/eh1N451fFPGNRPtgm7L8mE0Ph7bpX
wZVifMj58n2daiyFUVU4zpvOB/GVfpJ6cRSu1EsyCSZuEN291+Ykhbst62V1
xPlgF+mz/GAqhcrODQLHJPiQ+65n4FgahTppojdeEUuaeF1MTqdwWLOKoyvJ
hye/PIRvZ1JY77R3STPxKv91zV3XKOSZ7b4tIMUHh612XlalFNrpGG/RZfMh
YcPFSNtyClMTMtV3EzetHs60v0+hgcziohziVcYZr9dWkfVJeWyqQpH5UF+c
PB9SmHX1lrQgzYcTIujv9ZjCrqVp1suIG38nnfZppHBhma/jLuKVvcubdz0l
67+npPEpse29OOsD/1FYY/8pMI7Dh+P573wOvqRQ4o6dRgnx46v6UYdeU9ie
6X6li9gm8VV1VCeFJn37JfW5fDgWtaDzWDeF27N2jK4jfhhyZCKuh8L5WaN5
h4itt2gtP91H4QGjkjj+VLzboXXJ/RQG3+q8/Wkq3qE16OwXCn/Ix14Sn8kH
K6PQwguD5P90sx/WxNELmp9lDVEoJmy72oeYUVP9fmWYQnWqIuwwsaV0g87N
nxQerm0zLZmKF5ptl/eL7GfDvR3NU/Hj+3YU/KHw8vdt8JFY5BtzrHCCQmvb
0v1/iS16FK6VsGhc1bI+kJbhw9EO3/pyARpZ5o5WGsR1TTXvK4Ro5J483buM
2Lxsh3KdGI37V42cdJuKz6s04YvTuDGWfW77VPxleuNjSRr75u3ZF0QslOYT
+kSKRiFxafmjxCsSytOesmmcof81/iTx4SNSpa00je1vxFvSiGuCNz9/zqXx
8j6v7kvEAr7Fwx0yNOrGjlbnEJt5iXPeyNGY3Vezp2Aq39V9YacCjXkx/M/F
U/n2dxzeK9K44YTgkntT+StEfHuVaDSxC1xVSWy6zO3EJ2Uane1mG1QRR+jk
5XxRoXGW6cSnKVepCDz6pkZjhBRn95RZcs4fhzRo7OZvrJzKxxk5wqNzaVTM
f/tmavwIgQnV8fk0hhmmNJRM5Y+tNvujTeMj4aiYO1P5A1c9J3VpXNZ7k8ol
hu7xcIGFNIa8kthxhTj8hf15YX0aC2ZmJ6YTVzZm3RMzoNF/ODTqFPFE9UiH
xFIan4qctI4mNimx+SllSKO5RFfHAWL1rrO+34xofNFQobObWFKir6fZmMaO
qgtBHsQ/Fi9dn29C49K6qBJH4pfu0S2JSOPDVv8BJK4+1m6114xGa8pXXo/4
+h21ytXm5HvW7F+uRBwgUptDW9O4ziZv0xjZLxv06Dk/bGiUdO/b0k1s5rYp
tXUl+d5ehp6NxOy8ySNnHGiMWam99DxxrpPxRhkXGmdnFvguIk46FNc66kpj
rPOE6kzikBsvbV640ThSGNY8OnVe/gYvOetO47bPatNLiN9fKZJW8KHxc3Gi
qBbx4yah6F9baYxWHfAVJs7/ufbPy+00nuy52PiWnM9wu6G+9N005nup7kwg
VhjWrZkVQOPE/AUGXeS8T1MKXzYRSMbjdjrcJe6zepL3NpjGhaMzNx0lLk7f
mZ55kMZzcvO3qhKvXnHdf85RGqOE8wScSL1Ztnusf1o0jVb/wTMlYqVUy03d
MTTCsvizH0l9+tLfY385jkbD08HTA4mPnZ6jqZ5Eo5fyzrBoaT7sue93XjiZ
xuS2AkFrYufeB5zeFBpL039EiBGrGrmzrp2jUbXxuGc0qY+VXec65l6ike/N
KgqYwYcRPe4J7QIar/eb3VMh9Va7eCDZ4C6NrV1//jSS+uy9nJ9pUkSjZVqV
aCDxM4uQu45l5PmXMoLrSD3Pc+t86V9N43oHg0drSP3fdjR3XkULjVpVvxcZ
kPskc3q0PtNKo2m3vmSjEB+eJ3j809xOY+q27bc3EVuk0au7OmhcZML+N1aQ
Dyp5wcHC3TT6Ci2UezyND69fmPPth8h+HQpPp8h9x9mo1OI8TGMg/61i8l/S
j3WPvfQYpdEl0XO7LHHZl5yve3/RONYg7y33h4GUaZRMigAHj2hmdEuQ+9NR
6433W5qDKjE2MmUjpN8JDxDYo8/Bz3tCR7S/kPt5ma23kwEH32hZfDjzmYHI
ISVm+VIOLq7wfvy7nwETn4exYss5CC/G/ZlPDJTY86hLZhw8pthq7/CRgRzF
6tntqzn4LGzfnAXdDCSWS/6z3I+DLt2rv2u+IP2Kf9eFOfs4eCttZ4nvcwbs
dYtZYv4cDHlQG1DYTvqlSx51bUEc3NKc/Mq4jYEjsXdW+h7iYLFCyirTFgYC
XV3dshI4eP692ie5BgbWj14OEr3FQf3ynHzBSgbkrFZZ9ORxUKvAg6VbwcDz
1J90dT4H1RMGnVzuM7DG0D4vpJCDdrNkOdfKyfodHO0ZuEfmk5jynxHpv4wE
bNa0PeZgyeyqG/qkn5OT+qqd1cdBCT+nJTuzGGhTX9ZtpMZFHR3BgZ8RDHS3
7FqBGlxcc1xZt+kQA4NhWVcs5nKxy3zhmkvhDMx4Lr7VUZuLe2I+rLA6yIBl
9JvPWxZz8Znv7WdHghgo7T08kmjOxQ8jgnw+6XfPX3si9tGbi55JMhsPkv7Y
Z57XgqSrXMT2T66XdRhQFE/qC7jGxXmhL5JWajPQ0l+T5XqDiy7HarqG5jNg
nKvCVbrFRYdGqxKTuQxQC7p/Xi/k4kcZmVUNKgzcX7ypprKWi6fb3NaWyjJA
o4dTfxcXzaLNRd+zGHjgvD7UVGkmWm1d8zDqaT0sdO2/wc2aiVIinSP319fD
jiOWL/7hyeB4EndzXWcdRPuI/ZqWJINGyyLVNDbUwb1Zmyb7ubJo094/yaqq
hZKJaMH5CbIYJ7Y2c0C1FhrvruiPp+Tw4FXDxAG/GqhV9mFOnJZDxaaAqNzS
ajhc4pTVJS6P3i5dGUdFqsFN5bX7+nh5PBdi3jwEVTBevICnJaqAERN2ZtnC
DyBE8FNjcrgCyn4pn26WUAFcNcNN6iweim/JGw0ZvgcBvs7D4gd4uMjZRnJ2
YDkoLPF+qBHKw6ufj2gF7SmHyr97M8zCePh2kV5Q87ZyEIuPNw+J5GFJd3FK
xPpyyLhZd+ZTLA9Pb/AU/4DlUNe3yODhOR7eHE3YXCJRDhwv6cCo+zwsrgmt
jM4qg9L5s2yzKnl4LFf80YdzZbBhaL5SRRUPI7fulLE4UwbZkZbMcB0P/y33
OCgUUwZGF8NkvJ/wsNvY4Fj0rjLY/OZzsdlbHn7r6l56dmkZiF4dP+7eycO+
fNvq33plkLtL1COkm4eVIx5nPeaXwehvFdE7vTzMfWe6aO6sMjiu4OYy5xsP
l2zM1KwQKIMF3Vu1/vlO5pOut1D1Tym03QiYdP3Bw7Wu/PjYkVJQMjx1LXGM
h2VDuWYufaVQy8oMzR3n4V8ph4zKrlLY9jDX4eFvMj+N8ys1XpWCZGK5as9f
Hjpb4OqEtlIocHk4NjnJwzzDrlujT0rhf+6eZRc=
       "]]},
     Annotation[#, "Charting`Private`Tag$732695#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0000001224489796`, 0.050311254338268385`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7258061012030087`*^9},ExpressionUUID->"94e05556-1fa3-487c-9d90-\
2e5fac5aa904"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "[", 
  RowBox[{"example", ",", " ", 
   RowBox[{"UtilityFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"DiracDelta", "[", 
       RowBox[{"#2", "-", "#1"}], "]"}], "&"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725806120722204*^9, 
  3.7258061502898607`*^9}},ExpressionUUID->"edc62697-8f73-463e-a16d-\
be16fde8c445"],

Cell[BoxData["4.53428571280577`"], "Output",
 CellChangeTimes->{
  3.725806152376481*^9},ExpressionUUID->"2c9197af-1e66-4de5-8c5d-\
4cb2af4f3c56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
   "\"\<NameAge\>\"", ",", " ", "\"\<Claire\>\"", ",", " ", 
    "\"\<Distribution\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725806172056295*^9, 
  3.7258061990800905`*^9}},ExpressionUUID->"d3ef8cf7-60d0-4aaa-bf53-\
0299d2c06986"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DataDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQrbh4+4v//3/vZ4ACN0n3p76rfsH5EVZTuO6Z/4Tz
PR26O37d/Q7ny+Xe/Xm/6xuc/8Dl7WR26a9wfiPj8rbdhz/D+QKZcos2+n+C
85u+f9hQ8OgDnL/86i2DCun3+3fItb4O3LHPXkXIP3CyxRs4P0FCXPl420s4
PyVn6u2eR8/gfCex/qfXWJ7A+fc77yywjHgI569e5hXt+OQOlH/PXv2qh5Ox
8XU4X2H6u+6wJxfh/DmcYh9ZXE/A+U/EbeTruXfD+QLRZo7bOfrg/EdCNpKH
ZDbbH/6qEdN/6Kn9zECGE68sjsD5EU6ltsknz8P5fG1ny/Z4XYXzE88XNy6e
egvOb9g28csBzQf2s2aCwEn7CbtFy6dffwTnH8uSW/Fy31M43+RMwaeVM17A
+U+S87sDHV/D+TuXfrpUovwOzn/BN3GLfdYHe1j4CCzx5fmz+yOc79XnY12m
9RnOXzp5oWBKwxc4X/idxX7+z1/h/EXJaiL6vt/hfN9NO0pbF/yA2nfTnjus
d91MgV9w/iuRHX2KGb/h/Nsaqm7pd/7A+S9FzbmeeP6D88Xl5pdemfcfzl+z
VyXGsYPBAZZ+7v5UCbxkwgjnz1lUfubfXQT/aWm2cddUJjh/XxhX3nkHZjh/
wsXoL///I/gAmJdvuA==
              "], {{{}, {
                 EdgeForm[], 
                 Directive[
                  GrayLevel[0.85]], 
                 GraphicsGroupBox[{
                   
                   PolygonBox[{{9, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35,
                     34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
                    20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
                    10}}]}]}, {}, {}}, {{}, {}, {
                 Directive[
                  Opacity[1.], 
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5]], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50}]}}}], {
             DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, Background -> GrayLevel[0.93], 
              BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None, "AxesInFront" -> True}, 
              PlotRange -> {All, All}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
              Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Histogram\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["95", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQrbh4+4v//3/vZ4ACN0n3p76rfsH5EVZTuO6Z/4Tz
PR26O37d/Q7ny+Xe/Xm/6xuc/8Dl7WR26a9wfiPj8rbdhz/D+QKZcos2+n+C
85u+f9hQ8OgDnL/86i2DCun3+3fItb4O3LHPXkXIP3CyxRs4P0FCXPl420s4
PyVn6u2eR8/gfCex/qfXWJ7A+fc77yywjHgI569e5hXt+OQOlH/PXv2qh5Ox
8XU4X2H6u+6wJxfh/DmcYh9ZXE/A+U/EbeTruXfD+QLRZo7bOfrg/EdCNpKH
ZDbbH/6qEdN/6Kn9zECGE68sjsD5EU6ltsknz8P5fG1ny/Z4XYXzE88XNy6e
egvOb9g28csBzQf2s2aCwEn7CbtFy6dffwTnH8uSW/Fy31M43+RMwaeVM17A
+U+S87sDHV/D+TuXfrpUovwOzn/BN3GLfdYHe1j4CCzx5fmz+yOc79XnY12m
9RnOXzp5oWBKwxc4X/idxX7+z1/h/EXJaiL6vt/hfN9NO0pbF/yA2nfTnjus
d91MgV9w/iuRHX2KGb/h/Nsaqm7pd/7A+S9FzbmeeP6D88Xl5pdemfcfzl+z
VyXGsYPBAZZ+7v5UCbxkwgjnz1lUfubfXQT/aWm2cddUJjh/XxhX3nkHZjh/
wsXoL///I/gAmJdvuA==
              "], {{{}, {
                 EdgeForm[], 
                 Directive[
                  GrayLevel[0.85]], 
                 GraphicsGroupBox[{
                   
                   PolygonBox[{{9, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35,
                     34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
                    20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
                    10}}]}]}, {}, {}}, {{}, {}, {
                 Directive[
                  Opacity[1.], 
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5]], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50}]}}}], {
             DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, Background -> GrayLevel[0.93], 
              BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None, "AxesInFront" -> True}, 
              PlotRange -> {All, All}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
              Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Histogram\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["95", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"6", ",", "99"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel",
     DisplayFunction->(
      ButtonBox[#, Active -> False, Alignment -> Left, 
       Appearance -> {
        "Default" -> 
         FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
       FrameMargins -> 7, BaseStyle -> {}, 
       DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
       Baseline]& )],
    DynamicModuleValues:>{}], "]"}],
  DataDistribution["Histogram", {CompressedData["
1:eJwB9QIK/SFib1JlAQAAAF0AAADqOdQfyiSmP+t4sa+nBaY/srIlhVQhpj90
1dVHftGkP3w4kX5h26M/rgtOa7rpoz/JchgW0UuhP11Tg5TWcZw/lKmeFymS
nj8/+TM2dlGgPxDPhEKKHp8/xjk6j1mjoD9PekDoPPWgP7UUIqMOHaE/CGg4
nCC4oD/yieimztqbP+KB6VilGpk/1VET4fuulj8hYqpWkTSUP7GE8ka5qpE/
SlIhJ74hkj/3FlFXk/qQP9B5My2CS5E/J97z8nTLjD+x27cw3LWIP2m4eTzq
zYY/EyeiWqRchj9cLkxeIUmEP0VjCARe3IA/hXBtc9mDfT+msDO4xSJ8PxHJ
UCAje3c/BeN7eoWecz/xeqmmm1FzP54X8b3/JHE/CoRy8Z8JcT8W1UWRzc1q
Px7nMcAKTWw/EK6Ilq2qbD9V8uuVQSFwPx1Vvaf/tmU/awspwubSZz8FJ7QH
wBprP78RPedCG20/uzyovF1waz8FBtryr49tP7GRr2lLLXM/KH4KfVbvcz+4
W7/XGmB0PzbwY04ueHY/DlpGUnEOez/76Q777gV7PzEA5p466n0/G/dw/BVh
fD8JDGVEeSt7P/MzkkDlVX0/3IrBQhUZfD/uxA8Ury58P1lh2vfxBnY/Eibh
tAQHdz/GuRCJA/d2P5O26MimkXY/yNofsUcMdj+brpCfcyZxPyUXTKuWLHA/
zUWCtjqfcj9hptIsiZFxPx5wiOyAAG0/wFlMNWuSaT8BOl1iC4xpP03w27FE
fmo/eCQRmrKGaD+6BCLHUoBoP0g9EcyfMGM/kEbGEfYYZj9w5yAcsfNjPxSp
LSXliWY/MFzSvDpXZz+h8hJpTAdWP7Q9b6uI8FY/8Zk1qSArWT8LSlJnCodb
P2Zos1+GrFs/Q8WD0WMcUz+OXXhyy3pTP11QgTWrplQ/UPuHYDW7Uj8QJBAs
ugFRPyRvbG726kE/AH2B0iHYPz+zbwUP1X8+PxdVDYg7zzs/859fvR6wNz8Z
Akod
    "], {6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 
    24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
    42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 
    60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 
    78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 
    96, 97, 98, 99}}, 1, 95],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7258062055943613`*^9},ExpressionUUID->"951dd898-edda-4d36-b1b7-\
5dff9ef1e360"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"distribution", ",", " ", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
   RowBox[{"Exclusions", "\[Rule]", "None"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7258062171365643`*^9, 
  3.7258062512052374`*^9}},ExpressionUUID->"f05ea6f5-b1a6-402c-a0ce-\
c56e304ebe2f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN23c4UP8bN3A7RSJ7JEmJJNIwO4fslR2FVGTL3pusJCRJoSIrZSZkJ0mo
pBIqShJ9hWSP5/dc1/N4d/451+uP+37fnz8+17nuP86OsxcMbKgoKCieU1NQ
/N+34JWV7Ez+pqMU/+95TC+y3dkui/j/bvJ9mLPHrnjdrRJutnR2Detui+9W
/2v7at0vZCOqf9l+WXd7Ur/bqO3vdWvWbdAdsV1bd+fmwxtpLJjJ/+9ura1p
XYFwb+zE7hu34GHaPGXxAXh5hTPU9BTLukUnFmaLzLauO6arbtjYhG3dCYzp
HgLecIqmN9X4NTirVVwg9B1cWZ91qtCIfd3fH4Z1rxpwrHvsl8WZF+7wpKjs
5NVkeDl3erNIN8yWdU7DUJ9z3TyfiN5tbrAAL5/taCK893pPZNBrWOJdCav6
JHyY9fLdrcxc5JhMz/Z2oVxCXt9e8tN+WOmKSmPecVjK/gnDmjr3uoWOSZ4w
UeJZN5/Er2XKBph9W97dB3K8606+GulF7Q8zbTqrblYFaz97LRn5AY4LJXiL
Z+E2uYc0fex85LhvaXEebS5BN8c3QXMInnudLGMuvm3do4X0F8uF+dc9eP2p
6Okc+GNk8OtNO7av22TpVLbVabjbTca7MgNm3pd/eqgW1h3l0GAcgOOzLx44
sgTb7F/cLLlZgCwr23XRaEcucTfBtt05Bf7yX09UIe+OdQdnMHxXPw3z6Sgd
+3EXHs+xcK9sgWuWfe9cHIHv5tPJOM/BcUYpr43oBUnPd+/Ugt/kEO4Ugnby
3LBZUfHaTlE4lWFbrVUp/NYhzjdDeifqeZreywXCzO1zB/sa4Hmvix1Nr+Ev
O1itC4bg1s7bS4nT8EM/8au+1EJkoHRS8Jn+bCL4jUaz2i5YR8RmikMNrjk6
qqjzDN5t5JgccWzXugc+F9VkhsNX7Se+VjfBZMdqUegbeEJ8i4/aEHwrabsi
0xSsObOf4R3FbvIhg65jzc9s4l61XtZZAZgixE1qkoCdUmYidtfDHwt8eszl
hdedeLB62ScAVm1YFLpaA9+J5K0W6IOXNeR1Hi7AhUXanF4b95Av3Lk43mjd
IU5ssRiS44Zp3J3vU4nAZT1BXi+k4XPm5QOJTTDb8OgxU02Rdf/Ki5h7kgA/
c+S/v/0tXMtHmyY9DJd1jkfq/4Xzg7vdHOhESQvDiJT3breIzP3VlhGccFxS
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
       "]]},
     Annotation[#, "Charting`Private`Tag$758136#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7258062535909643`*^9},ExpressionUUID->"be9da28f-8e43-4f81-96e5-\
e2b5f22a975e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Predict", "[", 
  RowBox[{"\"\<NameAge\>\"", ",", " ", "\"\<Claire\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725806312053076*^9, 
  3.7258063268336067`*^9}},ExpressionUUID->"adc40aa3-9fd8-4b90-b4c9-\
7b1ca4791d91"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{
  3.7258063274632034`*^9},ExpressionUUID->"e01b2a8a-b618-4802-877d-\
d1d957ac65be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Predict", "[", 
  RowBox[{"\"\<NameAge\>\"", ",", " ", "\"\<Claire\>\"", ",", " ", 
   RowBox[{"UtilityFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#2", "-", "#1"}], ")"}], "^", "2"}]}], "]"}]}], ",", " ", 
   RowBox[{"IndeterminateThreshold", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7258063327515163`*^9, 
  3.725806394706066*^9}},ExpressionUUID->"d8bd76a0-9da6-4173-8e5f-\
d255d4cfcc98"],

Cell[BoxData["26.72217152356815`"], "Output",
 CellChangeTimes->{
  3.7258064096813993`*^9},ExpressionUUID->"7945c1d6-3ff5-448e-acc5-\
2263e69caf51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"traingingset", ",", " ", 
    RowBox[{"ValidationSet", "\[Rule]", "validationset"}], ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", " ", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7258064582085834`*^9, 
  3.7258064937954397`*^9}},ExpressionUUID->"36b9f060-e3b5-4ce2-8ff3-\
051e798194e2"],

Cell[BoxData[
 TemplateBox[{
  "Predict","mlincfttp",
   "\"Incompatible variable type \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"Numerical\\\\\\\"\\\"}]\\)) and variable value \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"a\\\\\\\"\\\"}]\\)).\"",2,428,78,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725806495588334*^9},ExpressionUUID->"0b36ea57-2dff-4a83-a3ae-\
15ac14ed70f2"],

Cell[BoxData[
 RowBox[{"Predict", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}],
     "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"a\"\>", ",", "\<\"b\"\>", 
      ",", "\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"b\"\>", 
      ",", "\<\"b\"\>"}], "}"}]}], ",", 
   RowBox[{"ValidationSet", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.1`", ",", "3.5`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.9`", ",", "3.`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.6`", ",", "3.4`", ",", "1.4`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.4`", ",", "2.9`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.3`", ",", "3.`", ",", "1.1`", ",", "0.1`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.8`", ",", "4.`", ",", "1.2`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.1`", ",", "3.5`", ",", "1.4`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.7`", ",", "3.8`", ",", "1.7`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.1`", ",", "3.8`", ",", "1.5`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.2`", ",", "3.4`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}]}], "}"}]}], ",", 
   RowBox[{"Method", "\[Rule]", "\<\"LinearRegression\"\>"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7258064957217045`*^9},ExpressionUUID->"d3b26ce1-5dad-40f4-9334-\
5465d49972ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"ValidationSet", "\[Rule]", "validationset"}], ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", " ", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7258064582085834`*^9, 
  3.725806523511692*^9}},ExpressionUUID->"cd31e436-e0c5-492a-8ebc-\
e5254de9b93a"],

Cell[BoxData[
 TemplateBox[{
  "Predict","mlincfttp",
   "\"Incompatible variable type \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"Numerical\\\\\\\"\\\"}]\\)) and variable value \
(\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"5.1`\\\", \\\",\\\", \\\"3.5`\\\", \
\\\",\\\", \\\"1.4`\\\", \\\",\\\", \\\"0.2`\\\"}], \\\"}\\\"}]\\)).\"",2,429,
   79,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7258065250809035`*^9},ExpressionUUID->"383283ea-0e74-411a-a7c7-\
fbe3ed398e84"],

Cell[BoxData[
 RowBox[{"Predict", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "1.1`"}], ",", 
     RowBox[{"2", "\[Rule]", "4.4`"}], ",", 
     RowBox[{"3", "\[Rule]", "6.1`"}], ",", 
     RowBox[{"4", "\[Rule]", "7.1`"}], ",", 
     RowBox[{"5", "\[Rule]", "9.2`"}]}], "}"}], ",", 
   RowBox[{"ValidationSet", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.1`", ",", "3.5`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.9`", ",", "3.`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.6`", ",", "3.4`", ",", "1.4`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.4`", ",", "2.9`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.3`", ",", "3.`", ",", "1.1`", ",", "0.1`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.8`", ",", "4.`", ",", "1.2`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.1`", ",", "3.5`", ",", "1.4`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.7`", ",", "3.8`", ",", "1.7`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.1`", ",", "3.8`", ",", "1.5`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.2`", ",", "3.4`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}]}], "}"}]}], ",", 
   RowBox[{"Method", "\[Rule]", "\<\"LinearRegression\"\>"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.725806525156116*^9},ExpressionUUID->"55b39359-eb85-4bd9-9d21-\
4f0968e89eaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"ValidationSet", "\[Rule]", "validationset"}], ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", " ", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7258064582085834`*^9, 
  3.725806547513193*^9}},ExpressionUUID->"8d5571a7-53e1-4129-989d-\
0b856758b1fe"],

Cell[BoxData[
 TemplateBox[{
  "Predict","mlincfttp",
   "\"Incompatible variable type \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"Numerical\\\\\\\"\\\"}]\\)) and variable value \
(\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"5.1`\\\", \\\",\\\", \\\"3.5`\\\", \
\\\",\\\", \\\"1.4`\\\", \\\",\\\", \\\"0.2`\\\"}], \\\"}\\\"}]\\)).\"",2,430,
   80,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725806551361388*^9},ExpressionUUID->"f026405f-dc68-450a-957d-\
36dc5aaf17b5"],

Cell[BoxData[
 RowBox[{"Predict", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "1.1`"}], ",", 
     RowBox[{"2", "\[Rule]", "4.4`"}], ",", 
     RowBox[{"3", "\[Rule]", "6.1`"}], ",", 
     RowBox[{"4", "\[Rule]", "7.1`"}], ",", 
     RowBox[{"5", "\[Rule]", "9.2`"}]}], "}"}], ",", 
   RowBox[{"ValidationSet", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.1`", ",", "3.5`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.9`", ",", "3.`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.6`", ",", "3.4`", ",", "1.4`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.4`", ",", "2.9`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.3`", ",", "3.`", ",", "1.1`", ",", "0.1`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.8`", ",", "4.`", ",", "1.2`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.1`", ",", "3.5`", ",", "1.4`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.7`", ",", "3.8`", ",", "1.7`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.1`", ",", "3.8`", ",", "1.5`", ",", "0.3`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.2`", ",", "3.4`", ",", "1.4`", ",", "0.2`"}], "}"}], 
       "\[Rule]", "\<\"setosa\"\>"}]}], "}"}]}], ",", 
   RowBox[{"Method", "\[Rule]", "\<\"LinearRegression\"\>"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.725806551434591*^9},ExpressionUUID->"d8b11fae-9c68-4129-bf84-\
533adc9a4b16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<WineQuality\>\""}], "}"}], 
     ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7258547258761177`*^9, 
  3.725854774685356*^9}},ExpressionUUID->"621cfeed-7e7f-41c8-9caf-\
e1fc9ad7e43a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3600", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725854811211342*^9},ExpressionUUID->"7f8badbf-fe85-418d-8906-\
cc5d64f44381"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p1", ",", " ", "\"\<L2Regularization\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7258548489676723`*^9, 
  3.725854868572289*^9}},ExpressionUUID->"0c62c733-cb95-4eb2-b950-\
b69c16e7f577"],

Cell[BoxData["0.0001`"], "Output",
 CellChangeTimes->{
  3.7258548697616105`*^9},ExpressionUUID->"c6dead0e-5012-475c-ad25-\
9ca091a17398"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"validationset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<WineQuality\>\""}], 
      "}"}], ",", " ", "\"\<TestData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p2", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"ValidationSet", "\[Rule]", " ", "validationset"}], ",", " ", 
    RowBox[{"Method", "->", "\"\<LinearRegression\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Pre", "[", 
  RowBox[{"P2", ",", " ", "\"\<L2Regularization\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.725854877948432*^9, 3.7258549524626584`*^9}, {
  3.725855000093085*^9, 
  3.725855032479951*^9}},ExpressionUUID->"062d09b3-3252-4632-86c1-\
9df4889a4719"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3600", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7258550672279444`*^9},ExpressionUUID->"63c1a64b-55ae-4c52-8cc2-\
4278fc24e7a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"P2", ",", "\"\<L2Regularization\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725855089127271*^9, 
  3.7258550916462994`*^9}},ExpressionUUID->"f44f348e-705e-499c-b484-\
9e4327b1c3a6"],

Cell[BoxData[
 TemplateBox[{
  "PredictorInformation","wrgarg",
   "\"Input should be a \\!\\(\\*RowBox[{\\\"PredictorFunction\\\"}]\\)\"",2,
   437,81,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725855093066759*^9},ExpressionUUID->"46ded4c5-0ba0-4cd8-b84b-\
66f27f0bab9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p2", ",", "\"\<L2Regularization\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725855097674116*^9, 
  3.725855097979967*^9}},ExpressionUUID->"09fe8174-b1de-4b7d-8f2b-\
a2ddd48a67bc"],

Cell[BoxData["100.`"], "Output",
 CellChangeTimes->{
  3.725855099399933*^9},ExpressionUUID->"f19d5af3-57e6-4e05-96fd-\
2a830644adf1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<WineQuality\>\""}], "}"}], 
     ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258551168085375`*^9, 3.7258551168666983`*^9}, {
  3.7258551579448776`*^9, 
  3.7258551597649546`*^9}},ExpressionUUID->"9288fe7f-88ff-457c-b9e3-\
ab4d139d5808"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Predict", "[", 
    RowBox[{"trainingset", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7258551642098627`*^9, 3.725855164263513*^9}, 
   3.725855205503607*^9},ExpressionUUID->"d0d3cd6c-5b68-42dc-a862-\
bda106d9b3ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PredictorInformation", "[", 
   RowBox[{"p1", ",", "\"\<L2Regularization\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.725855171248514*^9, 3.7258551713041706`*^9}, 
   3.7258552100497923`*^9},ExpressionUUID->"7b1f8dc0-f48e-4ab6-946c-\
0215a3b92be0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"validationset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<WineQuality\>\""}], "}"}], 
     ",", "\"\<TestData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258551789540195`*^9, 
  3.72585517900817*^9}},ExpressionUUID->"0bc629b7-466a-4aaf-b462-\
a6aa826658c5"],

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validationset"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725855185640687*^9, 
  3.7258551857018576`*^9}},ExpressionUUID->"9b96b047-d576-4bd3-8f98-\
39cc3694661f"],

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p2", ",", "\"\<L2Regularization\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725855191995925*^9, 
  3.7258551920525827`*^9}},ExpressionUUID->"240d6d8e-2646-44ba-94b2-\
da2314ea6c19"],

Cell[CellGroupData[{

Cell[BoxData[{"100.`", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<WineQuality\>\""}], "}"}], 
     ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Predict", "[", 
    RowBox[{"trainingset", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PredictorInformation", "[", 
   RowBox[{"p1", ",", "\"\<L2Regularization\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validationset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<WineQuality\>\""}], "}"}], 
     ",", "\"\<TestData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p2", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validationset"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], "]"}]}]}], \
"Input",
 CellChangeTimes->{{3.7258552176560106`*^9, 3.725855262575581*^9}, 
   3.725855337932076*^9},ExpressionUUID->"7bceb6df-ce6f-40e6-92b3-\
8fc8f4012a2e"],

Cell[BoxData["100.`"], "Output",
 CellChangeTimes->{
  3.7258553408522615`*^9},ExpressionUUID->"cbcd2735-dd1c-4e59-b4cf-\
5c34fd8ae7d4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3600", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725855386672116*^9},ExpressionUUID->"0545ce01-4a8f-4ecf-9f2a-\
277f450ff057"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p2", ",", "\"\<L2Regularization\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7258554012848806`*^9, 
  3.725855401345047*^9}},ExpressionUUID->"f1f6bc9d-e28e-4ca5-9b04-\
05c5a809cf24"],

Cell[BoxData["0.0001`"], "Output",
 CellChangeTimes->{
  3.7258554026813345`*^9},ExpressionUUID->"def05c28-a6ce-4382-a3ac-\
58f296797030"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p1", ",", "\"\<L2Regularization\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.72585541129287*^9, 
  3.725855411352602*^9}},ExpressionUUID->"a3846298-5094-45e4-842f-\
c5bd4feaf88a"],

Cell[BoxData["100.`"], "Output",
 CellChangeTimes->{
  3.7258554121795993`*^9},ExpressionUUID->"facdd1de-fede-4448-8923-\
c6a49bf92d03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<BostonHomes\>\""}], 
       "}"}], ",", " ", "\"\<TrainingData\>\""}], "]"}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", " ", "\"\<Quality\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7258554347665567`*^9, 
  3.725855491277323*^9}},ExpressionUUID->"067b5706-107d-4278-b351-\
d46afc42aa7f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["338", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7258554808556833`*^9, 
  3.725855514074899*^9},ExpressionUUID->"a40bc06b-b40e-4dcf-919f-\
26c7785c299c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", " ", "=", " ", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", " ", 
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<BostonHomes\>\""}], 
       "}"}], ",", "\[IndentingNewLine]", "\"\<TestData\>\""}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725855535547579*^9, 
  3.7258555770135107`*^9}},ExpressionUUID->"8ded8d21-d830-4962-a390-\
fd4da30af0e8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{}, {}, {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   Dashing[{Small, Small}], 
                   
                   LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                    11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                    GrayLevel[0.4], 
                    PointSize[0.09], 
                    AbsoluteThickness[1.6], 
                    
                    PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["168", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{}, {}, {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   Dashing[{Small, Small}], 
                   
                   LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                    11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                    GrayLevel[0.4], 
                    PointSize[0.09], 
                    AbsoluteThickness[1.6], 
                    
                    PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["168", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"StandardDeviation: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "5.6454393625279495339`3.1898568668746474", 
                    "\[PlusMinus]", "0.6319096587021175715`2."}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725855585661134*^9},ExpressionUUID->"b68c81ca-cc38-404f-bf6b-\
feae71d8083a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7258556089487596`*^9, 
  3.725855619186263*^9}},ExpressionUUID->"0a419fb0-0e08-4b0a-9f39-\
ea9cdd250d7b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           GraphicsBox[{
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             AbsoluteThickness[1.], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CircleBox[{0, 0}, 
              Offset[{1.8, 1.8}, {0., 0.}]]}], {0., 0.}], CompressedData["
1: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
Q9l6JPDFy4YeqZ7lFwX8D+EV/zo=
          "]]}, {}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{30.431859370082716`, 24.}]}}, 
          RowBox[{"{", 
            RowBox[{"30.431859370082716`", ",", "24.`"}], "}"}]], 
         Annotation[#, {30.431859370082716`, 24.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{29.110711159767675`, 36.2}]}}, 
          RowBox[{"{", 
            RowBox[{"29.110711159767675`", ",", "36.2`"}], "}"}]], 
         Annotation[#, {29.110711159767675`, 36.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.66293031686066, 28.7}]}}, 
          RowBox[{"{", 
            RowBox[{"25.66293031686066`", ",", "28.7`"}], "}"}]], 
         Annotation[#, {25.66293031686066, 28.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.41928840591027, 22.9}]}}, 
          RowBox[{"{", 
            RowBox[{"23.41928840591027`", ",", "22.9`"}], "}"}]], 
         Annotation[#, {23.41928840591027, 22.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.675153219132774`, 18.9}]}}, 
          RowBox[{"{", 
            RowBox[{"19.675153219132774`", ",", "18.9`"}], "}"}]], 
         Annotation[#, {19.675153219132774`, 18.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.54987156077807, 20.4}]}}, 
          RowBox[{"{", 
            RowBox[{"19.54987156077807`", ",", "20.4`"}], "}"}]], 
         Annotation[#, {19.54987156077807, 20.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.10103926136739, 18.2}]}}, 
          RowBox[{"{", 
            RowBox[{"18.10103926136739`", ",", "18.2`"}], "}"}]], 
         Annotation[#, {18.10103926136739, 18.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.839015282888422`, 15.6}]}}, 
          RowBox[{"{", 
            RowBox[{"15.839015282888422`", ",", "15.6`"}], "}"}]], 
         Annotation[#, {15.839015282888422`, 15.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.087940512531393`, 18.4}]}}, 
          RowBox[{"{", 
            RowBox[{"20.087940512531393`", ",", "18.4`"}], "}"}]], 
         Annotation[#, {20.087940512531393`, 18.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{9.338814067921176, 13.2}]}}, 
          RowBox[{"{", 
            RowBox[{"9.338814067921176`", ",", "13.2`"}], "}"}]], 
         Annotation[#, {9.338814067921176, 13.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.457514114201217`, 18.9}]}}, 
          RowBox[{"{", 
            RowBox[{"23.457514114201217`", ",", "18.9`"}], "}"}]], 
         Annotation[#, {23.457514114201217`, 18.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.999348289740794`, 20.}]}}, 
          RowBox[{"{", 
            RowBox[{"21.999348289740794`", ",", "20.`"}], "}"}]], 
         Annotation[#, {21.999348289740794`, 20.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.930338240782802`, 24.7}]}}, 
          RowBox[{"{", 
            RowBox[{"22.930338240782802`", ",", "24.7`"}], "}"}]], 
         Annotation[#, {22.930338240782802`, 24.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{29.865618922808153`, 30.8}]}}, 
          RowBox[{"{", 
            RowBox[{"29.865618922808153`", ",", "30.8`"}], "}"}]], 
         Annotation[#, {29.865618922808153`, 30.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.5670281481093, 25.3}]}}, 
          RowBox[{"{", 
            RowBox[{"25.5670281481093`", ",", "25.3`"}], "}"}]], 
         Annotation[#, {25.5670281481093, 25.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.349490419114073`, 19.4}]}}, 
          RowBox[{"{", 
            RowBox[{"17.349490419114073`", ",", "19.4`"}], "}"}]], 
         Annotation[#, {17.349490419114073`, 19.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{30.408530641492092`, 35.4}]}}, 
          RowBox[{"{", 
            RowBox[{"30.408530641492092`", ",", "35.4`"}], "}"}]], 
         Annotation[#, {30.408530641492092`, 35.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.520751290062364`, 19.6}]}}, 
          RowBox[{"{", 
            RowBox[{"20.520751290062364`", ",", "19.6`"}], "}"}]], 
         Annotation[#, {20.520751290062364`, 19.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.62645008989323, 33.}]}}, 
          RowBox[{"{", 
            RowBox[{"24.62645008989323`", ",", "33.`"}], "}"}]], 
         Annotation[#, {24.62645008989323, 33.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.785516325934807`, 19.4}]}}, 
          RowBox[{"{", 
            RowBox[{"23.785516325934807`", ",", "19.4`"}], "}"}]], 
         Annotation[#, {23.785516325934807`, 19.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.060147762568306`, 22.}]}}, 
          RowBox[{"{", 
            RowBox[{"21.060147762568306`", ",", "22.`"}], "}"}]], 
         Annotation[#, {21.060147762568306`, 22.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.54695683021957, 22.8}]}}, 
          RowBox[{"{", 
            RowBox[{"24.54695683021957`", ",", "22.8`"}], "}"}]], 
         Annotation[#, {24.54695683021957, 22.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.311032763827182`, 23.4}]}}, 
          RowBox[{"{", 
            RowBox[{"24.311032763827182`", ",", "23.4`"}], "}"}]], 
         Annotation[#, {24.311032763827182`, 23.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.733767705784754`, 21.2}]}}, 
          RowBox[{"{", 
            RowBox[{"21.733767705784754`", ",", "21.2`"}], "}"}]], 
         Annotation[#, {21.733767705784754`, 21.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.36600223104062, 20.3}]}}, 
          RowBox[{"{", 
            RowBox[{"22.36600223104062`", ",", "20.3`"}], "}"}]], 
         Annotation[#, {22.36600223104062, 20.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.71214511451589, 23.9}]}}, 
          RowBox[{"{", 
            RowBox[{"26.71214511451589`", ",", "23.9`"}], "}"}]], 
         Annotation[#, {26.71214511451589, 23.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.630129376313825`, 24.8}]}}, 
          RowBox[{"{", 
            RowBox[{"25.630129376313825`", ",", "24.8`"}], "}"}]], 
         Annotation[#, {25.630129376313825`, 24.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.150405113910246`, 26.6}]}}, 
          RowBox[{"{", 
            RowBox[{"28.150405113910246`", ",", "26.6`"}], "}"}]], 
         Annotation[#, {28.150405113910246`, 26.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.702141428478086`, 22.2}]}}, 
          RowBox[{"{", 
            RowBox[{"25.702141428478086`", ",", "22.2`"}], "}"}]], 
         Annotation[#, {25.702141428478086`, 22.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{31.30557830370784, 23.6}]}}, 
          RowBox[{"{", 
            RowBox[{"31.30557830370784`", ",", "23.6`"}], "}"}]], 
         Annotation[#, {31.30557830370784, 23.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{27.585333371858496`, 22.}]}}, 
          RowBox[{"{", 
            RowBox[{"27.585333371858496`", ",", "22.`"}], "}"}]], 
         Annotation[#, {27.585333371858496`, 22.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.22281669503799, 22.9}]}}, 
          RowBox[{"{", 
            RowBox[{"28.22281669503799`", ",", "22.9`"}], "}"}]], 
         Annotation[#, {28.22281669503799, 22.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.11633897057952, 20.6}]}}, 
          RowBox[{"{", 
            RowBox[{"26.11633897057952`", ",", "20.6`"}], "}"}]], 
         Annotation[#, {26.11633897057952, 20.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.88354076189787, 28.4}]}}, 
          RowBox[{"{", 
            RowBox[{"28.88354076189787`", ",", "28.4`"}], "}"}]], 
         Annotation[#, {28.88354076189787, 28.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.98732407279322, 27.5}]}}, 
          RowBox[{"{", 
            RowBox[{"24.98732407279322`", ",", "27.5`"}], "}"}]], 
         Annotation[#, {24.98732407279322, 27.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.363985176876383`, 18.6}]}}, 
          RowBox[{"{", 
            RowBox[{"19.363985176876383`", ",", "18.6`"}], "}"}]], 
         Annotation[#, {19.363985176876383`, 18.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.93331530100009, 18.8}]}}, 
          RowBox[{"{", 
            RowBox[{"20.93331530100009`", ",", "18.8`"}], "}"}]], 
         Annotation[#, {20.93331530100009, 18.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.374911159824908`, 18.5}]}}, 
          RowBox[{"{", 
            RowBox[{"25.374911159824908`", ",", "18.5`"}], "}"}]], 
         Annotation[#, {25.374911159824908`, 18.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.76439254623076, 21.2}]}}, 
          RowBox[{"{", 
            RowBox[{"23.76439254623076`", ",", "21.2`"}], "}"}]], 
         Annotation[#, {23.76439254623076, 21.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.86249367360409, 19.3}]}}, 
          RowBox[{"{", 
            RowBox[{"20.86249367360409`", ",", "19.3`"}], "}"}]], 
         Annotation[#, {20.86249367360409, 19.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.506620549211995`, 22.}]}}, 
          RowBox[{"{", 
            RowBox[{"21.506620549211995`", ",", "22.`"}], "}"}]], 
         Annotation[#, {21.506620549211995`, 22.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{14.354792851767291`, 15.7}]}}, 
          RowBox[{"{", 
            RowBox[{"14.354792851767291`", ",", "15.7`"}], "}"}]], 
         Annotation[#, {14.354792851767291`, 15.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.045827443522839`, 16.2}]}}, 
          RowBox[{"{", 
            RowBox[{"15.045827443522839`", ",", "16.2`"}], "}"}]], 
         Annotation[#, {15.045827443522839`, 16.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.44521738359677, 18.}]}}, 
          RowBox[{"{", 
            RowBox[{"19.44521738359677`", ",", "18.`"}], "}"}]], 
         Annotation[#, {19.44521738359677, 18.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.7722076211695, 18.4}]}}, 
          RowBox[{"{", 
            RowBox[{"15.7722076211695`", ",", "18.4`"}], "}"}]], 
         Annotation[#, {15.7722076211695, 18.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.851438457216073`, 17.1}]}}, 
          RowBox[{"{", 
            RowBox[{"19.851438457216073`", ",", "17.1`"}], "}"}]], 
         Annotation[#, {19.851438457216073`, 17.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{14.04063470597327, 13.3}]}}, 
          RowBox[{"{", 
            RowBox[{"14.04063470597327`", ",", "13.3`"}], "}"}]], 
         Annotation[#, {14.04063470597327, 13.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{14.283412188172738`, 14.}]}}, 
          RowBox[{"{", 
            RowBox[{"14.283412188172738`", ",", "14.`"}], "}"}]], 
         Annotation[#, {14.283412188172738`, 14.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{9.633698538094642, 11.8}]}}, 
          RowBox[{"{", 
            RowBox[{"9.633698538094642`", ",", "11.8`"}], "}"}]], 
         Annotation[#, {9.633698538094642, 11.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{13.746063439945692`, 13.8}]}}, 
          RowBox[{"{", 
            RowBox[{"13.746063439945692`", ",", "13.8`"}], "}"}]], 
         Annotation[#, {13.746063439945692`, 13.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.42210069024238, 15.6}]}}, 
          RowBox[{"{", 
            RowBox[{"16.42210069024238`", ",", "15.6`"}], "}"}]], 
         Annotation[#, {16.42210069024238, 15.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{9.496498521269778, 14.6}]}}, 
          RowBox[{"{", 
            RowBox[{"9.496498521269778`", ",", "14.6`"}], "}"}]], 
         Annotation[#, {9.496498521269778, 14.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.955250543050624`, 15.4}]}}, 
          RowBox[{"{", 
            RowBox[{"15.955250543050624`", ",", "15.4`"}], "}"}]], 
         Annotation[#, {15.955250543050624`, 15.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.147057518385413`, 15.6}]}}, 
          RowBox[{"{", 
            RowBox[{"20.147057518385413`", ",", "15.6`"}], "}"}]], 
         Annotation[#, {20.147057518385413`, 15.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.93313443410026, 23.3}]}}, 
          RowBox[{"{", 
            RowBox[{"26.93313443410026`", ",", "23.3`"}], "}"}]], 
         Annotation[#, {26.93313443410026, 23.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{31.693027326367798`, 27.}]}}, 
          RowBox[{"{", 
            RowBox[{"31.693027326367798`", ",", "27.`"}], "}"}]], 
         Annotation[#, {31.693027326367798`, 27.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.31725918573102, 25.}]}}, 
          RowBox[{"{", 
            RowBox[{"25.31725918573102`", ",", "25.`"}], "}"}]], 
         Annotation[#, {25.31725918573102, 25.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.815634903103174`, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"38.815634903103174`", ",", "50.`"}], "}"}]], 
         Annotation[#, {38.815634903103174`, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{27.123440814672037`, 22.3}]}}, 
          RowBox[{"{", 
            RowBox[{"27.123440814672037`", ",", "22.3`"}], "}"}]], 
         Annotation[#, {27.123440814672037`, 22.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.67756834967943, 17.4}]}}, 
          RowBox[{"{", 
            RowBox[{"22.67756834967943`", ",", "17.4`"}], "}"}]], 
         Annotation[#, {22.67756834967943, 17.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.54462308113585, 23.1}]}}, 
          RowBox[{"{", 
            RowBox[{"22.54462308113585`", ",", "23.1`"}], "}"}]], 
         Annotation[#, {22.54462308113585, 23.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.230933505843215`, 22.6}]}}, 
          RowBox[{"{", 
            RowBox[{"26.230933505843215`", ",", "22.6`"}], "}"}]], 
         Annotation[#, {26.230933505843215`, 22.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{31.17813963164171, 29.4}]}}, 
          RowBox[{"{", 
            RowBox[{"31.17813963164171`", ",", "29.4`"}], "}"}]], 
         Annotation[#, {31.17813963164171, 29.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.81745976413546, 23.2}]}}, 
          RowBox[{"{", 
            RowBox[{"25.81745976413546`", ",", "23.2`"}], "}"}]], 
         Annotation[#, {25.81745976413546, 23.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{29.224992490885484`, 24.6}]}}, 
          RowBox[{"{", 
            RowBox[{"29.224992490885484`", ",", "24.6`"}], "}"}]], 
         Annotation[#, {29.224992490885484`, 24.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{27.493661949215575`, 36.2}]}}, 
          RowBox[{"{", 
            RowBox[{"27.493661949215575`", ",", "36.2`"}], "}"}]], 
         Annotation[#, {27.493661949215575`, 36.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{31.167801681370584`, 37.}]}}, 
          RowBox[{"{", 
            RowBox[{"31.167801681370584`", ",", "37.`"}], "}"}]], 
         Annotation[#, {31.167801681370584`, 37.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.732308341816704`, 34.6}]}}, 
          RowBox[{"{", 
            RowBox[{"34.732308341816704`", ",", "34.6`"}], "}"}]], 
         Annotation[#, {34.732308341816704`, 34.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{29.31446982441455, 34.9}]}}, 
          RowBox[{"{", 
            RowBox[{"29.31446982441455`", ",", "34.9`"}], "}"}]], 
         Annotation[#, {29.31446982441455, 34.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{30.00843503305458, 32.9}]}}, 
          RowBox[{"{", 
            RowBox[{"30.00843503305458`", ",", "32.9`"}], "}"}]], 
         Annotation[#, {30.00843503305458, 32.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.18960612243961, 48.5}]}}, 
          RowBox[{"{", 
            RowBox[{"41.18960612243961`", ",", "48.5`"}], "}"}]], 
         Annotation[#, {41.18960612243961, 48.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.48242872529944, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"42.48242872529944`", ",", "50.`"}], "}"}]], 
         Annotation[#, {42.48242872529944, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.910989706286042`, 19.3}]}}, 
          RowBox[{"{", 
            RowBox[{"15.910989706286042`", ",", "19.3`"}], "}"}]], 
         Annotation[#, {15.910989706286042`, 19.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{11.632775462088937`, 23.7}]}}, 
          RowBox[{"{", 
            RowBox[{"11.632775462088937`", ",", "23.7`"}], "}"}]], 
         Annotation[#, {11.632775462088937`, 23.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.640098264900562`, 25.}]}}, 
          RowBox[{"{", 
            RowBox[{"24.640098264900562`", ",", "25.`"}], "}"}]], 
         Annotation[#, {24.640098264900562`, 25.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.89776664914603, 28.7}]}}, 
          RowBox[{"{", 
            RowBox[{"28.89776664914603`", ",", "28.7`"}], "}"}]], 
         Annotation[#, {28.89776664914603, 28.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.09059653177605, 21.5}]}}, 
          RowBox[{"{", 
            RowBox[{"24.09059653177605`", ",", "21.5`"}], "}"}]], 
         Annotation[#, {24.09059653177605, 21.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.250738443357758`, 24.}]}}, 
          RowBox[{"{", 
            RowBox[{"25.250738443357758`", ",", "24.`"}], "}"}]], 
         Annotation[#, {25.250738443357758`, 24.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{29.61522272209178, 25.1}]}}, 
          RowBox[{"{", 
            RowBox[{"29.61522272209178`", ",", "25.1`"}], "}"}]], 
         Annotation[#, {29.61522272209178, 25.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.42376316274247, 23.3}]}}, 
          RowBox[{"{", 
            RowBox[{"28.42376316274247`", ",", "23.3`"}], "}"}]], 
         Annotation[#, {28.42376316274247, 23.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{27.77728711769936, 22.}]}}, 
          RowBox[{"{", 
            RowBox[{"27.77728711769936`", ",", "22.`"}], "}"}]], 
         Annotation[#, {27.77728711769936, 22.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.415772744709113`, 20.1}]}}, 
          RowBox[{"{", 
            RowBox[{"23.415772744709113`", ",", "20.1`"}], "}"}]], 
         Annotation[#, {23.415772744709113`, 20.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.173772430302847`, 22.2}]}}, 
          RowBox[{"{", 
            RowBox[{"24.173772430302847`", ",", "22.2`"}], "}"}]], 
         Annotation[#, {24.173772430302847`, 22.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.149496309928292`, 24.8}]}}, 
          RowBox[{"{", 
            RowBox[{"25.149496309928292`", ",", "24.8`"}], "}"}]], 
         Annotation[#, {25.149496309928292`, 24.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{32.23367191186146, 42.8}]}}, 
          RowBox[{"{", 
            RowBox[{"32.23367191186146`", ",", "42.8`"}], "}"}]], 
         Annotation[#, {32.23367191186146, 42.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{36.51463250265933, 44.}]}}, 
          RowBox[{"{", 
            RowBox[{"36.51463250265933`", ",", "44.`"}], "}"}]], 
         Annotation[#, {36.51463250265933, 44.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{35.36130748484649, 30.1}]}}, 
          RowBox[{"{", 
            RowBox[{"35.36130748484649`", ",", "30.1`"}], "}"}]], 
         Annotation[#, {35.36130748484649, 30.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.044980921071247`, 20.7}]}}, 
          RowBox[{"{", 
            RowBox[{"24.044980921071247`", ",", "20.7`"}], "}"}]], 
         Annotation[#, {24.044980921071247`, 20.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.819389312907123`, 25.2}]}}, 
          RowBox[{"{", 
            RowBox[{"26.819389312907123`", ",", "25.2`"}], "}"}]], 
         Annotation[#, {26.819389312907123`, 25.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.136950616378282`, 24.4}]}}, 
          RowBox[{"{", 
            RowBox[{"28.136950616378282`", ",", "24.4`"}], "}"}]], 
         Annotation[#, {28.136950616378282`, 24.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{33.123491530696334`, 32.}]}}, 
          RowBox[{"{", 
            RowBox[{"33.123491530696334`", ",", "32.`"}], "}"}]], 
         Annotation[#, {33.123491530696334`, 32.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.24188357883919, 46.}]}}, 
          RowBox[{"{", 
            RowBox[{"40.24188357883919`", ",", "46.`"}], "}"}]], 
         Annotation[#, {40.24188357883919, 46.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.37663430890517, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"43.37663430890517`", ",", "50.`"}], "}"}]], 
         Annotation[#, {43.37663430890517, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{32.97096443183477, 37.3}]}}, 
          RowBox[{"{", 
            RowBox[{"32.97096443183477`", ",", "37.3`"}], "}"}]], 
         Annotation[#, {32.97096443183477, 37.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.26849974233052, 23.9}]}}, 
          RowBox[{"{", 
            RowBox[{"26.26849974233052`", ",", "23.9`"}], "}"}]], 
         Annotation[#, {26.26849974233052, 23.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.723517367000003`, 21.7}]}}, 
          RowBox[{"{", 
            RowBox[{"24.723517367000003`", ",", "21.7`"}], "}"}]], 
         Annotation[#, {24.723517367000003`, 21.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.072145579754704`, 27.1}]}}, 
          RowBox[{"{", 
            RowBox[{"28.072145579754704`", ",", "27.1`"}], "}"}]], 
         Annotation[#, {28.072145579754704`, 27.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.991939014903377`, 20.3}]}}, 
          RowBox[{"{", 
            RowBox[{"19.991939014903377`", ",", "20.3`"}], "}"}]], 
         Annotation[#, {19.991939014903377`, 20.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.291637495772346`, 22.5}]}}, 
          RowBox[{"{", 
            RowBox[{"28.291637495772346`", ",", "22.5`"}], "}"}]], 
         Annotation[#, {28.291637495772346`, 22.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{31.843837336069136`, 29.}]}}, 
          RowBox[{"{", 
            RowBox[{"31.843837336069136`", ",", "29.`"}], "}"}]], 
         Annotation[#, {31.843837336069136`, 29.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.869137244736585`, 22.}]}}, 
          RowBox[{"{", 
            RowBox[{"28.869137244736585`", ",", "22.`"}], "}"}]], 
         Annotation[#, {28.869137244736585`, 22.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.772917721607723`, 26.4}]}}, 
          RowBox[{"{", 
            RowBox[{"28.772917721607723`", ",", "26.4`"}], "}"}]], 
         Annotation[#, {28.772917721607723`, 26.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.52248314011605, 16.1}]}}, 
          RowBox[{"{", 
            RowBox[{"17.52248314011605`", ",", "16.1`"}], "}"}]], 
         Annotation[#, {17.52248314011605, 16.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.072579514041294`, 23.1}]}}, 
          RowBox[{"{", 
            RowBox[{"25.072579514041294`", ",", "23.1`"}], "}"}]], 
         Annotation[#, {25.072579514041294`, 23.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.260257967954384`, 22.6}]}}, 
          RowBox[{"{", 
            RowBox[{"25.260257967954384`", ",", "22.6`"}], "}"}]], 
         Annotation[#, {25.260257967954384`, 22.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.084606396392164`, 19.4}]}}, 
          RowBox[{"{", 
            RowBox[{"23.084606396392164`", ",", "19.4`"}], "}"}]], 
         Annotation[#, {23.084606396392164`, 19.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.098048475476535`, 20.7}]}}, 
          RowBox[{"{", 
            RowBox[{"22.098048475476535`", ",", "20.7`"}], "}"}]], 
         Annotation[#, {22.098048475476535`, 20.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.140857902398764`, 19.5}]}}, 
          RowBox[{"{", 
            RowBox[{"20.140857902398764`", ",", "19.5`"}], "}"}]], 
         Annotation[#, {20.140857902398764`, 19.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.321872988865493`, 18.7}]}}, 
          RowBox[{"{", 
            RowBox[{"21.321872988865493`", ",", "18.7`"}], "}"}]], 
         Annotation[#, {21.321872988865493`, 18.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.789221237697614`, 16.5}]}}, 
          RowBox[{"{", 
            RowBox[{"23.789221237697614`", ",", "16.5`"}], "}"}]], 
         Annotation[#, {23.789221237697614`, 16.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.502122302456772`, 31.2}]}}, 
          RowBox[{"{", 
            RowBox[{"28.502122302456772`", ",", "31.2`"}], "}"}]], 
         Annotation[#, {28.502122302456772`, 31.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.662163399848609`, 17.2}]}}, 
          RowBox[{"{", 
            RowBox[{"15.662163399848609`", ",", "17.2`"}], "}"}]], 
         Annotation[#, {15.662163399848609`, 17.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.343222236916063`, 23.1}]}}, 
          RowBox[{"{", 
            RowBox[{"24.343222236916063`", ",", "23.1`"}], "}"}]], 
         Annotation[#, {24.343222236916063`, 23.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.90298755731924, 26.6}]}}, 
          RowBox[{"{", 
            RowBox[{"22.90298755731924`", ",", "26.6`"}], "}"}]], 
         Annotation[#, {22.90298755731924, 26.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.718370932104175`, 22.9}]}}, 
          RowBox[{"{", 
            RowBox[{"20.718370932104175`", ",", "22.9`"}], "}"}]], 
         Annotation[#, {20.718370932104175`, 22.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.75977557947124, 24.1}]}}, 
          RowBox[{"{", 
            RowBox[{"20.75977557947124`", ",", "24.1`"}], "}"}]], 
         Annotation[#, {20.75977557947124, 24.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.529349430993182`, 22.7}]}}, 
          RowBox[{"{", 
            RowBox[{"21.529349430993182`", ",", "22.7`"}], "}"}]], 
         Annotation[#, {21.529349430993182`, 22.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.544405705740974`, 22.6}]}}, 
          RowBox[{"{", 
            RowBox[{"19.544405705740974`", ",", "22.6`"}], "}"}]], 
         Annotation[#, {19.544405705740974`, 22.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.76569378266805, 21.9}]}}, 
          RowBox[{"{", 
            RowBox[{"38.76569378266805`", ",", "21.9`"}], "}"}]], 
         Annotation[#, {38.76569378266805, 21.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{7.381998675781411, 23.1}]}}, 
          RowBox[{"{", 
            RowBox[{"7.381998675781411`", ",", "23.1`"}], "}"}]], 
         Annotation[#, {7.381998675781411, 23.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.51450349914173, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"21.51450349914173`", ",", "50.`"}], "}"}]], 
         Annotation[#, {21.51450349914173, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{33.36463769518896, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"33.36463769518896`", ",", "50.`"}], "}"}]], 
         Annotation[#, {33.36463769518896, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.99167036592887, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"23.99167036592887`", ",", "50.`"}], "}"}]], 
         Annotation[#, {23.99167036592887, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{5.505748686482541, 13.8}]}}, 
          RowBox[{"{", 
            RowBox[{"5.505748686482541`", ",", "13.8`"}], "}"}]], 
         Annotation[#, {5.505748686482541, 13.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.857297998645137`, 13.3}]}}, 
          RowBox[{"{", 
            RowBox[{"20.857297998645137`", ",", "13.3`"}], "}"}]], 
         Annotation[#, {20.857297998645137`, 13.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.802097589261503`, 13.1}]}}, 
          RowBox[{"{", 
            RowBox[{"15.802097589261503`", ",", "13.1`"}], "}"}]], 
         Annotation[#, {15.802097589261503`, 13.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.6792063624144191`, 8.8}]}}, 
          RowBox[{"{", 
            RowBox[{"1.6792063624144191`", ",", "8.8`"}], "}"}]], 
         Annotation[#, {1.6792063624144191`, 8.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{4.696287512272015, 10.5}]}}, 
          RowBox[{"{", 
            RowBox[{"4.696287512272015`", ",", "10.5`"}], "}"}]], 
         Annotation[#, {4.696287512272015, 10.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{13.631160680814046`, 11.5}]}}, 
          RowBox[{"{", 
            RowBox[{"13.631160680814046`", ",", "11.5`"}], "}"}]], 
         Annotation[#, {13.631160680814046`, 11.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.835422256790917`, 15.1}]}}, 
          RowBox[{"{", 
            RowBox[{"16.835422256790917`", ",", "15.1`"}], "}"}]], 
         Annotation[#, {16.835422256790917`, 15.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.475064253774484`, 12.7}]}}, 
          RowBox[{"{", 
            RowBox[{"17.475064253774484`", ",", "12.7`"}], "}"}]], 
         Annotation[#, {17.475064253774484`, 12.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.559711174326022`, 13.1}]}}, 
          RowBox[{"{", 
            RowBox[{"20.559711174326022`", ",", "13.1`"}], "}"}]], 
         Annotation[#, {20.559711174326022`, 13.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.705401490554216`, 12.5}]}}, 
          RowBox[{"{", 
            RowBox[{"19.705401490554216`", ",", "12.5`"}], "}"}]], 
         Annotation[#, {19.705401490554216`, 12.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{6.270081902203035, 8.5}]}}, 
          RowBox[{"{", 
            RowBox[{"6.270081902203035`", ",", "8.5`"}], "}"}]], 
         Annotation[#, {6.270081902203035, 8.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{5.678620774085573, 11.9}]}}, 
          RowBox[{"{", 
            RowBox[{"5.678620774085573`", ",", "11.9`"}], "}"}]], 
         Annotation[#, {5.678620774085573, 11.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.664824431618456`, 27.9}]}}, 
          RowBox[{"{", 
            RowBox[{"18.664824431618456`", ",", "27.9`"}], "}"}]], 
         Annotation[#, {18.664824431618456`, 27.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{-0.22765573527748373`, 17.9}]}}, 
          RowBox[{"{", 
            RowBox[{
              RowBox[{"-", "0.22765573527748373`"}], ",", "17.9`"}], "}"}]], 
         Annotation[#, {-0.22765573527748373`, 17.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{5.564729564739583, 10.4}]}}, 
          RowBox[{"{", 
            RowBox[{"5.564729564739583`", ",", "10.4`"}], "}"}]], 
         Annotation[#, {5.564729564739583, 10.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{3.566713993310323, 8.8}]}}, 
          RowBox[{"{", 
            RowBox[{"3.566713993310323`", ",", "8.8`"}], "}"}]], 
         Annotation[#, {3.566713993310323, 8.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.126844391563456`, 8.4}]}}, 
          RowBox[{"{", 
            RowBox[{"15.126844391563456`", ",", "8.4`"}], "}"}]], 
         Annotation[#, {15.126844391563456`, 8.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.911894945647845`, 14.2}]}}, 
          RowBox[{"{", 
            RowBox[{"17.911894945647845`", ",", "14.2`"}], "}"}]], 
         Annotation[#, {17.911894945647845`, 14.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{13.136837107058708`, 11.7}]}}, 
          RowBox[{"{", 
            RowBox[{"13.136837107058708`", ",", "11.7`"}], "}"}]], 
         Annotation[#, {13.136837107058708`, 11.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{14.143983220288455`, 11.}]}}, 
          RowBox[{"{", 
            RowBox[{"14.143983220288455`", ",", "11.`"}], "}"}]], 
         Annotation[#, {14.143983220288455`, 11.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.4223879185174, 11.7}]}}, 
          RowBox[{"{", 
            RowBox[{"15.4223879185174`", ",", "11.7`"}], "}"}]], 
         Annotation[#, {15.4223879185174, 11.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{13.883107408061827`, 13.4}]}}, 
          RowBox[{"{", 
            RowBox[{"13.883107408061827`", ",", "13.4`"}], "}"}]], 
         Annotation[#, {13.883107408061827`, 13.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{13.012624548368056`, 12.8}]}}, 
          RowBox[{"{", 
            RowBox[{"13.012624548368056`", ",", "12.8`"}], "}"}]], 
         Annotation[#, {13.012624548368056`, 12.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{12.450622317618839`, 10.5}]}}, 
          RowBox[{"{", 
            RowBox[{"12.450622317618839`", ",", "10.5`"}], "}"}]], 
         Annotation[#, {12.450622317618839`, 10.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{11.389548648146604`, 10.8}]}}, 
          RowBox[{"{", 
            RowBox[{"11.389548648146604`", ",", "10.8`"}], "}"}]], 
         Annotation[#, {11.389548648146604`, 10.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{12.239169676921769`, 11.8}]}}, 
          RowBox[{"{", 
            RowBox[{"12.239169676921769`", ",", "11.8`"}], "}"}]], 
         Annotation[#, {12.239169676921769`, 11.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.378645210598734`, 12.6}]}}, 
          RowBox[{"{", 
            RowBox[{"18.378645210598734`", ",", "12.6`"}], "}"}]], 
         Annotation[#, {18.378645210598734`, 12.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.7347226969746, 13.4}]}}, 
          RowBox[{"{", 
            RowBox[{"16.7347226969746`", ",", "13.4`"}], "}"}]], 
         Annotation[#, {16.7347226969746, 13.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.015878689835, 16.1}]}}, 
          RowBox[{"{", 
            RowBox[{"19.015878689835`", ",", "16.1`"}], "}"}]], 
         Annotation[#, {19.015878689835, 16.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.868969183251384`, 17.8}]}}, 
          RowBox[{"{", 
            RowBox[{"23.868969183251384`", ",", "17.8`"}], "}"}]], 
         Annotation[#, {23.868969183251384`, 17.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{12.362139379584752`, 12.7}]}}, 
          RowBox[{"{", 
            RowBox[{"12.362139379584752`", ",", "12.7`"}], "}"}]], 
         Annotation[#, {12.362139379584752`, 12.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.4396008013055, 14.9}]}}, 
          RowBox[{"{", 
            RowBox[{"17.4396008013055`", ",", "14.9`"}], "}"}]], 
         Annotation[#, {17.4396008013055, 14.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.6705262964934, 20.}]}}, 
          RowBox[{"{", 
            RowBox[{"18.6705262964934`", ",", "20.`"}], "}"}]], 
         Annotation[#, {18.6705262964934, 20.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.650725338622163`, 17.7}]}}, 
          RowBox[{"{", 
            RowBox[{"20.650725338622163`", ",", "17.7`"}], "}"}]], 
         Annotation[#, {20.650725338622163`, 17.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.14669700159911, 19.5}]}}, 
          RowBox[{"{", 
            RowBox[{"20.14669700159911`", ",", "19.5`"}], "}"}]], 
         Annotation[#, {20.14669700159911, 19.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.785901222993832`, 20.2}]}}, 
          RowBox[{"{", 
            RowBox[{"22.785901222993832`", ",", "20.2`"}], "}"}]], 
         Annotation[#, {22.785901222993832`, 20.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.751764101350446`, 19.1}]}}, 
          RowBox[{"{", 
            RowBox[{"16.751764101350446`", ",", "19.1`"}], "}"}]], 
         Annotation[#, {16.751764101350446`, 19.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.471868054313887`, 19.1}]}}, 
          RowBox[{"{", 
            RowBox[{"16.471868054313887`", ",", "19.1`"}], "}"}]], 
         Annotation[#, {16.471868054313887`, 19.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.58546094520534, 19.6}]}}, 
          RowBox[{"{", 
            RowBox[{"22.58546094520534`", ",", "19.6`"}], "}"}]], 
         Annotation[#, {22.58546094520534, 19.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.60700037060564, 23.2}]}}, 
          RowBox[{"{", 
            RowBox[{"22.60700037060564`", ",", "23.2`"}], "}"}]], 
         Annotation[#, {22.60700037060564, 23.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.95084788061156, 14.6}]}}, 
          RowBox[{"{", 
            RowBox[{"18.95084788061156`", ",", "14.6`"}], "}"}]], 
         Annotation[#, {18.95084788061156, 14.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.399368571474493`, 21.2}]}}, 
          RowBox[{"{", 
            RowBox[{"22.399368571474493`", ",", "21.2`"}], "}"}]], 
         Annotation[#, {22.399368571474493`, 21.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.92425576040747, 20.6}]}}, 
          RowBox[{"{", 
            RowBox[{"20.92425576040747`", ",", "20.6`"}], "}"}]], 
         Annotation[#, {20.92425576040747, 20.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{12.131703026115966`, 15.2}]}}, 
          RowBox[{"{", 
            RowBox[{"12.131703026115966`", ",", "15.2`"}], "}"}]], 
         Annotation[#, {12.131703026115966`, 15.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.235106097757704`, 18.3}]}}, 
          RowBox[{"{", 
            RowBox[{"19.235106097757704`", ",", "18.3`"}], "}"}]], 
         Annotation[#, {19.235106097757704`, 18.3}, 
          "Tooltip"]& ]}}, {}, {}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxFxWssFAAcAPDTVV6J49ydceOGNedxnnGe13mcQ7XTuticlXZNns1qmGVX
K7UwN6PTGXKoZsMM53UiTCVsTmeycHNtqFheE7br8eH+/w+//RhpuYniEwQC
4eI//895+Cq3bOPUiOFQl3Xa+ARuNuE2etyEvzZtI2em4lppVz9/7iSc2DBC
NB4iwoGqRdkDqRFs9JMu2cw5GjZcfraEbyVYhicHTOxtLb5FGO7Rd1/Zjj2G
x/LZ5B8EY45hiUcb9c6QJT7uR5LLybBa4eyUxrGDL63UFfk9p8OaXpGn2oUB
0zp8IiuEzrBYPyOKuO8KNx6EBQ+rz8G7jjuqSAITDtjJN6pJ8YAlDu/jVtq8
4O0Bz7rqTG9YrtLea5L5wNNXlY1dHb7w4djddvcVP9htWRZGNw2Av1UsOZIc
z8MyyhldVkIgrPEXHU6Kg2DqH+tKRSEbFtR3mq82B8MUTd6CsyoEntM6lEx/
D4WratyVv2zCYe1aCpviFgFblwzOzDI58KEuudWuF1+VMXn1nAswT5n7eV6D
5znFlFrd4MJ2+1Jf/QH+2DabuPkoEt4tLaqmWUbBS1l66u9mvPyF9fiCdzTc
7117PfsDvkYXvg0XxcCLQkU0aR3nH6UNyYp5cPFGd6qjeSzc48V+p6vC05d9
yClMPqz9MijV9OBcii4pqg9vSTRjdA3gGZ+SOqXD+J5qfzb+I27ykmUz+hVn
3WqqbifGwZWKSRH9NL63vO1aZoL3XeMob1vgXP7SvAsVF3pQabVMvC89XGvq
idu3iN8UsHAtvTtI6I9nWAqSSeH4VHwBQ8LBWU8bNra4+B5hq3CKhwvDbLkh
cXh/YahZawLuoLyppl3Gi3eeyZ8I8L/GpxtV
           "]]}, 
         Annotation[#, "Charting`Private`Tag$1270213#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{-2.739038522041358, 
      52.63695192610207}, {-2.739038522041358, 52.63695192610207}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2.739038522041358, 
      52.63695192610207}, {-2.739038522041358, 52.63695192610207}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.13333333333333336`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.2]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.2], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7258556293449526`*^9},ExpressionUUID->"5f53d425-756e-47d3-a068-\
8cc53c598c69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7258556729648533`*^9, 
  3.725855683460181*^9}},ExpressionUUID->"42af061c-e79f-42ce-ad75-\
5c6e86191648"],

Cell[BoxData["5.6454393625279495`"], "Output",
 CellChangeTimes->{
  3.7258556844176517`*^9},ExpressionUUID->"28bc91c8-b813-4c45-ad1e-\
0b996df31e04"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#2", ",", " ", 
         RowBox[{"ToExpression", "[", "#3", "]"}], ",", " ", "#4"}], "}"}], 
       "\[Rule]", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", "-", "32"}], ")"}], "/", "1.8"}]}], "&"}], "@@@", 
     "\[IndentingNewLine]", 
     RowBox[{"ExampleData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Statistics\>\"", ",", " ", "\"\<USCityTemperature\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258557006590705`*^9, 3.7258557746826873`*^9}, 
   3.725855846702693*^9},ExpressionUUID->"321bfd24-4d29-4da0-b3fe-\
a2326c3d4efd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomSample", "[", 
   RowBox[{"dataset", ",", " ", "5"}], "]"}], " ", "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.7258558227990313`*^9, 
  3.7258558761511626`*^9}},ExpressionUUID->"e497cdb0-4fd0-4d78-b6fa-\
ea8d742489e9"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"Lincoln\"\>", ",", "1965", ",", "\<\"October\"\>"}], 
        "}"}], "\[Rule]", "14.333333333333332`"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"Lincoln\"\>", ",", "1964", ",", "\<\"December\"\>"}], 
        "}"}], "\[Rule]", 
       RowBox[{"-", "3.055555555555556`"}]}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"Lincoln\"\>", ",", "1972", ",", "\<\"October\"\>"}], 
        "}"}], "\[Rule]", "9.444444444444445`"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"Newark\"\>", ",", "1972", ",", "\<\"June\"\>"}], "}"}], 
       "\[Rule]", "20.444444444444443`"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"Lincoln\"\>", ",", "1965", ",", "\<\"January\"\>"}], 
        "}"}], "\[Rule]", 
       RowBox[{"-", "4.222222222222223`"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7258558781448293`*^9},ExpressionUUID->"6903446e-3705-49b6-96de-\
3f12cf47220a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"dataset", ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", " ", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725855892657756*^9, 
  3.725855911799601*^9}},ExpressionUUID->"0b29c88f-eb5b-47c6-bffb-\
32ec9b6f1cde"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["360", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7258559281300783`*^9},ExpressionUUID->"458a3464-bb9b-47c9-9a22-\
0363fc414af8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Lincoln\>\"", ",", " ", "2020", ",", " ", "\"\<January\>\""}], 
          "}"}], ",", " ", "\"\<Distribution\>\""}], "]"}], ",", " ", "x"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Lincoln\>\"", ",", " ", "2020", ",", " ", "\"\<May\>\""}], 
          "}"}], ",", " ", "\"\<Distribution\>\""}], "]"}], ",", " ", "x"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Lincoln\>\"", ",", " ", "2020", ",", " ", "\"\<August\>\""}], 
          "}"}], ",", " ", "\"\<Distribution\>\""}], "]"}], ",", " ", "x"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "30"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<January\>\"", ",", " ", "\"\<May\>\"", ",", " ", "\"\<August\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725855949649228*^9, 
  3.7258561473529253`*^9}},ExpressionUUID->"05753b8a-5579-4c58-9c69-\
ff9dfb15693a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XJRTheY096sdAd/QPNkyIEhRFca/C9UZkL4h1flDc89UVCGyRCC+YPwrKrHl
+tKvqQqBAYIbymZfUREuTTyrRz0v8M+FPvUvKG9lWui4tSrMCf4eCRTrQhNF
3Q+dbVWB9K/uwKOhTiTjRKENc1CF+8W3FOyyOtHLr1GDjVdU4VrEucCjsp0o
u1Q++6AXdT3XTodF6EAZV53l1R6pgquVr3oCTzsaED+deipWFYK9WE4cLmpD
Ir3a7C4JqpB/5ieblmEbSjNkmS14qgq2piMmf/xb0VPJl2UHXqrCPteK2amt
FpT4e5QsUKcK5h17h8NVmlF3Ynu+VoMqsCsW7J772YR4jCsEzzSrQtEp1pqL
YU0o/l0wTXy7KvD/dvp0fbQRxT7ZX7+rVxVChSULn+U2oChTOyO6BVUw6VTD
Gzb16OWJ3vMOy6qQ/sZjcCdPPao3ML3WuKYKF78QUpKtdWiV0H8Utk0N6g5W
77Ai1yF7CZlvu9nVwIt9r9V9iVqktTRrKy6jBgH1DLPMkhRkOnPFLVheDa57
9pszfa1BN/4OBf1RUgOXLca4LOsalPnra06ehhoc2f5TuMnzHWJvqp5U1VOD
X3Gch3e9foNGEgNuH7ZRAyH7KS6xB1WINmYtLNteDYIv0d7RlKpCAhFuT5mc
1GDXqh1XzodKZOLvSGm9Rp0v1B/lzVGJ3lwyZDDzUQO/WDmBuwXlKFqLM9ox
QQ2ab4s7HRR9hfJVw541JanB89h3Rz5/KUVN8tvLpFPUoE/Z74lPaCnaEF38
NvlcDU68/F64uViCnFi+7/Msoe7X4vbTtrcYEb3pL0Ja1SBX9rWQfm4h2ivv
tFz4SQ2U/zup1qNZiObvyut3d6mBpnaawnRzAcoTez104LsauNFfYH88mY8E
rnwW+jCiBhpWN/1OGOSh9RWGeFYaEqg18dbowQvUbdQ6pEpHgkeD5rXzQzno
1dMYFUsGEphKFMv9Cs1BzgeFO/JZSeC2zXnF4ns2+nFfk/UELwn+3Xl/7GZI
FqrmcQ54pEwCSUE8O8j9HMVfUu6oUiPBHEf50IPWZ8jl9bLQgAYJUu6czlIM
eoakrYPeKmMSpFZtkV2XMtDjrJTlLiMSeA+xh90cTUdeah3XuB1IcEbI6Ynq
cCo6HZLwFjmRII7D78Kz66lIsceS9eIVEhwsPbS9ZC0F/fEZf1FxkwTV2T1M
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
          "]]}, Annotation[#, "Charting`Private`Tag$1283618#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
pso=
          "]]}, Annotation[#, "Charting`Private`Tag$1283618#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ddI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1283618#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-10, 30}, {0., 0.09492291336542213}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"January\"", "\"May\"", "\"August\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.725856197844841*^9},ExpressionUUID->"4ec7b484-3670-4f9a-9748-\
f5f8798b4311"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"months", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<January\>\"", ",", " ", "\"\<February\>\"", ",", " ", 
     "\"\<March\>\"", ",", " ", "\"\<April\>\"", ",", " ", "\"\<May\>\"", ",",
      " ", "\"\<June\>\"", ",", "\[IndentingNewLine]", "\"\<July\>\"", ",", 
     " ", "\"\<August\>\"", ",", " ", "\"\<September\>\"", ",", " ", 
     "\"\<October\>\"", ",", " ", "\"\<November\>\"", ",", " ", 
     "\"\<December\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258562201367054`*^9, 
  3.7258563361286*^9}},ExpressionUUID->"ebdac7ea-b094-4de5-adf4-063168e6586a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"distributions", " ", "=", " ", 
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "[", "#2", "]"}], ",", " ", 
        RowBox[{"p", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Lincoln\>\"", ",", " ", "2020", ",", " ", "#1"}], 
           "}"}], ",", " ", "\"\<Distribution\>\""}], "]"}]}], "}"}], "&"}], 
     ",", " ", "months"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258563619967527`*^9, 
  3.7258564622606716`*^9}},ExpressionUUID->"69345ea5-6dc1-475e-8d4b-\
f05de347e703"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7258564761481686`*^9, 
  3.7258565172408123`*^9}},ExpressionUUID->"e8a53cfb-1d6d-4a88-a60c-\
1dfa920cd77e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], "\n", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", 
         RowBox[{"#2", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"#2", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@@@", 
    "distributions"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "12", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Rotate", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Pi", "/", "3"}]}], "]"}], "&"}], "/@", "months"}]}], 
        "}"}], "]"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "30"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Temperature (\[Degree]C)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.725856549531655*^9, 3.725856659530264*^9}, {
  3.7258567052498455`*^9, 3.7258567742031593`*^9}, {3.725856810860279*^9, 
  3.7258568382584476`*^9}, {3.72585691180647*^9, 
  3.7258569676111097`*^9}},ExpressionUUID->"046dd1c9-4753-4540-823c-\
ca89c6070c55"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      LineBox[{{1., 1.6305844462998884`}, {2., 3.067666392545096}, {3., 
       6.654828873859809}, {4., 11.119386715398807`}, {5., 
       15.522988775689806`}, {6., 19.83607995814383}, {7., 
       21.86794413865981}, {8., 21.478195425490973`}, {9., 
       18.262310138138403`}, {10., 13.648133241485667`}, {11., 
       8.6312780080524}, {12., 
       3.982004394111317}}], {{
        LineBox[{{1., 5.833386385788289}, {1., -2.5722174931885124`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 5.833386385788289}], 
          Offset[{-1.5, 0}, {1., 5.833386385788289}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1., -2.5722174931885124`}], 
          Offset[{-1.5, 0}, {1., -2.5722174931885124`}]}]}, {
        LineBox[{{2., 7.270468332033497}, {2., -1.1351355469433049`}}], 
        LineBox[{
         Offset[{1.5, 0}, {2., 7.270468332033497}], 
          Offset[{-1.5, 0}, {2., 7.270468332033497}]}], 
        LineBox[{
         Offset[{1.5, 0}, {2., -1.1351355469433049`}], 
          Offset[{-1.5, 0}, {2., -1.1351355469433049`}]}]}, {
        LineBox[{{3., 10.857630813348209`}, {3., 2.452026934371408}}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 10.857630813348209`}], 
          Offset[{-1.5, 0}, {3., 10.857630813348209`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {3., 2.452026934371408}], 
          Offset[{-1.5, 0}, {3., 2.452026934371408}]}]}, {
        LineBox[{{4., 15.322188654887208`}, {4., 6.916584775910406}}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 15.322188654887208`}], 
          Offset[{-1.5, 0}, {4., 15.322188654887208`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {4., 6.916584775910406}], 
          Offset[{-1.5, 0}, {4., 6.916584775910406}]}]}, {
        LineBox[{{5., 19.725790715178206`}, {5., 11.320186836201405`}}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 19.725790715178206`}], 
          Offset[{-1.5, 0}, {5., 19.725790715178206`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {5., 11.320186836201405`}], 
          Offset[{-1.5, 0}, {5., 11.320186836201405`}]}]}, {
        LineBox[{{6., 24.03888189763223}, {6., 15.63327801865543}}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 24.03888189763223}], 
          Offset[{-1.5, 0}, {6., 24.03888189763223}]}], 
        LineBox[{
         Offset[{1.5, 0}, {6., 15.63327801865543}], 
          Offset[{-1.5, 0}, {6., 15.63327801865543}]}]}, {
        LineBox[{{7., 26.07074607814821}, {7., 17.665142199171406`}}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 26.07074607814821}], 
          Offset[{-1.5, 0}, {7., 26.07074607814821}]}], 
        LineBox[{
         Offset[{1.5, 0}, {7., 17.665142199171406`}], 
          Offset[{-1.5, 0}, {7., 17.665142199171406`}]}]}, {
        LineBox[{{8., 25.680997364979376`}, {8., 17.27539348600257}}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 25.680997364979376`}], 
          Offset[{-1.5, 0}, {8., 25.680997364979376`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 17.27539348600257}], 
          Offset[{-1.5, 0}, {8., 17.27539348600257}]}]}, {
        LineBox[{{9., 22.465112077626806`}, {9., 14.059508198650002`}}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 22.465112077626806`}], 
          Offset[{-1.5, 0}, {9., 22.465112077626806`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {9., 14.059508198650002`}], 
          Offset[{-1.5, 0}, {9., 14.059508198650002`}]}]}, {
        LineBox[{{10., 17.85093518097407}, {10., 9.445331301997266}}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 17.85093518097407}], 
          Offset[{-1.5, 0}, {10., 17.85093518097407}]}], 
        LineBox[{
         Offset[{1.5, 0}, {10., 9.445331301997266}], 
          Offset[{-1.5, 0}, {10., 9.445331301997266}]}]}, {
        LineBox[{{11., 12.8340799475408}, {11., 4.428476068563999}}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 12.8340799475408}], 
          Offset[{-1.5, 0}, {11., 12.8340799475408}]}], 
        LineBox[{
         Offset[{1.5, 0}, {11., 4.428476068563999}], 
          Offset[{-1.5, 0}, {11., 4.428476068563999}]}]}, {
        LineBox[{{12., 8.184806333599717}, {12., -0.22079754537708407`}}], 
        LineBox[{
         Offset[{1.5, 0}, {12., 8.184806333599717}], 
          Offset[{-1.5, 0}, {12., 8.184806333599717}]}], 
        LineBox[{
         Offset[{1.5, 0}, {12., -0.22079754537708407`}], 
          Offset[{-1.5, 0}, {12., -0.22079754537708407`}]}]}}}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], GeometricTransformationBox[{InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], {0., 0.}], {}}, {{{1., 1.6305844462998884`}}, {{2.,
        3.067666392545096}}, {{3., 6.654828873859809}}, {{4., 
       11.119386715398807`}}, {{5., 15.522988775689806`}}, {{6., 
       19.83607995814383}}, {{7., 21.86794413865981}}, {{8., 
       21.478195425490973`}}, {{9., 18.262310138138403`}}, {{10., 
       13.648133241485667`}}, {{11., 8.6312780080524}}, {{12., 
       3.982004394111317}}}]}, {}}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Temperature (\[Degree]C)\"", TraditionalForm], None}, {
    None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1, 
       FormBox[
        RotationBox["\"January\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {2, 
       FormBox[
        RotationBox["\"February\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {3, 
       FormBox[
        RotationBox["\"March\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {4, 
       FormBox[
        RotationBox["\"April\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {5, 
       FormBox[
        RotationBox["\"May\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {6, 
       FormBox[
        RotationBox["\"June\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {7, 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {8, 
       FormBox[
        RotationBox["\"August\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {9, 
       FormBox[
        RotationBox["\"September\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {10, 
       FormBox[
        RotationBox["\"October\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {11, 
       FormBox[
        RotationBox["\"November\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {12, 
       FormBox[
        RotationBox["\"December\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}}, {{1, 
       FormBox[
        RotationBox["\"January\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {2, 
       FormBox[
        RotationBox["\"February\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {3, 
       FormBox[
        RotationBox["\"March\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {4, 
       FormBox[
        RotationBox["\"April\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {5, 
       FormBox[
        RotationBox["\"May\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {6, 
       FormBox[
        RotationBox["\"June\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {7, 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {8, 
       FormBox[
        RotationBox["\"August\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {9, 
       FormBox[
        RotationBox["\"September\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {10, 
       FormBox[
        RotationBox["\"October\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {11, 
       FormBox[
        RotationBox["\"November\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {12, 
       FormBox[
        RotationBox["\"December\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 12.}, {-10, 30}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.72585694620216*^9, 
  3.7258569712853107`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQmw5VV95//e5S1N73tLEshssWamEtxqjDM1cWI0jtFEjU6Y1IzKqARF
TStUIpnA0AKC2KDtAiK8ghYRMYrCwGuWZpdFFJ8oJaKiJVR8JlAFjGGcYmrq
zf38zu97zu9/33mv7+vXuKSa4va7//M/y2/fzvn/7yuPOv6Yt7zjqOPf+qaj
Dv/9dx+1/Zi3vum4w1/65+8eNHWf0TTP2Dn4vPTwhu9zTaN/5gb/z53FP7Qs
8v1X7Ht34qmnnnrRAw88sPbJJ59s3jnvfu/0yy+//Kazzjrrse3bt79qZmbm
HaHLtjQFQ5nCrjqp7fBHH330/pNOOulZs7OzzfNT2/a9e/fOHn/88SzZbC39
vnDOOedceNFFFzXbwtzpfn/rE0888YMTTjgBEPh7xEMPPaQ13nj77bcDnl09
J4H7svvuu4919+zatYu1t1jzGCDSFSz4O3PKKacw1dZ5K04eeffdd196/vnn
c8UKDLFVB9fMDrTNs9NqrMBKrMi9NMX4MTfffDOI0hUEaYV2d55xxhlNZUmG
gqBdhWU/eNlllwEpIDW/lQgC8cDgp8ceeyxgGjETlj3AZA3GwJBeolPmA1eb
5/FvBfdZUsszzclXXnklIL/gwQcfZCqW+c003bmXXHKJ2NF0544++uimJxbx
Ydi61JWZQMSA7Kc2AMzS4tD81yKLLGzkvyZxToLEOkaHQSvIdGhsugLExPe5
iQwawsrgtT7NDjWZPV2lfwGEbjY8UbH5L2kW0ICJkqS9ibfACH1ZGIGmFX4z
uwvhGO3M+omLL774hOnpaVaFFIkqK1gMmFnBpGAg4+/Zs2cPQ95200030R1U
nTh/WpgrRURgbkzwgCzNwMVfJoNpgN0cUeQLgnD/zbfddptkk4UAxNjhwLEM
fekDzZnnb8477zzkDbmDN0jApgTckQljVqUV4EAFChUgDwE4JqUbWNMVzkQK
0GZ69q/SlAwXlRjPd9o6hXNmNLhKHJ6EsNBDugbsWgK4bfqNLcDhLEBLTZnW
2JuoARsk23QDUIABRygEBbn+14lHJueuReDrUgY/zGxwldYfZyQkYGFgZSgk
MBl3GH83zcqidOcDihsSbEhcNn+DDytIIkFLVv36tCCzSO8gCmjBYBPcxM0+
97mGWEwV1GIMEmh85E0aOk4T9GYIUzCcv0aSNj4AB+DcBuiEzyFSC7ECgLc8
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
vaOZnh18n51udqR7dvPP0tCNWnFwe2pqyj4d+3dVMzU908y2pgpTM92Oab8/
20zv8GWqc882qDafjv07Ofi31EXmzQ2mUzNyw83MlGGcaTP4b0CEP+WfyUiA
sYVmWnAif/xJgBxWadtWadv6j6Rfr9Lmpdwk3yudt1B0JP7XZjxI1UzVZIwO
cTlFl/eprNXpDpI0k3QJJrM/IiWf93PCsrZurW0RavzLyi379z8dHLPPMXbH
ml+bLyd/SWA/OOYgzw+OOSgnv+RjLKvrz71+x9WDvP6Rx/53e7Jn78dkzdhN
p+++a+bE826be8OOq39w3K6buN76+E/+j3V67tKmTEWg7ovu/8GjAHny5Td/
J4H2/FHkZ8HRzx1FpvZ77V/CebxyfcQPZ5/g+osf+sxXb37f7rv4/qqv3v9j
G1gLq/Zrme4bb515mDaTu06SvgvPv+LetvRtPmBoIX20m1QO7vH9WT965CcH
Ci0PLhF0QyajUIs6fwZz/7r9GSkeX9KSadt6jE4fv/CqbyIhF33ii/dyvfbJ
nz5VS/EdosPTyGaBpKsWYS8dsmTH+m07NmfFC50oznAskk7Pq3bkQV4n0dxe
3lg28OvaWmGda7wapuUvGDijVyh+JuA8TZK2RHCeLlVcIhgLu+sBaI/8pPnS
1x/SNE/nkql40G/u+fwtDXPrc/r004uqF6Wbuftn8pod+7fbvP59NzZ3PfyY
9djyM4Dhns8XvHvp35++6bQ9X9h12VePueErP8R6bfwZgPGjW2+ZT4odNzZn
X/ut+//yY7cMRhlofD/3oqu/SRQw8dT//X9rDyRodifzZmAzzm0BNN68ffd9
GghdoM+l53x+5rFj3n+dA9jds/OSu9/zP2/7HqFLs2op0HUzCIsEgZJYlOSe
W2ea93/yrkYTjKX+L/jew4+d/tkbvn3njqnbRbbZd5y1l4jmyDu/+bdEH5MV
wDw4Yfgrvv7Aj7dfe+f3j7zrm3+L/uNNf7J8XtcsSoKkxwoAB5AA69Sc+evz
bgMXgNJqhvvJF9xuPfT817t33TgcwbFMXvqJpUGvHYNYVfznI2LkTCeg237N
nd9HIJwN/WHFMsPTdWm/8pEcImgPkvFENIxW/Mu4JfJiOdgkBeuhay+797t/
/8FLkj4ajfvS049/t/mRz7G5MseTywE3+ai+/dttVcx/dUQU3HxJY5tTd8nS
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
67i0XR05D9p2pvEn4f5Zi39vnvH/AUsRHgg=\
\>"],ExpressionUUID->"b8535ef4-2659-403e-8b00-bf79d5b99754"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<WineQuality\>\""}], 
      "}"}], ",", " ", "\"\<TrainingData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258570125582933`*^9, 3.7258570192244644`*^9}, {
  3.725857305685379*^9, 
  3.7258573306377554`*^9}},ExpressionUUID->"1c814bd9-e9fe-4b09-affb-\
f373d381a4ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomSample", "[", 
   RowBox[{"trainingset", ",", " ", "3"}], "]"}], " ", "//", " ", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.725857348010105*^9, 
  3.725857371245603*^9}},ExpressionUUID->"25b3f2ac-bcc5-4874-a781-\
e8229120e261"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "8.9`", ",", "0.27`", ",", "0.28`", ",", "0.8`", ",", "0.024`", ",", 
         "29.`", ",", "128.`", ",", "0.98984`", ",", "3.01`", ",", "0.35`", 
         ",", "12.4`"}], "}"}], "\[Rule]", "6.`"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7.`", ",", "0.31`", ",", "0.52`", ",", "1.7`", ",", "0.029`", ",", 
         "5.`", ",", "61.`", ",", "0.9918`", ",", "3.07`", ",", "0.43`", ",", 
         "10.4`"}], "}"}], "\[Rule]", "5.`"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6.`", ",", "0.24`", ",", "0.32`", ",", "6.3`", ",", "0.03`", ",", 
         "34.`", ",", "129.`", ",", "0.9946`", ",", "3.52`", ",", "0.41`", 
         ",", "10.4`"}], "}"}], "\[Rule]", "5.`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7258573722013426`*^9},ExpressionUUID->"98f8b2a9-a49b-4e16-b969-\
f4567bd365ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<WineQuality\>\""}], 
    "}"}], ",", " ", "\"\<VariableDescriptions\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725857416480876*^9, 3.7258574375729337`*^9}, {
  3.725857470520665*^9, 
  3.7258574993233957`*^9}},ExpressionUUID->"83211331-8654-4923-9b1a-\
c67d508f3c9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\<\"fixed acidity\"\>", ",", "\<\"volatile acidity\"\>", 
    ",", "\<\"citric acid\"\>", ",", "\<\"residual sugar\"\>", 
    ",", "\<\"chlorides\"\>", ",", "\<\"free sulfur dioxide\"\>", 
    ",", "\<\"total sulfur dioxide\"\>", ",", "\<\"density\"\>", 
    ",", "\<\"pH\"\>", ",", "\<\"sulphates\"\>", ",", "\<\"alcohol\"\>"}], 
   "}"}], "\[Rule]", "\<\"wine quality (score between 1-10)\"\>"}]], "Output",
 CellChangeTimes->{{3.725857478274455*^9, 
  3.7258575000781174`*^9}},ExpressionUUID->"971bcf23-8639-46cc-9299-\
f3704f90228f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{"trainingset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "1", ",", " ", "11"}], "]"}], "]"}], ",", 
      " ", 
      RowBox[{"PlotLabel", " ", "\[Rule]", " ", "\"\<alcohol\>\""}]}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{"trainingset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "1", ",", " ", "9"}], "]"}], "]"}], ",", " ", 
      RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<pH\>\""}]}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.725857518909584*^9, 
  3.7258576321653805`*^9}},ExpressionUUID->"0036f4e5-06f0-4484-86b6-\
b09a18bca76d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.469], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.469], Thickness[Small]}], RectangleBox[{8., 0}, {8.2, 2.},
        RoundingRadius->0], RectangleBox[{8.4, 0}, {8.6, 6.},
        RoundingRadius->0], RectangleBox[{8.6, 0}, {8.8, 82.},
        RoundingRadius->0], RectangleBox[{8.8, 0}, {9., 157.},
        RoundingRadius->0], RectangleBox[{9., 0}, {9.2, 264.},
        RoundingRadius->0], RectangleBox[{9.2, 0}, {9.4, 258.},
        RoundingRadius->0], RectangleBox[{9.4, 0}, {9.6, 358.},
        RoundingRadius->0], RectangleBox[{9.6, 0}, {9.8, 185.},
        RoundingRadius->0], RectangleBox[{9.8, 0}, {10., 191.},
        RoundingRadius->0], RectangleBox[{10., 0}, {10.2, 219.},
        RoundingRadius->0], RectangleBox[{10.2, 0}, {10.4, 171.},
        RoundingRadius->0], RectangleBox[{10.4, 0}, {10.6, 240.},
        RoundingRadius->0], RectangleBox[{10.6, 0}, {10.8, 157.},
        RoundingRadius->0], RectangleBox[{10.8, 0}, {11., 163.},
        RoundingRadius->0], RectangleBox[{11., 0}, {11.2, 159.},
        RoundingRadius->0], RectangleBox[{11.2, 0}, {11.4, 139.},
        RoundingRadius->0], RectangleBox[{11.4, 0}, {11.6, 156.},
        RoundingRadius->0], RectangleBox[{11.6, 0}, {11.8, 75.},
        RoundingRadius->0], RectangleBox[{11.8, 0}, {12., 85.},
        RoundingRadius->0], RectangleBox[{12., 0}, {12.2, 115.},
        RoundingRadius->0], RectangleBox[{12.2, 0}, {12.4, 110.},
        RoundingRadius->0], RectangleBox[{12.4, 0}, {12.6, 92.},
        RoundingRadius->0], RectangleBox[{12.6, 0}, {12.8, 86.},
        RoundingRadius->0], RectangleBox[{12.8, 0}, {13., 65.},
        RoundingRadius->0], RectangleBox[{13., 0}, {13.2, 24.},
        RoundingRadius->0], RectangleBox[{13.2, 0}, {13.4, 11.},
        RoundingRadius->0], RectangleBox[{13.4, 0}, {13.6, 19.},
        RoundingRadius->0], RectangleBox[{13.6, 0}, {13.8, 6.},
        RoundingRadius->0], RectangleBox[{13.8, 0}, {14., 2.},
        RoundingRadius->0], RectangleBox[{14., 0}, {14.2, 3.},
        RoundingRadius->
         0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{7.876, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"alcohol\"", TraditionalForm],
    PlotRange->{{8., 14.2}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.5249999999999999], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.7, 0}, {2.75, 2.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{24.39057245796645, 32.257034323110666`}, {
            49.046954136520334`, 49.99361495892028}}],
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.75, 0}, {2.8, 3.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{31.70703432311067, 39.57349618825494}, {
            48.84862372532036, 49.99361495892028}}],
          StatusArea[#, 3]& ,
          TagBoxNote->"3"],
         StyleBox["3", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.8, 0}, {2.85, 3.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{39.023496188254946`, 46.889958053399276`}, {
            48.84862372532036, 49.99361495892028}}],
          StatusArea[#, 3]& ,
          TagBoxNote->"3"],
         StyleBox["3", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.85, 0}, {2.9, 37.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{46.33995805339928, 54.20641991854355}, {
            42.10538974452118, 49.99361495892028}}],
          StatusArea[#, 37]& ,
          TagBoxNote->"37"],
         StyleBox["37", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[37, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.9, 0}, {2.95, 86.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{53.656419918543556`, 61.522881783687886`}, {
            32.387199595722365`, 49.99361495892028}}],
          StatusArea[#, 86]& ,
          TagBoxNote->"86"],
         StyleBox["86", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[86, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.95, 0}, {3., 168.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{60.97288178368788, 68.83934364883217}, {
            16.12410587732436, 49.99361495892029}}],
          StatusArea[#, 168]& ,
          TagBoxNote->"168"],
         StyleBox["168", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[168, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3., 0}, {3.05, 261.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{68.28934364883216, 
            76.15580551397638}, {-2.320622364273376, 49.99361495892029}}],
          StatusArea[#, 261]& ,
          TagBoxNote->"261"],
         StyleBox["261", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[261, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.05, 0}, {3.1, 362.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{75.60580551397638, 
            83.47226737912071}, {-22.351993895470926`, 49.99361495892029}}],
          StatusArea[#, 362]& ,
          TagBoxNote->"362"],
         StyleBox["362", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[362, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.1, 0}, {3.15, 496.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{82.92226737912071, 
            90.78872924426499}, {-48.92826899626766, 49.99361495892029}}],
          StatusArea[#, 496]& ,
          TagBoxNote->"496"],
         StyleBox["496", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[496, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.15, 0}, {3.2, 508.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{90.23872924426499, 
            98.10519110940932}, {-51.30823393066737, 49.99361495892029}}],
          StatusArea[#, 508]& ,
          TagBoxNote->"508"],
         StyleBox["508", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[508, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.2, 0}, {3.25, 435.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{97.55519110940932, 
            105.4216529745536}, {-36.83011391306914, 49.99361495892029}}],
          StatusArea[#, 435]& ,
          TagBoxNote->"435"],
         StyleBox["435", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[435, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.25, 0}, {3.3, 341.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{104.8716529745536, 
            112.73811483969781`}, {-18.187055260271435`, 49.99361495892029}}],
          StatusArea[#, 341]& ,
          TagBoxNote->"341"],
         StyleBox["341", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[341, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.3, 0}, {3.35, 305.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{112.18811483969782`, 
            120.05457670484215`}, {-11.047160457072309`, 49.99361495892029}}],
          StatusArea[#, 305]& ,
          TagBoxNote->"305"],
         StyleBox["305", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[305, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.35, 0}, {3.4, 222.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{119.50457670484215`, 127.37103856998642`}, {
            5.414263672525678, 49.99361495892029}}],
          StatusArea[#, 222]& ,
          TagBoxNote->"222"],
         StyleBox["222", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[222, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.4, 0}, {3.45, 143.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{126.82103856998643`, 134.68750043513077`}, {
            21.08236615732375, 49.99361495892029}}],
          StatusArea[#, 143]& ,
          TagBoxNote->"143"],
         StyleBox["143", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[143, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.45, 0}, {3.5, 88.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{134.13750043513076`, 142.00396230027505`}, {
            31.990538773322413`, 49.99361495892029}}],
          StatusArea[#, 88]& ,
          TagBoxNote->"88"],
         StyleBox["88", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[88, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.5, 0}, {3.55, 69.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{141.45396230027504`, 149.32042416541927`}, {
            35.758816586121945`, 49.99361495892029}}],
          StatusArea[#, 69]& ,
          TagBoxNote->"69"],
         StyleBox["69", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[69, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.55, 0}, {3.6, 28.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{148.77042416541926`, 156.6368860305636}, {
            43.89036344532096, 49.99361495892029}}],
          StatusArea[#, 28]& ,
          TagBoxNote->"28"],
         StyleBox["28", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[28, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.6, 0}, {3.65, 18.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{156.0868860305636, 163.95334789570794`}, {
            45.873667557320715`, 49.99361495892029}}],
          StatusArea[#, 18]& ,
          TagBoxNote->"18"],
         StyleBox["18", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[18, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.65, 0}, {3.7, 11.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{163.40334789570792`, 171.26980976085227`}, {
            47.261980435720545`, 49.99361495892029}}],
          StatusArea[#, 11]& ,
          TagBoxNote->"11"],
         StyleBox["11", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[11, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.7, 0}, {3.75, 6.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{170.71980976085226`, 178.5862716259965}, {
            48.253632491720424`, 49.99361495892029}}],
          StatusArea[#, 6]& ,
          TagBoxNote->"6"],
         StyleBox["6", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[6, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.75, 0}, {3.8, 4.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{178.03627162599648`, 185.9027334911407}, {
            48.650293314120375`, 49.99361495892029}}],
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3.8, 0}, {3.85, 4.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{185.3527334911407, 193.21919535628504`}, {
            48.650293314120375`, 49.99361495892029}}],
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{2.677, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"pH\"", TraditionalForm],
    PlotRange->{{2.7, 3.85}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.725857635193337*^9},ExpressionUUID->"bbebe21d-390a-4e91-ac14-\
c7bdb8f90516"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", "trainingset", "]"}]}]], "Input",
 CellChangeTimes->{{3.725857664264006*^9, 
  3.7258576826306887`*^9}},ExpressionUUID->"dfbd9836-501c-4552-9dae-\
a143dcaff839"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3600", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7258576764164352`*^9, 
  3.725857706376918*^9}},ExpressionUUID->"b354f50a-a6af-48a5-af85-\
5293507c02ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", "trainingset", "]"}]}]], "Input",
 CellChangeTimes->{{3.725857719900114*^9, 
  3.7258577305917473`*^9}},ExpressionUUID->"2134154d-a0a5-4f8b-85a7-\
67473f885090"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "11", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3600", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725857764194334*^9},ExpressionUUID->"5dd85d4c-7801-4a74-afcb-\
754583f97db2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"unknownwine", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "7.6`", ",", " ", "0.48`", ",", " ", "0.31`", ",", " ", "9.4`", ",", " ", 
     "0.046`", ",", " ", "6.`", ",", " ", "194.`", ",", " ", "0.99714`", ",", 
     " ", "3.07`", ",", " ", "0.61`", ",", " ", "9.4`"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7258577721379237`*^9, 3.7258577885856295`*^9}, {
  3.725857857476616*^9, 
  3.725857949227651*^9}},ExpressionUUID->"44dfc9ea-9c35-4c74-a77c-\
5b11b237594e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", "unknownwine", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7258579544013844`*^9, 3.725857959548976*^9}, 
   3.7258579952564106`*^9},ExpressionUUID->"da84650f-e295-4fb6-abd9-\
9858818b3baa"],

Cell[BoxData["5.40000000550664`"], "Output",
 CellChangeTimes->{
  3.7258579961343756`*^9},ExpressionUUID->"e547e7db-3f8b-4b04-8584-\
b66b01cf5cd6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"quality", "[", 
    RowBox[{"pH_", ",", "alcohol_"}], "]"}], ":=", 
   RowBox[{"p", "[", 
    RowBox[{"{", 
     RowBox[{
     "7.6`", ",", "0.48`", ",", "0.31`", ",", "9.4`", ",", "0.046`", ",", 
      "6.`", ",", "194.`", ",", "0.99714`", ",", "pH", ",", "0.61`", ",", 
      "alcohol"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258579976358943`*^9, 
  3.7258579976970644`*^9}},ExpressionUUID->"cf366351-0517-475f-ad48-\
88f5a96d2870"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"quality", "[", 
      RowBox[{"pH", ",", " ", "alcohol"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"pH", ",", " ", "2.8", ",", " ", "3.8"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"alcohol", ",", " ", "8", ",", " ", "14"}], "}"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", " ", 
     RowBox[{"Exclusions", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"3.07`", ",", " ", "9.4`", ",", " ", 
        RowBox[{"p", "[", "unknownwine", "]"}]}], "}"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"PointSize", "[", ".05", "]"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.72585804389402*^9, 
  3.7258581994487514`*^9}},ExpressionUUID->"3a79ffd8-5fc3-435d-92b5-\
22b091e64999"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nXeYnlW1tye9EFCQQNoEAkF6ekKxzdBTqILShECSCaixIL2I7VMYJIFQ
E0A9CAEScuIRjaAkEEA9SBLaUMPxHD0akRI6jpTMN3mz7vWa+zl7/sl1/a6d
/e5nPftZe63fKnvYqV89akbXhoaGX2zZ0NCt898HFn7w1ZaWnk2tLads0dCw
fdMnnh23auXKbZqe+/yoq5a01/E9pjzS0tKyTdPr3acvbW/tlXjj/ad0zrJN
U6+fX/dcc2PvCj705Ec+aF1Sxz8yrn3evHn9m8b369iurblPBZ9yz5j9G9vq
eMPts8eOHdu/aVrLhr++Ffz8j82/dEl7Fb/y/lV3trduVsFvn9XlsebGfpXf
vW/Q+Ldal/SrjH/696dt09a8eeJ/nvObznVs3fTqmTfu09hWxfvu8NiJLS1b
JP7G4J065bl1E3Le86URD85aU5cncjaOnMEtZ+PIGdxyNo6cwS1n48jZOHI2
jpz9u8gZHLkhZ+PI2Thy9u8i58dmfXDOmqXDKnI2jpzBLWfjyBnccjaOnMEt
Z+PI2ThyNo6cjSNncPYhcvZ45GwcORtHzt944+E9Js7doSJn48gZ3HI2jpzB
LWfjyBnccjaOnI0jZ+PI2ThyNo6cjSNn8C3eHlN7XuRsHDlvc9Z1f1o6a8em
fY5d2Pm826acjSNn8N1WNnX+7rYpZ3DkhpyNI2dw1o+cjSNncPYbcvZ45Gwc
OXs9yBm89xYLNpEz+DbzPzJ/w3jkbBw5g1vO97RPv3b4xOEVOYMjT+RsHDkb
R87GkTO45QyOPJGzceTseZAzeJ/DvlQbj5zBd/r4eTU5IGdw5IacwZE/cvZ4
5OzxyPnEC8dMnjt8p6a9B/y1o6OjLmdw72fjyNk4cga3nMEHNz2zcoOdg5zB
LWfjyBkceSJncOSJnMGRD3I2jpyNI2fjyBnccu6o/VXlDG45G0fO4If85WOd
zzUg5ezxyBnccgYf1LBV7b0gZ3CeCzmDjz2jsWaXImfjyBl8+Nq7aucOcvZ4
5OzxyBm8//GTNtHPxpHzzd9d9YtZaz5ekTP47H2HzWxpGZByBn/z9i43zJs3
MOVsHDmD/++Q68eNHTsw5Qz+5xeemL9hPHIG3/WHF9TeC3IGHzPm2Jr8kTO4
5ezxyNk4cvY8yBl8v/Xfr41Hzh6PnI0j5wN73XD6mqU7pzyRMzhyQ87GkTP4
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
PJYb+F3nHlTzg7K+qcD72c5kPzAeOxPc9ip+k+fhuy7VEZjfQ/7MA571U5GH
73Mc+w08+2jp/oXsfyWcc8R9ArP/VYx3/r/nIe/IPE/2j4q8zbQPI5/Q+aLZ
D0r5ounXK180+zgpLzTtcOVzpv2v/MmsR1Mf+OzrUugP73rz7OuivvG8F847
939zn/Psp1ro22beAzm433j2r1B/7+xfUejL7fzJ7A+pcy37Q6pfN7yK+2/z
u+A/2PrRmv5PHkx9sPldcPQVcnCeZPZXLPSRdn4+esnnWvZniHmumfqNVf/a
L7fUl8z9orOPovpC530Tqj/N/oqFvtDuV4beYP3uY+b6Ava5cd6L+znj55KH
yXOhb+GF0FfIodSf2XUKyMfjkQM49YypP1Vnyv53P+fs06g60LyXwf3HiO/H
uQ+efYpUd5l9F2N+6jSRv/sboyedF8o6nReK3VLqV+Z+xeS7ui8x63c/Mc41
51Pxvjye9+W+xLwv9yVGzu4bhpwdp8t8xfCLOdcy36+Qj0Tcx31uqdfgHMk+
Azq/kgdQvIP58U+Zh/XYb007XzjycdyE924/GnvYPBX2lXHGO78Uvef4SOYr
Km8Kv8nzcN6V+ve6fgSeyvNkf0jf4xO8ovPBeC/OB8OvMT+A/I1nH0jZCfAz
zr9Nv1J9ftK/Dj4h75GJ+FeFZwjcfELmUWh8+lmBwycgZ+wZ191U+gKRRxrz
uB7H9wGht11vgpydV4bcjOd5FDh+evKHwW9knyXyNMSHgHs8vKLz0Ng/zltL
f1zj874/9Q3Ocy3Gu++u7/HBj2C841ysP+Ni1OmLz+F54Tfy3qjwj8BtT7qv
Uca7xcPAVzhvjfdrvoXvyDjjnXfNfvB4cMb7HhzsTOJc8A/wHuA8F3wLdiz7
HBz7mfHMw3j8So8H93jeu+1e9JL5HM4L80J5jmg8dSIVnp/+eOKjOC9cf4Qe
cB8b/GXHHdgP5n/Y/x6PHNx/Bjl4PHaF52c88Q7GIx/zVJyzxtknzk9DP5fy
1sCxe9G3xvkewYmfZt6v/AW+R+TjPC7myXqceC/g+DsZZxeOHjOO/gHP+jXy
h2Od2O0ZTxf/lvH0GI9dx/fuuDB2lO8D4ntnvHlF/AXqqTNfQnmAfI/g7guE
/Q8/lvnJMR4884qVv8dzOR7N/oF/y31C/1jVU2cfNtVTZx/4wJ1/aN6P/QCO
Pczvur6MdZqHRM7Y8/gdyNl8IPvfeOb9im/kHPf45NsLcXnnHyIH5x/yfnle
+wuMB8dPx+8AT34+1oMfxD5nHvhA9gm4/Rrfd8P+YTw456Zx3ot5Wt6jcd6L
ceQAzvOit8HhIZGD/Sz0qvMZeC7jGU9UHDn7achf43ndbznzxMRb8ryOI+On
VOLF1MUX4sul/skej/50fBl72HHkjNMJz/p6zc94509mPZ3iyFmPLxy96nwG
3pfrd7JuUfdKZ19Zzc945s+67zi/nFeJ3Py78GPGkYPnQW7G076SH51198p7
ZP2V38UO1Hj2SWV+8rIK8WjjycMr7zHjaPIT87soxN9LfXpdZ4p+LvXvtV+Z
93TLv+bcqdyng52m+Djv0f44es9+dN7HLTzrfNWnFzm7PivvJ5U80Rv2r7NP
pvCMX8uvTx5YeadZt6g+OZkfGPMbr/TVIa9S+QPYe67/Qs/bf8/8w/hdj3d9
GfrfOPYhOP5g5vP7vqGYx/GUvG9F86ffJD867UzJOes31WeD88L1y1k/orxc
vguPz7wm4XmfuHiGzGvy/UQhB8bzXMjf8SDeV6nO2v2HkQ9+NHll6PlSPnAJ
N8+QeUeq485zQfOknS+/Pu9JVH8n9Bj+vv16/GLw7FuuvJTsa6HxWV+g8cm/
KY+F9+j856xrFt+S8UrlvWRfU+W9ZF9T8S3oAeOZp+e6vNDDrkMEZx7qWNmH
pfwZxw2T53fdHH1QxeewT8zbZB2E8meS51T/lvT71Mc4+/aI58n70Av5OZ4/
6wKUp40eKNXNOS8o87gKfZK9Tvwa55Nnna/6Kqe9IX4p72037xTj3YeZ/eC6
xbznXXjqbfFO6BPXM3Iug/Pe0SfGk4dXXWHe567fTT2vebJ/hfLqM18x5vc9
zq6jTP9dfZ55X86Hz3h9AXf+Enqe8c4HM6+V+XuB4w/ynZb6NlueqW/Fa6W+
VV8g9rN5rfTrFR/P/D3d55V8svo2p30SfBF8VOol9aPAPzVPlf1AFE/HDvH4
7N+u+fld+BzPbxy5gcNHpZ9e6P9sngp5up9z1i0Kz/p68VrZB9J8F/EO1bFm
H3LllWFvVOpYyT+P+Dg4cmZ85leEfeK8OMabT8t6f+F5H0phfKm/tMdjF/G8
xNmZB9x1lKzf/CTz833xHiu8X5w7xhnv/EDGu19K2iHCM+4TePYHpn5Hfa0z
HqT637x3Xjj7Ddx1HyXc/a7TPtH47JMgPPOrC/e+Ob8CvFSP7PfL/jSeelU4
fEtpvPvVsE8Yzz5hX4F7XzEP45MPVz/tzGeO8c5j8TzgzttEz7j/dvZJCP4T
PjDvkVG9dvY9UB4IuOuk0k6I8ZxraSeoforx7svNeN9bl/Vi6sud/eI0P/ak
81T5To1jzxtH3zrvFHvAearI2X2tOY9Kfa2dL8p+LvW7LuWplu7R83jsNNeP
w28bx35zPiry9/isB1F9UPrv4oezr7LGZ3xZddnsH+PoN/N+/K7rWbL/kvo/
5zqFZx9v1b8kXy087zkSjt52/XXmkQpPP0t8EfvEvE32twzcfIL7kWYdVvj7
2W+WOizhea7JX874qXgAzrtS/2f7X/CEJT+l0oeN/MBCXa3xrDMNuxr7Nutc
lBeadeiK8+Zzya7me2S87Xzj2Q887BDWw7lpOzDzWwLHfsv6UPWFZnwFpz+S
7J/s9yucfWg7B9zxx8wbifHkbTK/z7XsR6S4IbjjX9hFrvPNe3WFI2fX2/I9
uh8m+8R9p/leKvo/7Hbjee+e6iuzL4Ty+VNfKb6W/KT0ZPZzUJyL9Tg+hR1V
uq/Tcavs81a479J1i5yn7r+d35f6eGS/dPf3iPw0999GL1n/5/1BwvO+8sjz
dN2E+3jAJxjPfFSdC7xfny9577n6fmfdmfqEJN8lPO9JV5/w7FepeFbyVMLx
v5y/mvxMIc7lPNWsSy3cL+m6y+w/r/zSrEPU/ZLZT155m8jH8azsf6LzMe8N
V35p8hKKp5BvUImzxHfhOAVyc35j3gehPMbMY1FeYvr7wllPJb+R+lnlGWa+
qO7dyz5RyhtMP1F49i3U/XrYt+b/8SPc34P9VskDpP+z+Oc8Nwv36Hke5O86
0LyXs8DPV+pPyZtVHmD2HVU/urxHQ3je16nnyns2xXPm+Vu4n8Ljsx9FgS+t
3GcR54h5b/Sb+5xkPFr8auY7CWdfud8IcgaHN0M+tsd4v87ryzhvof60dK+c
8+v43s0fZh974XnPo/Li8t5h5a2hxyp1r6H3jLN/zMtxzoLzu6zHOPvHeWvs
N+PZx0/5admvXn3qMo9U+WnYk85Pyz72wjNfUfeg5f0pqm/lucBtN5qHSfmr
Xgb7ELvU/c+dt8Z54XWi95wnxvqNs07zM3y/4O5H5DrZvP9Fdiz62X1asEvN
V+S9gcLTL1A/mbxfRjjv0f1e8ENdD8t+dn+8vE9QdbXwcp4H/eb62YyLqX6H
eVwHxL4yP4A+wW7B7uJ5nd/C+l3Pwvt1vkrGT8MOAc/7UpUvkf3GlV+RvEoh
n8F1rJkvp3wG9g8452D2wYs4L3Wpeb+D+tlmv+I4r4lHJz+jeHHWLQbOeZ11
IqpXTf9XdanZJ0Q8QNZhBe48XufJJy/tOB31gIrrZT1g4d5Vx/Wyr2+Mt972
/Nl/w/1UsUsV58r+z8Kz/3PgyIHfNZ597RTPyj4Y6vfFfijxD8SVrB8cx8l+
zoFbPsxjnpzxyI3zy/GU5KNc78l7Ec+ffZKVL532hniJrDehz5J4YM4j9wdg
vO/XMH/OeeT+k5w7xrOfnvzf1D/C4cfQh1n/FTyb6x8zbi4/DjvQejLva1Of
H3DfP8V55DxD1uO8Qfwp579lfwPxotiBzsvK59V96xkvUx5O9oFXvVLm16le
nu/adnjWdSpvgecq1en4Xuas81Vcm/HwfvD2rL/Sz4R7qxV/ZHyF36Nft+5l
yPtWxEflvSrinTIvQvdX8r2Yd+J7cf4z54v71oL73M98iQKP4bzczAPXvkW/
ed/mvTbua8H9DsIzP1z5t9kfSbxExvVU75n8ofqRco44/zC/R+Pk/epeMPw1
5wfmvlJ+XeY/x/nue9WdF5f1ULp37MrV4z7VeHS/pjN/Nm/prMH17+uZe7p8
f8m5VTx5PPWZzzoj1dMhH9sVjZc2/Ht73045v7PqwLnTd67wFf4eUw8rj4V9
xXfK72ZfjjjXyN+AJ3GcGv+lklcQdr7j75zXxid1jO/ftqLTn+refeDEJ+rn
zhUvdT2pZW0dx39BbvZT0J/ut5P94lTHwXnqftTZN0Y4+tDfdd4zKDzru3Xe
cb67vzT7xDjr9D1TrLNy/1Tw1fZHWL/1D79r3jh5e8Xd8n5A7c/MYxH/k/cC
K86V/X4L95M6PnX/6x3NjUd3fo8fnrZk1uC6vdfzhZWtS86t4nmPgHiG5A9j
H+LvJ38onHlKfr3vD11x97SGy0Z22mnnjBgz8ajqfvP9wmn36l7gtHt1n2/e
i6R7e9EDPvfRSyduuWrHiUfV8e1X3Pha68gtEsffQT7kPzgfwPx88qXin7Fb
sB/II8V/Qf9kH5uwt/HHee+Z16q6hoxHCGf9zofHPjGe/TN1jmR/DOHM7/3P
/MYZb/8u6/eFZ92T6lCy75/vCaWuUDjnxYl/u+6MNe/uWLHDOdcynzbm9zkC
7nsV8x4ZnS/8but5N7zX8ZmqHQhf6nxI43ecPP8zjUd3rv8TXZ9auriOZ/8E
+X1p5wtPXiLyvhw3N75w5/Ufto7s3FffmjB9zbt1HP1pfyfv8VHcMPP2hWc/
AcX1Mv9ceN5ro3hc3icrPO+1Udwt+3UI5724jpX9aTzzPXS+5L144pcyv1T9
vnI/x3vPenP4ZPXtwZ6p+GXcGyu85c7T9248eoumu6f9YdmswfX1PHPT2Bkt
a/tWvgvG37xuzAtLF9d5Icbb7gL3Pp925qp3W0dW9+30T47+ZXvf6r5i33pf
YS9V7n0Iu7SSX0Rdhu+PiPnxa4w7rp33RmmeCX9++Csta6v3XOe9k4qzDz1y
+pdb1lbxnvevP71lbdUvA/d91utGzJvZsrbab/lU6ge1/qd5L+7PHLjHTwr9
Y3x5v9Wntqyt410323XVyin9mwbhp8sfnB32qnHk5rh/9vVVXB65Ged5K/0S
47mM81zGWU8l3yx+132f+F37m/xu5f5uzl/hyNM467H/y3rAB3/h9y0ta+vv
3f0YWQ/4+we83Wn+19fj+DvrAef9sh547xEj16xcOaW+nkr+G3Uu6l/Eesyf
sx7wXu9f2Cnn+nrAB3x4x9ixd9XXY149720RznrAvR7wS4a/3SnPrXM94Fvu
+2bn/6+vB3zHB/9Ykz/rcV0bv+t7t/ld8F0+OK6h4Vvb5PzgOz7da/68gdvk
/JwX7aOP6nwv9XxO+8v8buW+7PjdSn9I+ikFPuqJfTvlv22ux/OwHvP22Y/X
fH7sE/DXem+3euXK+jqTt4/zjnWaz2edxlmncdbpe7ezT6/i1KzH92KzHvBx
c8/qHFf/XfDPfOWIzv1Z/133b0y+UTjyAX/rsi27NHyrvh7z9qwHfN9fru38
3YEpH/BvXjCs5kewzuzTOKvz9X5rQK7T/iC/C555/vG7jsPyu+C/PGPKqg3v
l9/NvostSzs6Lh6Yv4s9896W3+7c54NTDvYrWY/v3WY94H02m1KTG78LfnzP
eZ36qv675kl4L8b5XfC+kr/jrcx/9z7X9Gu4v24PMM8ehXP5VzHe+nA/8SfM
f8KyU1fMumFYZf7VhXPw+Bjv+f8qe4n51zeNOnvN2TtU5j+jcN59GOM9/yWK
U/Be+v/PB70bmqrn3b899OFuE4/asWkkcbT43a0L59pPYrx/d3fFO5j/gEMe
+e+le9bPL+a/u3BO7R/jPc/fHrn+6uF9qnr++ML5sjbGc64xT+vhLRPn/qU6
z/rCeXFpjN/h76M69X/9XNjzybHrO+77eNMpD8+o+QV5D0L43Tf9rrWmB5j/
J4VzYY+Yh3Mh7bTPdblr1g07N9379U691FDXn46P8P3+LfwC6/kDQj+PkJ5/
NOb3ucM81uffeH71zDVn71I579YW9PYZMR69nfbVSTcOmXjUrhW91xp6sru+
9/4x/vFlv6zpt7SL/nT640v3rOrPPQr68+4Yb71x4oy9vj+8z+5N7/z72k45
1PXPYwW9d0KM7/ub5zv3SX2eLn/v/om5f6nqN9fRMP+ZBf3WEPOwzjHBex+n
eBD4ycIXXHDa1Ja1/ZrWBu+H/Q/+xLOn/Hj4pXWc9/7D999fu3TPul5i/vfD
7+uj3+1y56Y4818S8/h3zzxx5NFzpw+r+Ck3zf/P89a827meYzbkNW2d8/84
eEX/7q3CmX+Pix++YXifHZre/dNxte8dfID0Hn7TUvGHfEdPdL3uiLl/2aHi
J64O3H7ir8Ovd/z3hOABen/lwZody/v9+79N+9+li6v6md+1/JsVFwM/WDjP
yzr7Xd2/c//U8V+Lf+B5z/r+9B4N9+/YtOuCdRvzXuK5zgjcz3tS8BV+3vWK
x+EvX7rT6OuHX7pj03r5QV2f3nQ8cmA9PUJurJ/1bLnXWZ12VB1nPeht3m9b
8LH92p6vzcP6t+475tezbviXvOjAG740Y+eJT1T7qZ4ZvOtHQ26s/1b1b2H9
A2J+4oO8rx9E/JF1gl8unOdincZZJzjv8TeXd3xlzdk7pb7lue4OfKee/Wp6
HvyW4JeIM/K+fhjn3YDfX9v5fuvPe0jEMYdo/bsHf7u7nne07iVk/azHz8V6
/FwnRVyAvGXWf3zgnOPgB53RcOXwS+s4639Zeci8L+anzwPrXxXxiz1jPPiT
imuw/uMV1wBnPZmHHM/V5Zr5zy7ds36OI/8n4lx+aHmP2rnP+mcr/4H1fD14
cuPnCGc966/e+LvkEYG/FOd+1h/FOm8ZcNrlw/vU42LI+SeB//mBkzfBfxg8
5D8Oe3gjrxjPdfevxm0/8Ymdm16Ze0Knv1B/rtHKN+a98Lt+ro8Fzz8p+Fjw
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
K9UHgHW+pP4k4H8J/J3bNuXZvh71RObfvqD+J6yffnGOLz+p+HLmcUWdvuMR
zaoPSj5cfGD2Z4v+JNhvmX8rez79AvVXZ/8cH/FW4gvgB0V81rjretAzxHlt
tzMenH1I3Nl2HXXxxk9SX8HM+yrkvdysevasqw17vqf4nA+VD5N1f2GXjtT5
hZ3p+MjJYQfarjtb/U4zL516fNlpL8fv2n57/4ub1stnnqfs1ezzFnajeVHf
n8X7Iu6c94bwHmM85zj78CTVPWXfEuUBZh1r4P8Q/wYfZflsI7s3+/gpPzD9
muhXg/2ZcZkY3xh2b/aXi/GucyEObjv8ZeHI/2thr9qunko9fvhr6W9G3xuf
+8cJR6/+PeqAHGenfw59dZInDNx2IPdeUefO9/WS+nBmn5Owh73OE7XO/K6D
395beVC7qy4++weKZ8u4QCGfarXqzZNvXLzpPap8p/Dn+8U+Sb5x8ab3lYDP
DjvnGMWjB4X9Zjtzt7ADzfNjX9nOIe/L/D95X64/os+P8wR8X3zmpcR420v8
ru26k1TXk/WzsX7X15C3YJx1Oo7/Qcxjub0SdqbxZTGP8VWxfuO+bz3zWHQf
evbNCBw7h/e+upD/4DhvfteRp0GdDnj21w08+wOobxLv0ffJsk74Q9e/+97w
rOtXnJf3Ak6eBt8veXozZNe16r7v5B8i7om9lHyFcJ5364iHuq6HumZw1o8d
4r6d2CH9z1y2id3lvPeML8e56Xwtznfw/B6DP7Gd43qTzJNXH3LkcC/3UAhf
Gvie8jc/prwI8G7XbJoXkee4+vlnH6Hw6x138P3O6RfrXmb2If6C69d8P136
X9q3WcchOz/rmtW/N+PIEX93/oD7BoM7zzP7/KjfV9ZxFPotHxj2tvn2PcPe
Nu7+4Rl3jnnMe/s+37TTdO9t9nEt9JuCn/R+pp7duO+ZzX6tumeW9fs+2ewb
GfzkZsrDxA50nbXvb03+WfeuZv1j7a9+v2r2nww7bSvZab6PNfsJKF8x6xd0
j2ryD7oXNfug6t7SjH8V4vju+5r+ddg5tpN9H2j2+wr7xN+v7/dMPlP3dWZe
h+7lzLps3aeZ9Q7BY7jvCnzFGXG+MA/96g856Zbac2UdtO6dzHo33S+JPi/V
h6J/vnDFU537se6nkBftc4Q8asff6QtX6eMtPzHrTMN/Gan3hd+xWXyn2cdV
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
1/n/AUKeAXU=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXX8FcX3xu/nc2Pvxt3di2IgKoqKYIuKLSoqit0diAIGKgZiYncnWNjd
3aiY2IWtoKiIioFdv+fNM9/X74+9c+7s7Ozs7OzMmXOec85Cgw/YckRnpVLZ
t6hUqkq3SCqV1WqVSnelC8eVys8dlcpHzUqln/4vL3pv0bdklcpQpYu2K5Xb
dd33Kr+s0ruUv5/yByl/77JS+Vr5Syn/Dh0zRS+n9FaVGaYyg1XmunqlsqZu
+pXqfVd5vZTurHQZ3auH6O1En6UyL+jat/X/apVdVse7ok9UmXeUTlKZFZR3
hR5iAf0/Tfe9XdfconvN16pUztMz7ar0t0alcoHyJ6vMjWrDlcofr/zrVa6r
6j81r1Tm1f9XVV9PtW1ePft/KrOK/h+iMrerzH8qc66u3Uj5P6eVyusqc5vq
u1dl9lOZ61XmD5W5RPlbqT3zKG1FlUqmY5zKFUobautlopdUOo4yondUm0ud
20HpXspfSfk7K/8vPePXSier/mt130t133Fq4yiV66Hn+UT3vEf3mKky76vM
jfq/jq6fV23YWvVNUD076dw8eu63lb+r6BVV55JK91D523RcKvpWpaeozEUq
84b+b6Q6F1S6jfI7Re8o+gzRHaJ3oI9Fz6HyJ+h5t9P/n0X31L22Fr2D6lhY
9FaiO9SGbqI3Ft1D6Vw63tYz7K4yS4veXvm7iF5C9La8e9GPi95G9BJ6vqro
30RXVP9DojcQ3Sl6tO47UPSvaseGSo9Q+qXadqDKLKF0oJ5xkPKPVv7u+j+v
8v8QvaLqfFj3OIB69X8jlTlSaVN11nVswpjT+fl0flPRa4i+RvQiohfQtbuL
7qH63lD+TTp24/3pfZyjJl6q9Gq9ox1U3+EaPx+p3M6MSaWraKyMFz1IdA/1
yV+q6xrdbzz9oOMt1X+s8j5VupCOP0S/pmfsKXqGyn2jo7uu76NrZ4r+Tscg
PeMWfAc8h+jNRZ8genONjZ90bV+NhVVU9yfKX5jnVP7iqvcL5f+q9FmVmajj
ZdU1THXXdIzQuY30f3+lu+leP/Bd6dqGyh+h84eKPlnXrKXjaz3z18o/XnnT
RQ/SMw5UmTn0jBvp2k11bmP9X0H1bab0DJUbpfo2Ej2nyiysNn+n63qrzReq
vgt0fK//f+rceSp7s/LHKP1KefPpOEvnx+jab0WfKfps+kb0TNV5luhvRP+t
a7/T/7+UDlIbtlAbNtU1JyhvtI4LVW4ltWdz5Z0j+ijlbSL6NMaV6ONF/6B6
Jqj+zXXMqfwXVP4g0Z06d5b6cJL+P67+6a33/ana2FfveoPEY/Nw/X9B5xZX
+fP1DZ6n+w/VdWsy5zQ8Pnvp+CL2mK8ovZKxK3IBpdN0/KuyXygdoTrWEH2t
zu3JvKH/r+r/TbrmNaUvqczqasNMpeerDauK/l70TqInaBweKnqI6Ilq74K6
tqL73al2PsicoDpuF53Sn4x/PftJon9RsdP0HqepracqTVVuH93rfJWZoONx
0U8qfUf526l8d6XP8czKf1ZpQ214UOkquu9I1X+P8h/W/4NFR6L7i75IbdtC
9/ld9V+m+y6iY5LOXae6LladA5TOr6PNPKTyA9T+K9T+y/X/fv2/Xel9Sn9R
Gy9S+Vz/H9X5Z5W2dByi8s8ofYr3oXfxoM41WKPUhueVN1HXzq1r59Kxva7v
qfyf1J6llL+Y2vKKyszBnKP8S5TeQpt17Cv6AqXzqf7VdN1gvgu1c3elZzJP
qr5VlF9XXk3vayGVO0DnFlHan3euKt9X/WuI3lv5qysdQh3K/0J9MY/StdU3
h6jMBjp3tM4dJHo90Ucy1lXwYj3LTJUbofx1lV/oXr/qWId+UPqF8kep7DSV
mSL6EOrQ8ZnqP11t+ljp+ip7lPK6qsxA5a2regco71+lv/Jt079qx0g90556
j6+r/a/piFTmIb3f55VulLldz4e2baNrJ4leveLneyY8I/30dOir+1rO769r
7205f03RA/WdvCz6KeUdo/QlHavwDbZc55NKf+/0WvaZ8m9VOk3HFaKPUvoi
c4zox1qmH1V6pNIXdCzPtxP73fEOn2i5/seVPtJymYeV3q9jouh11Z7nlI7u
cN8+oPxn9X995a+m/xWeibGnftyYT0rnL1P+zcq/R/ld1J871c0T5Or/03gW
nV9DRwfvHN5Izxvr3BRde7LSq5V/MfUWXuMW0b3mUH+epnNb6/8WdfMS13X4
fdIe3ulTSnfr8Hi7hbVR5VeBZ1AbBqttDyqtqM47lfeb2nu+jhv1fodrXA/W
uT10bKW6t9GxtY4bWPs0v12mMrNyr7MP845VzVeF542emfmRz0Uv3uH7fqHj
cpV5ueX8ESpzQ+H8V5R3pur5VPS8Kn+AnutD1hGVf7Hl/F1UfpLoqaKHMW/F
5uM2VPp61fmsv8P0/19dd0Xq/n6j0326o+p/U3Sn6HM6nb+Dyh0Q5hDmEuYZ
7tuF7yH2fMW8VdOzvq/8gyv+7j/q9Lc/ttP0Ycq/Utd+DO+i/JXVvteV96H6
qZ+ufVL5n1bMMzzK84r+VP06Sennus8uOl6qmA+ZpfNP6JjMWFX+/dxDZefR
8zwgekflLVbzGHhOZZbVvV5Q+o368snY9U9R+RfUV5/AH+r86XXTE9W2WTo3
gO9D6V665hW+Q5XdoeHvay2dWybz++yt99tD931M+bvC43ea73pX5zZRnRvr
uEZ1pnquK5X+rvyrlP6pdFO+KdV/vto6Q/VsoOMI5iOlg5X/E/yV6MN0ryX0
3MM0h/yoNvXTdTcqHai+W5Expfvvlzt/uuh/Yq/hi+qakbq2l9J1dO2k2Ot+
X6XjdO3c9K3K35F6rolZo3TPtTr9nX+QeS5lTj1I9OKiB+i6M1LzMEur/FVN
8y8LKz1U1/6n/GNZUxPzNgsq/ULXLst+SH04nTGtssuqPf/o/F861lf57jyD
ru2tOpdp+Bups86qzi10xKIP0DOP0PGq+nQ91dtW3s+s+azffBNK71X9Byk9
UvUPr3ptaKrOxXV0YV3WuTl1r0T0DNFfqfy17JNUfhXdd96692xjEvMtfZQe
r7zj6uYV7lKd+7Be6PhR160HL6Z0ct08wADmFl2XMw70zJc0vV7Nr/R93auL
6PXUD8NUz6phPj9a1/YKa/fzTX9bGytdQHlPis741urmE+Ab9he9n47HRPes
eq3n+1xBz7WN6G561j11/gLRDeUvpmeoK11LdY5V+R07/d3Oo+e9sOq1+1q1
eTx7LrVvF117fqf5g91F36H8O0Q/wHeudE2l6+oeBXOL6IvZp1TNEzzVNO8w
EB4n8BJPs6/Uve4J+4WfRe9RN0/ziM7FStdVWsZeT68QfYnG2WLsBZQ+kHod
76Lz6+p/L+V/qbwXYvMDGTxg3etxW3QUmx84h7bp+By+V+lDas99Opo6N7Lq
tZo192O9lwVVZprq/Ep9ta3y51Md0+DxdP5xXfuojkT0eqxZrNkqf62+uaMS
z3cvwrslXlfGiT6gal6C9e8TlV8Ivp45nD2K8m9V/k5Vz2Ps0f5U+3djT67/
xykdo+Nc5X+Xmb9m7d5e/XZuzbz3iip/Ws3n+opeo+Z9wUy16XSlb2v+OLjl
PNZx5pWLeHewY/qGVmF88G5aru9H3edIePtO8/DvqC9GqdzbSuPIc9H58IFV
7ymWYd0pTX+va69DhqG8+1R+W7Xz6prLw8/8EJ5lZuT56vrI/MPsvYaunaFj
VeVvrfTElsfqxaKf0LWb1Dzm5hT9WM3nzu40/7C9kgt0v7bOLaf0caWDVKaq
cysx5zGW9U5OV/m/RW/JvVXuOb5Vpf9mLntB5rXunLAObqV6zqi5fSNb7g94
m7/Vt3fBJ4h+X3UcqjIt5nrRGTyPzv2au45zVOfNudfS8zKvq+eGtXVbPf82
Om7Q9SdWvabwbhAasU9jj7al6hxYM6/yeqd5im2Uf0jqcx/puaa1nP+D8s5U
mZvgOyijczeKvlf32LZu3oT/vyJXgYcp/Lys/azvp1fdvlv0/9DCPNes1OP0
vDBWj285hU87oeW5oaZ0N9W9a93zw5uJ18q99O2MzJ33Z+H3Au+0m+71m+51
beDTtm85/Snz2vpzGKPri15PxzGiXys8ti9TfQfDh3eanx8L36DnG6l0Kd1/
ybrXHfawxyntw3PFpsczzyv/37A2fZr5/GZKm6pj+br33i9WPb4Hdfr72FDp
SazdasuMkH8YZZSeqPzN6Qv4KbVtZuayI0QfojoPZn1uOD25w/PLYaIP1bGJ
8q/P/W7/Y+yrfQN1fmW195fCvNnpyl+SPTG8hvIPb3m/sp3yjxb9s+gn9Ox9
mubNd1LfV9W2o1mX9P/IllP4lh9z78W3Z+0VPUv03rrPb7RF9J1K14BPqbn/
t2tZfrCtyv+i8r+KHqbylyMrqPn/mJb3uM8qTcL3/Zv+H6e6xuhIddyUOw95
6A+ZeZ9jmSty7xMXVftnqi++b/j/Nbn5ohNUppvu853q7KdjL/blyu+rZ7xL
7fxSecvpGKz8s5W/vPKvUjuWYrwo3UXXrtRhGd/V+r80PC48tfKn1lyOfQ3P
uJyOPVou/zZ7GrVhRdGrqW1XBF735cDPjg087Xeq41sdK8D7qnxfpauo/Azl
7Vzz//v45jpd17Utl31BZa9pWfb7qfqkH+uo7r+S3u/VuWU4X6ie3rr2b8Ya
44MxrvzHlf6sa+9VXpN9GbKgmtfgXHU9wNzIt5ubXxivPvwn91p3mejp6qMK
c6PSeVVXp+jndK6j9LyawRsj46lZDvA7expdcrfSY1qW356pej5OPB8NZ6+U
m7+4VPlzslZ0un3Pa+7YTv+fU/qjrr1beRHrl9o8V9Vz0Z9KH+jw2r8j8lod
D+vep6hcqrwrM69159TcL8/pvp/pmp91363V1sPYH7GnVP4nyv9R+bsW/t4/
g1dV3y6h6xbS+R2Uf6rq+VLt/SgzP7ae0q/0vId2WmY0Pbc8bBv2TS3zz+xt
39X5hzq89o/W/7+UfyLfhe65Zaf5pdd0j2X1bK8q3a3wuvwVfHvLcjXWtYXV
z/2Vf6Xye6pt8yt/K5XfWW34PcyJm9a9j4XuX7ece2WVG6tyP4j+QNedJ/oG
3XczPe+dzLs6ftS5tur+Bl6Ga5GpqszmyJ6RhercYHhWpdN1/kPWx8Tf0BD4
ItUxH7xfh/e+e3V6/7t3GOMXqw1Dwri+SPQtKjOrw/qM6crfs9NjervY4324
6ryJdYHvRP/PRB4CH6T8z5r+pveBx1MbbtO1WwW5O98l3/MtunYeZJj634O1
Tvfbr8M83V4dlvOc3Zwtyq5cwP67w7IjdC73qM9Hqs590Fcgj1PeufrprsLv
qsCerFvIw3WsrHIf1rwPZw++ZqdldIgnFlD591R+qP4vpHu8V7Nu5bnY8pPB
SudWmT/Ydyt/nN7rQXwXuu8Hum4464KOryLvsy6OLLdh/dpP6fx1y7Co/7vY
z3AW8kD2C8xFShdiH8v3IfoNjaEJqmcJpS9pjLXYAykdrPtuq3p6KX1T555S
mSWVPsO3pzZfqz5+SPXszd5f6eropFTn/qrzOI3J8eqHuZW+qGse1bW9kCHo
OErnl9Se6Dfdp0vdOoY5696no8P4W/SKqn95ZCex9RUn6ZpeNesv/kG+iPyY
b13H/Yn1AvcqfSyxDuNvldk4tmx+e9G/B1n9qTp/R2x5+2vK7xP0O+vHloFU
gw7rXNHP16y72im1LuvlpuUdyD22En2yynTUrIvJEuusXmG9RTYqekvmidTP
tUdsOcBpdesRVqpa14D+bJzyxjIWOyxLWT3oLLbUe31T9U9R/o1V6zU+41tV
XZ8rfYtnZA5FPsT6Wrcu432dO0PtuU70JirbGVkeyvhEpncwe3ClP8Qe+xeq
ng30vg9XHZ+wfqrsEqIXUrlv4V9q1mF8mvtdTIbHyS13ukP1LJJaNjEmtvxk
sbDv+FLXbq92d4VvEP2T0gV1LKAxEen/2rrn0rllJncx36rsb8gQeMd1y25W
EP1f3bLFFXVsUbg9n8ML652uKrofPBNrb6f1U1Ny67veyywLZd9xoNLL2Z9r
HF6o/vix8H5wkMpEQdeHPPNXnVtf6e2R+Qdky+wrhheWbf+h8hNbnj9/E71Z
ah7lQj370ML1/J6ZTxnbYbnJ4iqzgto3n97J1JZlNt+m5lehN1eZ33PLbmak
nv+hkeHsUVi285fqPF51Pgj/qv7YQfWM51tBz5lbPvmzyj6q8xvWfG6gym1Q
97kBhd/hWyr/ucocV7Mu6vtOv0f0dLNi8wanKG1ElmGy52RtREaeIVPLvIcY
wP4myM9H6Nzyouuqd21dcyn7dJW5jLzIsvUDOyyn5fxGzKPKP0jHOshjWuZ7
D1C6b9Uy3v1Vfq2G119o5r/DlWroVCJd16duGfridcvT4Wf2r3p+Zl88ojSP
/L2eu6fotfW8V6mfnkysD900sez9YHgc1Tm06vkW3eubomfCA+j4tOHvAjnS
SoXTp/Xsnyh/VM0ymltb1lG+oPwpyj+q5v/9Wu7XZ5X/UW7d08TMurmRorvD
s9Ys39tM/4/Qc43WcRU6qKq/U2QIc+kZT6p5LVgh9ze0ruruqn5+WXV8pms+
QD5c9Z7xtpb1oq/rXiu3rGN9SfQPOvdIp/8/pXqWUXqTnuk5lXmt0/w2+0j2
azuq3oMLy7Z/V/qXji01Ni/RvP2v0p11Plf5VSPvn5ENjW6YD9hF9KHq8+vU
np1z81/IPYbpmgMLy8lnqo4uDe+vuQf8I7Ki/SuWG+0QaAbdruwJdN1+fI9B
xtRi/RG9E+9MdV3Meql3elTD/Mquyp+qNqyscxeqzd2Un9c8P54t+vG6161H
mdv1/1il8+v8bYFHeS3ItJmHj+d7CXrlXQNWYd/Ma+kenOcdFOZVdtf5Lqrn
hjCHn56bP9pN+Qs1TJ+h8i9XLdPmWdZQ/1xZd/0DlD9E6Y0q837LbdlT6ZeF
dZR7ie5Rsy74QfZayFh1zWfolyLr44dzX+SNgX96k/1SxXrQxwpfO7/aPwC9
UmSZ4wUqv1DN15YNy+zgQYer/s/Utm5Kl1b+Ug3LUq9X+kvdMrd+olcKetNH
Y383fZTOWXrNPk99sF5k2ev+vFfVtazy59H7OjU2nzwusk4NHmYutfV50XtX
Pbd3RZ5Mfmm99xai12au1vlTA688Inz756mevrrPMjW37aDwHTHvn6tzGgqV
X3TPE2Pz+UvF1l1DM68xx4zq9DwzKuzHr4ysg2Yd6an8g/QOlkTmrD48pmr9
Fvto9OPs/dgzd4Z8dF7fsd52mn86uuoy7A2fLtz3bd1s2dhlkV+3kDN0WsaE
zvfYTsuwzoxNLx8bn4IejjVrm8T0csofpbatFvYa1weZ2H/KP6Ll/SD79J0T
178Cz45cQPRxSu+uej2gr6cXfldD4Rdy639/E/0tejjWI73DXUvLcE5D9t6y
zPWfwjqtwTy37nNF7L3YY3quK1Pv4/ZV3jC9x6E6HoVfVzo80KSPkOr6S5lz
1Kf36P4f6LqXlH9Ixfz7VHha5BSqd++KZaffsybCL7Yto2a/SDtOVf7DolOl
c0XedyF7PVfP9I7o+0Q/pPw9Vfba2PtHnpF6t9e9L+R70rW1zPX9JLojs8yp
qTa+12ld9gj9/zfI1fdjDJTmJ0erjnkiy9af0LlD9X9xlftT9ZySe67aRfRh
qffeM9VvY3LPgTuyX2y5jf/qXgfo/ORO13Nrbpk98zD3ndDh/8M1/oc1LB+f
kXgv/kzTOqnLdO05SkfVvU+nzNzsDdTez9XG7rpujjCHXwTPIPpu3efa1Pq1
g9U/+6tMvWadwumFMSpzKR0XZBrkR8rrXbVe4/rYco4XdJ9I/baX7jVa5c9R
G86um8c+I+gf4b0PVv3PBT58SGkMVqfaMFL5zcBvn6TycaCfVLuPgGdj36rj
TeUleu5j65atIEOfW898dMX6uDLzu6oyN5fWd9aUnqh6nhE9Br4Vvl31H6F6
5m/4HbH/vVTnypp59eVLy2QeUz2vwsuF9WiUymc17weWLMy/76N7jhe9o/If
QT7HvAp/pfaenLu/d0ZnGHtsv9n0mrNV4P93UPkXRR+v9vyi4zy1Y5bSw5jr
qt6fXM98WTU+6RjlH93wPueqwnV2U/3LFH6OA5Hh6PrLkAcpvUVlb24Y7/Kk
6nhMx5KdxmH1gQcHd4HOTvSahXXVyF0PUtsXRkaj/OeUP3/AlFQLy3t3Vv07
leZr4WkPzD138H3NUHsW5H3w/ahsH107S/dZS/l9MmOp2Htukxvztq3SKnoH
0ZuKXhbZkepZQPSiLcsqwDH2Ef07/FVuPhseG6wUvNMQZOJgf9rG1qxcWMaN
rBtcHzzPDuznlf6Tei7aEvlZapzA58jxWn53J+V+d/AVUelvmbHRLL3es9aD
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
ovSaxnNh43dP22vDVciHSmMPmGN7l46hw77g3ra/vSvZE7Stx70n9P00+GC1
bT39ny56/dK8DjwP/DM81mzeJjW/Rv9PqFiXiq40Ly0PRnaMTSK6ZvyEPqpr
Lywd0/EipTOpP3KMgyml5dFzlF6HuRaZ81Pq06669unEPk+ua9iXCDjtdpjn
T06NO1ww9bqK3d1LunZAaT8QjCXsq7CzYt3CjgO5Ulo4Rhdz3eeJ4xd/2bC/
NjCWYD7vKIzxA493O/KKzHYSxDdGr4pN18yKfYEQywN/IGBc8Zu8eWksLDjY
voXt47CVQxfPegKGGPzwcaFtr1fsM5t4XchusBlhj8xeGTvrCWEOBNsND7Vb
ZvwbOHswTAe1bb8NnwCGFqzmhMI2MWA1wEWAkYCeyHce2o9euGsoR2yrx5v2
k0ZcMWxh7gs84cSm/X4Rqwv80ayGMUh8dz9UHBedffaCkeNAwY8hT6pmtmd8
PqxT+MbAjwZlwKxiQ7s3e2Hd65uGbVKOzGwvOFzPtEXbPuCI1wOOF3wzetvN
27ZZQw+LPznywfeu3bZPz6dKx33OI8cuxY6jR+DB9m/bfuMWlVm3bT+bT5ee
zyjDerCp8oer3lVz+78sIsupwTp1iYx3InZ3OzLW6Qy1eWV4CF23dWksNrjf
DduOo/Cs8jZqOx7A86XtGrFvBDMMfhgaO0dsIrAVwW4CLAxx1MDGEDPwqzA+
+Taxd+zX9pidPXYrjk83d2R8I/uv0yu2iQFjQz64GvSJSWRdIfJb4pdjywT2
BAwK+MKxaYg5r+M9+A/KN92P0PhhGZfaRyj5yGzmj4zPZwzwfucPdf7cML4F
nyvIv5B9YUeM7fALhfFvzEvMT2DewN6D0yc2GPK2Dwrb4MOPwu8dXlqudk3b
sSfZl08JsjRkZMhJxrSNP36wdJwi4rWg68GWmfiMxGlEl4s+GH8f9UDDj8H7
96gYKwHuGiwyMaIfC/u6XrHlfMj7sHtDp4RuCd0U8re1I8vgjixNMz9jcw6e
bAnVs3Pb/iwuys3frR7Zp87DQd6Ifzlki8jJwKQRT2mFyH5Dwcdi04FtB/5V
1o/sNwbsLvM88/0SoT3ouYi/Bu8BD0LcS/zFsBfGZww0sRixaQeHvXRhPRtx
K9G17VsaZ3F7iC0I1hD7UnwvIjNeQ207X+d/bNhW9+jMWPhfVN/NNef/E/at
v4c9KbECqAe8InHoukeWsR8Z5m3WOexAu0a2Gz1X9f7QsF0nmOH5IssLwRCC
KUTGh307el94J3RHxDDGDvmGyL5Jlmp6b71SyPu+4TLEicT+hL3jDpltKLGl
wY7mvtQ8+/2pfY+Cp9gwM2aZNiOLvEfnjlDZJ5Qe2zYO/gGVvTV1TKBGbPsd
bIvWKe1vAvu979iXlcax9M8cF4vYPMjnscMCs068udcK4xDAJhxYOnYPbRgf
eObrm5apE4+WeRbdFvqerVinSrd9aew1WvbTivwH2w3ijrMnuiO3vT/rIDqL
MvL8hZ04+7RDCuvh6FNwZMh+8DUPfgn7ixVVzxuJ/QTgL4D9IXZb9yjv6Lb9
lcNHP17YdgP/d68ljrmKXxuwSXep3IeJ9UQXK++ShnksdILM3W8ltr2Cn1u9
sC8cruVbQy+GfAY5DT5bwWvwf2d4JF13fNt7CfYUHxW2jf0gyAGwn32/Zlno
bPt/ZMbKH9u2nubz0jIBZBfIMLANfEXlT06Mz8Jnx5265rKG+RV4FWKa8j2d
k9s/Irg3MG/flsbIj27bNhYMMFjg8/T/4Kax0+gIiEkwqrQd7uQgu5gj8EXI
JS5lv5wYD4mftClhPkF3wHzzhei92+aZPtT5W0TvrX55QvS1bdu5fVDaJq6o
e7+M3Af5D/oybOvAqCFPO0z5HU3HBxklutF0rBNs68q6ZZj7tC2Lx25l37bt
rpFp40eJuIr4qESvTdxcdNn4h8KHwyuFddz48SF+GH7w8I9ALEXipHPt/EpH
tC1zR4fVN7Ot3vxBJgN/tzxjsm1b0HeCnOamhnX4N7Y9d3xT2j8/Ywu7AzAU
F4cxxj6B/cIGpbGg4DwPSc2/wsciI72ubb5kOu0S/VNk/2PYFoEHfTdxjF58
XJ2f27YlY/+eWDeAjqB7Yfkc9pW/Nq1/X0xltlV6RcN+NMA6nsM3kxpTge64
l8psX3gfynyMfwvkjMgb6UP2fdgabpBYb4zOGH0x+mhikKOnBjcIdh/c5va6
tto03/hrzTYn2Jv0DNei/19EZe7RmOmWW1/fGVmnv7Dy46ZjQPSmH5r2vY/N
Csp36gGrCGYRLGavtvfJxJtAHoO9JXhH2kkMdTAGN6WWXeNjb8e25wViNcJ7
wathnwJPjb8/yiEvQAYBhm33tmUxxCvZo21ZA/JSyoB1g+ferW25OTrTLUvj
ttYH1922vR96YeyYaD/xzb9P7bfhL7Vhn8j3QtZxYWrZxdKqa6u28YjE9MSH
w02h/G+hP7FbQM75V9gX42+Q9rM/2Kbt2E7PlY4HSJ8wprGJhhdnHGJzfVFY
I1ainZ2O+4YNNfbRexa2UcJ+44bEGKbZcSoK21xjU/0Ddhu6tt60HTR2TNg6
EcdgTeXfqf+rFpZzEXsDXBL7s0Uj449WgKeM7HtqReaTTsfCw3YDbC5jdXjp
+HfwANhfgYFEv7ecyl+iZ/yiZVsD7AWm0G+leVtwC9hfgZHdJ7U97N81twfb
tBmir0hsj/ad6PGJ5TvECAQT2F31v46PN/bsADmaXrs3ZO/asPwcX47EL8Sv
48oqM0nl1w82cd8EPgefMqPDmgIODf/44GbhreABkF3cktq3E3g5cHDg5MCd
gQUmbgRYYnwkIYNgbws2mf7BLxv2G9hxHM9er/D+8uS2fYzc07A/EPyR4kuU
2IA3ZrYDI0Y9OPQ9ImPRkaftJfqDpmWoyFL/dx4amSr2YZTheuIcY3NE3Ngo
NQ4QHCjytmFBdocvWfzHPpdYFohMECwBNjDsI4k7jE9UMEbPMr+nvg47dOoj
vsX4inEIXIstDPJG7Hvfato/Ib7wkGkT6wHfQMTcJjYE8R0WUdmByE5UfsGK
41ngv/WY2PH+DouMj8SH/KGBRl4FvVDFcXnBl4GfAnNBPWCGwQuDIaZu4keD
vSAuKj51adt7oewhoXzRNL7uncCvE/OG9eHazDZz2NKhj0cvf0Zpn1zYbMPv
LFqYr0VPjd4QvS9xZPAT9UbD+mh8TeOv8+PYcWeQ+YB9w0ci8UiIY39Vbv8L
zPOz/UpjO6EyU5vGDRJPhzgpz9Utn9kpNh4OmeS6ejeH1KyPg+cBCwQmaHDT
dofvN+0rHqwztrusXfjG/Dv4hwcXSJxGfPQhx2q27Xscv8C7Kt2rabvPfsyz
TfsB59tEXs5YAreHn5a38PWIzi34fMSfNDrZoSpzi9p1UOa96eVBPz409BX+
wC+oWn5OHHPiFRK3kHjr3aqOdUsMC+SNyB1XSexHiznhZ/a2us8nLcfbQiZa
qsxI0f14x6V94OD3BiwTsZOJocy8gV/0S6vWERPXBrwg+r5F44BpjB0/ZrY9
WWq+e2DgzzeObDcO/w9+l7EJdh1c9qDI2Owf1aYFq47by5jcMIy3fYMeEH3g
HLF5cuJjPtdwvdvo2d6s2Q8b6w0ysW4qu0Tbcwj2MtjNIB8GV3Njbt+2rJE3
p96b0DbiEW4V6kHuT7x4ZOkN9O5BdoNd4yQ9+yDlr4wNX2xbLOKndYuN19mS
+Tm1r7On0WW0jG0nZhG4WfL5NiZktrfAvvPeyPZbw1XHwqXnOnwSwuODDcB+
5a/IWKF1VKZ7bFudEbFjiuPDbazqmZJbpge/Ol/smNGMM3zCEn8RH7Grt+wn
lZhXPPfG4dnxebi56L/wJxqbH5xH9/8i9rw0QufHJp43sa8dEVnuz14F0N+d
NcuFsGd/XecXa9sXJzYV7D/AIxA/tUvQT3EttihdYmPHiX+KLol1FTtJ9Ff7
h/rnTG1Xgg0Kcc3AoWRt9y22I+fCfym9ucPYFGKCcC/2mdyDtmLzQt7IkL9i
7PgrZ8fWw2OnjL3yypFtM9BJ9WlaTrlDYpsz7M3GBv0wNDpiYsuCUSeuLH7K
6UNwir8G/6v4YcXuo2clxGiNjTvCB9VrmfXbl6v9d+jey+raO1P7f0OngG7h
/dT2VHc2raMhRgcxcq9p+rvpGtsWY7fIPp7wa71ZZL37kk3LGHdM7D8RHzdg
FbCxx48A9hDwLKuLnp8+iI1txYf3HrH9MyJDxt9gUrdciPgRyPeQ83Vtmj+9
V2Xi2BhbYvXixx5/puA0iFEyQXkbty233kflU8rElqEii7wkmu3GtjIltU9w
sKjcg7jG+LolNgsxiLG7INYKZYj5C3a1iB1XhPgiAxPLRNhLE2cZ/7/4FMeP
GXuLudqOGQRTdEbs+LnomucJWIlM9EWxYzMRHwUdELGKwK0yZ87I7BuIfQ36
417oJ1P73hlTNb9ErBziMWyW2k8B9iv0899N4627Jo43ja9wfO0Ttwi/V+dR
NrE9P9gS4gFVqx6flzbtTzeLjfcDfwgmEZ9j9B8y3fPCt0U/DI4d22li7Fg7
4BKPwVZA5cd2OF45e2h84D4SWwYL3/RLYX/+21JH7nig+Ki9N3bMg//ZZhHP
dN2q9zu/ZZZvzhJdL4xtQA5AfF6wngfntvXF5hcentgKg8Ac544bC/4SfSX2
2thUExMPO2TskZH3sncH64lP7uvUnjNVz9yxsXbYrl6TW+6KfBWZK/EF6Nv9
6KfYsTiviY3/+R8e9srAExFrZ87Y9iDQ6EaxpYF3P1vlhyg/ih2vlhiy2N0P
DDwzvPONqqef6rkVbGrL8/Pfas8hiTEhnySOH4k8mXiSm8fmkaD3y81XbFPa
Dx3+6IijSExVdIFgzNBLohtZJbMtGDZK2H4Rz4vYM6cxT7fsS44Y8b9Hlh3O
E9tXNmvXtvDyTWNjj9f/l5v2VTMrsX9ycKLTwbcl9kF6DJippvGwR4j+L7Lf
uwGx48Fc1eGYLvgY37diX93IPPCFs77KvNK0juKQ2HFe2Pex/8OvOD5l8Nu+
f8ty+dXVxn+atj9AvoxvYfRVfCMPRLaRZm3Fnp094vSm/SnjhxE9I/bj7EnZ
m66V2Ccn+zvkb6+ozr0K25Vjg/Jl075zsdFaXNf2btkegtiJ/WLHAwO7iB9P
5Hvgfi7LPU+CZfotsl/BIezLYvunGBXbTy7+cT+Fx2vazu/C2HFI0eGiy/0q
t08ZdIJf5tZhIMf4JPNa9ENhv9Ps5dnT04/0J3jTsU37Q2S+GhtZj3EqYyDx
vgjsQR5bzk0scuJfwxN2JI5Jjc0+tvvMk6yL7I1/yYzfA8dHjGZiYeP/cJXY
OEnihPWN7R8NWeULiWUvl6bmveCBiWtEfLGi6n3r+Kb9zbya2C/bFqEeYsZh
JzCLtSU1FuGT1LJH4qETMwo//OCJiUWJzAy/FBvH9g2IDgtd1gEtx8rqn9sn
NtjZLryr2HFlRuna0xLzghelnveINQZm/uPMvs+/LxwjD/s6fHdfrjJHKb9E
Z9e0fOEo9uGZedRvdK9FcmMswVrOh/wkMu4ROcFsXxroWkvLpMCSrdqyvoM4
onOHsc0YR566RmSM1vuZZd3fwrNFjoPCPo44bXy/p+r8vi3H4loZzGHLcQOW
UfnhLftzH4puJDaeh/WVuMDoCa5MHduY8YwcD5wLMYkPrDg22+wYscjPg00C
caiIEYwfhP1Zu/SM/Zpuwz4tx+5CNn6/6CE6v5bOP5vaP+Dzqf2NIN9dTflP
RJ63RyL/Lo03QZ/+Qmq91kDlT2/ZboEYsMhZX+VZYvMzo5A/qOysyN/vm8wZ
qnelprG7xDt+q9N+I4fF1iN+nBiLfVZk/gGeCj8655aOmzw58MnEgiQu5pGx
4xbM9suoMm8Vtic8tvRcg34Svn5GYtt//AEQc5cYu5eH9YT+BEuKTSH2iv+z
GYIGWzOu6fgtp7DutGxnOzC3zoPvHTsCMHzsN8DHESsd/zCMZ3S46EtvQL6l
Y9madV7IIIkfc11qPCY+7vB1N63lmIDECSSmPHNS/7ZjXP4QxvOvhe0vsMk4
VP+nKP8wpQfEjltD7ImRmf0QHtayfAifXNemjo19YnhH6PLQh4FhOAg+Kbzr
VPdbtelxdVhmnvlw1XNPy2sp8rDpmdfuQ5T3VWbedaae66HYdgvERAKH9XjD
fhaI8TmkM+xjU8uJsGXHz9dBFdt45G372eE9np4blwI+ZXhhn1P4rMK3Fbwx
2InlY8eVhNdCZozNPrb7V2f25YPfHmINEzPsBl27gsod12meEB8o+EJBH43P
dHx5IKO7JbMf7edyx6LFDhG7SWKBTWhY90+cXOJ7EbMU+wJsNEaXjoFNLOwr
Y/voAW+JTB5c2FMNYxPpL/ptfOl43vhRfTfMscTOZJ9AfO4Lw/e7XOzYk+iA
iFnJOLm1MI9xa9h3sOdj/8y+b2rLfO8Bhb9TfL/gA2YplT8s8BiTUvsswnfR
16n5XrDu4yKv48wLD7a8tiB/Jf7fIWFu57vi+wJfjT8f7ovP8xmFse7YOH4Z
O9YD8R+GFsYA4VcM3DI+lxYsLJdDvvxaahkUcZbZZ05seQ7ZVmVXSG1Tg80N
MW3hMxPkkJn98+Cn56PY8iLikt2a2W/Xtcq/N7OtAf578LeN323woEe0vE8E
54BMb3hoA/opbCcWL8wvUH53ZK2p7ZyJR3R97Jhbk5Xelxk7j2+hjzKv6WAt
Fgx6L2KR4VtwTMU+LYm3yz6YmI1HJY4FQHwA/EzhbwoMNvGR4eGfUBtuih07
LUo89zEHvprZD+ToyDQ+cbYKupVdWtaf75zbhw6+dBYoHCd0m8i+WsDBgIdZ
uXAsBGIioCPk/LahzHwtxzuev+X5E5808G7I7on3A/b0tSD3Qh6CPPaEIIMd
V3revkzpbzo+iS1D2yD2t4YMcLHCPn/Aw6M/+bhuHDI+HPDnQHzjeVqWUz6S
W16Ir3lkLUsWlrGjx7yoZb9ec+S2v+EZ4FHwsYWvrVz5WeKYQcQOQnayQ2Ss
zjq6Pla9Lxb+FtCxLBQbb4jPO7Bq6MGIhTAwjAnGBtjIZxqWFyMrfq9p+w2w
qYxpxjb2NcRooN/+Sy1nwlcR2E1wxfhbWqBtOSc4B2y27ojt74b46os3ja26
qWlcIpja/XTd5KbtWojrzXPsGJ4FfRTv652m78G5Ybp+UGxcHRjdlwvHtumr
Ppkb/jUy1hGfL9ga4tf3zab9TeKX6YPY8mJiBvaJbb/cP7Us7eggl+Obpq/g
lZGRHBnkJOBs4YlYBxeIjd3+Q3XulNo2ZOfUfsGwMevK2I8d75l9K/sVfE7h
b2qs2ndGZGzei+F9gSv4KHJ8INZ94nYhHwHzhq5/5SDzBCcArvNOPeu7yru3
0xh+5JP4j8DOB74X2SO4gO6J7YORmYCr6R95Pgffx7eGXnyL0DZsEsBegMHY
XWV2jB1b+sHEccc+QzegdIzOHxcZG4SvcmIZj2nZFxxr9epq29TSvqUvbHk/
jn8WeNMtRN/S6X06ejf808EDg0UaE/ao8Knwq2BK3insMwHfCfjVBTNFPrKB
MaENPZvGWC0d208v6zJ+dbqpHTMjr0dgXZBZMd7QbWFvdJvOn5jYVzY+swel
lufimwS+EUzTwcr/PnPsynVz6zT7RJbHIu9ifvgoMe6ROKx/quxfiX1P4YMK
HDbfFT6nwErhDwi5A/n4P8WmYr+W1yBwaP8HZpzcBw==
            "]], Polygon3DBox[CompressedData["
1:eJw1nXO8I1nXhZPc5Ma44x7btm3btm2rx7aNHtu2p8e2bbzj73l65fujfjm7
DqpSOhtrrzPJpjutumOpUCjsWysUyvwexu/KxULhEITlG4XC1L1C4dHBQmFv
6s7tFgo/s+/ESqHwKm0OpzwF9T9RNxnl2lCh8AZtxqL9koxTRH6nWSgcXS0U
TmA7i20u5HGpX5+DvlMvFPai/4Ls/4bxJm4XCn+x79sB9nH8h2h7C+NWON6z
HGNMxjyObWPabsL2LW0Xpc1cjLcz432GPD/H/4++d9J+ilahsDnjT8j4+yEX
O4XCL4x3MuONR/9nGWt32q+LXEI+hfYLIw8i30q7Azn/BZEHkO+m/5TUv4Y8
OsdbnePtRvkTxv+WuklpX6X9Kew7GLnE2EciT0L9TbRfgHMaSd2ObMsx3hkc
72fG25j68Ti/OfjP63F+69JvSuqeof1xjLkr/+9W+i/MmFfTbhbkIeQ1kW9F
3h35Ls8H+Q/kw+m/Cv0Ppf8K9P/S60Pdj9T9w7FOon5r6rdhO5nyKWzbUl6Q
/9Pg+l1I+7Foewf7PqX/aZTHpP/+yOfRdhrGeMzjMf7J/JeLaD+MNo9T/zXt
p6nlepxI/drIayNPRt1LbDcw/gy1PC/fMcYV9Lvce0rdXJQvYvuEMaem7h/2
zcjz8BpjLMX1Wok+N1K/E/UrIF9C/UfU74C8LPIi1H/DuZxP+6859mzUv+u1
5HzvZbwNqX+dthey72DqClzvSSgfzb5D6D82+6agvB7bdMgHIJ/L/ZgN+SfG
u54us1J+jPEnpf5j5HHpfyX7rkGegfaXcz/H53hXcrypuJ4f0H8LzulE5Eto
Pzd9L6DPQbSdnj7PIK9M/zEor+v/of1qyMOQN0Lelv83K2M+Td+xabs+z9Pb
jP9CIfd2S+TLaX8l7aeh/SW03Yrjnc7xrvV5oc3jvqPUf4I8vvfaa0T9XchX
UTcb401L35W5N13G24f6F6i/kPoW7XvUN/kv1/ktoP4Kfn/heixIn4Uon0mb
nSh/MJDxx+WcP0J+j/F+p+8Z7NtBeSDXazv2v8J4m3JOdyEfw/kfRnkf32/K
m/m94Pg/0Odsxn+YbUzq1/Odp++O1F9N/XSM8Qnyo9RPTP321P+AvBljzF/J
M7g71+Nl6hdGnht5Fuq3pP8p9L8M+X3kKue4D/IGjHcE1/8/2l9E++kZb2PO
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
n9XZ1N38j+P47XM+0V/g947/Pzr7XqnkGfVZnZ769ahfQ32dZ+Vr9r1aSRvn
L+c057bxuJ/zaEszxiLF/Hf/71vd2AYT0e405CepX7aYZ2VM5Klo92clz/i4
/KcpkX+v5Bk6lD4v0b/F2DOx/1Ta317Pt3Je7T3GuLue63s157825Qk53+UG
co9m5nwf6eZ99L08xe87v99XMmeP6L9PU1D/i/oz8pxsYw9mzis14ofRH+M+
62am/QG0H+AYx1Met565Z0zqZ6d+tmbKzkl30vd16s+n7bPat5Sv4biH0f+5
UuyhdZ2PqH+MtiXO7z72nUldj/b/UV6S+oOpf5q+c1P/GL8fcHoP0uZxyhWu
5xmUL6M8L/VL0/4w2p9G/4d915EPRT5KHZa25yDPz3/7jLFnp/206tOM9wBj
TEd5VepPof267PvHOtrd7fVTX+EcT2fMSRmrQnkB+q9A+2NpP7KvL6zYiS5x
DW0GaHtMI/6cy+h/LOWTGtGfrkA+mfIutNnXOv0s9F+e/kfRf0Xa/Ma+yTjn
O6i/oW8PvFnNs/laJfrt6rQ/lfb3cryjGWsC2m9N/ZScz2zqnz43yIsiz4N8
G/1PLkXn+ZPywuw/yXNhjJd8thhzZ+dSv+n61xjzYMrP9K//muortH2U451I
3Q2McaS6dP/7Mr82IOXjS5mjF2I7Ud2YPhdSPqgR/Xhl7sHB+iQY77KB6Mcb
MN5n7Nua+jXp8znl7zn/1fyW0XcWjv8v8lrIryLPOpT3yvdr9HLswV85/kP0
364/582kTuj96+tr76qDcrwDkJfy3OjzFn0P176nPC3vy5vI69P2f3xPD2Xf
U/356Rn2vaOPkfGG+x3n+M/RZj7q5qfd6Mjj0ebPUnwW+i60l/4pxWej70b/
x47aGhzvcu8p2/bINyC/xvU7h23cQvpoX62o3eX5+g2m7QS1HF+fib6TuWmz
tFMBbU6hPBX3/55C5tYDOJ+9kcvUnaQtgDwxff6j/x7se8pr6HOhSYF8nNej
nva+o3NSXk79Fvk5yotrv7Vj72v3L+rzqt4yEB3qCcqL1/PuTjKQd1I9RX3F
/3CFuh7Xa2zK51k3FP18jIE8gz6LizHGMORbtQEpn8bxp+X6vMQYc1BeVZuN
+vNpv7T+2np8mUez73nKY/K/pyvHvv2btjfX4pv1GOr/C7KtRfvRkc9Wh6ql
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
J/aCcdcvpH/ozV7wGueVoqMY31rInCzK8zuHc76vt+J7nAx5RspLtOJ735V9
72hbsp1SzDfauXNt+qxSSs6P+VPncX5nU97X7zvn80wn85E2rLbsCHUc2q/E
/bvb/Afkm5BX8PvXSs7CQbX8J3MZ9qsnn6FbCv7R8/lEX63xeurn9JrQ93a2
xZBXp/5r7QH6f015ZCfzpT4D7b25urEVzSF7AvntTnRNfY6L0v8N5J31DXD+
C2t7qF+W47Nb0ON14w/QB/xIK/6bC7U1SsFrzkWbmliZcvyBWyJvU0pMas52
ckT2ruUZMnfkErbF+nPXbL6H7eRyiAm5n/IarcRaxAyJHfrX/BLaXeczokz9
pcXYcKeZm9SLPi+22u/r4fr86Dsm9Wdq+3G8pcuZg89GvqoT3eu6cvLtDqT9
4aVgJ+bhOIf4DiKPRv8TWslpUc9Q3zDX5dB2Yr3GfMVnrUmb7wrRmcRDf1aL
7qlOKX5ZjKKYA+Mv5uJ8SXmA/rcX4l9ZvJt4RbsSf7KYdGMiPpNi1dehz6ql
YLr+oX4T9t08kDnbuVv/tPk4ZZ8Zyg+0k3uzMvKD7eBtxOYcJF7AZ0V8mr4j
7QWvZSO5bqtV428yPvQX57Ym8qPN+KOsO5BtZDX6sbkb2oDzUX68mfju2tQ9
0YwdqT2pT3fCZvT93UqZs+fqxN7YHXl6rveKff3MWDWXtrBlJz5ifcW/1II3
dr7eV98dY77UTH6Rz8b0hfj/3/K7UI3Py3ytl2vBahvjMx/qiF6+vW9Td6P6
sv7vanyCYnjN91y5mhygv+vxG+g/0Ofv9fR66yvRx74x5bf67482iraK+XK7
lhKDXJXyK/RZmXuzN2O8SvkGzudyn91q8Ppn9JLfZp7bTUM5X3O3hleDLxdv
bvnpwdi8o3NOy1RjY+i/Ff/vWOZcmnupDqMuM4e+GMrf9ZIzOQZD3dmL/nSk
9h/7XqZ+RuSfqTsE+Y1m7qn39tpK8u3e12avRic6g993m/Gduu8DfSiMeSzl
99SrvD/Ix3u/2W4dSv+xjb/027+uDVDNNTaf1vtlbt0RyG/7LeklP9c83ZvV
P7vJ7dNH9Bnlke3kNoo5f6Ede3qfUnTORbRd2b7i3i3P+X6vf64VrN6hfj/N
DWvFl/kb92wOx+Z4CxT7NkIvOQDiDMUbvoA8TMxJPfrYxt1gBIxbG78uIp/F
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
9L+32lb79J+POam/oJqYg9+HxVu5V3sir94NZ9SltTxzPnty/NzWjI9c7p9n
OadtytFhxMuX2Ld8ITFhY8O+015LfdrXteJz1feqjibeXn3netrf4jPUjj6+
QyExkYM7+Ub4rdBnfkMrnB3mYBkvlstj8U503zb/f9W2DwrPRSkcK/KL6vPR
92POj/6KF4z5DMYm1jb2+2Rsypig/EPO13IHbOz8Qdsv2omdi3ES6yQHlDlA
+tz1vcuZ8Qr3f/1CuDQ+7MZXoE9K35Q+Rn2NvqO+qwu34tvdva+fLNhKbNKY
8C3tcIy8T/sRhXCPyC97dTk5M+bOiCf8cTCYQ7GH8jPIx/RKIfhy8yv8Vv9U
Df5Y/iD5c8TIi5X/pxZ99NVC+J0eZRu3Gs5FObjEt5or8LfxzmbyedQn5MS9
hPJ9tfiCxRDLR2v8tFXt53A0g3sW/+y+s8WLVfvvO7/nNcM3ar6KOQXmFuh3
1P/4Qil8ieKTtyqE81buW21EbUXzFkYMBZ9sbrcct3Ld3luLb12Oi/Ppf2sz
3LVy2F5Wi52qvWpOjf4z+XQ2KSQHx1ycaevx9cl5IP6/6rvtfEObE2rhFzO2
sCFtpu6Gw8QcxKkY/55O+IjkKtIHqC9QTKrYVHNwzM8xPjfzQGw8bT35AMSu
+KiexTi9enQfnwH5fMdsBosk56Lci/InyT8ix59cf+f34gu/qZl8HPOLxB7O
3t8nv6bYd3Nkxcw/3wn+xZwQc0PklTN26vvr9TH/w1wNfdJijo05mF9knpGx
iN3qwUrq476Ufbsjv16Mj/0y5CW6wWqYo2CuwkXtcGUZw5PPQp+Pvh85beWr
6LSDNTNm6PsySTtclfrwL6P+3HawcGOWw5/7czNcg3LUya/1n3NwMTHJnfVl
t5IbZQ6muZj6qzaphS/W+eh8tqtKycmSz9rvk1xC6/H/f2XsnVvJtfrK/9SO
zqfuJ+bNeKwcdfJwyMchd52cefVGbGjtZTnOnq+Fz0H//FGdnPtwjtc0FtBO
rqo5q9N0o3M7vpwk6pPbcLzjC8GEX9iNz1Pfpz5Wfa36C7esJaZ8STtzsHPx
ogPhN/6jE+zrehzv527849dVgqnQ3ytn2/616GzqbvrPzC25mG0cyqd0glW6
AHmsXnIWzV2Uf/PDXvw1xp4X6dtX5syaOyufmVx5Y+n/1xfBMcdU/++ES1TO
SfkljWka21RnUHdYuRNf66Yc70/6/tcJ9mgT5D+64XySQ2KFQrgjv20H+2fO
if4U9f1NC+EE1B4d7MZXuiX9/xUr3Al3+Ybse7AT+1Ks1Cml2LPqZOpmxlyv
aMW/+04tPgfjmeIzty8EQyVoudhKLsTulfAZnNUO99QbxfCnaB8dR9NL+/rb
Ge1wtRgjGqMTe2CXQjg9Bvv2jNhfMYraD/O0wr21Ovf8sF44ty6tJ99KLq6B
VrijzKGUj0H/yebUnVaKvT13K1xbclbLT6lPTN+YOeTLduMve0Jfain+L/1p
zxXCgax/zZwDcw8e7s8/zk/azn4D/BbIeS339UN9fWTmVrgE5HCbjv7zt1Kn
D2SJ/nzmWH5Dl2wH4yrW1RifeGTjUb57cmYZ/3zJ+b6cHPCZ2sGEiA2R83vd
bmwUbRUxT+afDuvk2dcnqW9SzshvG3kmtP+uakeXkCPcfDdjANqOxuzbncQs
jV3Kj/4ox6+2wl0ih8k6ndiYtpejQny29uuBhWAmtXe1n7UFz+3brye08/+M
ecpnL4ekHE1nOyf3whF2Ry34CbnD1P+NTV3e19flPHuca31xKfFsbWhtaXOM
J+b/j9NK7N+Ydq8Tm956OXG0j+cfSh6z+cwP9BLDm7uW+dbYnnhMsfmuGeDa
AfKPmmupj9lcjNFawUrLGSNfzRDyboPBDJsvKuZarhKfObHYJeq3GQzHinw/
Yr5XbSafVf2oSf0ug8EIi1f2Hfdd1+aS/7nSTq6E+svfneCTvRfmqJqrqg9W
X6wYcfNH9RHqKxQD7vH1n+5aCAexXMR/tMK1sGgl/N3mGN5USE6/3yfzsT/o
5xOJ9TQ+K3eeOcvGY+utYMenHAjeWR+rvtbJB5LvZgzXWK66j/FU823Ftuuj
Mf9ZjKVYS3Nexbb7DfJbJGbhK+rH1WYdDCbW9Rq0VybkWq3KObzWCkZWrKwc
jHIx6l821icHulzo+l+PLISzW+5u+d/NHTxjMHhl8cuWzQG6VV0E+eDBcJjL
R6XNo+3zdiX+w1mov3wwmEnxe84BzgX6zMUPi2lft5lvlv4Lc7bN3d7ae2K8
qJeyz4DPwlA7uVRi2v1eDmslV0DOZfmv5P+SO1gOcbnEnWOca8wRHLOXnMb7
68nfVn8w5+7AWuYo4zsHM8Zulej06vZiwsWG71gJP/df7WCPdkU+qJt8db8V
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
E6trzNvv+fBGYuHaANoCYtqNVRlDGaXvNRNbcf0IbS1zuuWi3bATbI4YebHy
xujU78SYG7vz+yY/6AmNxFqNmesrv7GeWLrrBRmrn7GZ9VvkjL2hEJ1R3XG6
Vrgx/QbI/64+I3bcayg/hOv9iZ18rBA+Tt9X78VDhfgTzLF2nQttQnOvjffJ
AW0O0TO9xBuMkxsvP7ybeMJV9WDGxI7JwSjviT5ifcXG08ZtxgetL9r1b4zF
PFlI/ESd/oVmcizU9dWp5Xo3Jqqurb9HrlY5Kh5sZc0oeeP0Aff6+FjXujIH
9epW4jGujSiGRCyJ8SWfhUfq4dc3XimvpDHPYe3gwSYpBAMiFsR44Z99G+WZ
VvCs8hTLV7x0N3gYY8jO4V+2gg9RJ/H9+byV+LBYZjFqcl+LFzGv3Pzy3XxX
W+FXEVMttlr84GGFxDCMZYinkOddvvfVOuGD1rYYWUi+p3gWedfkX1uiF5/a
5vXk4OtrM/5yRCP6kGt7GU9z3Qw5U35phx/EtcnEF4ozND7jWi6uuTPot7kV
fhtjvsZ+Pac969F3PNf7e8kX1wemL0y8tFz9xiSe7cXmGmzke6ctJh5czjwx
ht+1o5Oom5g/KB+mnMHr1JKvY/xaHU1dzTWr5E5W51b3lj/mm17WbJT/9ir+
/4TIE/RSltNPbj9tEG0R1/z6uheOv4/ryRew3mvitVFnHFvbGnlkORydrncl
5+YutWBuxd46H8ptor0ul4acz66NcHghXND6IPRFmFMuv4f523Izuqaw+Djj
8/43OYXlL5XvVS4TcwbNHVyub3Nq393Yypz4YD333LnSZ1bON2OkPsvy1d9U
DqeF3BZyiMuLLT/2Wt3YZOaM+j3WVpPDUS5Hc6KvaYWTXN5E+RNdy1eOd7ne
xVzP244/Va4sc+5vbQUv55oT2lv7t4JPc60W7aVdW8nvkpvSZ0J8ovkXrgUh
Z8qTveBN5ag3RvFILzagOZ/OL9qGz/fCz6TPUN+heMG96sFQiKUQD+TaQ2LS
p2lnTRRz/owJGxv+qpdcdXM61a/EM5xRCKfmTN3wlYut0Scod9YoTsZmOFDU
Jbzf2vja57e0wuknj58xi1P6z9+zzdgH2oLarB83oh9oy8pBKC+DObjm4sqh
Jy+dOo+6j/qk3HLGPN/vJX/aWKU2s/FYn395QM1JvriVOVYuN/Vt597Heom9
isEVi+s1ke9RTKXXyjlvx0YwIs6F2ux7NaI/XN/358rd9j199uz7k+WNlj96
+W78t+bc6D/Yr5X1mIztmhNhPMM5Vy4x/dPOxeYfG6s9uhB9bh7GuI2yC4LK
FyR/kGU5YuSKEbP0RCMYCrFMrl9troOcrHKzitEa0Z//xW6ZL2LscbT+9ZWP
ydjk6P3vifEsuejlP7umFxtJW0l76Kle8Aknegq18FW6ZtHNjfjU9a2Lx3Ht
mEYt/hNtAH1HPsPaBurMcsurr6hL64N4tpE1BvRNmP8q1kEbS3yDOq5c886h
zqX6DPQdzFtL7pbfo6easR/1lcjJJzef61W5Fo7xY7nDjAn/1c2cLqe9awI6
14uJFxsvBsp4gP4916ga7jelF3+gXG369L7uxocmd6gYFH1rftvlphAf4Hqe
xgRvacZf8kPfHySX2xbU310Nn4FrSZij7dojW9WDnV+qkLWFjI/K/SXfV6WX
eJprwZmjMX878Uy5Ws15mrqT769cq3KMbdbJPZFLVAyJ90obb+dm1hjV9hPT
JY5rVA50L+/4Jhz74nrefdeDcn0255v/+j7TE/oxD32p5qAtSnnOWnLzXE/T
74OYU/kDtV/kdDFHZPZ24oNyQbq+z029cP7J/WeO5cu9cFCKCxMfZu6yz7NY
PPnI1+gmf16cmXizvfv4AzF95vAe2wqGTCyZeLjteom5XduMf85YnPn66uJy
dopveKIXbIxzs7kA5qPKDaPNfVU38WE5dbTnRrYS45ErRZvG2I82qTarObba
qnIgu66fPnHxb+YnvVxPjMt8+A2aycUS0+b6HBtwjBkqsXHeNX7AOV3O2FuV
w6ehfvyxc18l+Fjnl61r4QyQO0B+kRkr4RyRe8QcR3Md3SffiHwOPrv6TOSL
kHNI7iFzLlxfT/zSRuVg1sSuyYEiF4rrnsv3ZUzI2JAcv+LVXcNRHkn5JI0n
i9/13OQgk4tMjmi5Jzbq46HMJxerJuen+d2uAeJaIPrYxdvIp+XaAa4R5lph
cuLJjeeaHmcgP9xLPq8YcbHirrHiWiv/lsOHJp+SawW65rtrv5tfPH0l19Rr
azx/w0LWiDGe65pFrl3kmknjdJMzaO6ga1LN1Mka45/SftpK4nf/a4Z7RpvM
9Wn9Pukr9Rjrd8PP5rnIASW/lt8YvzWugeN6P/LNnFrMGuyuxS4firFd8f1y
m7mGt+tzdCqJl/o+HNYIn6XcmNrQ2tKuSWC80TUlXMPDnGpzq4232ndSrtHi
7awBau6va3a4vsIUyHdqYlbCJ2d+gWvB6/PS96U+p67mGhTqd0+3sraraxTO
3c733LXo3LdQN/bOg4Ws+bFYNzml5pZqb8ml9UEv3EH6UPSlyBmi7ucaHepv
6oDKchTI3y+/iLqdNp58Iq7Jop2uve5aLa4RKs+nmCLxKq7fIReOa4iL35Jf
6IpCMN5yv3m/VilEZ5MvSAyUWKiby+ELEo8vl40xFGMpcvx/Sf2slcSP5Rey
rZxlV/fjy9bVeL9X74UvRa4Zc7rFlxvv9VmpavP2wt/ntZaTTW4218t6vByM
k1inG/v4g6f6/++dXmIlchTIVSA/yfSFrHkjf4qcqR8VsiaSePwb+niGx/vP
r/hWbX99uvp2XY9arrTvCsnPUj8xtuB67PVu1hxz7TExZuId2mz3l/ONF/+n
LBZQTrEO5S978cfol5FL47VeciH9xvmtc40n+WTlTJU7Vf4afTf6ZOS3qXQT
y7i/P57681ONtJHfptbNuYl5FPso56o80Xf1x5NvQ+4iY0DideX81y+jf0Z8
kPxDfitd0/pSdeNO1v4ZVgkfmHxI5prrg9BXrg6uLn7lYNbzM19b7qlRPphW
8P3GbuR4Mr9V/hy5h/S53dDX37+rJcfDXI952TdPOZyArm9o/oWxHXN+zf11
PW5zu/8uhI/SfADXgpCj3PhsuxUsiZjWMam7tBNuKH2orochv9YRxXBGmC/4
f3gcpgI=
            "]], Polygon3DBox[CompressedData["
1:eJwt13m4T3UeB/ATce/FRRQyKZomUZYhy6AiuYPoadIosjxjrSdRyC6ZMDTK
0lSPStmlkLg3S9aMQdbIli1LQteaamba5vV5zvzxfu7v8/6+3+/P93zP93zP
uZW69Hmod4EkSZZAIZheMkkuZiTJHDhfOElaqC8UT5LXr06Sx4okyczMJPm6
WJLk4MfhHsa9WDRJmqnfgq/5XoNmvOdKJMkx6KrBzVlJcoh3Fc0Y/rp+d+Sd
IuOy/IP4depPYA19fZqpuLOypkJzeb3Vk2Coep+eW2k7yN/H/7ScJuq+cnN5
W+AH4Q7Tfoxvrj7J+wxfX2hqbDrf/fhVxo/QbXT9LdVz6TLlbMZt0beGuoXM
m42/g1vC/zRuB/Tg7Q53GzuL3yOzj+xZuGdkLOH7Ltvfq5JkGe9M63BFfRdc
Nl62aKrfy9da7ww34Uu61fyt1F/rMZzmOXiCbivdGdxL6vHQQN9v9Jglb67f
2TKH4U/RdKNdYS2Pyjuhb1f1XbSl6Sbj5kcm3Vjorj6oLgjz9H1e3hjeyXy1
IpPvfror1mOVehr+PM0M3CXeuVBX7mn+/fx1/H0WVtLfStOrZLoncnAL4En1
afM5XzBJfpb1O5nz4rpkVrRWbdVjrMHnuJl0zWR/p0c/3q9wn8Fg44/GvZCb
ZX4LcPfyrYg9IOOsrO24rpEDTa3tf+jq4Ibw1cX9xZrWVe+Ckep2+P7yStFd
9ruFvk/ie8FOmoVwn/yPIU+PfD3ugSuZ6f6LfbjffAfhRlq/DrjbjQ2QVxa/
yLU+AK/ILaOeJa+A8XWubYO+VdRzIAO3CddOXjX1HfzreJbLWwEHcK1x52jG
xf3mvQ/3HtzF+xF8YH6JezHAXEaYy3h9K+P78t2o96/GT6n7wId85XGLaQ6o
qxubQ3ca/7z8kfCUueyiqSVzYUTT7cSfozkC/zavTupB5nI970F9R8mrBuXp
v1D3h+HmUhM3h/8M3Unc6+py8DPdONxseVcb3+D6Nsm7I9ZF7xxz6KRPTWND
6Y7wvsg3TV2F97C6Scyb75i5GEpOxp7hfYivIlQNTn1Y5vfqH2CaOZXjy419
Jev7eDZx16nfhm/kTYN6MEXdwBp8wPeYBjnWaj3vKLiT79Ws9N4PNpeLMF29
LNaY7pJ6JnxgvC3+cfz7fG1iv8n+KSt9Jp4yvw76XIdbSXNCryF6lsa9aT2e
cE3l4Zh6rrzF8nJ5e9EukrUWP0hdmOZD+34+78TY9/L2xnlCtyPOJnxHeW/h
6uP+jiuI66vfcnUX3oHq88XSM+5b/l/kbpa1LfZanH2wRP955vEOLp9mOtxK
/7q6OLyqR0893qfdr36F9kbr8aysAbAGl4NrKCdDPUHvZXEO691ZTmW+gZCl
bkHXmG4T3UbYRHcC2spvyXeN3EJ0Dc35lHlU4Gto30yxpjXw+X6/jdtOe72s
+rgF6nz1fte7Vl0GX05OZvSELfKvlTfQdXTUpyhuK+5dKMK3Nc5Ac3qT71V9
yhrvmJWev6+pK8f7jXclXXv+QnF/9Omm33HaJjLm41rxN+MpyTsVtxxXvUR6
TtWj6xH3FzcRN4H3W9wLsBv3L3if7yGaCuZeWtboEum+W6rvObpR6i/o1vo9
hu4RY8fMbyNuPm+bzPS+jOctBYP1yKedZ+yfNP/ITp+VP8R+geO4+rhiuAN6
DOPfYp1+kjnPnD/ELcUVprla71xcP3mNY9/HeZWd7p1rcedxDdTL+fvFOZ6V
7ut3cbuLp+dPGT0vGGuEqyrvZb7aMNkeqaK+HTrR1YmzPc5APUrhhqtPw+Ou
Z2jMA1b7vcf8nqVbq2cXmd3024U7GueJunM8D37P0vcmfPfY98XTd3Fx3Flj
d9L96vca67ZWvQZWxv2g607XQN+euPdkrY5vBtfVE0bpNTzWGFfZ3rgl9kuc
n+pHza8JbyXezfCIuou8XGfDcboR8f6ha1osPVvfMLdu+Lw4X+NZUldVN5b3
De/vebfTdcKtjXe6eh3daL8ryDpp7JCsPbi/Rb/M9D28lO5s7Dc5E/7/Phyh
Rw5+C2/teFbjPcj7EjTgq5+VfjuMpPs0vhuMN5e5GO4xl5q8a2iOZaRzqqH+
KN4zvJVivu7LZrovcdnqu6Gq9ekezz0+L86b+D6Su01+I9xga/VH3KD45opv
U5kl1I3ivvEepulfMj2/c3F50E9dm269ufxWfVHfrXQbYl/i/hTngx4T4zri
fSTvLAyguwZ3U3wDmn+reO/zV1R3kneEdxfveGMd1Q/DJOuRp/fn8YzFe5Z2
AM0lKGlshb7FXEuG68iQN5duPU07XEIzU34F/q645cXT74Ja8b1ibDrNJ3GP
4l5AU5Yh5jcWX894XdwLegzD9cJl4fbAV67tBlwhWOR3+Tg79PnRXA7JOyj/
QXVn6/cD7iboYA6f4jbHfaLZF2dgzLdI+v15g/zb4hmk2xbf6JBPswIW6VlL
XVreXpq9uBl8mbgV1rRavBvjncy7ICN9L12hawtjXW8b2o3wZ/UuqB7PXJz5
tCP4ZuFmyymA+y/dUdxS+Ku+LdXPyWhKUzTOGNf7G9e7O+6z9WwPe+P5i2fc
dbSL/U17Qd6P/KuN3Yb7LDv9NmqjHhj3WT3JNRfALabrrc8vdA/CQlxefIvG
96J5TIv/peTPzki/geJbqD3vVcZzZL2Bexk3lLeHOayOc1PeMPW9dGf4itLd
Q9ecrjV+p3pJ7DXnwgPhoyukHsu3w/Xe4hp64grjWtHOiPcRbyX86PiOiveH
XhXV/wPK9PQN
            "]]},
          Annotation[#, "Charting`Private`Tag$1438562#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl01toznEcx/Gvne2Zw8VamUybQ4s90xxnIWq54UIsiiiEpmWWMuJCyiFy
oWFyumG7QHFB5EZsWblwYc6nYVaai9Vqcsjh9aeePb/P5/37fL+/057SDY3L
tw2LiAF/3ZkRid5iXEdU50R8TEWMxpozIvro8fRBcwOjIpaar+TzcyNasEFs
FTYfW5wd8bMg4gK+lB9Su8a4V6bB3Fa6kO7Mihght5tvs26P/D49xmKHsXbZ
L1jKJg7grdgE6w1hBdhRrB2bpddXvW7Sc+mfdCddOyKizN4r+G7+ljVK+UvJ
2fR5gk3ke+mn9FTjJL4oPyKt5hl2W81krJJ/zt/hf+dFlGPt+rzA/vBT+Jf0
5+ERd2Uq+Co1n/R8hd/D0tgVNX3Ya+yb803Dxlhvuuwb7L5cFdbozq7KvsU6
sUx9Z+Cz5d5hD7AsbCZ2Ta4Hu6ymQu9ZWLXce6xfpkt2DnZd7gMWxtn8XJka
d/0YuilTghW714vmO5I34svM36Bfjoxokm+ju+jN9Cl6vDvu9x6F/CH+jPs/
7VxvsD36FKvfhXfQj7AmYwqrT+6S/2XPq+kj1r/Mf1e/XmZJ8l7GH7Ln8Xn8
Q5mV1ltmX3Xm0lid/eY5836ZEn4Fn8s384tktIty+9nJ96o/Z872Ywd/ltYu
so3b+Vp7WajGkpGJJT+OQffXoy6VnFWfE966AV8gl5/8/5tfYD+GaFVjOo77
qpd5re4k5hPj1G5JzpHz7/pjE91iAo4M40b+efKmfDF4TI/1GBRp89XWqFGY
kdylhYtk1g77/7v9C17cc8c=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz7syg2EUheGtdkyldg+MkJNIJKFg5o8YWgWTo+uRuAAFDWG0OrcgSRVG
5XQJHsU7a6+19rf/ZOX0IunNRMQxprMRZwsR52jOR/TpaioiMxdxaU4WI+po
6e6wpsvqdsyv9FN3I2suReT4Fl33Lo22nXvk5RX6pPtGga/yG3b2vd2kHX6I
LV3Xzq28TTv48o0ruix783v75gGGfNH+u2xEf2TbtOZOxs0suuaCvQda0uVk
I/MYv/Z79ND9sm6MCV+0/6yb/P9P7Mpe+AN53vs9/hEVXSK/ljfcOMKH/oRW
dXXdHxEcMQo=
        "]], Line3DBox[CompressedData["
1:eJwVz0sug2EUxvFj7L6EMjdkqK4pvWibJqSUxAL6tWoD7MAIoboDEgZYhRUU
A2Umbgvw+wb/POc8zznnzZvZT6rNoYioYzAc0R+J+ByPaE5EdHE9GZHQ+bGI
LJLRiHvM8nNm8+pn+mXnhtcyu6Zv0wXzi2iZecA6v0AfZd8pdvK8Iq+uPrK/
TS/sPNGMmYK8JJ+RdfSHOMA5rnDHP6On6OFW/+4fS+ofFO0v0za9dPdYvuP2
Ca/Ea6j76R/wy3vl7fI26Ave7Azwl75Hp2iZ31U33No0u4WeflpWSf/u1pxs
Rb+KD9memaqspv8HLeo1aw==
        "]], Line3DBox[CompressedData["
1:eJwVz7dSgmEUhOGDIA1g6LXwMrwALcwwNo6dhZ06MqZaMfQGzPYYbsAbMtsY
gR99KHb2nHfPfj8MzC2VFlMRMU+fuYiOQsQmpWmiK2Kc+nojPmSr3RGzPRHN
fMSMPOFF2ZibL/kkz+Bb1HJ3T1NYXa/M1/i+TosOaBn71gu85nbBW3XsUPaD
p/ACdmSveLPKH3gTr+IN3tnedbJ8EPtt/wf82G0NP+Hr9jT1yxP+6HbE905l
ZXsFv7ZnzHX9MzzR/cNuaAPPUouedG+xIZ1t87nbZ97Qe+F3smHZjvlC9spX
vDWNvZlH5Zf4rvmKv7d/v25JXnSXs+9Rnkr2RPYPdgBAiQ==
        "]], Line3DBox[CompressedData["
1:eJwVzjsyQ2EYxvE3iZBzkpwkLMBoLEBpAxoajNugMOqEUZEw7jPsQKd3WYFN
qOhtwP3S4HeK/7zf93+e9ztnZK0z3S5ExDqqtYjdLGIP9XrEUCOii0FstiJS
edO5hQE00ObvmxGJ7NvOD1LM8T3vdFGRfXJbzl9mglP5jv1lu9v5ezqL8iUU
Zec6C87z6JeV9C74J7Osn6GOsmycf9f/QAVveEWfbFh2rHeSf4N7wTMm+JJ8
0ntTqMkL5gYfZlGWclXc+ocOnzhX8p7s0DzCjezA3EfwD+ao/ce8Z+dafsn/
VSPu+OCuuMw//HJj7jPuszjjVnVW0LP/DwUILD4=
        "]], Line3DBox[CompressedData["
1:eJwV0DkvhHEUxeE7IhkSMyhmFAQTUeAr+AJaCbHMWGZpFCS2XsFYEsvMVGrf
wFaqxFaKAp1Wr/a8xcm95/zO/efNWyhvTK+nImKNMl0Rue6IY8pTLhPxRMO9
EfNYpSfiUH5Eo7QrX5Cf6qSyEVW8zczzb/YCvscv6pzoz9hn6Qx/pqK8z2yX
Tek+ujnnX6iUvOumnzaxAfM6uTUbekv4uf3dvoUP2m/wC3NMdkV1eYNPyzuS
7/DuK+3b57Blb9T0mjotGqJffhtbwS50M7pZatofsElsFWsk/0W/QH/yO51x
s4zd2kfkO7ofsnt+wqxgLXc/9hb2pVPkD/C0rIp/yr473fJFeQmvJ9/P1/BL
/B+4BjVF
        "]], Line3DBox[CompressedData["
1:eJwVz0suQ3EcxfG/R5vQau9tSx8JCRP2YANiKBEJCdoF6MgzoYIw0A7RYGIF
HlsgJGIkpizE+9PBybnnfM/v5t7RWn1mpSuEUKdKOoSLbAgTUQiX/C4TQptX
4xA+dGX8VD6jW+yEL2PvWAmLdDG1BkJ4001iYzZF7Ij36mpUpYLNVcq95wU3
WRqyS/Npd0/6pk1K7qdBrI9v0Sz+iOfxA/nQu/d5weZFP4fvycd4kicoj53r
E/g4JelGP+x2Sf8q52zKcoWusRJfxIo8xjZ03XabPOfdD55H8B45wpt2LZrH
dnWNzn/p1/mfvm377CbGQ6fjGfyHr8m/PKJvath/8TR+72bK7arNpy5LO53v
1m/zAv0DxIUyXQ==
        "]], Line3DBox[CompressedData["
1:eJwVzUkyA1AUheFrSCF6IZrSFKIQzG2BKvNkoEpPYqTZgZgHGSDRbiGaHbAD
qmzAHDOfwV/vvP+e+97QSmE5XxcRWaQaI+pbIhpQa464SERMyXcotkZcurfx
7Sg1RSxwa3ZG+UWdJYzJB/w6f6rToduJM/kVG/yqexY5fNvp5a/sbZrtu7/L
JW98/P+PLX7cechV5Ud703r3qHDn9pN44it6Gf4BJ2Yzzip3jQl8uR/x297J
2UmhH8PcDtcnp/Um8aP77M0beU7eNZ91dnHd+JXL+m/Im93qfXLH3irLLzrz
7gWzAZ0RvseZMdvjBuU/66suGA==
        "]], Line3DBox[CompressedData["
1:eJwVzrkuRAEUxvGjNxtKzNzRzFAOiX17BK1CMlGoeAGPYMbyECJKu9mtjYhC
wiQqb+Kn+PK/53++c+9NqnsbuwMRUZXiYMRrJmI9FfGTjljDqVzEbzZiWIZk
levbreCkXeLmxc2y+YtfwjL/zBXsmviAO27r/AU2uDz3hCfcoptPtwv4yOV0
Ds2bdvPcuczJuJttrodXel3M6GalxM9yPenwH+7b2DWP2PV10v//wLf4S76J
W+YJqUlRGtyZb93jsbuOXsIfSEHu+FP7W6x7X55LYVuvhkdupu3f+Qq2+DHd
Cl82V6Uko9y3/j5/4/lN/xpn9P8A7wc0yg==
        "]], Line3DBox[CompressedData["
1:eJwVzbcyBFAYhuFfQSXO6ORS2MDuSp0w4oq1Ql4VN0DFBTBiRaEX7gMtw4zY
CDfh2eKd75zv/f9zWpa35jdLIqKA/vKIXGXEEboxVBGRlXdVERk5VRPRZ2a3
OuIQe/jSz/Hr3It7Lz/jPotP7kLfrG9CD3eqO8Ott/Ncl3Nn8T8uJdMo09/w
SecEcty09wa9cck9yw/9kz6Lgi7PT2EAjXwDMtw5t2J2FdfePJHHWCj+zdeZ
q8e77sHumv5ednKLuiVsFPf0f/ods78yzbdzHbji22QrUvoJfhKldt50j7ok
9p1r7R/Igp0fM9vu3zLBJ8yPOY/j1cyoHMGw2X+y6THx
        "]], Line3DBox[CompressedData["
1:eJwVzssuQ2EUxfHPCInrUIwkPEklJWYGPR1KBW0l7cSlWsXEGzAndYuHkKhL
YuIZCCYupdR15HcGK2uv/177nG8oU5wstIUQcvTXFcJWXwjbtEnzvSEc9YSw
huf7Q7jGfs05PE9Z+rSvYof2j/br3SFc0gVt0KrdqN2E3q38I8+5S+vO8gO8
En9TJ8Ja8rd8rpuSj/ETXpXL+A3/4oN4Le7Hb5Br7h7kDnyE78kr+Adv8ZlO
0j1zX6ESltCt65bltNzUXeb7eBJvyJFcsl/iWfwNe6aUHOGL/EXeoWE37Tr3
fFdesJv2zydz01zXHzOf8vH4vViSJ6hhvnI34H7KTQF7xe4oIxfld/4PGrlF
hQ==
        "]], Line3DBox[CompressedData["
1:eJwVzzsvw3EUh/HTDa3bS/ASxOQtGFmwEbGotsIiEZdWW/fbS5CIiMXsTTCZ
TK6Ja7VRlSb4GE6ec57vOb/23zOeHcwkImJSNVMRY50RS1hRy2qqO+KiK+Ip
GfHVEbHCTdjJ45Asxz3LGljgDrGvJSJt51tfwwGsyobbzZjhptWLuxsuqy94
a1U2by7iLb7KW/mSueqNMjbxjW/j18wL9tbxDnu5d1nOe7/ckd3gS/7/mewa
v2R1VdZv2PnUb+KpfJQbURVv3LubkW3JFvX9vukBG9ysulLndovujv1OQpY3
f7hNctvuVrgdfMQqfylPyXa5ups9rPFp7se8bz7BA5z7/wb9N/4BG9RHwQ==

        "]], Line3DBox[CompressedData["
1:eJwVzssug2EUheHdoTjPxMwV1LBjQRipnsyN1DFRhxnuwQ0gIuklUMUlOI6l
Itq/SEcSE4nnH7xZa6+195dvYnmrsJmJiCVUBiPucIvvgYgvzA5F5EYj9mVl
c2Ku0XNZMhLxyZewp9+mU/JXvsvf0CZ28WO3jo77DRT1dbtl2bo56Y/448/S
Hf5Cd8rPYw5t2bjshN/xXuJ+Mr3nr9FADR15Xj7jzZL5ZTjiyM0z7cna+qy+
qLvCZfpvfMin9QX+ye6hm0d6bLcrf9cv6tb4MdkqfdC/ye/pgu63L+LA3You
b27pqnxP/w8b5Drh
        "]], Line3DBox[CompressedData["
1:eJwV0LkyBAEUheErxgwZIsuQKBK7yDPIRJRAiQi9ghm5wD5jmYUqPADGTmCP
ba+BwNfBX/fcc07fru626fnxuZqImMVtKuIed9iuj9ivi5hujLi2jzZEjOCG
rvA7+V06w7whXPH/zBN8pyOmZF/mJwr0L/8IvfYL3UF6AHl3Lu1lN2fsPfJO
/bfk/fSSvMo/oEs6WbpC58yMzrJ5rFPmLdIl89y9ou6WfEz2ar4gjz1+izzD
77A/4wmb2JUVPd8sb7c/Jn37g7mBH/cP0c071aniDOuyVizIPmSTdI7/TmfN
Ce9q4+2432Rfo/t10/y+5J8l/1u2wk/xSrxVusDbTb5LXsv7B30jQII=
        "]], Line3DBox[CompressedData["
1:eJwV0Esuw1EYhvFjXrQMXRITTVyrzNzHJmIHlBhImNIuQcUehIhEq637FgRB
tFUjcZ/Yg99/8OR7z/t85wxOz9LGwnpTCGENjZYQZuMhzOBVTjeHsJsI4c15
Rf5uDeELde4sFkKGe5an+SlU5VN9Tj9mb8SdS/MKF7jGDle22203xU/KSd2v
+aQb1p3be5Af0c7dcUf6irfn5VE+jT+5l9828xiy86nPyVksO+/xm/IWPrh3
3Hu37K0sV9MP2ivrS1h1HnDOcxXnjNzACw5Rcm+O6/JGv3MdJ/Zq5kGU+U6u
T57wVpvdH/NWV+SK0b8gyVeRiP7QXESB77C3H/21O3Fu3LzRHXMF91KI6f4B
DQRAwg==
        "]], Line3DBox[CompressedData["
1:eJwVzrkuhGEYhuFXKK2FsXRiFlvLWIdYDoBSOQklR2CrFYQSR4DKVltnxti3
RELtNFxTPLnf736+9/v/jvzy3FJVRCzIUEPEbGPEVW3EgPkahzHXFNFp/jP3
10UsyoDM85v1EUndiO4Gf5yr+RPvjHIpbgxvMWvnDovOO+4l3GmWU9mzk+UL
+hymMelOM180H9otYUZWuHF37s2DfBn7uC5M2XnAS/0jTuCqrtu85TtPuI3P
uM9vmFukVdJ2X/gjb9bozrg8l5EeftJbJTnn1/S//CvfK1P8Bb/OH9t/q/yT
fHMJ7t087c4H3uOMtOkOKv/tnbLzp66AX7jLtev/Acx4NmQ=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/G36fxY7pRVGaQYLHcjMSElTMRwTJdfpyix2kl+DSgxsZKB
SfwBiGKgbr5LWfwajscNz16v9+v1fn/63jVN5ofnqiIih81ExFp1RKImYp2+
JyO2ZPt8UnZAP2QDdRGPeMKRrEHXnoo45sdqI1rpKM3J2vhxPm1nG2nzqvxF
luFvvfFc2UUes7oO+QU6MS9rwVKl1/XIrtGLQ7dF+Q3fqDvxfsk8aH7mh+gp
7avc0VfcyYr0npbtfvk9b+YH86b5D1k+Qyfob+U/4IfsnGFaVkC/N2fouWwE
l1gwb8jrfdciv0tTOHE/Rfd0y/JPrKDk5gqt6NLv6Lvpty4r+6HN5gJf5v8B
tcA+Eg==
        "]], 
       Line3DBox[{1596, 984, 2312, 873, 4430, 2348, 883, 2321, 1323, 4481, 
        2590, 1331, 2326, 4432, 894, 2351, 2092, 2650, 4517, 1772, 2653, 2102,
         4361, 2361, 782, 2362, 1201, 4365, 2598, 2111, 2680, 4464, 1640, 
        2242, 1213, 2600, 4446, 1222, 1421, 1224, 4466, 2605, 1665, 2336, 
        1566, 4501, 2709, 1251, 1451, 4007, 834, 2386, 940, 2339, 4492, 1467, 
        2275, 848, 3679, 943, 849, 2393, 851, 4373, 2295, 2171, 2633, 4453, 
        1525, 1589, 953, 2303}], Line3DBox[CompressedData["
1:eJwVzT1LgmEYhuGnKbXJFIy2oCUCkT6HtoLUMW0RisAlEqqhJYKGPpaGPkma
jXAoKpSU/kO/oDUogqiG/kDHO5yc931d9/u8Q9XN0kZPCKGGem8IP/EQ5vpC
+OU4HsyPuE+C55FHEQX0u+lyVt/hJ9zEQsjIc7KmOWc+xgkmo/flZ3yKKUy7
ScjWEiFc+P4cNfMCl3GlK/Gg2wl+xnhk3zVkef119C6KshHfrsj2uOJun1/k
h/yHA2zps3ypr+PIvC2ruBszV/kVbW8Oy1u8iA5S+i6/6Xeif9tj3mjwDG6x
ar/jtP7LXdreRArf9pZuV9fmQjTLlr2ZMS/J190NmEdlH5i1v/Mn/gEWozb7

        "]], Line3DBox[CompressedData["
1:eJwV0LErhAEcxvGfDI5TogwGg5TNP2B1M5JiUeLKoAinWPwBBquzKN11k8Kh
GFBnMoiS4d67gUEZDBaDUnze4en5Pd/ned+33oH5lcnllojI015bxFs24oOf
d0cUeVOuuj/dh7QrV+Qvd4WGMxGDHREZbF33jR1Rgk3IDX6iO7ary025wH9s
qrQqT8n9NmvuK7ul9ogD7Fd/SSV5RF/mOfrDrmkay3pm1raTP3i2oC/Lre4Z
fc2ujs1hCX/GE3fQJu3YZLB7u6J3LGD7PMEa6Xvo1GYr/Qb2aFdz31HJbkj3
5O7Sveg2eB4b1eWoJ/1e+j/d2/gFP6Ne/BW/cS/it3yMxqlP9677B7I/Pac=

        "]], Line3DBox[CompressedData["
1:eJwVzksrBGAUh/EzNm4zysZ2moWaZtgpl2iynqSk2IgZxYJGWSiXpYUFsbBQ
aCzc8glQFmwYX8DKjg+gXIqN3yye/u95zjnv+2bKS2OVRESUcdgYcdAUkWyO
eMIjRtsjUrKrNaIb6ZaIZ0zxNZlB1s4lTrkdM9uY4Kcxg177F3p7/C5K3AIW
keSH9AftF2QVCX6cP3G+49/VVXtvcgUVvVU5ya3JmpkN+YF15OvvmvmWPyi6
p99sH/b5tDrFl9Rt8sX+n2xQ/8otMz3yCMd41e/k5uWA+gznKGCWX+aHnT9l
Tp11/5fzNXeDW3TwRbnJj8g59b18qP/DfN7bOVzhH5lnM2o=
        "]], Line3DBox[CompressedData["
1:eJwVzjkvRFEYBuCjshdKBgmTKSzRKMaSIHqRDFFKjESQMeIHWCqTUCgoxF6O
QqNT0FiDiK2QkFAhagXReKZ48t7zfe+599YkJxPpvBDCBBv5IcwXhvBNhrWC
EC6KQlgtDiFbFsK55z6i5k32i+Zx8wXZb37LHc12V7TYXcprlunVW5F77o/b
Des+kiTGBCnztNzXWc/9A13ck7B7kBE+dN75ZJopuxlZzxyzNDJk/iMHfftX
Vrv7Qtz5WR7INtp58s2o/o3c0t1mh9bcP5qPmg+488qI/puMsWRX6txBCd36
5XKMChrs6/QqPXcSoYpDs5TctD/y/Of9WeddMtQS5diuR+dEJjnjlC/+AdBj
PMk=
        "]], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/G3UsfJdboodYo/wCKzWSg/FoNByY9QZ7DaTLbzB5hucDc4
JBkogyxSR1EWi0ExWMQhJ4/v8Oz1eT/f7/fn+/n2za1NFZoiYglPqYiulojO
dMSvPJP9HRGn8lEvx222Rcy0RuxzQ3pV+aCX1XvBBlfmdnHLtyfOTpaftres
vubTMsONc9tmi7jkm/ktvpG8ATV11cysO/bkuZle/eBL3Dp35VyWqeS7cjh5
s7kGCuo87jHA38lj/gcrzkd2b5IZvVryX3wd8+5a5RblAircO/7MdPMVez/O
3yjxbzjxni91DqPOYxjBjt4rqvYO1QfImPlEHR8o6g/qP8se38tjEhO4wD8c
mz6v
        "]], 
       Line3DBox[{2019, 2071, 2301, 1063, 4116, 1692, 1062, 2396, 4442, 1057, 
        1683, 1056, 2342, 4403, 2271, 2002, 744, 4369, 2270, 1676, 1997, 1743,
         4367, 2384, 832, 1990, 4413, 2053, 2696, 1784, 1984, 4470, 2049, 
        2374, 810, 3702, 1023, 1022, 2240, 2239, 4352, 1974, 1723, 2369, 4433,
         904, 1014, 1013, 2222, 4435, 1011, 1625, 716, 3656, 899, 889, 1004, 
        1003, 4376, 2324, 887, 1950, 4406, 710, 2319, 878, 1937, 4405, 705, 
        2309, 1538, 1837}], Line3DBox[CompressedData["
1:eJwV0D8ohAEcxvEfy+FKXRFZpAwGi9Emu4UNk06ZzsZyJZNiYTllkNSl/Blk
eIVFGQwyyGLglKsb/LnllCh83uHb8/ye53nfe7u+mfnxQlNE5FHNRHS3RNRa
I5YRqKKQjdjORbzwFZsOmyL/TQflRfogz9E920688UdtEQP6Ofchf2/TLl9y
n2NXd0b7vesUeT6ht3ZZuxH9onsCm54v4VqX0e2knf2Ybk2+iktds25F9+lu
4MY9ZTeNLfkkvbD7xQJft7my+aC9+nea6H4w6t3DskR/7P5K/5/0WzAkL9ED
WQN3npt179sG/8eX5XX02JbTb+ZfceJ+8tuPeEYFJXkNXbp12w38A4KUP1M=

        "]], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/G3X3fuFHcG+8liYRCTFQsppc50dcuVgSix+JHcRuksyiBl
QpEfI0bzETYxurL4A+TxHZ4935/X6z6f7/sK5cWZhaaIqGCvPeInE7HLKT7v
iLjIg2vpiDF+xpH+ga9xqb/hY/0Uv+BE/8gDONAP8qm+mI3o1/VyWr4kX8aZ
riIb0r3zK95wJa/b4y8Xcau7w6f8CyvuDaPJO+PyEXOz/BstmHU+1LWaG5j2
m19uRwYFXZYvvV/UTXKKV+VPvlvTlZxHvdNlnpPnuOyc5/lkF3TL12UbyX93
r5Mb8n15PbmLHLZxlewmX9NPmHdkVXy4d+/cpqvqSnbZRJ9ui3t0/26ANag=

        "]], 
       Line3DBox[{355, 1308, 354, 3435, 627, 379, 3440, 633, 393, 3442, 635, 
        238, 3415, 593, 3416, 406, 419, 3326, 259, 1099, 3757, 449, 971, 601, 
        3418, 1561, 452, 3471, 667, 292, 3479, 675, 492, 3485, 681, 312, 3493,
         689, 3494, 320, 520, 3383, 328, 697, 3502, 341, 550}], 
       Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/E3CcfColCKhUksSikZGfkPuFhwUWe4y8+F2VHcoGxIJpNE
6ljOYMAZLMTsslI8bnj2/Lxfr8/3/fl2TqbG56siIomd+ohyIqLQEJFz3sWU
ebhZz/m6iC3ukB+g6N6G7p5LjRE3+NH/4tvdY90R78tf0OubPJ/Ip92ZwZl+
jwd1rdynz6Ef57q03X9NESP6d+dZd+ZwoXvmartudXdYMC/iSjcmP3WekI9y
GksYkhf0j/InJNAlK8ry9ifNA5zx/qE8yw+6BH/oPtEtXzOvo6Rr4S/5trzM
Ge9k8aq75Br5auX/nZexgjfdNdfqNis77Wjzbg+3c4r/Acc0O38=
        "]], Line3DBox[CompressedData["
1:eJwVzj8oxGEcx/HnsnC3sDK4qzPKv8FiIgZukl8GukFRt9xtjCgnp+5Gy1Go
21kUGRiEwRkUo0GJzREpKS/Du8/38/7+nuf3pOYKk/lYCCGHppYQzvGKUnMI
MbkhM20hnJmzSCZCWOVSckUu2x3FQxjDkt7AIip8zTcJvOjHzsbNZb6gPyOP
iK86+9MawoI+aJ6XA7KCb35Wv8cMylwviviyi7hxd0zJaffvYw9Xeo1/QMZ8
iQms+/+Ts6fmHbsReYJhjNptc0Oo45Drd9eBLNo9OpdG9v8NXI6r2veY77g+
ZyL56V1d3K+elrdcHbvmTe7D/kZP6td6pyzJbqzhzb6D20I7Lnzb4N/xB3Hj
PFg=
        "]], Line3DBox[CompressedData["
1:eJwV0LEvQ2EUhvFTEUEXLAwk2oF0kpoaNwRpDUKHDpVIGIiVGkwWIUhUIixi
YRFWm0FiMNj8BexWUYvE4HeHJ+97nu/c+902t7ZV28xExDrauyJeUMhGNDsj
2vQTedMb0eAWuiMOzPNyX+7xj/qyvQHnLa5iLvDfej83bb7FtnmX/5QNbDgr
8ZPyryfig8t7z7vs46v6A36drXIZeyvyzFkRO951LJe4MVmXRzLhK567Q5X7
4hZlne/Qn9NvxBPKmOOv7U7hCgmXyCw/oZf0C4yn+9ybXtTPU4dTjJpnnd3L
kfQu9wyjhh/fn0//Q+TQTO+RM/YP9SH9EoN4td/iyn7rPyT6LyA=
        "]], Line3DBox[CompressedData["
1:eJwVzL8rBHAYx/FHOcfdQiwSuoV/wYCMMl4xsLmFxCkGFgO6iMmgrs7CYDgm
k6KU/Dq/tlvEbkAMNuV1w7vP833en+ebmcxn5+oiIodUU8ROY0Ravicjvpoj
inIjHbGJD/OP3b78k9/yEGU3R+hoifj1PkZJv8+ubLdnnvLnaypiWp7wi+Y3
rPNDegvmK70bXONUp8iNmUf4Tnd5zCOhO8qVzVluWN7qVXCHRe7S/bbeOJ/h
7+0f8YBlvsLXm3N8Qm7ZLek11Lx8ks9IYhezev3+a9UbkIOo+qNNfnIT9r3u
znTP8cLNyCpW+BJ/Ye5CNwo4qO3cF/ge71X3a2i3+wdLXTm3
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJztyDENgDAARcEfUICEKsEDEkiYsVBRCENCtyZgoEPvLS+5ct7HtSR5tmRN
r37/7pxzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnPPp/BfnnHPOOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjkf
7Q1yt4ck
     "]], 
   {RGBColor[1, 0, 0], PointSize[0.05], 
    Point3DBox[{{3.07, 9.4, 5.40000000550664}}]}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["pH", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["alcohol", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{381.51376237288343`, 242.15732237016294`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{2.8, 3.8}, {8, 14}, {5.100000004957083, 7.000000011161557}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.090747661174669, -0.7833193503422244, 1.1330003046437158`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.725858272897425*^9},ExpressionUUID->"7ea609a8-3402-4e5d-a926-\
450110f56ae8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7258579843998613`*^9, 
  3.725857989473856*^9}},ExpressionUUID->"5a0fbda7-11b9-4630-b5d3-\
b1bde8c0730d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Image", "[", 
       RowBox[{"AngularGauge", "[", "#", "]"}], "]"}], "\[Rule]", "#"}], 
     "&"}], "/@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"1", ",", " ", "100"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258584707612696`*^9, 3.7258585146584835`*^9}, 
   3.725858578838727*^9},ExpressionUUID->"d960018e-af53-4cfd-b71f-\
3578fd8ccb77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"trainingset", ",", " ", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.725858548554533*^9, 
  3.725858562631843*^9}},ExpressionUUID->"51c66723-ab43-4c45-b327-\
a8bbba237c04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
/gzDMAzDMIzh/B87jLrQ
       "], {{0, 180}, {180, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{180, 180},
     PlotRange->{{0, 180}, {0, 180}}], "\[Rule]", "0.07606463064936064`"}], 
   ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnc2rJdUVxZskgwzzJ9z8CxllFG6GmRoyf0qMZBADbSBk1tCDBqFJk4aH
IhIFBWMEaY00tBgRI060IUHIQDSNoxYnERQyO7nrclez3+m9z0fVqe/9gxPj
833cW7XurrXXOXXqh4/99pFffefSpUtPff/wP488+vufXr786B9+/oPDv/zi
yad+/cSTj//yZ0/+7vEnHr/848e+e/ji307je5ccx3EcZ72EEHansT+NMzk+
++yzKxjR1/di7KZ+D862OOn1gTbfeOONd1966aX/PPvss6HFwO/CwO/94IMP
/ix0v5v6vTvLRmoX+rI0+OKLLx7HK6+8El5//fXw1ltvPRhvv/12cuB78DMY
+HmMlNalzqc+Ps68kfq1dEu9Qovvvfde+OijjwYZH3744XFIzePvaxp3fTsE
GtbqL+sttDSkbrvoHK8Hr0ur5dD3yaPvpz62zjhQw7HvhYbnpt/SOq7pW2h7
N/Uxd9qDazKuzZqGW/kCDumHOeizWfvptznoqfF5wu/s+nrwO6S23ZOsB9bi
FhpmHbSu9blx5cqVqu+n9qn12uuGpW2v2ctD0zF0WFr3cj4V49VXXw137twJ
n3zyyXHcu3cvfPXVV8fx7bffhhjoWYLv4cDP4Ocx8LfxezFSfSm0WvtZVGr2
fupz5dhAx9JT1NRi6UOvXbsWbt68eUG71C2014VYzyVQ71Lncc2v8f18jzIr
cV3Pj6461s4vxvXr18OtW7c6a7eVnjVYz6Hf559/Xq3dOW1rXuSk693U53LL
hMhX4HzmrsOWhukdwP3798Nrr73WRH+klZ7JO++8Ez799NML9VvrE3IeC9qn
rt1fT0cXHaN2WRqWfPPNN+GZZ55pqr/Wesbrw+uUaNourdk4fvyMU9dTn+Mt
cDhte2bHJb4irsX0wjlQn1GnW9Faz7nfB23jfUrPnfvcx9cuHOfg3noQQuQt
anWMc4XaVcrHH398HK1oqWf4DPiNUqDtuGanjl+ch7gHacvhWO7luUhdO+V5
wECN0vKzHEN46FbQO9fCml2ja/cgbZG5RerYQ+OyHnfVMbE89L13/x7u/umP
4c5PfnT85xRo3rkGTdeWD9Fq9dSaWCKHw77jOqFUTcbxRn/OvBh+sY+Oc1DL
GP+4/JvB/s4YSF3fuHHjeJytPCSu1cH9RzGHY3XGeoDePOctzs/Pj/60xlN2
ReoZ479ffDH43xwa9Ak4fjiOKQ8ia7X7jzLk2s1UTWatQF6BPg9a7nsdLgF+
Y216Zi1ArcbxzF0T8XX3H2lC5C+s6570cvgeAh2PUaPv/+ufF/QMfS8ZHC+Z
vUgPkqvV7j90cCyYKcMLp3wya7I2F42eHzW6ZW4cg3os9TxVT9gC1gAtl4Su
Za3W6kvsP4Jr+kIWZ9UC9N5yTi91fqDnIXO2/3399QU9L7knxHFK5eIltVrR
9H5qTU1FEFq28iI5R10yH4IajXM0ZI2Wel6qh8bxwXEqybFltmfVnK33iUFo
Wes7SvyFBmo06s6QNTrOOOCplwaOT80alRL/wevo1jQdRB5nabnEX1iw9gxV
o2M9L60n7HoNi/2H5am3lH2EjJZlFlSybsiitv7UEGd2S+sJ+16/Sjw1s481
azqcPIaVbUot16wd0kDtGSqPjjOOJfWE7Jn7XrtwfnKaXrP3CBm/LDOMlveF
DEGs56X2hH2B/0j1iWvVdCjUck3fNyVxZrdED90K2SfmNB1WkOUd3sMup+Wn
n346vPzyy4vQMoHHWLKHbgk0jfOH+4g1TdNHrmHOhfN+qbqMXA79ydBrL1oS
ZxxL8tCtoSdP1WmZ5YWFaprrMVKfWfpl5sZL0fS///qXhzzHFpHrxOmnrR5R
zrlMrc1auA5fW48Ra1kem5aaRsbKUfq9pcSZ3VQ9Ycl7rDkONeA8YT2TzEqk
puNrspwjgz6m1mgpQeRypVqWx6hFbhyfu9z5zn1PjJZxjN0TlrzHmuNQi3XP
sNR0POciNR0WsKdeyPR/zNlTvV8LTZeeR/n1mnOtZRxj94Sleh6iPufuf5f5
tKbppXhpemZNy/xc9pn3K2Xo2qXpeeyecOr6nEPOI6b6w6k1a8H9BDTPzHVy
XdZjdKFL7aqtYXFmhwGdj8Xc9Sz3SdDum6Mm5uilQ4FnRp4zFl3OY+25jjO7
sXvCuesZyPmWeE2wXOcRZjbXYuXMcr3V2PMlVs0t8dIlaBnHFD1h7j0OlW+U
kusP5+Y7mM1pmSM9c9/1RXNE0/OW5wlTyP7QyqXn4DtCwmfwdY7lmcdGy+y2
PE+Yg7U4rnv0HXNY42HlGVN45rHRMo6trrUrgV5am2uRazym0nI4rc3X8gz6
jCWtMeqC67mOlO9g3hEmmmeR+2Bo2eJafYZEyzi2una0lJTvmKpGM2u2XhPG
kPvIzQVNz94TpknlHVP1htTslvIMDS3j8J4wD31HPM8yRW/IfC7Ox+npr169
2nQv8DkT7//lHrqMw/X9qBMtS6BfHaNGh9N6I83PszZ//vnnRz0vaT1zV7TM
zj20jdwfBVmBlidwDd4YNdqqzVoPyD3u11yrrczOPfTDQAfxveV8voulp6Fr
dK42x/kcPo98H2tF07N76Ivg/Fv7Pmqaimr0bggt52qz3L82Zs2+Q8s4tnr/
lUXq/LNGj+2jc5nGFvI5DUvP3hOWkarRzDpaazmc5gLjvLmkNq8dLbPznrAO
q0Yzjw6N5wy5HjTOv7cyr53Cyji8JyyHNVrLOlrPGYZTbY6zb+bNW5jXTmHp
2XvCOqwaLe6f3bfQM/vA+O9w/chW5gItrMxu7Puvlg7zaKtuYi1nCz1bfSC/
7uj3EnpPWIfVF7JGt/AcwfAa3gdexMo4vCesg/eEx5mw6Av3ffTM9fpWH7jV
jC5G2//Le8J6cn1hX8+R8hpb7wMlVmbnPWE9qb6wj+cIGa+x9T5QYmUc7qHr
4VrSeK6jbxbNXMO9Rp5UxuF6rmMoz5HyGt4HXiSlZ+8J62ntOYJ7jWqszM57
wnqYc8Seo+vcCu8PjHMTzqG413gYK7PznrAey3NwbqX2+UJWTod7ZHg/1ZDP
FF4iVsbhHroOrpnH81igtRYeWvPOqNXn5+fh9u3bD+6nwjpt7NFe8hzotZPS
8xKfiTwW0C/0A01hjz2u/Wee0ddDhwrvzNcCTa/5HpQSUpmd94Q2rInx/Stc
z5HI7fYlenbv3I1UxuE9YT2tPLSVO4u9eh0DS8/eE3aD+9318dBcu++5cz1W
xuE9YTeYQ8vaWrvGX6vx9M5jPPtkyaT07B66HubQ1hr/nJbDaT/nuBekB/d5
lDSpjMM9dD1WTyj2It1n9HzmvWB3rP2/3EN3w+oJSzMOK9vwXrCMVGaH4dSj
3bNSmnFY2Qa+tua99luRyuy8J+xGKuPI7TVjzXN7tlFOSs/eE9aTyjhymZ2W
1bG2u57LSGUc3hPWQ+3GGUfJ3kmaV/Gsro6Unr0nrMfK7Er1bGXPntWVkcrs
MHxPjjp4/1WcUeQy6HDaq9yz537kMg7vCeuwMmixtn/XRc9b3qOuhpyevSes
o+ucSjDmBvlzXfRc8uzoqZ8v3ZpcZrcWDz3WueWcilVnQ0bP1uegdm6w5Dnw
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
43Tn/8OOyRg=
       "], {{0, 180}, {180, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{180, 180},
     PlotRange->{{0, 180}, {0, 180}}], "\[Rule]", "0.466258709229465`"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
vvvatWvhzp07h70oudH386xByyClVan1pfoMUDq3Ob9RoifoDvqrGZ+xL1G+
N2vIPVdd9LwWLUuvofVfyBi9RJ9BasVn6KVEV9BfTT1jH+wXX3xx2C+YGl0/
T+rnS0TqORefl0wtPef0xNGnxy5U9s/8DNr9hv9b+y4uHWoWfkLGaNTulu6b
Jbm5Tb2mCwX++WQqPW+RuL6h1e18HbCcseobvp5SDvSq6Rg/W7JvboH1HAqx
nrIz9OzrgxWBpuEx4C3gO7w/vx8F64NJPVu+2/s3nBZY50Hn+jeA7+125kbf
/jqAflJrr5br2WlBqv85p2fsX7H2avnzUpwWUH/aHsDcfitt/6Dr2WkJ9w9K
LVPPuf2wPK9Ai+2+v9tpAXRn7Wkt1bPlvR1nalI1itz5G8HXVJwZYa2llD67
LWRq0K5nZ0qsWl1uLSXWs9fsnDmQOnuj5HxRwBqH1+yc1mhnI5XW6ohV44AH
8RqHMyXQYd/ahvAc5r4r99DOVNA7W8+lCoXP8Q5GThj3cfA5cfI5W47TFeu5
f0NzwVjP1rr3jRs37r8H6tlxhiCf+8fYCJ1p3rlLLkiYE2oe+urVq/5sWGdU
oG/quc86txKjTzQP7XVoZwpqeefYc1jPMvQ6tDMm9LZDvbMk1TvqdTtnTLQe
JHqNrt6Z8Fkq1rPf3HM4Y2D1bNBrdPXOJBjnjfrzJ5wxKfAa+556Ttbt3HM4
Y2B5jT51uhj3HM6U5Ooafb2GiNFJz+H9SU5NrH66oV5D6Fn1HLI/yc8Bc2qh
9R8NrWvEWHuw/FwOpyZWv0Ytr0GC54XOBDAPjPs1Ss5B6orVz0Ff42eBOUOw
8sCuvc6lBCMv9Bjt1MDah1IrD1T0vOP6t3U/8Nqd0wcrNjMPzD3TeICmT/rG
aO+R3jap+WdsTtToTkbS847nNZbGaPSxovff9bxtMP/o0Y/75nOxuVaNLqHp
4hhtfQZnmyC2Yf+JjG2sacSxmX32ufOPKujZXF/h/eG999477JnxmOzEcM8p
4tzNmzebxmah6RP4Di1GX7ly5TAcJwV0jX170EqipnEykZ7v++j4PsG1HO8l
dVLQn8b7+fjzsWoaCU2faPux8H54tq7X7xwN9utbPUFTxmaJtWbINR1fY3E0
rPocdTN1bCbhuGaYyg29V8mR8FkoWg4oYvO+hZ4B+/01H+S+w5HQZ2j9oKzP
1e7T6EoQ9TsrN3Tf4QDLZzAHnKo+lyMYuaH83rWqd6zpOfcpUp9vDteAWs74
jJPWWibMDTXfwfc7tZeO52+tmk5pdQ7XIFXPYLwrPct5KkLCd8i18Cm99Bzm
cmz4meaqZ+mZrXpG7V79WoSj79C+h9JLT7XfsPVcTskc9Yx5tvoz5lLPyMG9
hppP4r1lqvzQ9dz2GtAzxx50zj4jJhz7/rV9jfAdrEun8kOeAzwU1/N41yB3
7jc9plYjaL1u0pWQ8dKp/BC9peiXrsUccvspSOl2rGtgaZpa1nxn5Jn3rbVa
ShBeOu6f4lpLrOnaWnbGhWfqS02zP1/Tspz3sCAtE3rp3GeDpl3Ly4Q9+pg/
WZdL5X9j9+iPCdfDtfyQ96Xr16+H5557rvXUOD2hpjGPuVrG3PO/HEHkh1qe
K2vT3ru0TOgxLC2zBrB0LZNw7P/Padr78ZZHTsusyy2lllFKKNC0liMOAfdB
50FqXRf2flp+mWtomPcww/W/oYQJNY28G3suXdPnwfVA3U4+t7IPXCvJaXmp
tYxSwrE2XaLpIWvjfN6o8yB8FmofMB9Sy/H8KXF531pzYxMK4rRcG++qaT5/
2c/90GGM7nqehOzH0Nb9Yr8cNqBlEjKajvs9uvgPzJXH5jS4Pl1itMz7rPli
HWNrWiZBaFqrT8c+rETTfP6z++Y0jNG5733sLzSvLOvLW9UyCULT2tq45qmt
Huq+99GtwnOKrO++9BepuVnLWkktzi7dTq6NW9ct5z8Ym50yUjGatbiUv5Dr
Bq7lB5GaTl1DGav5XADkfjXqUFuDdU3mzrj3yZhs+QvpA5fcjzE24XimRy4u
MFazl3pIDWrLIEbjuuH6lcRkmfetvbZci1DgqWWsPj09PcRmxBKnO7du3QqX
L18+XMdUTJb3xrWu+Y1FiDx1LlZjLryvqRuMx9RxKibL+2HrM1+WzNll35fG
annNXdc2uC70yDlvIesXW6/F1SIUxmrXdRrpj6ljKz7EMdnrF/UJx3PUh+h6
a89mxuftqmP458gn71vP/VoJIlazj8DKXzRdx3W+tYLPJ+vDue9/7C28Djct
Z1O2414urpenYg7+P9RM5XxB1/j5Ws4/xeeIY3GpjuV33msX7QiKB0npOhWz
8fMlxW14CbxfS8Ndr8NRxyet53TrnM3BLkS6RrxO+RDOJ16D19Ivzlnf0C9j
MHuEYg3nPrOlY/cW8yNEui7x19o8S08S65saH9ujpLTbR8P8fHJtz3W8DKhr
7ivvcg+OY7elb6lz6I1ah/6gdw5oUhv0CRz4XUu3fP94H130a3kr1/FyCVHe
yJgdn61Xqg38HgbiHP5O7FOGDvw9+iXosO/71L6H0HDwPG8VWDG7r7Zj/TCe
U+8Y0FRq4DX4HYzS+0ZOw9JPeCzeBuFYw5ba7pJHzmVYfoga9li8PVLapr4Z
R1tql17H8vOuYSeGngR+O9a3pnHqfKhXiH0LdUuPrvlsod996+vmLAPqO6Vx
Te/QIAb0aA2+piSfhHbx77t+ndocNX5O59S6rHuXDvwOB/4GNEvdunaduSB0
r47W789xHMdxHMfpz/8At9G6oA==
       "], {{0, 180}, {180, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{180, 180},
     PlotRange->{{0, 180}, {0, 180}}], "\[Rule]", "0.6210603979429192`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7258585694649315`*^9, 
  3.725858633502776*^9},ExpressionUUID->"29ada7d2-f8ef-451c-94e0-\
b6e73832de38"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"predictor", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "->", "\"\<NeuralNetwork\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7258586369025717`*^9, 3.7258586494034615`*^9}, {
  3.725858922418035*^9, 
  3.7258589330815516`*^9}},ExpressionUUID->"70ded77e-b7f6-4576-987c-\
27bd19d12edf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictor", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
/gzDMAzDMIzh/B87jLrQ
     "], {{0, 180}, {180, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{180, 180},
   PlotRange->{{0, 180}, {0, 180}}], "]"}]], "Input",
 CellChangeTimes->{{3.7258587767237535`*^9, 
  3.7258587943934364`*^9}},ExpressionUUID->"bd09f8e9-b307-4c64-8ccd-\
ad51ec8aadde"],

Cell[BoxData["0.09097410876651785`"], "Output",
 CellChangeTimes->{
  3.7258587971017036`*^9},ExpressionUUID->"553a74ad-ac8b-48ac-b963-\
1bafaac11b25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AngularGauge", "[", 
      RowBox[{"Dynamic", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<\[Rule]\>\"", ",", "Large"}], "]"}], ",", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"AngularGauge", "[", 
         RowBox[{"predictor", "[", 
          RowBox[{"Image", "[", 
           RowBox[{"AngularGauge", "[", "t", "]"}], "]"}], "]"}], "]"}], ",", 
        "\"\<(predicted value)\>\""}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"FontFamily", "\[Rule]", "\"\<Sans Serif\>\""}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7258588204003716`*^9, 
  3.7258588204645457`*^9}},ExpressionUUID->"c9a303ac-3ac6-4f2b-8777-\
7293456336e7"],

Cell[BoxData[
 TemplateBox[{
  DynamicModuleBox[{
    System`GaugesDump`anglea$$ = 2.3185553709929563`, System`GaugesDump`a$$ = 
     2.3185553709929563`}, 
    LocatorPaneBox[
     Dynamic[
      Charting`value2pts[$CellContext`t, {Identity, Identity}, {
       Rational[4, 3] Pi -> 0, Rational[-1, 3] Pi -> 1}], {
      None, (System`GaugesDump`a$$ = 
        Charting`resetAngle[$CellContext`t, 0, 1, #, {Identity, Identity}, {
          Rational[4, 3] Pi -> 0, Rational[-1, 3] Pi -> 
           1}]; $CellContext`t = (
         Part[{None, ($CellContext`t = #; Null)& , None}, 2][
           Charting`angleToValue[
           System`GaugesDump`a$$, {Identity, Identity}, {
            Rational[4, 3] Pi -> 0, Rational[-1, 3] Pi -> 
             1}], #2]; $CellContext`t); 
       System`GaugesDump`anglea$$ = 
        Charting`valueToAngle[$CellContext`t, {Identity, Identity}, {
          Rational[4, 3] Pi -> 0, Rational[-1, 3] Pi -> 1}]; Null)& , None}, 
      TrackedSymbols :> {$CellContext`t}, {}], 
     GraphicsBox[{{
        GrayLevel[1], 
        EdgeForm[None], 
        FilledCurveBox[{
          Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
           "]]}]}, 
       GraphicsGroupBox[{
         GrayLevel[0.8], 
         EdgeForm[{
           GrayLevel[0.6], 
           Thickness[0.01]}], 
         FilledCurveBox[{{
            Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
             "]]}, {
            Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
             "]]}}]}], {}, {
        GrayLevel[0.5], 
        Thickness[0.004], 
        CapForm["Butt"], 
        StyleBox[{{{
            GrayLevel[0.5], 
            Thickness[0.008], 
            CapForm["Butt"], 
            LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
               
               Scaled[{0.030000000000000072`, 
                0.0556921938165305}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 5.66553889764798*^-16}, 
               
               Scaled[{0.06, 0.}, {-1., 
                5.66553889764798*^-16}]}, {{-0.4999999999999994, 
               0.866025403784439}, 
               
               Scaled[{
                0.02999999999999996, -0.05569219381653056}, \
{-0.4999999999999994, 0.866025403784439}]}, {{0.5000000000000003, 
               0.8660254037844385}, 
               
               Scaled[{-0.03000000000000002, -0.055692193816530525`}, {
                0.5000000000000003, 0.8660254037844385}]}, {{
               1., -8.881784197001252*^-16}, 
               Scaled[{-0.06, 0.}, {1., -8.881784197001252*^-16}]}, {{
               0.4999999999999995, -0.8660254037844389}, 
               
               Scaled[{-0.029999999999999957`, 0.05569219381653056}, {
                0.4999999999999995, -0.8660254037844389}]}}]}, {
            GrayLevel[0.5], 
            Thickness[0.004], 
            CapForm["Butt"], 
            LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
               
               Scaled[{0.028284271247461915`, 
                
                0.030314990557040934`}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.866025403784439, -0.49999999999999933`}, 
               
               Scaled[{0.034641016151377574`, 
                0.021435935394489767`}, {-0.866025403784439, \
-0.49999999999999933`}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
               
               Scaled[{0.038637033051562734`, 
                0.01109605665936234}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890681, 0.25881904510252146`}, 
               
               Scaled[{
                0.038637033051562734`, -0.011096056659362391`}, \
{-0.9659258262890681, 0.25881904510252146`}]}, {{-0.8660254037844385, 
               0.5000000000000003}, 
               
               Scaled[{
                0.03464101615137754, -0.021435935394489826`}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
               0.7071067811865476}, 
               
               Scaled[{
                0.028284271247461898`, -0.030314990557040955`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
               0.9659258262890684}, 
               
               Scaled[{
                0.010352761804100816`, -0.04141104721640332}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{5.053215498074303*^-16, 1.}, 
               
               Scaled[{0., -0.042871870788979624`}, {5.053215498074303*^-16, 
                1.}]}, {{0.2588190451025214, 0.9659258262890681}, 
               
               Scaled[{-0.010352761804100847`, -0.041411047216403304`}, {
                0.2588190451025214, 0.9659258262890681}]}, {{
               0.7071067811865478, 0.7071067811865472}, 
               
               Scaled[{-0.028284271247461912`, -0.03031499055704094}, {
                0.7071067811865478, 0.7071067811865472}]}, {{
               0.8660254037844387, 0.49999999999999983`}, 
               
               Scaled[{-0.034641016151377546`, -0.021435935394489805`}, {
                0.8660254037844387, 0.49999999999999983`}]}, {{
               0.9659258262890683, 0.25881904510252046`}, 
               
               Scaled[{-0.03863703305156274, -0.01109605665936235}, {
                0.9659258262890683, 0.25881904510252046`}]}, {{
               0.9659258262890681, -0.25881904510252135`}, 
               Scaled[{-0.038637033051562734`, 0.011096056659362398`}, {
                0.9659258262890681, -0.25881904510252135`}]}, {{
               0.8660254037844385, -0.5000000000000002}, 
               
               Scaled[{-0.03464101615137754, 0.02143593539448983}, {
                0.8660254037844385, -0.5000000000000002}]}, {{
               0.7071067811865476, -0.7071067811865476}, 
               
               Scaled[{-0.028284271247461894`, 0.030314990557040962`}, {
                0.7071067811865476, -0.7071067811865476}]}}]}}, {
           GrayLevel[0.5], 
           Thickness[0.008], {{
             InsetBox["0", 
              Offset[{1.5000000000000036`, 2.5980762113533142`}, 
               
               Scaled[{0.030000000000000072`, 
                0.0556921938165305}, {-0.5000000000000004, \
-0.8660254037844385}]], {-0.5773502691896275, -1.}, Automatic, {1, 0}], 
             InsetBox["0.2`", 
              Offset[{3., 0.}, 
               Scaled[{0.06, 0.}, {-1., 5.66553889764798*^-16}]], {-1, 0.}, 
              Automatic, {1, 0}], 
             InsetBox["0.4`", 
              Offset[{1.4999999999999982`, -2.598076211353317}, 
               
               Scaled[{
                0.02999999999999996, -0.05569219381653056}, \
{-0.4999999999999994, 0.866025403784439}]], {-0.5773502691896248, 1.}, 
              Automatic, {1, 0}], 
             InsetBox["0.6`", 
              Offset[{-1.5000000000000009`, -2.5980762113533156`}, 
               
               Scaled[{-0.03000000000000002, -0.055692193816530525`}, {
                0.5000000000000003, 0.8660254037844385}]], {
              0.5773502691896262, 1.}, Automatic, {1, 0}], 
             InsetBox["0.8`", 
              Offset[{-3., 0.}, 
               Scaled[{-0.06, 0.}, {1., -8.881784197001252*^-16}]], {1, 0.}, 
              Automatic, {1, 0}], 
             InsetBox["1.`", 
              Offset[{-1.499999999999998, 2.598076211353317}, 
               
               Scaled[{-0.029999999999999957`, 0.05569219381653056}, {
                0.4999999999999995, -0.8660254037844389}]], {
              0.5773502691896247, -1.}, Automatic, {1, 
              
              0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {}}}, StripOnInput -> False, Antialiasing -> True]}, {}, {}, 
       GeometricTransformationBox[
        GeometricTransformationBox[
         TagBox[
          TooltipBox[{{
             RGBColor[0.73, 0.24506099999999992`, 0.1971], 
             
             PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {
               1, 0.025}, {0., 0.054700000000000006`}}]}, {
             RGBColor[0.73, 0.24506099999999992`, 0.1971], 
             DiskBox[{0, 0}, 0.07]}, {
             GrayLevel[1], 
             DiskBox[{0, 0}, 0.035]}}, 
           DynamicBox[
            ToBoxes[$CellContext`t, StandardForm]]], Annotation[#, 
           Dynamic[$CellContext`t], "Tooltip"]& ], {{{
           1. (0. - 0.9 Sin[0.5235987755982988 + 5.235987755982989 If[
                  Dynamic[
                   MatchQ[$CellContext`t, 
                    PatternTest[
                    Blank[], Charting`realNumericQ]]], 
                  Dynamic[
                   Clip[$CellContext`t, 
                    Sort[
                    N[{0., 1.}], Less]]], 0.]]), 
            1. (0. + 0.9 Cos[0.5235987755982988 + 5.235987755982989 If[
                   Dynamic[
                    MatchQ[$CellContext`t, 
                    PatternTest[
                    Blank[], Charting`realNumericQ]]], 
                   Dynamic[
                    Clip[$CellContext`t, 
                    Sort[
                    N[{0., 1.}], Less]]], 0.]])}, {
           1. (0. - 0.9 Cos[0.5235987755982988 + 5.235987755982989 If[
                  Dynamic[
                   MatchQ[$CellContext`t, 
                    PatternTest[
                    Blank[], Charting`realNumericQ]]], 
                  Dynamic[
                   Clip[$CellContext`t, 
                    Sort[
                    N[{0., 1.}], Less]]], 0.]]), 
            1. (0. - 0.9 Sin[0.5235987755982988 + 5.235987755982989 If[
                  Dynamic[
                   MatchQ[$CellContext`t, 
                    PatternTest[
                    Blank[], Charting`realNumericQ]]], 
                  Dynamic[
                   Clip[$CellContext`t, 
                    Sort[
                    N[{0., 1.}], Less]]], 0.]])}}, {0., 0.}}], {{{1, 0}, {0, 
         1}}, Center}], {}}, AlignmentPoint -> Center, AspectRatio -> 
      Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, 
      AxesStyle -> {}, Background -> None, BaseStyle -> {}, BaselinePosition -> 
      Automatic, ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      CoordinatesToolOptions :> Automatic, DisplayFunction -> Identity, 
      Epilog -> {}, FormatType -> TraditionalForm, Frame -> False, FrameLabel -> 
      None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, 
      GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., 
      ImagePadding -> All, ImageSize -> Small, ImageSizeRaw -> Automatic, 
      LabelStyle -> Directive[
        GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> "Helvetica"],
       Method -> Automatic, PlotLabel -> None, PlotRange -> All, 
      PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> 
      Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> 
      True, Ticks -> Automatic, TicksStyle -> {}], Appearance -> None, 
     Enabled -> Automatic], DynamicModuleValues :> {}],StyleBox[
   "\"\[Rule]\"", Large, StripOnInput -> False],DynamicBox[
    ToBoxes[
     Labeled[
      AngularGauge[
       $CellContext`predictor[
        Image[
         AngularGauge[$CellContext`t]]]], "(predicted value)"], 
     StandardForm]]},
  "Row",
  BaseStyle->(FontFamily -> "Sans Serif"),
  DisplayFunction->(RowBox[{
     TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"FontFamily", "\[Rule]", "\"Sans Serif\""}]}]}], 
     "]"}]& )]], "Output",
 CellChangeTimes->{
  3.725858871987976*^9},ExpressionUUID->"e8c397b6-85b9-45ea-8549-\
7a5ba58399a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", " ", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", " ", "i"}], "}"}], "]"}]}], "}"}], ",",
     " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725859927233776*^9, 
  3.7258599748093233`*^9}},ExpressionUUID->"9617c473-ab86-47c2-a114-\
73a172ac80c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0.6929762787171647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1.7024980435401067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2.2723731026669367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3.6793222390488514`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4.547312397813255`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5.741269096869749`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6.348229715853916`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "7.397009945209719`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8.569070114554647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "9.97606850149875`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7258600172078176`*^9},ExpressionUUID->"593378ad-c262-4c7c-b3c2-\
e3fb6fc29248"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"Rule", "@@@", "data"}], ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<LinearRegression\>\"", ",", " ", 
       RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7258600108320627`*^9, 
  3.7258601031785*^9}},ExpressionUUID->"2490f710-7e33-4c53-8f0e-724beeb49db7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["10", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7258600178160014`*^9, 
  3.7258601262284317`*^9},ExpressionUUID->"2803308f-39c2-458c-a9c7-\
2023ce79018c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"p", ",", " ", "\"\<Function\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725860132207327*^9, 
  3.7258601500722923`*^9}},ExpressionUUID->"7a23111c-87cd-4d15-b108-\
05000d7f56dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "0.6716792938146305`"}], "+", 
   RowBox[{"1.0247630644252337`", " ", "#1"}]}], "&"}]], "Output",
 CellChangeTimes->{
  3.7258601522137637`*^9},ExpressionUUID->"e43e7804-fe33-4d9f-8339-\
89a455d746e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearModelFit", "[", 
  RowBox[{"data", ",", " ", "x", ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7258601809484406`*^9, 
  3.7258601933072147`*^9}},ExpressionUUID->"ad8c039e-792f-418e-a6a5-\
eb13a8f93db8"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.455310317900079`"}], "+", 
       RowBox[{"1.008713320268616`", " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-0.455310317900079, 
     1.008713320268616}, {{$CellContext`x}, {1, $CellContext`x}}, {0, 0}}, {{
    1., 1., 1., 1., 1., 1., 1., 1., 1., 
    1.}}, {{1, 0.6929762787171647}, {2, 1.7024980435401067`}, {
     3, 2.2723731026669367`}, {4, 3.6793222390488514`}, {
     5, 4.547312397813255}, {6, 5.741269096869749}, {7, 6.348229715853916}, {
     8, 7.397009945209719}, {9, 8.569070114554647}, {
     10, 9.97606850149875}}, {{1., 1.}, {1., 2.}, {1., 3.}, {1., 4.}, {1., 
    5.}, {1., 6.}, {1., 7.}, {1., 8.}, {1., 9.}, {1., 10.}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7258601960191574`*^9},ExpressionUUID->"19c402ca-760c-4781-8c11-\
6a6a1ceb0bf7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fit", "[", 
  RowBox[{"data", ",", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "x"}], "}"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7258602474457617`*^9, 
  3.725860258743988*^9}},ExpressionUUID->"2b1a2258-0cc9-4931-be75-\
90b1037ac7ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.4553103179000795`"}], "+", 
  RowBox[{"1.008713320268616`", " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.725860259527398*^9},ExpressionUUID->"7aeab761-a76f-413f-90a3-\
ee4319fe50a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NonlinearModelFit", "[", 
  RowBox[{"data", ",", " ", 
   RowBox[{"a", "+", 
    RowBox[{"b", "*", "x"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.725860319603737*^9, 
  3.7258603507288475`*^9}},ExpressionUUID->"fa431adb-aac8-4874-92ca-\
dd737527141c"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.4553103179000795`"}], "+", 
       RowBox[{"1.008713320268616`", " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> -0.4553103179000795, $CellContext`b -> 
      1.008713320268616}, {{$CellContext`x}, $CellContext`a + $CellContext`b \
$CellContext`x}}, {
    1}, {{1, 0.6929762787171647}, {2, 1.7024980435401067`}, {
     3, 2.2723731026669367`}, {4, 3.6793222390488514`}, {
     5, 4.547312397813255}, {6, 5.741269096869749}, {7, 6.348229715853916}, {
     8, 7.397009945209719}, {9, 8.569070114554647}, {10, 9.97606850149875}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, \
$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7258603378104563`*^9, 
  3.725860351898779*^9}},ExpressionUUID->"77aa990a-6485-4753-9156-\
d4bd2ec1f450"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<WineQuality\>\""}], 
      "}"}], ",", " ", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258605200080976`*^9, 
  3.7258605540331373`*^9}},ExpressionUUID->"29c57069-27ee-4f58-9f62-\
b9c60ec06ee5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"predictors", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Predict", "[", "dataset", "]"}], ",", " ", "3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<WineQuality\>\""}], 
      "}"}], ",", " ", "\"\<TestData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SameQ", " ", "@@", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"testset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}], "&"}], "/@", 
    "predictors"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.725860555955002*^9, 
  3.725860643968404*^9}},ExpressionUUID->"3854213a-9507-48a0-a1d4-\
744a8e279b1a"],

Cell[BoxData[
 TemplateBox[{
  "Predict","bdfmt",
   "\"Argument \\!\\(\\*RowBox[{\\\"dataset\\\"}]\\) should be a rule or a \
list of rules.\"",2,9,1,24707281047438988342,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725860645626218*^9},ExpressionUUID->"23a30aa7-bbd0-484b-9aa9-\
647f8e2d8533"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<WineQuality\>\""}], "}"}], 
     ",", "\"\<Data\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"predictors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Predict", "[", "dataset", "]"}], ",", "3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<WineQuality\>\""}], "}"}], 
     ",", "\"\<TestData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SameQ", "@@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"testset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "&"}], "/@", 
    "predictors"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.7258608041911883`*^9, 
  3.7258608426261325`*^9}},ExpressionUUID->"804e3e80-35bd-44fa-b2c9-\
ffd9d7137991"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.725860832096325*^9},ExpressionUUID->"26798a40-13b9-4577-8160-\
3fefc51c45dd"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.725860898162119*^9},ExpressionUUID->"1840e16b-a275-46e3-bd49-\
67ba18c13f86"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Play", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"#1", "*", "t"}], "]"}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#1", "+", "#2"}], ")"}], "*", "t"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[Rule]", " ", 
       "#2"}], " ", "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1500", ",", " ", "1800"}], "}"}], ",", " ", "70"}], "]"}], 
       ",", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"50", ",", " ", "70"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7258609609524803`*^9, 3.7258610627750397`*^9}, 
   3.7258611079705524`*^9, {3.7258611511786146`*^9, 3.7258611526463385`*^9}, 
   3.7258611960394287`*^9},ExpressionUUID->"800dc5d7-7299-4caf-ba7d-\
fbc753b021bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"Predict", "[", "trainingset", "]"}]}]], "Input",
 CellChangeTimes->{{3.7258612351549807`*^9, 
  3.725861243972788*^9}},ExpressionUUID->"7bad836c-c8a2-45e6-84ae-\
609fc9aaf1ca"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Audio\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Audio\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["70", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725861368072835*^9},ExpressionUUID->"2ff42948-3ed9-4798-931f-\
f9904953f0c2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testset", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sound", "[", 
       RowBox[{"SampledSoundFunction", "[", 
        RowBox[{
         RowBox[{"CompiledFunction", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"10", ",", "10.", ",", "5444"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Blank", "[", "Integer", "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "5"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.007330290496228353"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "0", ",", "7"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1500.0071924545466`", ",", "12.514222800735638`"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.000125", ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.5027712654104036", ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "0", ",", "8"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "0", ",", "2"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.", ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "3", ",", "9", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"10", ",", "0", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", "0", ",", "3", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "38", ",", "0", ",", "0", ",", "1", ",", "0", ",", "3"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", "3", ",", "2", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "40", ",", "1", ",", "3", ",", "0", ",", "4", ",", "3", ",", 
               "0", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "38", ",", "0", ",", "0", ",", "2", ",", "0", ",", "4"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", "6", ",", "2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "40", ",", "1", ",", "3", ",", "0", ",", "6", ",", "3", ",", 
               "0", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", "5", ",", "4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", "5", ",", "7", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", "5", ",", "8", ",", "5"}], "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "}"}], ",", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", "Play`Time2493", "}"}], ",", 
             RowBox[{"Block", "[", 
              RowBox[{
               RowBox[{"{", "Compile`$2409", "}"}], ",", 
               RowBox[{"Block", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"t", "=", 
                   RowBox[{"0.", "+", 
                    RowBox[{"0.000125", " ", "Play`Time2493"}]}]}], "}"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"Compile`$2409", "=", 
                   RowBox[{"First", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "1500.0071924545466`", ",", "12.514222800735638`"}], 
                    "}"}], "]"}]}], ";", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"Compile`$2409", " ", "t"}], "]"}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Compile`$2409", "+", 
                    RowBox[{"Last", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "1500.0071924545466`", ",", "12.514222800735638`"}], 
                    "}"}], "]"}]}], ")"}], " ", "t"}], "]"}]}], ")"}], "-", 
                    "0.007330290496228353"}], ")"}], " ", 
                   "0.5027712654104036"}]}]}], "]"}]}], "]"}]}], "]"}], ",", 
           "Evaluate"}], "]"}], ",", "8000", ",", "8000"}], "]"}], "]"}], 
      "\[Rule]", "12.51`"}], ",", 
     RowBox[{
      RowBox[{"Sound", "[", 
       RowBox[{"SampledSoundFunction", "[", 
        RowBox[{
         RowBox[{"CompiledFunction", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"10", ",", "10.", ",", "5444"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Blank", "[", "Integer", "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "5"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1586.703939924514", ",", "30.083992984347987`"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.000125", ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "0", ",", "2"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.0070196741195687196`"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "0", ",", "7"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.", ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.5020364580937144", ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "0", ",", "8"}], "}"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "3", ",", "9", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"10", ",", "0", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", "0", ",", "3", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "38", ",", "0", ",", "0", ",", "1", ",", "0", ",", "3"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", "3", ",", "2", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "40", ",", "1", ",", "3", ",", "0", ",", "4", ",", "3", ",", 
               "0", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "38", ",", "0", ",", "0", ",", "2", ",", "0", ",", "4"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", "6", ",", "2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "40", ",", "1", ",", "3", ",", "0", ",", "6", ",", "3", ",", 
               "0", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", "5", ",", "4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", "5", ",", "7", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", "5", ",", "8", ",", "5"}], "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "}"}], ",", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", "Play`Time2491", "}"}], ",", 
             RowBox[{"Block", "[", 
              RowBox[{
               RowBox[{"{", "Compile`$2407", "}"}], ",", 
               RowBox[{"Block", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"t", "=", 
                   RowBox[{"0.", "+", 
                    RowBox[{"0.000125", " ", "Play`Time2491"}]}]}], "}"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"Compile`$2407", "=", 
                   RowBox[{"First", "[", 
                    RowBox[{"{", 
                    RowBox[{"1586.703939924514", ",", "30.083992984347987`"}],
                     "}"}], "]"}]}], ";", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"Compile`$2407", " ", "t"}], "]"}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Compile`$2407", "+", 
                    RowBox[{"Last", "[", 
                    RowBox[{"{", 
                    RowBox[{"1586.703939924514", ",", "30.083992984347987`"}],
                     "}"}], "]"}]}], ")"}], " ", "t"}], "]"}]}], ")"}], "-", 
                    "0.0070196741195687196`"}], ")"}], " ", 
                   "0.5020364580937144"}]}]}], "]"}]}], "]"}]}], "]"}], ",", 
           "Evaluate"}], "]"}], ",", "8000", ",", "8000"}], "]"}], "]"}], 
      "\[Rule]", "30.08`"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7258613765987434`*^9, 
  3.7258613766599536`*^9}},ExpressionUUID->"4be36f8c-b09f-4ff3-b1d4-\
86a608e670ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"testset", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.725861386886265*^9, 
  3.725861393421965*^9}},ExpressionUUID->"304c7dcd-3cf2-4ed1-95bf-\
e665c9d0e7d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12.25624731113979`", ",", "15.272591728226717`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7258613973781743`*^9},ExpressionUUID->"e764431b-315c-44fe-b5dd-\
fa9b5127dff7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"visualizePrediction", "[", 
    RowBox[{"data_", ",", "method_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "predictionplot", ",", "dataplot", ",", "xs"}], "}"}],
      ",", 
     RowBox[{
      RowBox[{"dataplot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"List", "@@@", "data"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", "\"\<Data\>\"", "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xs", "=", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Predict", "[", 
        RowBox[{"data", ",", 
         RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"predictionplot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "[", "x", "]"}], ",", 
           RowBox[{
            RowBox[{"p", "[", "x", "]"}], "+", 
            RowBox[{"StandardDeviation", "[", 
             RowBox[{"p", "[", 
              RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"p", "[", "x", "]"}], "-", 
            RowBox[{"StandardDeviation", "[", 
             RowBox[{"p", "[", 
              RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"Min", "[", "xs", "]"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"Max", "[", "xs", "]"}], "+", "1"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
         RowBox[{"Filling", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"2", "\[Rule]", 
            RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
         RowBox[{"Exclusions", "\[Rule]", "False"}], ",", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Prediction\>\"", ",", "\"\<Confidence Interval\>\""}],
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"predictionplot", ",", "dataplot", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "method"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.725861604456338*^9, 3.725861942668854*^9}, 
   3.725862186030037*^9},ExpressionUUID->"5e2120da-c6cd-45a5-88e8-\
6dac6f841f43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"visualizePrediction", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.2"}], "\[Rule]", "1.2"}], ",", 
     RowBox[{"1.4", "\[Rule]", "1.4"}], ",", 
     RowBox[{"3.1", "\[Rule]", "1.8"}], ",", 
     RowBox[{"4.5", "\[Rule]", "1.6"}]}], "}"}], ",", 
   "\"\<GaussianProcess\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725862136110247*^9, 
  3.7258621582471952`*^9}},ExpressionUUID->"2f65c44a-27b5-4671-80dc-\
6822187ecb9d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      GraphicsComplexBox[CompressedData["
1:eJxF2Hk4VN8fB3D7ln2JClFERYVI3+TckG8hJSJFQikqVF/SnrRR1rTYWkUS
QiTUVaLIXmTL0mKrLHNnuTNzZ/zu1O+e/vK8n8cz9+N9zj3nZXT9QjbvFhES
EuIKCwkJfr7uig5OSRGuWkt8Tz0xzQLRkcGvbWz5qAjudN7yCwtkLHLpER7F
Ua2rfe0zLZnAPlVuIG4UQx2jqupz7DEgLqbUGigxjmpbNgtbLmWAjOiZ61V3
f0UHKvSvyBSyAGp526SE1obesdlS28djga+5RyVmhGYCq200Ho98XlC17TfX
R5/Ahbpb09Nkjkoz9HqW9x1Esad/55vN8UsPG08CwaxCQjjoijGpsVrIAOdC
/mTJJlWPXzM4oGRuu6gg61uEloxvnQaNE8tvypK58weukqgvguw1mZzKEseB
WnOY2YcPYoi2ls9Jt6c4WBeu0nopTBI5sJs2JNzDBSb/vIn4NCqNTBZGpW7U
IUCSYuEF56uyyJzg0pE7XTh4KFp4a4eCApLF9veOnYuD9HPhcY4DikjskqdK
1z7jwGc088pdU2Vkn8j+sZxENjjZ26tgF6yCoIWl751u4OBTp2ntsTeqyOsm
iboBaRyo6kSMTU+rIRi2vWExOa9t7MCeDG+hqnOJDVGOXBZQ6eh3nnedi8YU
Bxvrh7DAIb8C73WBTHSROhHvcIoO9OQdv/mGT6EphvFfYm5joLVWRQ4tGUE3
+8+z3tzJBIT+0GBwXy/a/aCp3nuSBWxFW1qKd1WhG2l36zrIfodw5bVbLOuB
wr+V44K+0631s0NfDYApTf7v/rdpZX52FvsBmNN/1sMybyfHI5cGrIX/9B9q
NF/+WioL5LzT+J1nnrWRCC4iwK7WjGhBDovaukJsVAhZPiKcdI/M4d7P5hed
EEXEuIWfnhngIP+enUi+ngQSUrGwo0yKA6w6f+g9KZBCdKZO3zGrJ4Dfg/Lp
JOsZSPJK7y6JzRygJVOY5N4qh3wqW3IwYjUOLKOGg3lmishIjUy4tTsO+KWx
seHRSkhcatCZrlA2GP+CNB1qUUbmSeAZcYZs8Khbcp/PLFVk3saf2jLLyHlO
bNm62k8NuRTl45QgjIOzZub70rhCVZY9HZt9+CzQtDj7UtFPAj0wNYv1oJwF
Ltmf0dTPYaFxfko2i30ZwNzNyA8voKF4gufW+6sxsG+3cojqjh/onf6wn0Ma
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
f3GNxtY=
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           GrayLevel[0.5], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwt0neczwUYwPE7NJAWoaLSEBVJW6kUikQdWpScaAlNCYnSUDTMNMzMGzhk
lTuHG1bEOeNOaZnZoyi9n1f98f59ft+/fr/v8zzVkrsmdSmRkJCQSJKPlqTw
NmvpTCYj2EYrUunPOp4ni8/YTmvSeIcCurCIkezgQdJ5l/V0JZvP2clDTOM9
CunGYr5gFw8znffZwAss4Ut28wgzGMBGXmQpX/EHj5LBB2ziJXIYxR7a8DJt
eYXHeJXH6U47ZvIhm3mNXEazlyeYxUCK6EEeY9hHe2YziGJeJ5+x7CeZb/iI
LfRkGeM4QAfm8DE/0ovljOcgTzKXT/iJ3qzgaw7RkXl8ylbeYCUTOEwn5jOY
n+nDKiZyhKdYwBB+4U2+ZxJHeZpvGcqv9GU1k/mTZ/iOYfxGP9Ywhb94loUM
53fe4gemcoznWPT/rZbgitiz59tiv1pRs/QBTaQmGzzX1916jmbq/Yn/HX0N
Cn29VXdphfh9baEn9HJdr7foTi0f/1+b6z9aXQu0nu7Qs+P99T79Wy/TdXqz
btezYn7aTI/rpbpWb9JtembMX++N99VL4v31xpiHnhH706YxL7045qc3xDz1
9Ni/Nol5a7WYv14f+9BycT96T+xLL4r96XWxTz0t7k/vjn3rhbF/vTbuQcvq
bF3JLFYwk+VksIwZNI570gs0X+vGvWkZna6N4h61qubpNXGvWlqnacO4Z62i
uVon7l1P1XS9Sw/o+ZqjV+sWPUXT9E7dr+fpUq2txXqypmoD3afn6hKtpUV6
kqboHbpXK+tivUo3a6m4Rb1d92glzdYrdZOWjFvWfwGUOcXy
             "]]}]}, {}, {}}, {{}, {}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           LineBox[{1, 90, 50, 130, 26, 110, 70, 150, 2, 91, 51, 131, 27, 111,
             71, 151, 3, 92, 52, 132, 28, 112, 72, 152, 4, 93, 53, 133, 29, 
            113, 73, 153, 5, 94, 54, 134, 30, 114, 74, 154, 6, 95, 55, 135, 
            31, 115, 75, 155, 7, 96, 56, 136, 32, 116, 76, 156, 8, 97, 57, 
            137, 33, 117, 77, 157, 9, 34, 10, 35, 11, 36, 12, 37, 13, 98, 58, 
            138, 38, 118, 78, 158, 14, 99, 59, 139, 39, 119, 79, 159, 15, 100,
             60, 140, 40, 120, 80, 160, 16, 101, 61, 141, 41, 121, 81, 161, 
            17, 102, 62, 142, 42, 122, 82, 162, 18, 103, 63, 143, 43, 123, 83,
             163, 19, 104, 64, 144, 44, 124, 84, 164, 20, 105, 65, 145, 45, 
            125, 85, 165, 21, 106, 66, 146, 46, 126, 86, 166, 22, 107, 67, 
            147, 47, 127, 87, 167, 23, 108, 68, 148, 48, 128, 88, 168, 24, 
            109, 69, 149, 49, 129, 89, 169, 25}]}, 
          Annotation[#, "Charting`Private`Tag$113394#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           LineBox[CompressedData["
1:eJwV0uc6F2Acx+E/KUmi0iajlIgGpSIrtLQcQgdQxxUNRIOMJlGiMqLS1pKy
ikK3F5/rfr7X9Xv5JJw9X3YuKBAIXFC5FhgDTOVdruEI81jBEL7kdt7jWv5k
Pi9yIV8xjfe5jr9YwEtcxNdM5wOu5ygLeZmhHOQOtnADx3iIV7iYb7iTrYzh
OItYyTC+5S4+ZCwnWMwqLuE77mYbN3KSJaxmu67qkWr0WLXq0DWFu3vPDD5h
HH/zMK9zKT8wk52M5x8e4Q1G8CP3sIsJnOJR3uQyfuJePmUip3mMdYzkELP4
jJv4l8dZzyh+5j4+52b+YylvcTm/cD+7mcQZnmADV/ArD7CHWzjLk2zkSn5j
Nnu5lXM8xSZG8ztz2Mfk+c+l02r2XMVhHuQLbmOQzui2vZo/mMt+pjBYZbpj
/wfiU1de
            "]]}, Annotation[#, "Charting`Private`Tag$113394#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           LineBox[CompressedData["
1:eJwVzFc7FgAAgNGvn+IvpYREkZYySgNpUFpm0dLSMIqiQaFJlKjMSFtLyqjI
uOm4OM/zXr1B0QkL4xcEAoEKgkUle+hhPQ84zncWUcVeetnAQ04wzGKukkUf
8+NHnOQHIVxjH69IoIliRlhCNfvpJ5FmTvGTUGo4wABJPOY0vwjjOgd5zUZa
OMMo4dzgEINsopWzjLGUZCLYzDK2EMlWorhJNm/YxhPOMc5ybpHDW1J4SgkT
rKCWXN6RShvn+U00deTxnjSecYE/xHCbfD6wnXYu8peV3KGAj6TTwSUmiaWe
w3xiB88pZYpVNHCEIXbygjL+sZpGCvnMLl5SzjRruEsRX9hNJxXMsJZ7HOUr
GXRxmVnWcZ9jfCOTbq4wRxz/AdcDcUU=
            "]]}, 
          Annotation[#, 
           "Charting`Private`Tag$113394#3"]& ]}}], {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[{{-1.2, 1.2}, {1.4, 1.4}, {3.1, 1.8}, {4.5, 
          1.6}}]}, {}}}, {}, {}, {}, {}}}, {
    PlotLabel -> FormBox["\"GaussianProcess\"", TraditionalForm], ImageSize -> 
     250, DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1.0738627132990828`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 1.0738627132990828`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, 
     PlotRange -> {{-2.2, 5.5}, {1.0738627132990828`, 1.9263772228542495`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Prediction\"", "\"Confidence Interval\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Data\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.725862165953685*^9, 
  3.7258622122737393`*^9},ExpressionUUID->"5901b661-121e-439b-b292-\
f3ec438327a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"visualizePrediction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1.2"}], "\[Rule]", "1.2"}], ",", 
            RowBox[{"1.4", "\[Rule]", "1.4"}], ",", 
            RowBox[{"3.1", "\[Rule]", "1.8"}], ",", 
            RowBox[{"4.5", "\[Rule]", "1.6"}]}], "}"}], ",", "#"}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LinearRegression\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
        "\"\<RandomForest\>\"", ",", "\"\<NeuralNetwork\>\""}], "}"}]}], ",", 
     "2"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "LightGray"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725862335793741*^9, 
  3.7258623358514013`*^9}},ExpressionUUID->"af1072f5-3338-4593-ac29-\
59f6ae0932e9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJw91Ps31Hkcx/FhXKL2zMiM09rZKbdOxGp01Hbh881tpbIuG86uWJZJ7E7F
cdvYRZLLGlJtCZUQJ1krOZRjZ5I07bYuowbloIs6DIPvzJgr3539Yd4/vM/7
D3g+zssm9mRIvCGJRGLr7v/fO17Eqaw04KsP5dsc+BxHRbmcXi/vNV7hiHVY
QCmOapyCXxvMKnl3cU8q30SK/K59Ms2dlfKEhY7+jhlSZGxkMXzCRMKr6bLF
Iz5KUU2R1UFa/Dse5+DwNnm0DPG+vMHqwIW8TXXFwvwhGXrXnGmy/lQ9qmn1
WMsJkKPEx97vQ++MIpzcfdu7V47OVm2L7GyZQWPGo09UrBV0dbDMNcVlCYXe
yElkNK+g8WLWk/2OclQ61VLgxlAg0wFa+MJ6NUrg8JmUEgVy2HWqQxJBoPJS
2z0RZCUaEystLzgYYsvFW59fSlEi+mDqzpERIyx58+VpjwUl8k+zHC5MNcWY
kispLXEqxNrblzE6a4YR6SfPUF+oUAW1rSDw4gZsU6O56fRhNWoit12PolCw
MwljG+p61Kg6P417aJqKGSjXXxDu1qDo2frfat02YoKrrEpBqwZlT0xQfDiW
WIJhLO3eZi0aHXPr/7mPhlWTt9DXVWoRbUvGHEHQMXwu3O7julXkXTp9vOYY
if+obLDb9yiO0rKORnjE0jGRC+2yYkiL8na6J1VpSHwHM6sk7z04uu3kQ4m0
pGNdm6xfEve1yHeAXctso2NxG3ZFLs5r0a2CqR+vBRjwy52O+Hltx9Ffud2J
YjENO+1YtExu1KIoh0ltSxEd4354/qt0Uouc0xd9y8boWLOmH4nVWqT3YR+H
RQ+OysDHPbHo4thXcvAhMtccCXwkBx/amzPnOt1WwIdgaNL1Y+0K+LgaU8o+
a60AH17dflRLXT+9D8FT1T6KsRJ8MBjp74ezlODDkHmRXDivBB+/dO5vuhOv
Ah9dihN9fJEKfFQUZEXW+KrBx8OGybQPun56H4y6t2Z2X2jAR/XuYObzRg34
8Df5pm2frp/eh1P59gfXuVrw4cXr9+GYroKP2zmXAlgZq+DDmSoY+B5fBR/4
nwuisMQ18FFhzQzBXq2Bj/7PJkJ+DyXAB4NMi0l9TICP+cYS1QhFDj5IfkPC
cyUE+AiyETYNS2Xg4+0O0UbuSQJ8cO3xyuxGAnw89DLLH5qRgY/qA76uFTEE
+OhaK+zJrSTAh8jybHZmBwE+bhwvfxr/RAI+utN6dmQ0LIKPvFd5QtbhJfDR
dOon86qeJfCRfJN9/2/nZfDhw6KL2Q3L4ENSPHBphY6Dj+QruXy8DAcfAvFa
QoepFHz8sWBdmJQuBR/bzvc5c5ek4CP26bJ/fYwMfHiGGb3J0e2T3gc7la15
5i8HH/3JiVyTB3Lw4W86fqtV51vvQ/bytfvmOyvg40V0u0fepwrwIeEGPguu
UICPoCDGIE23T3ofoqmvQ32yleDjek7qd3vlSvDhOdcgstP51vtIFv8wmjmp
Ah8CYdVMRKAafLgsbtVy3BfBx116RPgJKzX4kL9p/zZxVQI+uKSoK6fVKvCx
V5bJjHFTg49/7G0tEt5IwIefxb/tqfMq8BE3QPWKt1eDj5x35obHMDX6D+CU
LbM=
         "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
           {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
            GraphicsGroupBox[
             PolygonBox[{{69, 99, 96, 94, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
              79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 97,
               95, 101, 98, 102, 93, 59, 68, 64, 67, 61, 63, 66, 58, 57, 56, 
              55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 
              39, 38, 37, 36, 60, 62, 65, 35}}]]}, {}, {}}, {{}, {}, {}, 
           TagBox[
            {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{1, 31, 28, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
              14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 29, 27, 33, 30, 
              34, 25}]},
            Annotation[#, "Charting`Private`Tag$161680#1"]& ], 
           TagBox[
            {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{35, 65, 62, 60, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
              46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 63, 61, 
              67, 64, 68, 59}]},
            Annotation[#, "Charting`Private`Tag$161680#2"]& ], 
           TagBox[
            {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{69, 99, 96, 94, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 
              80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 97, 95,
               101, 98, 102, 93}]},
            
            Annotation[#, 
             "Charting`Private`Tag$161680#3"]& ]}}], {}, {}}, {{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          PointBox[{{-1.2, 1.2}, {1.4, 1.4}, {3.1, 1.8}, {4.5, 
           1.6}}]}, {}}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.9615963838325462},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->250,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True},
      PlotLabel->FormBox["\"LinearRegression\"", TraditionalForm],
      PlotRange->{{-2.2, 5.5}, {0.9615963838325462, 1.9852193634143935`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxF1FtI02EYgPE5T9kKD5t1U1GgUUHInJiEOXEWRWFUiBpWKkjnJYTDRINK
okUZWVDzSGEZipoXI1jgzEM3ioe82CSNgRUu08oceUBXwZ53F2M8vN++fd9/
P7at4MrxQqVCoSj99/r/3j1mNlosAV0VF5v6Bwbm9eYbxu40w6qdrtt17GOA
e0H6QPV6V6X7t3RwUOTI+ZBZ/3rzhkOawklpe1KD1jr3QXqy5VqIqqhRT1/o
MXw+0eyQvlWzI/dN6xfpp0MP4q7u/qm/ZIissVgW9WN3tX3JOz3SoYOarBnV
knRsYpF1Ntsr7ZxeUD+MVabS0UPFutHRIOmDJvXIneJQae3e3hKHOyy17HF2
gk63rK+K6Lid8Wid9KvAjvrT4eHStRWmysOuCOkz7sZ7z+KjpMvHx8PTjWpp
hzP+fWmvRlqzteSb1xstbbjvOlt3SiG/R21KbFPRO5c8j5ObGycygqalk1rz
lrJa5uS+bc/TlW0xIXKfZOd0zOv2NbJ/wQubtypFJW0qy8zeV+D/fmPu102B
OVOyf1qTt7Q2yv/5/Z/y66vbZ2SeGOYc7Dnif159lWEvo3pDpYdXlJ3zOd9l
vd3uObo937+frbPremrwDzk/Hj15a89t7P8jHmk80nik8SjrfR5pPNJ4pPFI
45HGoy3i8mLm8op4pPFI45HGI41HGo80HmfMb4fLtavikcYjjUcajzQeaTzS
eKTxyP3xSOORxiPnxx/74Y/GH40/9sMfc/wxxx9z/NH4k9/f5485/jgv/tSm
9Libg7/EH40/Gn80/mS9zx+NPxp/NP5o/NH422KyJk/s8Yg/Gn80/mj80fij
8UfjT9XgeTKVsCD+aPzR+KPxR+OPxh+NPxp/3B9/NP5o/HF+/g9pPLI/Hmk8
0nhkfzwyxyNzPDLHI41H8eDzyByPnPcvonfMwQ==
         "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
           {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
            GraphicsGroupBox[
             PolygonBox[{{82, 107, 83, 84, 85, 86, 87, 88, 89, 90, 108, 91, 
              115, 109, 120, 117, 122, 92, 110, 93, 94, 95, 96, 97, 111, 98, 
              119, 116, 121, 112, 118, 99, 113, 100, 101, 102, 103, 104, 105, 
              114, 106, 66, 73, 65, 64, 63, 62, 61, 60, 72, 59, 77, 71, 80, 
              75, 78, 58, 57, 56, 55, 54, 53, 70, 52, 81, 76, 79, 69, 74, 51, 
              68, 50, 49, 48, 47, 46, 45, 44, 43, 67, 
              42}}]]}, {}, {}}, {{}, {}, {}, 
           TagBox[
            {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{1, 26, 2, 3, 4, 5, 6, 7, 8, 9, 27, 10, 34, 28, 39, 36, 
              41, 11, 29, 12, 13, 14, 15, 16, 30, 17, 38, 35, 40, 31, 37, 18, 
              32, 19, 20, 21, 22, 23, 24, 33, 25}]},
            Annotation[#, "Charting`Private`Tag$168328#1"]& ], 
           TagBox[
            {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{42, 67, 43, 44, 45, 46, 47, 48, 49, 50, 68, 51, 74, 69, 
              79, 76, 81, 52, 70, 53, 54, 55, 56, 57, 58, 78, 75, 80, 71, 77, 
              59, 72, 60, 61, 62, 63, 64, 65, 73, 66}]},
            Annotation[#, "Charting`Private`Tag$168328#2"]& ], 
           TagBox[
            {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{82, 107, 83, 84, 85, 86, 87, 88, 89, 90, 108, 91, 115, 
              109, 120, 117, 122, 92, 110, 93, 94, 95, 96, 97, 111, 98, 119, 
              116, 121, 112, 118, 99, 113, 100, 101, 102, 103, 104, 105, 114, 
              106}]},
            
            Annotation[#, 
             "Charting`Private`Tag$168328#3"]& ]}}], {}, {}}, {{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          PointBox[{{-1.2, 1.2}, {1.4, 1.4}, {3.1, 1.8}, {4.5, 
           1.6}}]}, {}}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 1.1129171224960188`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->250,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True},
      PlotLabel->FormBox["\"NearestNeighbors\"", TraditionalForm],
      PlotRange->{{-2.2, 5.5}, {1.1129171224960188`, 1.8870828775039812`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxF1H0sFGAcwPHDuURe4vgrjZn1slTYSm/uSlqtzSQVRoqs6Y/rNqOXpYlW
aaiYJqGXsYxedjXarDlEa1pJ2rykdktv10UtWV7iqs33d3/c7LvnxfM899n5
pxyOSbNXKBQX/33+/23rz9dduWLXEttpzV5UP6bJP6Vr2xQxY6Qrl+54Y2ce
l95S7moqMo9KOyrnd6erRmzz8322qdOGpI1h14Ibfr6SHqo/pnLRV2voQ48j
Puys65XOu7o48eGdj9JlXRdWZAT90KTlJcSmP53Q9J8P7li/ZEx6zgv1nmGX
SenAVfqGkTirRplxL3r3sylNn2Xc61KgvZb27soM7elRSm/N8uo+lzlHOnht
+9Fe81zpYg/DmaiSedK1Doaqve7u2lS75a5rfk9oKk5nFW03eUgnm6sLboR4
SmcPDrpv1nlJ9/aFPDnerpZW+x39arV6S0cUmg5WJink+6gID7ylbzXJeyT4
Vr+NUlqkw+7sm9xT/1Pur18W4FZa/lvaJ3eTSnf/j7xHZl7caqVZIfdJqWmy
Foe7SPs6G4p3d7tKh+V91k2H2u6XdWJX3IYU23l1iZ8WOMR/kfO41dbfDUqe
kv8X52ooiAmx7Rf5bn9V+b1hmb8wsT/pruOMzH+vMpQl6N1kf+d1ptzChkkZ
fzlt3/wr/pusz3EylPb5ucn+nt5HBp472e7b1NxyUuv4Xd4j0tFwddBo2x//
NfOcO6cbp8Q/jX8a/zT+Zf6sfxr/NP5p/NP4p/Hf2HHguua1VfzT+KfxXzeQ
GHXZotDin8Y/jX8a/zT+afwP+FfcPmun0OKfxj+Nfxr/NP5p/HN//NP4p/HP
/fFP45/z45/GP41/Gv+cD/80/jkP/lmPfxr/zMc/4/hnf/wzjn/W459x/NP4
5z3wz/74V3lYUm+Gfxf/NP5p/NP4l/mz/mn80/in8U/jn8a/emO0U8mjUfFP
45/G/4OVNcoc45j8/tP4p/FP45/GP41/T2NAa4plVH7/afzT+KfxT+Ofxj/3
xz+Nfxr/3B//NP45P/5p/NP4p/HP+fBP45/z4J/1+Kfxz3z8M45/9sc/4/hn
Pf4Zxz+Nf94D/+z/FxEiSw8=
         "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
           {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
            GraphicsGroupBox[
             PolygonBox[{{97, 122, 98, 99, 100, 101, 102, 103, 104, 105, 123, 
              106, 133, 124, 140, 136, 143, 107, 125, 108, 126, 109, 139, 134,
               142, 127, 137, 110, 128, 111, 112, 113, 114, 129, 115, 135, 
              130, 141, 138, 144, 116, 131, 117, 118, 119, 120, 132, 121, 73, 
              84, 72, 71, 70, 69, 83, 68, 96, 90, 93, 82, 87, 67, 81, 66, 65, 
              64, 63, 80, 62, 89, 79, 94, 86, 91, 61, 78, 60, 77, 59, 95, 88, 
              92, 76, 85, 58, 75, 57, 56, 55, 54, 53, 52, 51, 50, 74, 
              49}}]]}, {}, {}}, {{}, {}, {}, 
           TagBox[
            {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{1, 26, 2, 3, 4, 5, 6, 7, 8, 9, 27, 10, 37, 28, 44, 40, 
              47, 11, 29, 12, 30, 13, 43, 38, 46, 31, 41, 14, 32, 15, 16, 17, 
              18, 33, 19, 39, 34, 45, 42, 48, 20, 35, 21, 22, 23, 24, 36, 
              25}]},
            Annotation[#, "Charting`Private`Tag$174991#1"]& ], 
           TagBox[
            {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{49, 74, 50, 51, 52, 53, 54, 55, 56, 57, 75, 58, 85, 76, 
              92, 88, 95, 59, 77, 60, 78, 61, 91, 86, 94, 79, 89, 62, 80, 63, 
              64, 65, 66, 81, 67, 87, 82, 93, 90, 96, 68, 83, 69, 70, 71, 72, 
              84, 73}]},
            Annotation[#, "Charting`Private`Tag$174991#2"]& ], 
           TagBox[
            {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{97, 122, 98, 99, 100, 101, 102, 103, 104, 105, 123, 106,
               133, 124, 140, 136, 143, 107, 125, 108, 126, 109, 139, 134, 
              142, 127, 137, 110, 128, 111, 112, 113, 114, 129, 115, 135, 130,
               141, 138, 144, 116, 131, 117, 118, 119, 120, 132, 121}]},
            
            Annotation[#, 
             "Charting`Private`Tag$174991#3"]& ]}}], {}, {}}, {{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          PointBox[{{-1.2, 1.2}, {1.4, 1.4}, {3.1, 1.8}, {4.5, 
           1.6}}]}, {}}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.9763957931068041},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->250,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True},
      PlotLabel->FormBox["\"RandomForest\"", TraditionalForm],
      PlotRange->{{-2.2, 5.5}, {0.9763957931068041, 2.11503277989262}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
         "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
           {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
            GraphicsGroupBox[
             PolygonBox[{{92, 146, 127, 117, 93, 94, 95, 96, 97, 98, 99, 100, 
              101, 102, 103, 104, 105, 106, 107, 147, 128, 118, 156, 137, 108,
               148, 129, 119, 157, 138, 109, 149, 130, 165, 120, 158, 139, 
              169, 110, 150, 131, 166, 121, 159, 140, 170, 111, 151, 132, 167,
               122, 160, 141, 171, 112, 152, 133, 168, 123, 161, 142, 113, 
              153, 134, 124, 162, 143, 114, 154, 135, 125, 163, 144, 115, 155,
               136, 126, 164, 145, 172, 116, 59, 91, 78, 90, 66, 73, 85, 58, 
              77, 89, 65, 72, 84, 57, 76, 88, 64, 71, 83, 56, 75, 87, 63, 70, 
              82, 55, 74, 86, 62, 69, 81, 54, 61, 68, 80, 53, 52, 51, 50, 49, 
              48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 60, 67, 79, 
              35}}]]}, {}, {}}, {{}, {}, {}, 
           TagBox[
            {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{1, 31, 28, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
              14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 29, 27, 33, 30, 
              34, 25}]},
            Annotation[#, "Charting`Private`Tag$962#1"]& ], 
           TagBox[
            {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{35, 79, 67, 60, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
              46, 47, 48, 49, 50, 51, 52, 53, 80, 68, 61, 54, 81, 69, 62, 86, 
              74, 55, 82, 70, 63, 87, 75, 56, 83, 71, 64, 88, 76, 57, 84, 72, 
              65, 89, 77, 58, 85, 73, 66, 90, 78, 91, 59}]},
            Annotation[#, "Charting`Private`Tag$962#2"]& ], 
           TagBox[
            {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
             LineBox[{92, 146, 127, 117, 93, 94, 95, 96, 97, 98, 99, 100, 101,
               102, 103, 104, 105, 106, 107, 147, 128, 118, 156, 137, 108, 
              148, 129, 119, 157, 138, 109, 149, 130, 165, 120, 158, 139, 169,
               110, 150, 131, 166, 121, 159, 140, 170, 111, 151, 132, 167, 
              122, 160, 141, 171, 112, 152, 133, 168, 123, 161, 142, 113, 153,
               134, 124, 162, 143, 114, 154, 135, 125, 163, 144, 115, 155, 
              136, 126, 164, 145, 172, 116}]},
            
            Annotation[#, 
             "Charting`Private`Tag$962#3"]& ]}}], {}, {}}, {{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          PointBox[{{-1.2, 1.2}, {1.4, 1.4}, {3.1, 1.8}, {4.5, 
           1.6}}]}, {}}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 1.0869502435324216`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->250,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True},
      PlotLabel->FormBox["\"NeuralNetwork\"", TraditionalForm],
      PlotRange->{{-2.2, 5.5}, {1.0869502435324216`, 3.0056786886333033`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   FrameStyle->GrayLevel[0.85],
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7258623744277625`*^9},ExpressionUUID->"40fab57a-e6a5-4b7a-8821-\
b06bc4eeaa82"]
}, Open  ]]
},
WindowSize->{733, 844},
WindowMargins->{{Automatic, -1}, {Automatic, 50}},
Magnification:>1.1 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 682, 17, 55, "Input",ExpressionUUID->"d0762d23-5975-4a0a-826b-3139bd7b3461"],
Cell[1265, 41, 8315, 166, 75, "Output",ExpressionUUID->"5f1848d5-6ce9-41c7-a172-a2ce936d56de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9617, 212, 220, 5, 55, "Input",ExpressionUUID->"31eb5b84-5109-40a7-8ea1-13410924adb5"],
Cell[9840, 219, 150, 3, 36, "Output",ExpressionUUID->"37739548-4561-4af7-9088-f1c7b2896613"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10027, 227, 268, 6, 32, "Input",ExpressionUUID->"86558606-465f-4456-a981-41bf1c56456e"],
Cell[10298, 235, 234, 5, 36, "Output",ExpressionUUID->"09028d29-e766-4581-8366-f40847690140"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10569, 245, 472, 12, 32, "Input",ExpressionUUID->"907ef51a-d9da-4d69-a30d-5f881cb3c052"],
Cell[11044, 259, 29019, 495, 269, "Output",ExpressionUUID->"38125cf0-8325-46dc-8280-2d23cf1a19c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40100, 759, 273, 7, 32, "Input",ExpressionUUID->"25360d31-bf31-4123-9772-556c0e7b3d80"],
Cell[40376, 768, 258, 6, 36, "Output",ExpressionUUID->"7fb931b9-6757-4b58-9a5f-5958e1d3783e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40671, 779, 539, 14, 55, "Input",ExpressionUUID->"006968a6-aa16-4048-bf7b-9363a59d735e"],
Cell[41213, 795, 3443, 75, 265, "Output",ExpressionUUID->"9f17a633-d49f-4366-a8b9-0611d90ee9e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44693, 875, 1103, 33, 52, "Input",ExpressionUUID->"ed5ee368-391c-4a0b-925f-74db757b0986"],
Cell[45799, 910, 8521, 171, 78, "Output",ExpressionUUID->"59cc3822-a95a-4ab3-b137-8444226c5e63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54357, 1086, 246, 6, 30, "Input",ExpressionUUID->"b4329c07-a0f6-4175-821a-f36dd34744c5"],
Cell[54606, 1094, 147, 3, 35, "Output",ExpressionUUID->"2b9145f9-1bfc-4055-b153-bd1d30363fed"]
}, Open  ]],
Cell[54768, 1100, 269, 7, 30, "Input",ExpressionUUID->"4b55431a-8572-4ffd-af10-954d3a615d84"],
Cell[CellGroupData[{
Cell[55062, 1111, 319, 7, 73, InheritFromParent,ExpressionUUID->"ea34ca63-a90a-4ccb-806c-b140565af092"],
Cell[55384, 1120, 149, 3, 35, "Output",ExpressionUUID->"24c2e6e8-f34d-4c05-a2d6-62bbeb01cd67"],
Cell[55536, 1125, 148, 3, 35, "Output",ExpressionUUID->"0d6930c9-1cc6-405c-bd97-ff5cb1b10248"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55721, 1133, 285, 8, 52, InheritFromParent,ExpressionUUID->"42f64b06-e023-4619-990e-676a26594745"],
Cell[56009, 1143, 148, 3, 35, "Output",ExpressionUUID->"c0685898-ec34-409c-98c2-14a1c0a2f6cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56194, 1151, 267, 7, 30, "Input",ExpressionUUID->"5031c71c-c647-41ef-ac35-3970787cd5b3"],
Cell[56464, 1160, 148, 3, 35, "Output",ExpressionUUID->"85974879-d106-443c-939c-9f44b4095a3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56649, 1168, 1173, 35, 52, "Input",ExpressionUUID->"fe0647a6-5c9d-488a-9c94-4f64664f2bb0"],
Cell[57825, 1205, 8521, 171, 78, "Output",ExpressionUUID->"c0dde251-ec5b-4f2b-83d8-796eaa421949"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66383, 1381, 242, 6, 30, "Input",ExpressionUUID->"56e6c605-6ac6-44ae-b0c1-4359b17f8d23"],
Cell[66628, 1389, 150, 3, 35, "Output",ExpressionUUID->"272811c5-db0a-4a5d-9f31-d8060e470d30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66815, 1397, 267, 7, 30, "Input",ExpressionUUID->"c7e0e2d1-6344-464e-b264-55703756f793"],
Cell[67085, 1406, 147, 3, 35, "Output",ExpressionUUID->"38b4e1f8-931b-4fcc-b23e-1982ae6565bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67269, 1414, 16989, 339, 162, "Input",ExpressionUUID->"0c71c43f-283d-498d-946b-053e77da7353"],
Cell[84261, 1755, 8300, 166, 78, "Output",ExpressionUUID->"0b3a1bd5-9e51-4477-b08f-9a27842ffc4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92598, 1926, 17228, 341, 162, "Input",ExpressionUUID->"e67cb5c6-9de6-4bdf-9f52-6dee10904117"],
Cell[109829, 2269, 8298, 166, 78, "Output",ExpressionUUID->"101a2ab1-9b65-4487-b2a5-8672e343c1d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118164, 2440, 2598, 58, 51, "Input",ExpressionUUID->"f3cec7b2-f42c-4540-bbfa-caaa365ad367"],
Cell[120765, 2500, 247, 7, 35, "Output",ExpressionUUID->"ae62d46a-f8fe-4b30-86bf-2c742026e4d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121049, 2512, 2598, 58, 51, "Input",ExpressionUUID->"2d145dc7-0431-4e23-8c04-673872775cde"],
Cell[123650, 2572, 242, 6, 35, "Output",ExpressionUUID->"36934829-e827-47ac-a1aa-83a8dbac9886"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123929, 2583, 17181, 340, 185, "Input",ExpressionUUID->"03e54578-1a68-4126-989f-36d8f9df47b2"],
Cell[141113, 2925, 8300, 166, 78, "Output",ExpressionUUID->"ea9fcb49-f5d9-4866-afbf-146a10cdeae8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149450, 3096, 2598, 58, 51, "Input",ExpressionUUID->"96860c69-f514-4b52-b7e9-1ac60dffc8f7"],
Cell[152051, 3156, 245, 7, 35, "Output",ExpressionUUID->"a8dde9e9-af69-426c-b457-a33b92b07775"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152333, 3168, 655, 19, 52, "Input",ExpressionUUID->"0f20fa8a-577e-4c90-8155-4518d266ff8d"],
Cell[152991, 3189, 8325, 166, 78, "Output",ExpressionUUID->"a605aac2-2ff7-4a15-947a-750fe2b4ed58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161353, 3360, 278, 7, 30, "Input",ExpressionUUID->"96ec34b5-c035-4cf8-8c33-7160938f3678"],
Cell[161634, 3369, 148, 3, 35, "Output",ExpressionUUID->"238d18c4-e297-4aa2-a588-446040d2782c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161819, 3377, 426, 12, 30, "Input",ExpressionUUID->"65c11e85-e683-4f6b-becc-da92e38db96e"],
Cell[162248, 3391, 8315, 166, 78, "Output",ExpressionUUID->"4285c974-9c9d-47d1-8652-2e4d0145f70a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170600, 3562, 569, 15, 30, "Input",ExpressionUUID->"9eb70e88-059e-469b-84fc-c4983cde32cb"],
Cell[171172, 3579, 8311, 166, 78, "Output",ExpressionUUID->"ddfeb755-bfa9-41a0-a605-69b617af7d20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179520, 3750, 1179, 36, 73, "Input",ExpressionUUID->"0a623b5b-14f2-4484-b1bd-f3c59e943b29"],
Cell[180702, 3788, 8521, 171, 78, "Output",ExpressionUUID->"2241d9fa-be06-47a6-8611-a92febaa6d4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189260, 3964, 537, 15, 52, "Input",ExpressionUUID->"01210bde-799f-47c4-9c41-932fd1149b8b"],
Cell[189800, 3981, 8313, 166, 78, "Output",ExpressionUUID->"5a6077e4-e2ed-45bb-835b-1bc2461ae7e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198150, 4152, 201, 4, 30, "Input",ExpressionUUID->"81d42152-28fc-496d-b44c-ea8477467d6a"],
Cell[198354, 4158, 25116, 504, 317, "Output",ExpressionUUID->"75b1c1ea-f15c-4375-8159-52d86d5d8ecb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223507, 4667, 1181, 36, 73, "Input",ExpressionUUID->"80e051a6-081e-4a2f-bc30-58a2a87e7ea1"],
Cell[224691, 4705, 8519, 171, 78, "Output",ExpressionUUID->"fca2aa87-d092-441c-bfd5-03937319cb0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233247, 4881, 247, 6, 30, "Input",ExpressionUUID->"ab428666-d136-4c18-a5a0-6739af778f57"],
Cell[233497, 4889, 149, 3, 35, "Output",ExpressionUUID->"cf66745a-97e5-4c69-98f6-723583bdfb71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233683, 4897, 924, 27, 73, "Input",ExpressionUUID->"69d01a67-e2a6-4fdb-935c-708645a81504"],
Cell[234610, 4926, 8519, 171, 78, "Output",ExpressionUUID->"8a5db0e3-c290-40ec-82f5-8be03f040b16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243166, 5102, 387, 11, 30, "Input",ExpressionUUID->"d94d98a4-37cc-4453-b22f-89afa1933487"],
Cell[243556, 5115, 216, 6, 35, "Output",ExpressionUUID->"ae734d0a-1fc8-43a8-8671-a7f36d4066cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243809, 5126, 1615, 38, 136, "Input",ExpressionUUID->"7c62d165-9d7d-4a39-9a8b-6ba778e76ba2"],
Cell[245427, 5166, 20031, 397, 229, "Output",ExpressionUUID->"17bcd35b-ec72-4ba5-ae8f-29a7ca2763b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265495, 5568, 251, 6, 30, "Input",ExpressionUUID->"5294ba0d-7dba-4a00-9b0d-0199e061fa27"],
Cell[265749, 5576, 8519, 171, 78, "Output",ExpressionUUID->"3ce42e11-528b-478c-91d3-261f5571f201"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274305, 5752, 342, 9, 30, "Input",ExpressionUUID->"a2776411-f123-43e5-bd9a-08fc609b4cc7"],
Cell[274650, 5763, 148, 3, 35, "Output",ExpressionUUID->"e2a7f3a4-9753-4169-b255-c07280d796fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274835, 5771, 239, 5, 30, "Input",ExpressionUUID->"87166555-7cc5-4acc-95d1-3a86c5246eb5"],
Cell[275077, 5778, 201, 5, 35, "Output",ExpressionUUID->"caad70a8-ac5d-4dee-b0dd-555dd88c856c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275315, 5788, 227, 5, 30, "Input",ExpressionUUID->"b156f5e5-e908-458e-ad4c-ffd2c128333a"],
Cell[275545, 5795, 313, 8, 23, "Message",ExpressionUUID->"1b4ff104-71a3-42f7-b785-941cc6c5b264"],
Cell[275861, 5805, 8794, 177, 78, "Output",ExpressionUUID->"fb3e4c64-2749-41bd-bbd6-e6170bfd07d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284692, 5987, 251, 6, 30, "Input",ExpressionUUID->"610578e4-24db-4fa7-be8e-bec0b6065de6"],
Cell[284946, 5995, 150, 3, 35, "Output",ExpressionUUID->"e52b3ffa-2594-45e0-9da6-03c62f9054d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285133, 6003, 847, 23, 55, "Input",ExpressionUUID->"88b2eadc-5c45-4f74-8f27-dffb5426a83a"],
Cell[285983, 6028, 14183, 269, 145, "Output",ExpressionUUID->"97749db7-b2a8-4641-ad77-8a78e8e1796e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300203, 6302, 847, 23, 55, "Input",ExpressionUUID->"e0e49e43-be3b-493b-a36d-f42c39e4e7a7"],
Cell[301053, 6327, 14167, 269, 145, "Output",ExpressionUUID->"89f0bd2e-9149-407f-b014-45752321140b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315257, 6601, 185, 4, 32, "Input",ExpressionUUID->"eac5530c-045a-4fad-b49f-b35d65811659"],
Cell[315445, 6607, 247, 7, 36, "Output",ExpressionUUID->"9b441583-86f2-493a-8060-b00a9c9f8414"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315729, 6619, 465, 13, 32, "Input",ExpressionUUID->"e8e7eae3-637b-4655-9f37-3cb352c3bb89"],
Cell[316197, 6634, 193686, 3160, 341, 100055, 1624, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"4d608a7e-ff00-4d51-a95b-34c7cabbff63"]
}, Open  ]],
Cell[509898, 9797, 768, 23, 55, "Input",ExpressionUUID->"ea363ff7-21db-4cb9-9996-2522d9d76b27"],
Cell[CellGroupData[{
Cell[510691, 9824, 201, 4, 32, "Input",ExpressionUUID->"7c8f21e1-d469-4d3f-864b-cc47f222cd48"],
Cell[510895, 9830, 31719, 529, 342, "Output",ExpressionUUID->"bde2a5c6-2530-4838-a1d1-f82705772dd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[542651, 10364, 379, 11, 32, "Input",ExpressionUUID->"5d7d73fa-af28-48a9-ae88-220759801cb8"],
Cell[543033, 10377, 8902, 180, 75, "Output",ExpressionUUID->"34d579b1-ca6e-45f8-bdcb-8cb03faab407"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551972, 10562, 491, 13, 32, "Input",ExpressionUUID->"c42eda56-7cd4-43e1-82d4-0c89ae08732b"],
Cell[552466, 10577, 136641, 2278, 359, "Output",ExpressionUUID->"d1617d7c-e357-4887-9e45-11b838f2ec55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689144, 12860, 1024, 29, 77, "Input",ExpressionUUID->"81659896-066d-4910-add8-0add5f564ed7"],
Cell[690171, 12891, 8969, 181, 75, "Output",ExpressionUUID->"9efec707-f534-4a7a-b091-513dcd6e438f"],
Cell[699143, 13074, 64179, 1055, 210, "Output",ExpressionUUID->"83e2da99-eff4-4d06-976b-1338907d8f5e"],
Cell[763325, 14131, 203, 4, 36, "Output",ExpressionUUID->"8812d7fc-15fa-44bd-816c-86ed32613b95"]
}, Open  ]],
Cell[763543, 14138, 154, 3, 32, "Input",ExpressionUUID->"418e7620-1076-4a20-9f60-3c4e0307d05f"],
Cell[CellGroupData[{
Cell[763722, 14145, 307, 5, 77, "Input",ExpressionUUID->"e756dea4-d7df-4825-a3a5-22edad490de0"],
Cell[764032, 14152, 8896, 180, 75, "Output",ExpressionUUID->"9a5131bd-696b-4fc7-8707-5ea7a12651c9"],
Cell[772931, 14334, 52742, 868, 338, "Output",ExpressionUUID->"2b2633b6-c8a1-4f5a-86cf-a438f24e00d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[825710, 15207, 154, 3, 32, "Input",ExpressionUUID->"76376aec-3e25-42b1-a040-c40b5f060e5e"],
Cell[825867, 15212, 915, 18, 62, "Message",ExpressionUUID->"e0b4dc2e-3d6d-46d2-a307-d01119096574"],
Cell[826785, 15232, 613, 19, 341, "Output",ExpressionUUID->"9c46f1a1-a025-4b68-b5f9-67ecf6008b10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[827435, 15256, 1426, 45, 99, "Input",ExpressionUUID->"9b827fbe-5be3-493d-bb23-a204f2f1a1a6"],
Cell[828864, 15303, 135860, 2263, 252, "Output",ExpressionUUID->"22d8f123-dcbc-4ced-b18d-9e61f511a0db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[964761, 17571, 326, 8, 32, "Input",ExpressionUUID->"e521a1f5-e832-4bb1-acc3-2ecc8ef92949"],
Cell[965090, 17581, 189, 5, 36, "Output",ExpressionUUID->"d3d21250-84a6-48f0-916c-66fa11873e99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[965316, 17591, 329, 8, 32, "Input",ExpressionUUID->"33e2b9d5-7f93-40be-8075-30bdaee9ebc6"],
Cell[965648, 17601, 11532, 224, 75, "Output",ExpressionUUID->"9098ea95-0821-4784-928f-e5a449d1d46d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[977217, 17830, 468, 11, 55, "Input",ExpressionUUID->"0c39a7c0-3105-4404-a539-81619e7fb6f5"],
Cell[977688, 17843, 11883, 214, 259, "Output",ExpressionUUID->"5e04bb98-3b54-428b-b14b-41a62f18d768"]
}, Open  ]],
Cell[989586, 18060, 1878, 52, 165, "Input",ExpressionUUID->"7bdb0fee-7301-4319-b4e6-f95f56bd857d"],
Cell[CellGroupData[{
Cell[991489, 18116, 507, 14, 32, "Input",ExpressionUUID->"14272058-b8c3-42dd-97bb-7ee2dc94a509"],
Cell[991999, 18132, 8303, 166, 75, "Output",ExpressionUUID->"03b860dc-fbf9-4344-87f4-886e41f4d21e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1000339, 18303, 546, 15, 77, "Input",ExpressionUUID->"e00b45da-f087-4d80-97e1-3c0bf62deaeb"],
Cell[1000888, 18320, 8303, 166, 75, "Output",ExpressionUUID->"63ae32b3-ebde-4a5e-8472-d095fffee9fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009228, 18491, 585, 16, 55, "Input",ExpressionUUID->"9c1d34c2-0db9-4ed1-90a1-f424b0d34de8"],
Cell[1009816, 18509, 135, 3, 36, "Output",ExpressionUUID->"43f08c12-9a15-4730-af23-5978dc457a7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009988, 18517, 1238, 38, 99, "Input",ExpressionUUID->"41fef210-e105-4bca-97e7-2c889806cab2"],
Cell[1011229, 18557, 8519, 171, 75, "Output",ExpressionUUID->"ce44af3f-39ee-48ee-89bf-2e22988d56d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019785, 18733, 337, 9, 32, "Input",ExpressionUUID->"96447f07-e6c8-4293-8f2a-b2f285fd9d36"],
Cell[1020125, 18744, 164, 4, 36, "Output",ExpressionUUID->"2a178888-d3b2-492a-9272-842384ba146c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1020326, 18753, 875, 22, 77, "Input",ExpressionUUID->"6189cc50-1219-4a51-9040-2a852dcdcb3f"],
Cell[1021204, 18777, 821, 15, 43, "Message",ExpressionUUID->"046d6e09-4c6b-480b-95c6-a62e3b712736"],
Cell[1022028, 18794, 523, 15, 36, "Output",ExpressionUUID->"91579b7e-be72-41a9-931e-f585a47bb3a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1022588, 18814, 707, 19, 77, "Input",ExpressionUUID->"7e767586-cbc3-4142-b3d9-9f653806092f"],
Cell[1023298, 18835, 8513, 171, 75, "Output",ExpressionUUID->"b5158327-093f-45d8-9ff0-3bf8f719e05a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1031848, 19011, 938, 26, 77, "Input",ExpressionUUID->"65eb6b1e-4f10-4a34-92ea-ddd831ff4fd7"],
Cell[1032789, 19039, 8509, 171, 75, "Output",ExpressionUUID->"79040f89-e547-4a94-bf04-4579f0b1cb04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1041335, 19215, 238, 6, 55, "Input",ExpressionUUID->"85f42f39-ea44-4d29-a86e-beee775e92c8"],
Cell[1041576, 19223, 25023, 501, 306, "Output",ExpressionUUID->"b807d3dd-631b-430d-8b28-004ffe7564d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1066636, 19729, 263, 7, 32, "Input",ExpressionUUID->"c75cc232-3c03-4a4f-a68d-f75bf08213d6"],
Cell[1066902, 19738, 150, 3, 36, "Output",ExpressionUUID->"b5cf0686-a8aa-4ee3-a412-5eef37c9c35b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1067089, 19746, 1270, 33, 143, "Input",ExpressionUUID->"584c989a-b17b-4cee-a56b-cdbd47bc5a50"],
Cell[1068362, 19781, 8525, 171, 75, "Output",ExpressionUUID->"2ad77b85-0d7d-46b3-a820-3f1b838e4954"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1076924, 19957, 240, 5, 32, "Input",ExpressionUUID->"8a55550c-7763-4202-8746-16ecb0a3c136"],
Cell[1077167, 19964, 328, 8, 36, "Output",ExpressionUUID->"f320df9c-da84-48bb-8a0a-9464ad7dd7f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1077532, 19977, 394, 10, 32, "Input",ExpressionUUID->"fc7a2c14-7d91-4c8f-8957-8c235d2f5f55"],
Cell[1077929, 19989, 8513, 171, 75, "Output",ExpressionUUID->"ca5545dc-f32c-4fb9-b8bb-7fec1d85e715"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1086479, 20165, 238, 5, 32, "Input",ExpressionUUID->"2bbfe588-a2b3-4e9f-998a-56ffb4f08035"],
Cell[1086720, 20172, 8960, 178, 111, "Output",ExpressionUUID->"ca94ea24-de49-4ed4-b7f7-37bd619a668b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1095717, 20355, 530, 13, 32, "Input",ExpressionUUID->"c212ec6e-fb8e-4c8c-af2d-bff9a0205605"],
Cell[1096250, 20370, 8305, 166, 75, "Output",ExpressionUUID->"9123b1ec-f706-4630-8a5d-b0b1a91e0e26"]
}, Open  ]],
Cell[1104570, 20539, 213, 5, 32, "Input",ExpressionUUID->"91f40b9c-3512-4635-882a-e2d16f7f25d9"],
Cell[CellGroupData[{
Cell[1104808, 20548, 309, 8, 32, "Input",ExpressionUUID->"a3e8491b-aa1c-4ec1-8866-17108b8e864c"],
Cell[1105120, 20558, 511, 17, 70, "Output",ExpressionUUID->"8fee9778-f675-406a-8846-27d3e13f3ee5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1105668, 20580, 366, 9, 32, "Input",ExpressionUUID->"50e2bec5-0af7-4f43-894b-c7487218bee8"],
Cell[1106037, 20591, 6861, 131, 260, "Output",ExpressionUUID->"98957421-16f2-481b-baf3-c988e9bbaa82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1112935, 20727, 633, 16, 55, "Input",ExpressionUUID->"3ff611a9-654e-46fc-b633-56cc2eb1d821"],
Cell[1113571, 20745, 8315, 166, 75, "Output",ExpressionUUID->"1513375c-f0fa-48b4-b39e-63d26e625daf"]
}, Open  ]],
Cell[1121901, 20914, 142, 3, 32, "Input",ExpressionUUID->"acebcfda-e76a-43ad-a1f5-33ab5cc377da"],
Cell[CellGroupData[{
Cell[1122068, 20921, 234, 5, 32, "Input",ExpressionUUID->"0b60b85e-c775-4ad3-b8c3-e45389899201"],
Cell[1122305, 20928, 509, 17, 70, "Output",ExpressionUUID->"8ebc6ab0-c2e0-4223-8317-79ee4f1ffeeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1122851, 20950, 297, 7, 32, "Input",ExpressionUUID->"500fb4fd-fbbf-4b36-bcee-4a21ee673c56"],
Cell[1123151, 20959, 10191, 185, 263, "Output",ExpressionUUID->"c49574f3-1e0d-45bc-8e11-b34aadad2928"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1133379, 21149, 188, 4, 32, "Input",ExpressionUUID->"a3020878-7279-4373-bd6f-367de60c2273"],
Cell[1133570, 21155, 144, 3, 36, "Output",ExpressionUUID->"0c5abb73-0114-43a3-ae34-0594c34cf597"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1133751, 21163, 263, 6, 32, "Input",ExpressionUUID->"437ca58a-7c8c-467b-bc32-2350bedabbe0"],
Cell[1134017, 21171, 149, 3, 36, "Output",ExpressionUUID->"8c34da08-4c32-43c6-92af-5ee3a52ff1de"]
}, Open  ]],
Cell[1134181, 21177, 435, 12, 32, "Input",ExpressionUUID->"33fc67d3-db86-4cfb-a39c-4352e282df7e"],
Cell[CellGroupData[{
Cell[1134641, 21193, 328, 8, 32, "Input",ExpressionUUID->"a79c6483-2cb3-4cf6-9b51-e048712b738e"],
Cell[1134972, 21203, 8315, 166, 75, "Output",ExpressionUUID->"c30e1614-f802-4a01-ac14-9a75790f936c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1143324, 21374, 334, 8, 32, "Input",ExpressionUUID->"195e7efd-c582-4570-8617-f0bf7d030fac"],
Cell[1143661, 21384, 8310, 165, 75, "Output",ExpressionUUID->"e1e29d28-e174-4b3d-ba2d-d64d3bd9bce1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1152008, 21554, 455, 12, 32, "Input",ExpressionUUID->"709178dd-5ff6-462a-8a21-7ff9d5358c00"],
Cell[1152466, 21568, 856, 15, 43, "Message",ExpressionUUID->"921cbe02-02f5-4604-b32d-e6c3bafa4962"],
Cell[1153325, 21585, 407, 12, 36, "Output",ExpressionUUID->"32d86dcf-e38a-4fec-8204-37352385f91e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1153769, 21602, 463, 12, 32, "Input",ExpressionUUID->"85fd565a-73a2-4b94-9f1d-b3c26bbb3450"],
Cell[1154235, 21616, 4611, 97, 265, "Output",ExpressionUUID->"fa5e61a2-97ee-402d-af4d-b5da668854bd"]
}, Open  ]],
Cell[1158861, 21716, 410, 10, 55, "Input",ExpressionUUID->"fb722483-40f0-4715-bf6b-4856c290c316"],
Cell[CellGroupData[{
Cell[1159296, 21730, 316, 7, 32, "Input",ExpressionUUID->"575366d4-413b-4e63-8b6b-5b01947fc23c"],
Cell[1159615, 21739, 10709, 214, 75, "Output",ExpressionUUID->"ef396c76-1d66-4a2c-8d87-2a63c7aecbf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1170361, 21958, 559, 14, 55, "Input",ExpressionUUID->"784fc011-1b49-4474-a2b0-fa0b9b33d6a0"],
Cell[1170923, 21974, 149, 3, 36, "Output",ExpressionUUID->"3f0bf029-1122-4eb5-be81-729ddd339f79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1171109, 21982, 324, 8, 32, "Input",ExpressionUUID->"1c12b8ee-aad5-4b14-89c2-2dab4aef6be8"],
Cell[1171436, 21992, 10719, 214, 75, "Output",ExpressionUUID->"84aab1c8-ec99-4d33-a311-41a4dece88d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1182192, 22211, 279, 6, 32, "Input",ExpressionUUID->"1ae6b329-7321-499e-ac52-caf932be74aa"],
Cell[1182474, 22219, 147, 3, 36, "Output",ExpressionUUID->"8d9d143f-649e-49dd-8eb9-d398248fddd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1182658, 22227, 335, 8, 32, "Input",ExpressionUUID->"603045a1-57f8-4acc-af24-d612f8de6aeb"],
Cell[1182996, 22237, 325, 8, 23, "Message",ExpressionUUID->"9e70e715-0540-4553-abcd-7903261b6a97"],
Cell[1183324, 22247, 22517, 445, 213, "Output",ExpressionUUID->"14ac9a85-35be-4df0-ac54-8f6ddfde7e8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1205878, 22697, 360, 10, 32, "Input",ExpressionUUID->"6ad41528-ec10-4a30-baf5-b5e0d081eaed"],
Cell[1206241, 22709, 347, 9, 43, "Output",ExpressionUUID->"dc34d1b0-4cdb-42e6-a42f-87d1bc9fbdec"]
}, Open  ]],
Cell[1206603, 22721, 523, 15, 32, "Input",ExpressionUUID->"f156e0df-03e3-4d6c-bea1-d2ff8a3c7cc8"],
Cell[CellGroupData[{
Cell[1207151, 22740, 620, 17, 55, "Input",ExpressionUUID->"e0a0674e-fa2e-490e-9554-1843cd5cf51c"],
Cell[1207774, 22759, 583, 12, 23, "Message",ExpressionUUID->"a5057a3d-180d-4c02-8ed1-6ecd8572dcd1"],
Cell[1208360, 22773, 245, 7, 36, "Output",ExpressionUUID->"8a5732b4-1f63-4edf-b8a9-ec36f6f9e781"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1208642, 22785, 615, 17, 55, "Input",ExpressionUUID->"2f8be6ec-edb1-41bd-9ff6-a928e7dcc164"],
Cell[1209260, 22804, 25784, 509, 211, "Output",ExpressionUUID->"1975d612-87bc-46a3-91b6-cb182832778b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1235081, 23318, 715, 19, 55, "Input",ExpressionUUID->"bfd57d4b-b926-4c61-951e-1d4d04056b1b"],
Cell[1235799, 23339, 2690, 42, 89, "Message",ExpressionUUID->"77da190a-2388-4678-a166-8974926abf83"],
Cell[1238492, 23383, 17004, 304, 77, "Output",ExpressionUUID->"d11e5204-7a71-418c-aa8e-6a26f38ab022"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1255533, 23692, 717, 19, 55, "Input",ExpressionUUID->"9c10fd0d-4a74-401d-9ecc-79c2c4c538f5"],
Cell[1256253, 23713, 16730, 297, 265, "Output",ExpressionUUID->"5ddb4686-8ee4-4635-b6af-45a7dc5ee251"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273020, 24015, 477, 14, 55, "Input",ExpressionUUID->"2710f495-d073-4274-a080-a1464f982a21"],
Cell[1273500, 24031, 17239, 341, 143, "Output",ExpressionUUID->"5c23a146-0bfa-48ec-a1a3-e75feb89249d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1290776, 24377, 635, 17, 55, "Input",ExpressionUUID->"07bd8473-c648-4c6f-8a88-24f0ff7d8763"],
Cell[1291414, 24396, 5656, 113, 265, "Output",ExpressionUUID->"bfedc38f-2606-4429-8326-7c05f2f265de"]
}, Open  ]],
Cell[1297085, 24512, 416, 12, 32, "Input",ExpressionUUID->"977b91fd-9adf-4a9c-96f4-36e594b23457"],
Cell[CellGroupData[{
Cell[1297526, 24528, 597, 17, 77, "Input",ExpressionUUID->"04952328-ad6b-4dab-b5ee-9a3d0a6da5cb"],
Cell[1298126, 24547, 986, 19, 62, "Message",ExpressionUUID->"74557a4d-f946-4a28-87ad-d8e3f5a7759c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1299149, 24571, 18227, 367, 220, InheritFromParent,ExpressionUUID->"7d160345-0176-4eea-bbc4-1e3e53ff2dc9"],
Cell[1317379, 24940, 474, 11, 23, "Message",ExpressionUUID->"8c389464-5ffb-4332-bb47-958cf3750046"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1317890, 24956, 598, 17, 77, InheritFromParent,ExpressionUUID->"bd8999b6-2db4-4a33-93c2-57cb6a2d3fb0"],
Cell[1318491, 24975, 25779, 509, 211, "Output",ExpressionUUID->"894ebcac-72d4-4c9f-82dd-702bf201321e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1344307, 25489, 1206, 30, 121, "Input",ExpressionUUID->"ddf56131-dc87-4550-8e73-880d1f47a7f3"],
Cell[1345516, 25521, 42749, 778, 270, "Output",ExpressionUUID->"55d9c57a-87b3-4c00-8bf3-5d627da96705"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1388302, 26304, 616, 16, 77, "Input",ExpressionUUID->"53fc3333-208a-4c5f-ac78-195d76017df9"],
Cell[1388921, 26322, 8896, 180, 75, "Output",ExpressionUUID->"8b782fe6-3ca4-4af4-b7e2-3c6aef2d3adf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1397854, 26507, 249, 5, 32, "Input",ExpressionUUID->"9f99d78b-a21d-4abc-87e2-22781ca3f0a6"],
Cell[1398106, 26514, 210, 5, 43, "Output",ExpressionUUID->"ae250a45-8401-4881-b27a-1af01898efea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1398353, 26524, 559, 14, 55, "Input",ExpressionUUID->"caf82109-e2cf-4450-b5be-cfcdee669b73"],
Cell[1398915, 26540, 145, 2, 36, "Output",ExpressionUUID->"9fcd3dd1-db9b-4173-a732-7e78559cee3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1399097, 26547, 232, 5, 32, "Input",ExpressionUUID->"2638d94e-e682-4ece-b671-4656d86af87a"],
Cell[1399332, 26554, 8894, 180, 75, "Output",ExpressionUUID->"1baab36b-37f9-4e23-bd67-975d3044c0ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1408263, 26739, 251, 5, 32, "Input",ExpressionUUID->"6b268794-1153-442d-b57d-ce880887522f"],
Cell[1408517, 26746, 210, 5, 43, "Output",ExpressionUUID->"c5bbde09-1093-4c60-9c92-e77fc9350cd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1408764, 26756, 249, 5, 32, "Input",ExpressionUUID->"b4a13469-b984-41bd-9fbb-3969be874561"],
Cell[1409016, 26763, 211, 5, 43, "Output",ExpressionUUID->"9def62d0-1478-4815-85e9-c0caa84aa609"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1409264, 26773, 279, 6, 32, "Input",ExpressionUUID->"1f50b0f6-0da2-42e7-84e9-eaf973b58643"],
Cell[1409546, 26781, 149, 3, 36, "Output",ExpressionUUID->"222eae61-4655-48b1-a678-3adb05368ca6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1409732, 26789, 403, 10, 32, "Input",ExpressionUUID->"d40fdd74-a748-4055-9333-96ba7964b2f8"],
Cell[1410138, 26801, 408, 10, 23, "Message",ExpressionUUID->"7c6a48cc-0865-46ec-b147-5c50eb98d1db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1410583, 26816, 404, 10, 32, InheritFromParent,ExpressionUUID->"45ccc0fa-f7db-4920-b0a6-d45e72f15962"],
Cell[1410990, 26828, 8902, 180, 75, "Output",ExpressionUUID->"e110318a-22b5-462e-9e5c-cdfe2e060d3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1419929, 27013, 238, 6, 32, "Input",ExpressionUUID->"caaa3ee8-abfa-4634-8047-3474eff9638d"],
Cell[1420170, 27021, 185, 5, 36, "Output",ExpressionUUID->"871d3680-d9e1-410f-b3bb-e3b8ef6fced4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1420392, 27031, 279, 6, 32, "Input",ExpressionUUID->"bd2827a2-09e6-4bab-856a-59b3dd5176cc"],
Cell[1420674, 27039, 150, 3, 36, "Output",ExpressionUUID->"a580f83b-1a2e-4c80-8902-ae83b3b8e949"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1420861, 27047, 546, 14, 32, "Input",ExpressionUUID->"42a061df-f1cd-4ba0-a759-e6ba4fb96a5c"],
Cell[1421410, 27063, 8311, 166, 75, "Output",ExpressionUUID->"61a92764-8932-4e14-acd3-b7040e5b62b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1429758, 27234, 626, 16, 55, "Input",ExpressionUUID->"8c24987b-1e08-4c67-8b54-bc3f4f353201"],
Cell[1430387, 27252, 8313, 166, 75, "Output",ExpressionUUID->"92ad51b0-ad49-4b6f-b4e7-0fbe8b071e22"]
}, Open  ]],
Cell[1438715, 27421, 398, 10, 32, "Input",ExpressionUUID->"287d2e88-e413-4ffc-b3fe-02fb12b52f00"],
Cell[CellGroupData[{
Cell[1439138, 27435, 295, 7, 32, "Input",ExpressionUUID->"0d1e5197-e9b4-4205-bc49-b0b606ad5bd7"],
Cell[1439436, 27444, 10719, 214, 75, "Output",ExpressionUUID->"075618ee-a432-4fd3-be49-5dcccefe2462"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1450192, 27663, 199, 4, 32, "Input",ExpressionUUID->"482f90b3-d212-414b-81e3-0f48a2f58e3c"],
Cell[1450394, 27669, 58028, 1141, 582, "Output",ExpressionUUID->"7cd42873-2133-4be6-bd33-fbf594a747d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1508459, 28815, 345, 8, 32, "Input",ExpressionUUID->"cf99525b-052e-4886-b3c3-5f5ba69af286"],
Cell[1508807, 28825, 10709, 214, 75, "Output",ExpressionUUID->"643a44f8-cea3-4160-8ac1-b9a9071a0e34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1519553, 29044, 248, 5, 32, "Input",ExpressionUUID->"5fa0b365-af5d-4167-8cf1-0b8ea8218bff"],
Cell[1519804, 29051, 65271, 1287, 582, "Output",ExpressionUUID->"7d555e2e-98a6-45f5-bf08-323d90820b01"]
}, Open  ]],
Cell[1585090, 30341, 586, 16, 55, "Input",ExpressionUUID->"f0f05c62-cca0-47b6-aadb-bae2ab7127fa"],
Cell[CellGroupData[{
Cell[1585701, 30361, 288, 7, 32, "Input",ExpressionUUID->"db4401c2-b6a7-4b23-93bc-0d7a0247c1bc"],
Cell[CellGroupData[{
Cell[1586014, 30372, 286, 7, 25, "Print",ExpressionUUID->"5e20ce53-600f-4a9c-af84-0a5684b8dc6e"],
Cell[1586303, 30381, 274, 7, 25, "Print",ExpressionUUID->"90ddcfa6-5ad9-4f9f-b5b6-e1b197acca12"],
Cell[1586580, 30390, 274, 7, 25, "Print",ExpressionUUID->"d120b157-097b-46aa-9a4a-61032b090c98"],
Cell[1586857, 30399, 274, 7, 25, "Print",ExpressionUUID->"8d82691d-aaf1-4e27-a28f-fcad3581ca1d"],
Cell[1587134, 30408, 273, 7, 25, "Print",ExpressionUUID->"64d3256e-3f2a-4b20-8a51-49e126b3e216"],
Cell[1587410, 30417, 275, 7, 25, "Print",ExpressionUUID->"12ff171d-33e2-447d-a414-c5cf846cec83"],
Cell[1587688, 30426, 269, 7, 25, "Print",ExpressionUUID->"de5286f8-aa97-47d5-a90b-420b3f1f84c9"],
Cell[1587960, 30435, 272, 7, 25, "Print",ExpressionUUID->"f99ad3a8-ed0c-4b7d-96f3-80f057016d4a"],
Cell[1588235, 30444, 275, 7, 25, "Print",ExpressionUUID->"0f5a4531-e770-422d-96d9-6cf6fc4462d1"],
Cell[1588513, 30453, 270, 7, 25, "Print",ExpressionUUID->"5a901e43-348c-44a7-89a4-bd2bda3355a1"],
Cell[1588786, 30462, 270, 7, 25, "Print",ExpressionUUID->"d0d7ef58-6074-47ae-8b66-856d0be7c748"],
Cell[1589059, 30471, 269, 7, 25, "Print",ExpressionUUID->"fa147aa1-52bf-4857-b333-8cf23252386f"]
}, Open  ]],
Cell[1589343, 30481, 8894, 180, 75, "Output",ExpressionUUID->"b43c9307-fffd-448c-af2a-fbe57a27415e"]
}, Open  ]],
Cell[1598252, 30664, 481, 12, 32, "Input",ExpressionUUID->"51e5689e-9ddf-460e-8af0-b86515817788"],
Cell[CellGroupData[{
Cell[1598758, 30680, 369, 9, 32, "Input",ExpressionUUID->"26963124-cd91-4df4-98e9-070aeb83ffed"],
Cell[1599130, 30691, 8337, 166, 75, "Output",ExpressionUUID->"65720bf8-1b39-443c-b440-4c93532e321e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1607504, 30862, 447, 11, 55, "Input",ExpressionUUID->"8653b63b-51b8-4a67-8e08-ccb4849d41e8"],
Cell[1607954, 30875, 513, 17, 70, "Output",ExpressionUUID->"43bdddc0-02a7-404b-95a1-1aab56fa123e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1608504, 30897, 366, 9, 32, "Input",ExpressionUUID->"07b731f6-7c18-4f42-8ad3-589282cabc77"],
Cell[1608873, 30908, 23373, 402, 263, "Output",ExpressionUUID->"1a91b596-33f5-414d-8993-7a57c30e3c27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1632283, 31315, 188, 4, 32, "Input",ExpressionUUID->"ebbe3cf9-aca2-406b-b72f-5ce9d5463490"],
Cell[1632474, 31321, 147, 3, 36, "Output",ExpressionUUID->"e42cc9d5-1dd3-4f19-aa3a-adf7948ec846"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1632658, 31329, 246, 5, 32, "Input",ExpressionUUID->"0f80f044-f1c1-4865-bc43-d4b5ebfc6491"],
Cell[1632907, 31336, 210, 6, 36, "Output",ExpressionUUID->"30342446-c11e-4975-8f82-336370c600fe"]
}, Open  ]],
Cell[1633132, 31345, 863, 24, 32, "Input",ExpressionUUID->"8d51dd25-a7ec-4f1a-b4e2-454e60e2dd3b"],
Cell[CellGroupData[{
Cell[1634020, 31373, 367, 10, 32, "Input",ExpressionUUID->"eb911823-4975-45f2-bee4-b42a718d596d"],
Cell[1634390, 31385, 5556, 110, 263, "Output",ExpressionUUID->"bee5cd2f-c132-45a3-8131-9735d2e590e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1639983, 31500, 312, 7, 32, "Input",ExpressionUUID->"5b345bfe-8a3e-4d97-8538-5823910b4eff"],
Cell[1640298, 31509, 8313, 166, 75, "Output",ExpressionUUID->"7f8d477c-0160-4faa-9ce8-79a845df924b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1648648, 31680, 189, 4, 32, "Input",ExpressionUUID->"d6b89107-d67f-4a34-8895-42dbac58b286"],
Cell[1648840, 31686, 149, 3, 36, "Output",ExpressionUUID->"4f8ed544-f620-493f-98cd-d0eb52845769"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1649026, 31694, 490, 13, 32, "Input",ExpressionUUID->"18d005f2-8a92-41c0-b9d2-e32e808eae25"],
Cell[1649519, 31709, 23837, 410, 263, "Output",ExpressionUUID->"58dc8a04-c49b-41b8-bdf6-0af06f005894"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1673393, 32124, 241, 5, 32, "Input",ExpressionUUID->"c362588c-30e0-42c3-86f8-90cb4101cae8"],
Cell[1673637, 32131, 8307, 166, 75, "Output",ExpressionUUID->"36d7c166-cfc7-49f2-b7e8-6ddc9efab14b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1681981, 32302, 421, 11, 32, "Input",ExpressionUUID->"3fdf3a93-9512-4a63-a27e-8411cca510d5"],
Cell[1682405, 32315, 6856, 131, 260, "Output",ExpressionUUID->"94e05556-1fa3-487c-9d90-2e5fac5aa904"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1689298, 32451, 378, 10, 32, "Input",ExpressionUUID->"edc62697-8f73-463e-a16d-be16fde8c445"],
Cell[1689679, 32463, 146, 3, 36, "Output",ExpressionUUID->"2c9197af-1e66-4de5-8c5d-4cb2af4f3c56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1689862, 32471, 331, 8, 32, "Input",ExpressionUUID->"d3ef8cf7-60d0-4aaa-bf53-0299d2c06986"],
Cell[1690196, 32481, 11534, 224, 75, "Output",ExpressionUUID->"951dd898-edda-4d36-b1b7-5dff9ef1e360"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1701767, 32710, 470, 11, 55, "Input",ExpressionUUID->"f05ea6f5-b1a6-402c-a0ce-c56e304ebe2f"],
Cell[1702240, 32723, 11885, 214, 259, "Output",ExpressionUUID->"be9da28f-8e43-4f81-96e5-e2b5f22a975e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1714162, 32942, 243, 5, 32, "Input",ExpressionUUID->"adc40aa3-9fd8-4b90-b4c9-7b1ca4791d91"],
Cell[1714408, 32949, 132, 3, 36, "Output",ExpressionUUID->"e01b2a8a-b618-4802-877d-d1d957ac65be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1714577, 32957, 512, 12, 55, "Input",ExpressionUUID->"d8bd76a0-9da6-4173-8e5f-d255d4cfcc98"],
Cell[1715092, 32971, 149, 3, 36, "Output",ExpressionUUID->"7945c1d6-3ff5-448e-acc5-2263e69caf51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1715278, 32979, 407, 9, 55, "Input",ExpressionUUID->"36b9f060-e3b5-4ce2-8ff3-051e798194e2"],
Cell[1715688, 32990, 408, 10, 23, "Message",ExpressionUUID->"0b36ea57-2dff-4a83-a3ae-15ac14ed70f2"],
Cell[1716099, 33002, 2172, 59, 169, "Output",ExpressionUUID->"d3b26ce1-5dad-40f4-9334-5465d49972ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1718308, 33066, 404, 9, 55, "Input",ExpressionUUID->"cd31e436-e0c5-492a-8ebc-e5254de9b93a"],
Cell[1718715, 33077, 506, 11, 23, "Message",ExpressionUUID->"383283ea-0e74-411a-a7c7-fbe3ed398e84"],
Cell[1719224, 33090, 2111, 57, 169, "Output",ExpressionUUID->"55b39359-eb85-4bd9-9d21-4f0968e89eaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1721372, 33152, 404, 9, 55, "Input",ExpressionUUID->"8d5571a7-53e1-4129-989d-0b856758b1fe"],
Cell[1721779, 33163, 504, 11, 23, "Message",ExpressionUUID->"f026405f-dc68-450a-957d-36dc5aaf17b5"],
Cell[1722286, 33176, 2111, 57, 169, "Output",ExpressionUUID->"d8b11fae-9c68-4129-bf84-533adc9a4b16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1724434, 33238, 586, 15, 77, "Input",ExpressionUUID->"621cfeed-7e7f-41c8-9caf-e1fc9ad7e43a"],
Cell[1725023, 33255, 8902, 180, 75, "Output",ExpressionUUID->"7f8badbf-fe85-418d-8906-cc5d64f44381"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1733962, 33440, 253, 5, 32, "Input",ExpressionUUID->"0c62c733-cb95-4eb2-b950-b69c16e7f577"],
Cell[1734218, 33447, 138, 3, 36, "Output",ExpressionUUID->"c6dead0e-5012-475c-ad25-9ca091a17398"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1734393, 33455, 836, 20, 121, "Input",ExpressionUUID->"062d09b3-3252-4632-86c1-9df4889a4719"],
Cell[1735232, 33477, 8904, 180, 75, "Output",ExpressionUUID->"63c1a64b-55ae-4c52-8cc2-4278fc24e7a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1744173, 33662, 248, 5, 32, InheritFromParent,ExpressionUUID->"f44f348e-705e-499c-b484-9e4327b1c3a6"],
Cell[1744424, 33669, 325, 8, 23, "Message",ExpressionUUID->"46ded4c5-0ba0-4cd8-b84b-66f27f0bab9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1744786, 33682, 246, 5, 32, InheritFromParent,ExpressionUUID->"09fe8174-b1de-4b7d-8f2b-a2ddd48a67bc"],
Cell[1745035, 33689, 134, 3, 36, "Output",ExpressionUUID->"f19d5af3-57e6-4e05-96fd-2a830644adf1"]
}, Open  ]],
Cell[1745184, 33695, 442, 11, 32, "Input",ExpressionUUID->"9288fe7f-88ff-457c-b9e3-ab4d139d5808"],
Cell[1745629, 33708, 352, 9, 32, "Input",ExpressionUUID->"d0d3cd6c-5b68-42dc-a862-bda106d9b3ee"],
Cell[1745984, 33719, 292, 6, 32, "Input",ExpressionUUID->"7b1f8dc0-f48e-4ab6-946c-0215a3b92be0"],
Cell[1746279, 33727, 384, 10, 32, "Input",ExpressionUUID->"0bc629b7-466a-4aaf-b462-a6aa826658c5"],
Cell[1746666, 33739, 374, 9, 55, "Input",ExpressionUUID->"9b96b047-d576-4bd3-8f98-39cc3694661f"],
Cell[1747043, 33750, 248, 5, 32, "Input",ExpressionUUID->"240d6d8e-2646-44ba-94b2-da2314ea6c19"],
Cell[CellGroupData[{
Cell[1747316, 33759, 1292, 33, 165, InheritFromParent,ExpressionUUID->"7bceb6df-ce6f-40e6-92b3-8fc8f4012a2e"],
Cell[1748611, 33794, 136, 3, 36, "Output",ExpressionUUID->"cbcd2735-dd1c-4e59-b4cf-5c34fd8ae7d4"],
Cell[1748750, 33799, 8902, 180, 75, "Output",ExpressionUUID->"0545ce01-4a8f-4ecf-9f2a-277f450ff057"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1757689, 33984, 248, 5, 32, "Input",ExpressionUUID->"f1f6bc9d-e28e-4ca5-9b04-05c5a809cf24"],
Cell[1757940, 33991, 138, 3, 36, "Output",ExpressionUUID->"def05c28-a6ce-4382-a3ac-58f296797030"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1758115, 33999, 245, 5, 32, "Input",ExpressionUUID->"a3846298-5094-45e4-842f-c5bd4feaf88a"],
Cell[1758363, 34006, 136, 3, 36, "Output",ExpressionUUID->"facdd1de-fede-4448-8923-c6a49bf92d03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1758536, 34014, 511, 13, 55, "Input",ExpressionUUID->"067b5706-107d-4278-b351-d46afc42aa7f"],
Cell[1759050, 34029, 10740, 214, 93, "Output",ExpressionUUID->"a40bc06b-b40e-4dcf-919f-26c7785c299c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1769827, 34248, 481, 12, 77, "Input",ExpressionUUID->"8ded8d21-d830-4962-a390-fd4da30af0e8"],
Cell[1770311, 34262, 8482, 173, 75, "Output",ExpressionUUID->"b68c81ca-cc38-404f-bf6b-feae71d8083a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1778830, 34440, 204, 4, 32, "Input",ExpressionUUID->"0a419fb0-0e08-4b0a-9f39-ea9cdd250d7b"],
Cell[1779037, 34446, 64596, 1548, 419, "Output",ExpressionUUID->"5f53d425-756e-47d3-a068-8cc53c598c69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1843670, 35999, 207, 4, 32, "Input",ExpressionUUID->"42af061c-e79f-42ce-ad75-5c6e86191648"],
Cell[1843880, 36005, 150, 3, 36, "Output",ExpressionUUID->"28bc91c8-b813-4c45-ad1e-0b996df31e04"]
}, Open  ]],
Cell[1844045, 36011, 766, 21, 55, "Input",ExpressionUUID->"321bfd24-4d29-4da0-b3fe-a2326c3d4efd"],
Cell[CellGroupData[{
Cell[1844836, 36036, 270, 7, 32, "Input",ExpressionUUID->"e497cdb0-4fd0-4d78-b6fa-ea8d742489e9"],
Cell[1845109, 36045, 1527, 46, 126, "Output",ExpressionUUID->"6903446e-3705-49b6-96de-3f12cf47220a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1846673, 36096, 327, 8, 32, "Input",ExpressionUUID->"0b29c88f-eb5b-47c6-bffb-32ec9b6f1cde"],
Cell[1847003, 36106, 8647, 175, 75, "Output",ExpressionUUID->"458a3464-bb9b-47c9-9a22-0363fc414af8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1855687, 36286, 1502, 42, 121, "Input",ExpressionUUID->"05753b8a-5579-4c58-9c69-ff9dfb15693a"],
Cell[1857192, 36330, 63686, 1117, 277, "Output",ExpressionUUID->"4ec7b484-3670-4f9a-9748-f5f8798b4311"]
}, Open  ]],
Cell[1920893, 37450, 621, 12, 55, "Input",ExpressionUUID->"ebdac7ea-b094-4de5-adf4-063168e6586a"],
Cell[1921517, 37464, 619, 17, 77, "Input",ExpressionUUID->"69345ea5-6dc1-475e-8d4b-f05de347e703"],
Cell[1922139, 37483, 209, 4, 32, "Input",ExpressionUUID->"e8a53cfb-1d6d-4a88-a60c-1dfa920cd77e"],
Cell[CellGroupData[{
Cell[1922373, 37491, 1606, 44, 121, "Input",ExpressionUUID->"046dd1c9-4753-4540-823c-ca89c6070c55"],
Cell[1923982, 37537, 28059, 518, 345, 9053, 206, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b8535ef4-2659-403e-8b00-bf79d5b99754"]
}, Open  ]],
Cell[1952056, 38058, 461, 11, 55, "Input",ExpressionUUID->"1c814bd9-e9fe-4b09-affb-f373d381a4ba"],
Cell[CellGroupData[{
Cell[1952542, 38073, 275, 7, 32, "Input",ExpressionUUID->"25b3f2ac-bcc5-4874-a781-e8229120e261"],
Cell[1952820, 38082, 1435, 40, 88, "Output",ExpressionUUID->"98f8b2a9-a49b-4e16-b969-f4567bd365ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1954292, 38127, 397, 9, 32, "Input",ExpressionUUID->"83211331-8654-4923-9b1a-c67d508f3c9c"],
Cell[1954692, 38138, 589, 11, 81, "Output",ExpressionUUID->"971bcf23-8639-46cc-9299-f3704f90228f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1955318, 38154, 776, 21, 77, "Input",ExpressionUUID->"0036f4e5-06f0-4484-86b6-b09a18bca76d"],
Cell[1956097, 38177, 19443, 518, 162, "Output",ExpressionUUID->"bbebe21d-390a-4e91-ac14-c7bdb8f90516"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1975577, 38700, 231, 5, 32, "Input",ExpressionUUID->"dfbd9836-501c-4552-9dae-a143dcaff839"],
Cell[1975811, 38707, 8928, 180, 75, "Output",ExpressionUUID->"b354f50a-a6af-48a5-af85-5293507c02ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1984776, 38892, 231, 5, 32, "Input",ExpressionUUID->"2134154d-a0a5-4f8b-85a7-67473f885090"],
Cell[1985010, 38899, 8902, 180, 75, "Output",ExpressionUUID->"5dd85d4c-7801-4a74-afcb-754583f97db2"]
}, Open  ]],
Cell[1993927, 39082, 518, 12, 55, "Input",ExpressionUUID->"44dfc9ea-9c35-4c74-a77c-5b11b237594e"],
Cell[CellGroupData[{
Cell[1994470, 39098, 253, 5, 55, "Input",ExpressionUUID->"da84650f-e295-4fb6-abd9-9858818b3baa"],
Cell[1994726, 39105, 148, 3, 36, "Output",ExpressionUUID->"e547e7db-3f8b-4b04-8584-b66b01cf5cd6"]
}, Open  ]],
Cell[1994889, 39111, 500, 13, 77, "Input",ExpressionUUID->"cf366351-0517-475f-ad48-88f5a96d2870"],
Cell[CellGroupData[{
Cell[1995414, 39128, 1087, 28, 99, "Input",ExpressionUUID->"3a79ffd8-5fc3-435d-92b5-22b091e64999"],
Cell[1996504, 39158, 112170, 1885, 285, "Output",ExpressionUUID->"7ea609a8-3402-4e5d-a926-450110f56ae8"]
}, Open  ]],
Cell[2108689, 41046, 154, 3, 32, InheritFromParent,ExpressionUUID->"5a0fbda7-11b9-4630-b5d3-b1bde8c0730d"],
Cell[2108846, 41051, 470, 13, 32, "Input",ExpressionUUID->"d960018e-af53-4cfd-b71f-3578fd8ccb77"],
Cell[CellGroupData[{
Cell[2109341, 41068, 229, 5, 32, "Input",ExpressionUUID->"51c66723-ab43-4c45-b327-a8bbba237c04"],
Cell[2109573, 41075, 20783, 357, 120, "Output",ExpressionUUID->"29ada7d2-f8ef-451c-94e0-b6e73832de38"]
}, Open  ]],
Cell[2130371, 41435, 372, 8, 32, "Input",ExpressionUUID->"70ded77e-b7f6-4576-987c-27bd19d12edf"],
Cell[CellGroupData[{
Cell[2130768, 41447, 6880, 118, 67, "Input",ExpressionUUID->"bd09f8e9-b307-4c64-8ccd-ad51ec8aadde"],
Cell[2137651, 41567, 151, 3, 36, "Output",ExpressionUUID->"553a74ad-ac8b-48ac-b963-1bafaac11b25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2137839, 41575, 838, 22, 77, "Input",ExpressionUUID->"c9a303ac-3ac6-4f2b-8777-7293456336e7"],
Cell[2138680, 41599, 14681, 310, 243, "Output",ExpressionUUID->"e8c397b6-85b9-45ea-8549-7a5ba58399a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2153398, 41914, 502, 15, 32, "Input",ExpressionUUID->"9617c473-ab86-47c2-a114-73a172ac80c9"],
Cell[2153903, 41931, 921, 25, 59, "Output",ExpressionUUID->"593378ad-c262-4c7c-b3c2-e3fb6fc29248"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2154861, 41961, 467, 11, 55, "Input",ExpressionUUID->"2490f710-7e33-4c53-8f0e-724beeb49db7"],
Cell[2155331, 41974, 8340, 166, 75, "Output",ExpressionUUID->"2803308f-39c2-458c-a9c7-2023ce79018c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2163708, 42145, 244, 5, 32, "Input",ExpressionUUID->"7a23111c-87cd-4d15-b108-05000d7f56dc"],
Cell[2163955, 42152, 252, 7, 36, "Output",ExpressionUUID->"e43e7804-fe33-4d9f-8339-89a455d746e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2164244, 42164, 243, 5, 32, "Input",ExpressionUUID->"ad8c039e-792f-418e-a6a5-eb13a8f93db8"],
Cell[2164490, 42171, 1137, 30, 58, "Output",ExpressionUUID->"19c402ca-760c-4781-8c11-6a6a1ceb0bf7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2165664, 42206, 284, 7, 32, "Input",ExpressionUUID->"2b1a2258-0cc9-4931-be75-90b1037ac7ea"],
Cell[2165951, 42215, 228, 6, 36, "Output",ExpressionUUID->"7aeab761-a76f-413f-90a3-ee4319fe50a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2166216, 42226, 362, 9, 32, "Input",ExpressionUUID->"fa431adb-aac8-4874-92ca-dd737527141c"],
Cell[2166581, 42237, 1100, 29, 58, "Output",ExpressionUUID->"77aa990a-6485-4753-9156-d4bd2ec1f450"]
}, Open  ]],
Cell[2167696, 42269, 398, 10, 32, "Input",ExpressionUUID->"29c57069-27ee-4f58-9f62-b9c60ec06ee5"],
Cell[CellGroupData[{
Cell[2168119, 42283, 879, 26, 77, "Input",ExpressionUUID->"3854213a-9507-48a0-a1d4-744a8e279b1a"],
Cell[2169001, 42311, 324, 8, 23, "Message",ExpressionUUID->"23a30aa7-bbd0-484b-9aa9-647f8e2d8533"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2169362, 42324, 1077, 32, 99, InheritFromParent,ExpressionUUID->"804e3e80-35bd-44fa-b2c9-ffd9d7137991"],
Cell[2170442, 42358, 133, 3, 36, "Output",ExpressionUUID->"26798a40-13b9-4577-8160-3fefc51c45dd"],
Cell[2170578, 42363, 134, 3, 36, "Output",ExpressionUUID->"1840e16b-a275-46e3-bd49-67ba18c13f86"]
}, Open  ]],
Cell[2170727, 42369, 1155, 32, 55, "Input",ExpressionUUID->"800dc5d7-7299-4caf-ba7d-fbc753b021bd"],
Cell[CellGroupData[{
Cell[2171907, 42405, 231, 5, 32, "Input",ExpressionUUID->"7bad836c-c8a2-45e6-84ae-609fc9aaf1ca"],
Cell[2172141, 42412, 8298, 166, 75, "Output",ExpressionUUID->"2ff42948-3ed9-4798-931f-f9904953f0c2"]
}, Open  ]],
Cell[2180454, 42581, 11118, 267, 781, "Input",ExpressionUUID->"4be36f8c-b09f-4ff3-b1d4-86a608e670ef"],
Cell[CellGroupData[{
Cell[2191597, 42852, 270, 7, 32, "Input",ExpressionUUID->"304c7dcd-3cf2-4ed1-95bf-e665c9d0e7d9"],
Cell[2191870, 42861, 212, 5, 36, "Output",ExpressionUUID->"e764431b-315c-44fe-b5dd-fa9b5127dff7"]
}, Open  ]],
Cell[2192097, 42869, 2850, 72, 275, "Input",ExpressionUUID->"5e2120da-c6cd-45a5-88e8-6dac6f841f43"],
Cell[CellGroupData[{
Cell[2194972, 42945, 484, 13, 55, "Input",ExpressionUUID->"2f65c44a-27b5-4671-80dc-6822187ecb9d"],
Cell[2195459, 42960, 30418, 586, 216, "Output",ExpressionUUID->"5901b661-121e-439b-b292-f3ec438327a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2225914, 43551, 1062, 29, 121, "Input",ExpressionUUID->"af1072f5-3338-4593-ac29-59f6ae0932e9"],
Cell[2226979, 43582, 21774, 419, 427, "Output",ExpressionUUID->"40fab57a-e6a5-4b7a-8821-b06bc4eeaa82"]
}, Open  ]]
}
]
*)

