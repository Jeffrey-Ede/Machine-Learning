(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2151840,      42755]
NotebookOptionsPosition[   2099652,      41907]
NotebookOutlinePosition[   2099998,      41922]
CellTagsIndexPosition[   2099955,      41919]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", " ", "\"\<A\>\""}], ",", " ", 
     RowBox[{"2", "\[Rule]", "\"\<A\>\""}], ",", " ", 
     RowBox[{"3.5", "\[Rule]", "\"\<B\>\""}], ",", " ", 
     RowBox[{"4", "->", "\"\<B\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", "trainingset", "]"}]}]}], "Input",
 CellChangeTimes->{{3.725770961041501*^9, 
  3.7257710405669737`*^9}},ExpressionUUID->"732d1703-6569-4b16-bb64-\
3b50ccf614aa"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257710560305214`*^9},ExpressionUUID->"5a325016-2a64-4d51-977e-\
851d8ecee71a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "2.4", "]"}]], "Input",
 CellChangeTimes->{{3.7257710761494417`*^9, 
  3.72577108229147*^9}},ExpressionUUID->"74deb4e2-c234-4c65-b709-\
9f1f72d19a69"],

Cell[BoxData["\<\"A\"\>"], "Output",
 CellChangeTimes->{
  3.7257710849372196`*^9},ExpressionUUID->"5af06164-5cbf-4ff7-94eb-\
7d553875fa4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", "4.11111", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.725771095772008*^9, 
  3.7257711059488006`*^9}},ExpressionUUID->"3a903a18-c119-42b9-85cb-\
97b91a433cf8"],

Cell[BoxData["\<\"B\"\>"], "Output",
 CellChangeTimes->{
  3.72577118621793*^9},ExpressionUUID->"21c2c1f7-378f-438f-873c-7fb159670f16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"4.11111", ",", " ", "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725771194239216*^9, 
  3.7257712089753137`*^9}},ExpressionUUID->"8e293a2d-dc0b-49ef-810a-\
cb4d697c26eb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"A\"\>", "\[Rule]", "0.16666666666666669`"}], ",", 
   RowBox[{"\<\"B\"\>", "\[Rule]", "0.8333333333333334`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7257712116735277`*^9},ExpressionUUID->"ef2e35ac-2a84-473f-a7b6-\
88aac6a12914"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{
  "2.6", ",", " ", "4.111111", ",", " ", "5", ",", " ", 
   "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257712228589506`*^9, 
  3.725771242533368*^9}},ExpressionUUID->"615bab61-9e09-4fc4-b4f0-\
b478540071af"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction","nonopt",
   "\"Options expected (instead of \\!\\(\\*RowBox[{\\\"\\\\\\\"Probabilities\
\\\\\\\"\\\"}]\\)) beyond position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{TagBox[TemplateBox[List[RowBox[List[StyleBox[TagBox[\\\"\
ClassifierFunction\\\", \\\"SummaryHead\\\"], \
\\\"NonInterpretableSummary\\\"], StyleBox[\\\"[\\\", \
\\\"NonInterpretableSummary\\\"], DynamicModuleBox[List[Set[Typeset`open$$, \
False], Set[Typeset`embedState$$, \\\"Ready\\\"]], \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquarePlusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\
\"Numerical\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \\\"\\\\\\\"A\\\
\\\\\"\\\", \\\"\\\\\\\"B\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[2]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquareMinusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\
\"Numerical\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \\\"\\\\\\\"A\\\
\\\\\"\\\", \\\"\\\\\\\"B\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Method: \\\\\\\"\
\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\
\"\\\\\\\"NearestNeighbors\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Number of training examples: \
\\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`open$$], \
Rule[ImageSize, Automatic]]], \\\"SummaryPanel\\\", Rule[DisplayFunction, \
Function[ButtonBox[Slot[1], Rule[Active, False], Rule[Alignment, Left], \
Rule[Appearance, List[Rule[\\\"Default\\\", \
FrontEnd`FileName[List[\\\"Typeset\\\", \\\"SummaryBox\\\"], \
\\\"Panel.9.png\\\"]]]], Rule[FrameMargins, 7], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, List[\\\"Panel\\\", Rule[Background, None]]], \
Rule[BaselinePosition, Baseline]]]]], RuleDelayed[DynamicModuleValues, \
List[]]], StyleBox[\\\"]\\\", \\\"NonInterpretableSummary\\\"]]]], \
\\\"CopyTag\\\", Rule[DisplayFunction, Function[Slot[1]]], \
Rule[InterpretationFunction, \
Function[\\\"ClassifierFunction[\\\\[Ellipsis]]\\\"]]], False, \
Rule[Selectable, False], Rule[Editable, False], Rule[SelectWithContents, \
True]], \\\"[\\\", RowBox[{\\\"2.6`\\\", \\\",\\\", \\\"4.111111`\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"\\\\\\\"Probabilities\\\\\\\"\\\"}], \
\\\"]\\\"}]\\). An option must be a rule or a list of rules.\"",2,6,1,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.72577124522148*^9},ExpressionUUID->"3cd48358-9f6f-4355-a2ce-05551f349ed4"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["ClassifierFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
         DisplayFunction -> (
          ButtonBox[#, Active -> False, Alignment -> Left, 
           Appearance -> {
            "Default" -> 
             FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
           FrameMargins -> 7, BaseStyle -> {}, 
           DefaultBaseStyle -> {"Panel", Background -> None}, 
           BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{"2.6`", ",", "4.111111`", ",", "5", ",", "\<\"Probabilities\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.725771245236023*^9},ExpressionUUID->"0b77ee70-aec9-4726-9d64-\
44231677ff8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"2.6", ",", " ", "4.111111", ",", " ", "5"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.72577127589682*^9, 
  3.725771276136409*^9}},ExpressionUUID->"a078fa04-8c7e-4947-a6fe-\
aa48b8d45f46"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction","nonopt",
   "\"Options expected (instead of \\!\\(\\*RowBox[{\\\"5\\\"}]\\)) beyond \
position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{TagBox[TemplateBox[List[RowBox[List[StyleBox[TagBox[\\\"\
ClassifierFunction\\\", \\\"SummaryHead\\\"], \
\\\"NonInterpretableSummary\\\"], StyleBox[\\\"[\\\", \
\\\"NonInterpretableSummary\\\"], DynamicModuleBox[List[Set[Typeset`open$$, \
False], Set[Typeset`embedState$$, \\\"Ready\\\"]], \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquarePlusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\
\"Numerical\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \\\"\\\\\\\"A\\\
\\\\\"\\\", \\\"\\\\\\\"B\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[2]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquareMinusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\
\"Numerical\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \\\"\\\\\\\"A\\\
\\\\\"\\\", \\\"\\\\\\\"B\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Method: \\\\\\\"\
\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\
\"\\\\\\\"NearestNeighbors\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Number of training examples: \
\\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`open$$], \
Rule[ImageSize, Automatic]]], \\\"SummaryPanel\\\", Rule[DisplayFunction, \
Function[ButtonBox[Slot[1], Rule[Active, False], Rule[Alignment, Left], \
Rule[Appearance, List[Rule[\\\"Default\\\", \
FrontEnd`FileName[List[\\\"Typeset\\\", \\\"SummaryBox\\\"], \
\\\"Panel.9.png\\\"]]]], Rule[FrameMargins, 7], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, List[\\\"Panel\\\", Rule[Background, None]]], \
Rule[BaselinePosition, Baseline]]]]], RuleDelayed[DynamicModuleValues, \
List[]]], StyleBox[\\\"]\\\", \\\"NonInterpretableSummary\\\"]]]], \
\\\"CopyTag\\\", Rule[DisplayFunction, Function[Slot[1]]], \
Rule[InterpretationFunction, \
Function[\\\"ClassifierFunction[\\\\[Ellipsis]]\\\"]]], False, \
Rule[Selectable, False], Rule[Editable, False], Rule[SelectWithContents, \
True]], \\\"[\\\", RowBox[{\\\"2.6`\\\", \\\",\\\", \\\"4.111111`\\\", \
\\\",\\\", \\\"5\\\"}], \\\"]\\\"}]\\). An option must be a rule or a list of \
rules.\"",2,7,2,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725771281141878*^9},ExpressionUUID->"18b90c28-dd39-4eaf-858c-\
fb4b8c94713c"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["ClassifierFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
         DisplayFunction -> (
          ButtonBox[#, Active -> False, Alignment -> Left, 
           Appearance -> {
            "Default" -> 
             FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
           FrameMargins -> 7, BaseStyle -> {}, 
           DefaultBaseStyle -> {"Panel", Background -> None}, 
           BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{"2.6`", ",", "4.111111`", ",", "5"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7257712811589255`*^9},ExpressionUUID->"b28aad14-96d1-4967-b35d-\
61cc07ea7305"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.6", ",", " ", "4.111111", ",", " ", "5"}], "}"}], ",", " ", 
   "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257713043990235`*^9, 
  3.7257713100075817`*^9}},ExpressionUUID->"fee673b1-b273-440b-98a8-\
e46b6f8ff7bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.8333333333333334`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.16666666666666669`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.16666666666666669`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.8333333333333334`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"A\"\>", "\[Rule]", "0.16666666666666669`"}], ",", 
     RowBox[{"\<\"B\"\>", "\[Rule]", "0.8333333333333334`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257713113727927`*^9},ExpressionUUID->"01d9836f-d892-4fd9-bdbf-\
5f586e52eab1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"c", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"\"\<Probability\>\"", "\[Rule]", "A"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257713320383234`*^9, 
  3.725771369346933*^9}},ExpressionUUID->"499afbd2-6fe9-4c4f-8db2-\
5719ca9887a9"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction","ukwncl",
   "\"Unknown class \\!\\(\\*RowBox[{\\\"A\\\"}]\\).\"",2,9,3,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257713709175444`*^9},ExpressionUUID->"f57a42c9-0d4e-45ca-aa04-\
9d1b8488307c"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction","ukwncl",
   "\"Unknown class \\!\\(\\*RowBox[{\\\"A\\\"}]\\).\"",2,9,4,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725771371010805*^9},ExpressionUUID->"5f7f24cc-d65a-409a-8f44-\
cd5ba4ccfec7"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction","ukwncl",
   "\"Unknown class \\!\\(\\*RowBox[{\\\"A\\\"}]\\).\"",2,9,5,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.72577137119131*^9},ExpressionUUID->"4936033b-49bd-483d-9360-5929df6d51ef"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ClassifierFunction\\\", \
\\\"::\\\", \\\"ukwncl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,9,6,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257713713557663`*^9},ExpressionUUID->"8a967a72-3af4-4ed7-bdc8-\
b3e6d5681e7d"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725771372841406*^9},ExpressionUUID->"7b4374eb-ab08-48e5-99e4-\
8436a0c422a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"c", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<A\>\""}]}], "]"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257713953447623`*^9, 
  3.7257713964051733`*^9}},ExpressionUUID->"cf411184-cfe2-472f-af44-\
2ce1d7f8eb09"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFz11IkwEUBuBP50/pKmc3xVI3GS7nTwoFdZHbVOhnJlZOY1K5T90gbbrR
SJxmiLG8sFZImVJDwWKJC0GxkS5Rx2q5lQpSbNpwrmgpWeszZ9bKC8954XB4
7t6XTVafqQglCEL4/zb/w2tkRGa5Jqv36WZ8/EjnAnc5wcDfcpdNr/yaYAIb
n7U4q9JtYDl/6sGSagas8CZ7BowfwFHsZu7Hw27wrZg3vK5SD5h0Fr6kTX4C
Ky3NZDXXB+6voZ/dc2IZ+2gqfRnFK+Am/cbpn0vfwcSMWzBc5wcnXZHVFvIo
8CJ1vyh6ZBV80nup4a5yDZy/qEuJj18H+8bJ66/6foPTGbNxORf/4D4+JXX5
/4KPLUt+JYoJwZbfj5WHSFJDwIM3Jy6wKLQsXO12OELBZSrNIL2DBj4gT3Hk
ScPAweHepVI7+m1sarT6SDjYZhJ+W6hEW0qLZwoeobMPkhbtEHo08vKQ+R26
UanKkMyhs5xXDdQXdJxuvSJnBb2R25B4ZxVdpTcTzwNoVyA4P7+BzisUjoQT
EYIi8WYs/BfGps5UGpp5blZdX4PWhPAKJufQUa6644qBSLD3MbtNX78N3LZ/
b5hJvB2s65BZpawosKTtvIP+Gb2W2xPQm6PBHm927ZiWDu4+msm0S3eA+26o
GfK0nWCtuExEo9CHXF0GrX0XuD25s88uigE3jra2i0zoU0xxj43DAAsV1hJG
C1q/j+RMUmjO+JN7+SWxuC9tjDdtRsv8YVOvebvBZP8PVstttG6a3jphRZv9
SYFgEP0Pq8cEMQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$10065#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.16666666666666669`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {0.16666666666666669`, 0.8333333333333334}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725771399890938*^9},ExpressionUUID->"a5c938d7-0c69-48d2-9d4d-\
79889e440ae1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"trainingset", ",", " ", "2.6"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257714770645676`*^9, 
  3.7257714894918823`*^9}},ExpressionUUID->"6b1a3476-e706-42ff-bbe5-\
7fa58717f006"],

Cell[BoxData["\<\"A\"\>"], "Output",
 CellChangeTimes->{
  3.725771494017494*^9},ExpressionUUID->"5bb7cb4b-d08f-4ebb-aa42-\
3d667643fdf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"trainingset", ",", " ", "2.6", ",", " ", "\"\<Probabilities\>\""}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7257714770645676`*^9, 3.7257714894918823`*^9}, {
  3.7257715606012363`*^9, 
  3.725771579071705*^9}},ExpressionUUID->"6a924de1-50a9-4082-96cc-\
37f6dec4aa86"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"A\"\>", "\[Rule]", "0.036449628878033824`"}], ",", 
   RowBox[{"\<\"B\"\>", "\[Rule]", "0.9635503711219662`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7257715935949073`*^9},ExpressionUUID->"d282bf22-f281-40d7-809c-\
003c1756c5dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"trainingset", ",", " ", "2.6"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257714770645676`*^9, 3.7257714894918823`*^9}, {
  3.7257715606012363`*^9, 3.725771579071705*^9}, {3.725771623908842*^9, 
  3.725771631604543*^9}},ExpressionUUID->"311a58b5-d052-48a9-99f6-\
e57ad5bce488"],

Cell[BoxData["\<\"B\"\>"], "Output",
 CellChangeTimes->{
  3.7257716340314074`*^9},ExpressionUUID->"ddc50ea6-6942-4050-9edf-\
05dd66c6c327"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"c", " ", "=", " ", 
    RowBox[{"Classify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.5", ",", " ", "Blue"}], "}"}], "\[Rule]", "\"\<A\>\""}], 
      ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.2", ",", " ", "Blue"}], "}"}], "\[Rule]", "\"\<A\>\""}], 
      ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.1", ",", " ", "Red"}], "}"}], "\[Rule]", "\"\<B\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.3", ",", " ", "Red"}], "}"}], "\[Rule]", "\"\<B\>\""}], 
      ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10.", ",", "Green"}], "}"}], "\[Rule]", "\"\<C\>\""}], ",", 
      " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12.4", ",", " ", "Red"}], "}"}], " ", "\[Rule]", 
       "\"\<C\>\""}]}]}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257716478568516`*^9, 3.72577178338951*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"316deaad-1a87-4ebb-afcf-258dbf54b244"],

Cell[BoxData[
 TemplateBox[{
  "Syntax","bktmcp",
   "\"Expression \\\"\\!\\(\\*RowBox[{\\\"Classify\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.5\\\", \\\",\\\", \\\"Blue\\\
\"}], \\\"}\\\"}], \\\"\[Rule]\\\", \\\"\\\\\\\"A\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"3.2\\\", \\\",\\\", \\\"Blue\\\"}], \\\
\"}\\\"}], \\\"\[Rule]\\\", \\\"\\\\\\\"A\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"4.1\\\", \\\",\\\", \\\"Red\\\"}], \
\\\"}\\\"}], \\\"\[Rule]\\\", \\\"\\\\\\\"B\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"5.3\\\", \\\",\\\", \\\"Red\\\"}], \
\\\"}\\\"}], \\\"\[Rule]\\\", \\\"\\\\\\\"B\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"10.\\\", \\\",\\\", \\\"Green\\\"}], \
\\\"}\\\"}], \\\"\[Rule]\\\", \\\"\\\\\\\"C\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"12.4\\\", \\\",\\\", \\\"Red\\\"}], \\\
\"}\\\"}], \\\"\[Rule]\\\", \\\"\\\\\\\"C\\\\\\\"\\\"}]}]}]\\)\\\" has no \
closing \\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"]\\\\\\\"\\\"}]\\)\\\"\\!\\(\\*\
RowBox[{\\\"\\\\\\\"\\\\\\\"\\\"}]\\).\"",2,14,8,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257718026375666`*^9},ExpressionUUID->"8ec58a9b-d36b-4a92-a788-\
c5c8550c7d6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.5", ",", " ", "Blue"}], "}"}], "\[Rule]", "\"\<A\>\""}], 
     ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3.2", ",", " ", "Blue"}], "}"}], "\[Rule]", "\"\<A\>\""}], 
     ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4.1", ",", " ", "Red"}], "}"}], "\[Rule]", "\"\<B\>\""}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5.3", ",", " ", "Red"}], "}"}], "\[Rule]", "\"\<B\>\""}], ",",
      " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10.", ",", "Green"}], "}"}], "\[Rule]", "\"\<C\>\""}], ",", 
     " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"12.4", ",", " ", "Red"}], "}"}], " ", "\[Rule]", 
      "\"\<C\>\""}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257716478568516`*^9, 
  3.7257718254846177`*^9}},ExpressionUUID->"7765d299-c76f-471e-9967-\
093baa2fb932"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Color\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\"", "\"C\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Color\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\"", "\"C\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257718323942833`*^9},ExpressionUUID->"f85a0102-6845-4875-96e6-\
ca7910a6f12f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", 
   RowBox[{"10.1", ",", " ", "Blue"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.725771838710018*^9, 
  3.7257718540226593`*^9}},ExpressionUUID->"4c80434b-fc51-428a-a8d8-\
c720079cdcfe"],

Cell[BoxData["\<\"C\"\>"], "Output",
 CellChangeTimes->{
  3.7257718556895266`*^9},ExpressionUUID->"3de98325-a70e-462f-a333-\
77c713d5f296"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", 
   RowBox[{"10.1", ",", " ", 
    RowBox[{"Missing", "[", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.725771974176979*^9, 
  3.7257719866672063`*^9}},ExpressionUUID->"a1bb5af8-3b84-44f9-be15-\
65f8173e743f"],

Cell[BoxData["\<\"C\"\>"], "Output",
 CellChangeTimes->{
  3.725771988371553*^9},ExpressionUUID->"2a875a1d-e43d-412c-bfff-\
5e81f201d53f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10.1", ",", " ", "Blue"}], "}"}], ",", " ", 
   "\"\<TopProbabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257720334638104`*^9, 
  3.725772051715931*^9}},ExpressionUUID->"702ecc5b-92c0-4b8b-b562-\
78727881d166"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"C\"\>", "\[Rule]", "0.6000000000000001`"}], ",", 
   RowBox[{"\<\"B\"\>", "\[Rule]", "0.19999999999999998`"}], ",", 
   RowBox[{"\<\"A\"\>", "\[Rule]", "0.19999999999999998`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7257720561505966`*^9},ExpressionUUID->"ae322969-9721-4b2b-8d56-\
018b80664281"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<the cat is grey\>\"", " ", "->", " ", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
2ARKKAYPHqyIekLXQNe26xowmUHaQK7V80vZvXu36wsVmVOKaqxnPXUWvPyB
2QBYoxF5yrBKRlYFBQVGM9Ex6G3m5ubyM2satkNGSprLiR9pAyFmmnPcZULa
okWLFFFMULohXbL8y3fjWf3W60dYDc+ePesixU8dtLW1YWy03VXGnSVKtjFq
LKcP8XJvPsI/dObMGaOZ6Bg1NTWyv10mSrGc6ikJiYiIqKysbGxsrK+vz87O
hkpqJsNQ2q66fMywadMmOVjTnYid+eGZe2Sali5dynNr0SgtLdVwS9SRH1Rd
nqugoCDrkb6uMcY+jqupISEhb9++xQ9hOjomT86ePRsn8Azt1NRU1ZW4st6P
paKioguctAu5sBQiSkLV0NCAn5NJMRGyfft2zeXR0dGqZV0dT2hsNo1fR/IV
GhpqL64ACCe4ysnJ4SKGZtOqvXv3YjISr3SmS5qbm1WxGoXP1+x55QRgDYuc
rUdib0eWqLO8AQUxMH78+Pfv36uWU3B5kQV5PXktIodz585JKcKEZ6PkSu5J
kpWVpVmObS/GFJO5O3/+vGppf3iaNz3A3bt3raeSzp07F2fSa+W9xVTLLeyc
A7mTW35+vnV0bRfQbSmIQtGAjY91VYrsfGBgICsgQPp78eJFuSBFNa/LcL7N
xxwPzKdyBFgHq6ur8Yu8PIc7yzp16NAhxTzRncfURo8e3dLSwoODmoVRTsMX
ExITE9EdaB/yWTuCuhweHq5ardNhi837UbS2to4ZMwZXQcJ7mzB//nwpkIYk
PnV1dWFhYXg2Hn+3L0uK6RVQZscr+7DeVrWa6ALGSkpKUAXSWIOYmBhNbNN9
xtgE8fx81WobQAK9QYqKuTIsn41TXblqTzEXTDoLvpZ+KyAgYOLEiVFRUQcO
HMBjyAfjJ09OTuanUoRriIuL432xVDupYbuEs6hTXkyPOnLkSMmA8pOSC89v
VOxUZ4CYUb6zceNGHj5mQw0SyDQtXrxYblLE3vnIkSM6fewaS3KbI3YiZCHJ
2ZFB0Czz5EeSs4h9fX3l2qtu6qYmcVZME4nlo6rmfAd0URI0c+ZMxWxC+cEo
kidNseNeKLgJfhq3vX37dnx8PK9rUCyVjstudHDRokXHjx9/8uSJagq9Hjx4
QEdk4N1ZijRHeJkA3ZOeUzMpjmMtAr3i2NhYrtigkrZ27VqWve6zxL+O2VOX
Ll3CYiL8KH22mw6TsFHYwDN7NV3IyMiYNWvWjBkzwjuPf5jA7WnTptHn9OnT
KVNuamqCZ2TTah0PUOKD9WJgGLMfecl890HM092eP38eGRkJKmAxNCMyCBET
EhIo8mEnJQUbEQV/7ULsxwvlrAHBkKG4BG+5oJrcUGFhYVJS0oULF2QfuxmL
cuzx9OlTf39/ja2QBnbq1Klk4V+9eiX9ppyiJonq/p6BvEjceosqPoKHl3sR
yI1iePM0O04oQn8papKGmvcDpPbSpUuvXLkiNwHQrETWtLu/baAM0TVfWYzl
za13S9acb6/9HumHiArJEn9SYFNbW8uP4To1NEMA2rds2aIJacie5+TkqKYX
5PwM3TUBE01apliOYx48eBAncHbgFpNPHA0igXSN/R2BzDjUDa6WHe4vroPA
woULvb29WQeXLFmiY11/WcCDHD16VBEDKMHBwapYayBL679B2THF2HJrO4rJ
VbOxIrpcbc6zUQAhDx8+DAwM5OlAJGMVFRWqZeXH9edhOhqcHTx+/BipOgTM
19e3vLycw6rffhBWiP+rC1LGvLy8oKAgaGJAQAARyAr422SpZplhFSPGysrK
Nm/enJaWVldXJ8/5lUEqxv6O4nOeLaCaqPtt0jWQqbpqNuOyxKHa9v9neTxk
cYA1EXYJX0GafSsbbgouVsjSkyoiKwOfzSj8F7aTAW0=
         "], {{0, 95}, {100, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{32.14375000000152, Automatic},
       ImageSizeRaw->{100, 95},
       PlotRange->{{0, 100}, {0, 95}}]}], ",", " ", 
     RowBox[{"\"\<my cat is fast\>\"", " ", "->", " ", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
2ARKKAYPHqyIekLXQNe26xowmUHaQK7V80vZvXu36wsVmVOKaqxnPXUWvPyB
2QBYoxF5yrBKRlYFBQVGM9Ex6G3m5ubyM2satkNGSprLiR9pAyFmmnPcZULa
okWLFFFMULohXbL8y3fjWf3W60dYDc+ePesixU8dtLW1YWy03VXGnSVKtjFq
LKcP8XJvPsI/dObMGaOZ6Bg1NTWyv10mSrGc6ikJiYiIqKysbGxsrK+vz87O
hkpqJsNQ2q66fMywadMmOVjTnYid+eGZe2Sali5dynNr0SgtLdVwS9SRH1Rd
nqugoCDrkb6uMcY+jqupISEhb9++xQ9hOjomT86ePRsn8Azt1NRU1ZW4st6P
paKioguctAu5sBQiSkLV0NCAn5NJMRGyfft2zeXR0dGqZV0dT2hsNo1fR/IV
GhpqL64ACCe4ysnJ4SKGZtOqvXv3YjISr3SmS5qbm1WxGoXP1+x55QRgDYuc
rUdib0eWqLO8AQUxMH78+Pfv36uWU3B5kQV5PXktIodz585JKcKEZ6PkSu5J
kpWVpVmObS/GFJO5O3/+vGppf3iaNz3A3bt3raeSzp07F2fSa+W9xVTLLeyc
A7mTW35+vnV0bRfQbSmIQtGAjY91VYrsfGBgICsgQPp78eJFuSBFNa/LcL7N
xxwPzKdyBFgHq6ur8Yu8PIc7yzp16NAhxTzRncfURo8e3dLSwoODmoVRTsMX
ExITE9EdaB/yWTuCuhweHq5ardNhi837UbS2to4ZMwZXQcJ7mzB//nwpkIYk
PnV1dWFhYXg2Hn+3L0uK6RVQZscr+7DeVrWa6ALGSkpKUAXSWIOYmBhNbNN9
xtgE8fx81WobQAK9QYqKuTIsn41TXblqTzEXTDoLvpZ+KyAgYOLEiVFRUQcO
HMBjyAfjJ09OTuanUoRriIuL432xVDupYbuEs6hTXkyPOnLkSMmA8pOSC89v
VOxUZ4CYUb6zceNGHj5mQw0SyDQtXrxYblLE3vnIkSM6fewaS3KbI3YiZCHJ
2ZFB0Czz5EeSs4h9fX3l2qtu6qYmcVZME4nlo6rmfAd0URI0c+ZMxWxC+cEo
kidNseNeKLgJfhq3vX37dnx8PK9rUCyVjstudHDRokXHjx9/8uSJagq9Hjx4
QEdk4N1ZijRHeJkA3ZOeUzMpjmMtAr3i2NhYrtigkrZ27VqWve6zxL+O2VOX
Ll3CYiL8KH22mw6TsFHYwDN7NV3IyMiYNWvWjBkzwjuPf5jA7WnTptHn9OnT
KVNuamqCZ2TTah0PUOKD9WJgGLMfecl890HM092eP38eGRkJKmAxNCMyCBET
EhIo8mEnJQUbEQV/7ULsxwvlrAHBkKG4BG+5oJrcUGFhYVJS0oULF2QfuxmL
cuzx9OlTf39/ja2QBnbq1Klk4V+9eiX9ppyiJonq/p6BvEjceosqPoKHl3sR
yI1iePM0O04oQn8papKGmvcDpPbSpUuvXLkiNwHQrETWtLu/baAM0TVfWYzl
za13S9acb6/9HumHiArJEn9SYFNbW8uP4To1NEMA2rds2aIJacie5+TkqKYX
5PwM3TUBE01apliOYx48eBAncHbgFpNPHA0igXSN/R2BzDjUDa6WHe4vroPA
woULvb29WQeXLFmiY11/WcCDHD16VBEDKMHBwapYayBL679B2THF2HJrO4rJ
VbOxIrpcbc6zUQAhDx8+DAwM5OlAJGMVFRWqZeXH9edhOhqcHTx+/BipOgTM
19e3vLycw6rffhBWiP+rC1LGvLy8oKAgaGJAQAARyAr422SpZplhFSPGysrK
Nm/enJaWVldXJ8/5lUEqxv6O4nOeLaCaqPtt0jWQqbpqNuOyxKHa9v9neTxk
cYA1EXYJX0GafSsbbgouVsjSkyoiKwOfzSj8F7aTAW0=
         "], {{0, 95}, {100, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->{32.14375000000152, Automatic},
       ImageSizeRaw->{100, 95},
       PlotRange->{{0, 100}, {0, 95}}]}], ",", " ", 
     RowBox[{"\"\<this dog is scary\>\"", " ", "->", " ", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
         "], {{0, 100}, {100, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSize->{30.109375000000554`, Automatic},
       ImageSizeRaw->{100, 100},
       PlotRange->{{0, 100}, {0, 100}}]}], " ", ",", " ", 
     RowBox[{"\"\<the big dog\>\"", " ", "->", " ", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
         "], {{0, 100}, {100, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSize->{30.109375000000554`, Automatic},
       ImageSizeRaw->{100, 100},
       PlotRange->{{0, 100}, {0, 100}}]}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725772165189334*^9, 
  3.7257721652339573`*^9}},ExpressionUUID->"68945cc4-5e14-4c65-9fed-\
52226fbfcdd2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
2ARKKAYPHqyIekLXQNe26xowmUHaQK7V80vZvXu36wsVmVOKaqxnPXUWvPyB
2QBYoxF5yrBKRlYFBQVGM9Ex6G3m5ubyM2satkNGSprLiR9pAyFmmnPcZULa
okWLFFFMULohXbL8y3fjWf3W60dYDc+ePesixU8dtLW1YWy03VXGnSVKtjFq
LKcP8XJvPsI/dObMGaOZ6Bg1NTWyv10mSrGc6ikJiYiIqKysbGxsrK+vz87O
hkpqJsNQ2q66fMywadMmOVjTnYid+eGZe2Sali5dynNr0SgtLdVwS9SRH1Rd
nqugoCDrkb6uMcY+jqupISEhb9++xQ9hOjomT86ePRsn8Azt1NRU1ZW4st6P
paKioguctAu5sBQiSkLV0NCAn5NJMRGyfft2zeXR0dGqZV0dT2hsNo1fR/IV
GhpqL64ACCe4ysnJ4SKGZtOqvXv3YjISr3SmS5qbm1WxGoXP1+x55QRgDYuc
rUdib0eWqLO8AQUxMH78+Pfv36uWU3B5kQV5PXktIodz585JKcKEZ6PkSu5J
kpWVpVmObS/GFJO5O3/+vGppf3iaNz3A3bt3raeSzp07F2fSa+W9xVTLLeyc
A7mTW35+vnV0bRfQbSmIQtGAjY91VYrsfGBgICsgQPp78eJFuSBFNa/LcL7N
xxwPzKdyBFgHq6ur8Yu8PIc7yzp16NAhxTzRncfURo8e3dLSwoODmoVRTsMX
ExITE9EdaB/yWTuCuhweHq5ardNhi837UbS2to4ZMwZXQcJ7mzB//nwpkIYk
PnV1dWFhYXg2Hn+3L0uK6RVQZscr+7DeVrWa6ALGSkpKUAXSWIOYmBhNbNN9
xtgE8fx81WobQAK9QYqKuTIsn41TXblqTzEXTDoLvpZ+KyAgYOLEiVFRUQcO
HMBjyAfjJ09OTuanUoRriIuL432xVDupYbuEs6hTXkyPOnLkSMmA8pOSC89v
VOxUZ4CYUb6zceNGHj5mQw0SyDQtXrxYblLE3vnIkSM6fewaS3KbI3YiZCHJ
2ZFB0Czz5EeSs4h9fX3l2qtu6qYmcVZME4nlo6rmfAd0URI0c+ZMxWxC+cEo
kidNseNeKLgJfhq3vX37dnx8PK9rUCyVjstudHDRokXHjx9/8uSJagq9Hjx4
QEdk4N1ZijRHeJkA3ZOeUzMpjmMtAr3i2NhYrtigkrZ27VqWve6zxL+O2VOX
Ll3CYiL8KH22mw6TsFHYwDN7NV3IyMiYNWvWjBkzwjuPf5jA7WnTptHn9OnT
KVNuamqCZ2TTah0PUOKD9WJgGLMfecl890HM092eP38eGRkJKmAxNCMyCBET
EhIo8mEnJQUbEQV/7ULsxwvlrAHBkKG4BG+5oJrcUGFhYVJS0oULF2QfuxmL
cuzx9OlTf39/ja2QBnbq1Klk4V+9eiX9ppyiJonq/p6BvEjceosqPoKHl3sR
yI1iePM0O04oQn8papKGmvcDpPbSpUuvXLkiNwHQrETWtLu/baAM0TVfWYzl
za13S9acb6/9HumHiArJEn9SYFNbW8uP4To1NEMA2rds2aIJacie5+TkqKYX
5PwM3TUBE01apliOYx48eBAncHbgFpNPHA0igXSN/R2BzDjUDa6WHe4vroPA
woULvb29WQeXLFmiY11/WcCDHD16VBEDKMHBwapYayBL679B2THF2HJrO4rJ
VbOxIrpcbc6zUQAhDx8+DAwM5OlAJGMVFRWqZeXH9edhOhqcHTx+/BipOgTM
19e3vLycw6rffhBWiP+rC1LGvLy8oKAgaGJAQAARyAr422SpZplhFSPGysrK
Nm/enJaWVldXJ8/5lUEqxv6O4nOeLaCaqPtt0jWQqbpqNuOyxKHa9v9neTxk
cYA1EXYJX0GafSsbbgouVsjSkyoiKwOfzSj8F7aTAW0=
                    "], {{0, 95}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {100, 95}, 
                    PlotRange -> {{0, 100}, {0, 95}}, 
                    ImageSize -> {32.14375000000152, Automatic}], 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
                    "], {{0, 100}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {100, 100}, 
                    PlotRange -> {{0, 100}, {0, 100}}, 
                    ImageSize -> {30.109375000000554`, Automatic}]}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
2ARKKAYPHqyIekLXQNe26xowmUHaQK7V80vZvXu36wsVmVOKaqxnPXUWvPyB
2QBYoxF5yrBKRlYFBQVGM9Ex6G3m5ubyM2satkNGSprLiR9pAyFmmnPcZULa
okWLFFFMULohXbL8y3fjWf3W60dYDc+ePesixU8dtLW1YWy03VXGnSVKtjFq
LKcP8XJvPsI/dObMGaOZ6Bg1NTWyv10mSrGc6ikJiYiIqKysbGxsrK+vz87O
hkpqJsNQ2q66fMywadMmOVjTnYid+eGZe2Sali5dynNr0SgtLdVwS9SRH1Rd
nqugoCDrkb6uMcY+jqupISEhb9++xQ9hOjomT86ePRsn8Azt1NRU1ZW4st6P
paKioguctAu5sBQiSkLV0NCAn5NJMRGyfft2zeXR0dGqZV0dT2hsNo1fR/IV
GhpqL64ACCe4ysnJ4SKGZtOqvXv3YjISr3SmS5qbm1WxGoXP1+x55QRgDYuc
rUdib0eWqLO8AQUxMH78+Pfv36uWU3B5kQV5PXktIodz585JKcKEZ6PkSu5J
kpWVpVmObS/GFJO5O3/+vGppf3iaNz3A3bt3raeSzp07F2fSa+W9xVTLLeyc
A7mTW35+vnV0bRfQbSmIQtGAjY91VYrsfGBgICsgQPp78eJFuSBFNa/LcL7N
xxwPzKdyBFgHq6ur8Yu8PIc7yzp16NAhxTzRncfURo8e3dLSwoODmoVRTsMX
ExITE9EdaB/yWTuCuhweHq5ardNhi837UbS2to4ZMwZXQcJ7mzB//nwpkIYk
PnV1dWFhYXg2Hn+3L0uK6RVQZscr+7DeVrWa6ALGSkpKUAXSWIOYmBhNbNN9
xtgE8fx81WobQAK9QYqKuTIsn41TXblqTzEXTDoLvpZ+KyAgYOLEiVFRUQcO
HMBjyAfjJ09OTuanUoRriIuL432xVDupYbuEs6hTXkyPOnLkSMmA8pOSC89v
VOxUZ4CYUb6zceNGHj5mQw0SyDQtXrxYblLE3vnIkSM6fewaS3KbI3YiZCHJ
2ZFB0Czz5EeSs4h9fX3l2qtu6qYmcVZME4nlo6rmfAd0URI0c+ZMxWxC+cEo
kidNseNeKLgJfhq3vX37dnx8PK9rUCyVjstudHDRokXHjx9/8uSJagq9Hjx4
QEdk4N1ZijRHeJkA3ZOeUzMpjmMtAr3i2NhYrtigkrZ27VqWve6zxL+O2VOX
Ll3CYiL8KH22mw6TsFHYwDN7NV3IyMiYNWvWjBkzwjuPf5jA7WnTptHn9OnT
KVNuamqCZ2TTah0PUOKD9WJgGLMfecl890HM092eP38eGRkJKmAxNCMyCBET
EhIo8mEnJQUbEQV/7ULsxwvlrAHBkKG4BG+5oJrcUGFhYVJS0oULF2QfuxmL
cuzx9OlTf39/ja2QBnbq1Klk4V+9eiX9ppyiJonq/p6BvEjceosqPoKHl3sR
yI1iePM0O04oQn8papKGmvcDpPbSpUuvXLkiNwHQrETWtLu/baAM0TVfWYzl
za13S9acb6/9HumHiArJEn9SYFNbW8uP4To1NEMA2rds2aIJacie5+TkqKYX
5PwM3TUBE01apliOYx48eBAncHbgFpNPHA0igXSN/R2BzDjUDa6WHe4vroPA
woULvb29WQeXLFmiY11/WcCDHD16VBEDKMHBwapYayBL679B2THF2HJrO4rJ
VbOxIrpcbc6zUQAhDx8+DAwM5OlAJGMVFRWqZeXH9edhOhqcHTx+/BipOgTM
19e3vLycw6rffhBWiP+rC1LGvLy8oKAgaGJAQAARyAr422SpZplhFSPGysrK
Nm/enJaWVldXJ8/5lUEqxv6O4nOeLaCaqPtt0jWQqbpqNuOyxKHa9v9neTxk
cYA1EXYJX0GafSsbbgouVsjSkyoiKwOfzSj8F7aTAW0=
                    "], {{0, 95}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {100, 95}, 
                    PlotRange -> {{0, 100}, {0, 95}}, 
                    ImageSize -> {32.14375000000152, Automatic}], 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
                    "], {{0, 100}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {100, 100}, 
                    PlotRange -> {{0, 100}, {0, 100}}, 
                    ImageSize -> {30.109375000000554`, Automatic}]}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Markov\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725772167756154*^9},ExpressionUUID->"8217f4de-ca02-4295-ad8d-\
054bc588a656"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"classify", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"Red", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAp7dvjq1fvWFC95KGSiAJZANFsKpEBq8ePphVlJ2hrZCuJY+M
gCJAcaAsLo1nd27LNdZA04WMgLLndm3DqhGPLmQEVInmVPw2otmO7HigX4jU
CEFA9fBQxQwc/AioHhLywCggSSMEAXUB9a7v7yJDL1AXUC8wAZChF6gLqBeY
csjQC9RFoX8pCWdK4pfCdEVJeiY+H2HVSGH+hQNIuQFMOcAEACSJLDdIAgCm
J2H2
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->{20., Automatic},
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAl9fvLizfvK912pbiNiAJZANFsKpEBm/vPV6TUtkkZtYkaoqC
xMyA4kBZXBqvbdrbLm+LrgsJAWWvbd6HVSMeXcgIqBLNqfhtRLMd2fEgPxKn
EYKA6uGhiiVw8CMxM0jIA6OANI1gBNQF1Lu3ZSoZeoG6gHqBCYAMvUBdQL3A
lEOGXqAuCv1LSThTEr8UpitK0jMJ+QibRgrzLxxAyg1gygEmACBJZLlBEgAA
Ngx+Qg==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jA9w9v7+5bf2HphJMzGoAkkA0UwaoSGXx6/vBwb9HSEO2lwVoo
KEQbKA6UxaXx4fGdK6KM0XUhIaDso+O7sGrEowsZAVWiORW/jWi2Izse5Efi
NEIQUD08VLEEDn4Uog0JeWAUkKYRjIC6gHovLO0nQy9QF1AvMAGQoReoC2zv
BLLsnUChfykJZ0ril8J0RUl6Jj4fYdVIYf6FA1i50Q8uN/qJLDdIAgDsa9WQ

           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAt7fvb67fdmrCrEMN3UASyAaKYFWJDD4+fLKnqH6Wtt0sLVsU
pG0HFAfK4tJ4b+f+ecau6LqQEFD23q4DWDXi0YWMgCrRnIrfRjTbkR0P8iNx
GiEIqB4eqlgCBz/StoOEPDAKSNMIRkBdQL2n+meSoReoC6gXmADI0AvUBbJ3
wixy7J0wi0L/UhLOlMQvhemKkvRMQj7CphHuePLyLxxAy43+maByo38mkeUG
SQAArB20Iw==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAt08fbh3de3r94sOLpwJJIBsoglUlMvj48tnemV1z0vznpPqh
oDR/oDhQFpfGe2eOLsgORdeFhICy988ew6oRjy5kBFSJ5lT8NqLZjux4kB+J
0whBQPXwUMUSOPhRmj8k5IFRQJpGMALqAuo9vW4RGXqBuoB6gQmADL1AXSB7
1y8mx971iyn0LyXhTEn8UpiuKEnPxOcjrBopzL9wAC031i0ClRvrFhFZbpAE
ABEFA1E=
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}]}], "}"}]}], ",", " ", 
     RowBox[{"Green", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jA+6/vt13cMevA3O5tfUASyAaKYFWJDJ68e1q/vsmuzdm2zQkZ
AUWA4kBZXBr3Xz/o2u2FpgsZAWUP3DiEVSMeXcgIqBLNqfhtRLMd2fFAvxCp
EYKA6uGhihk4+BFQPSTkgVFAkkYIAuoC6p25fw4ZeoG6gHqBCYAMvUBdQL3A
lEOGXqAuCv1LSThTEr8UpitK0jPx+QirRgrzLxxAyg1gygEmACBJZLlBEgAA
X/24PA==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAx8/v9p/ctHzLlJkrW4AkkA0UwaoSGTx//ah/QXlYoXFogREy
AooAxYGyuDQev7AnpswKTRcyAsqeuLgXq0Y8upARUCWaU/HbiGY7suOBfiFS
IwQB1cNDFTNw8COgekjIA6OAJI0QBNQF1LtsyxQy9AJ1AfUCEwAZeoG6gHqX
k2XvcrC9lPiXknCmJH4pTFeUpGfi8xFWjRTmXziAlBvLwOXGMqLLDZIAAIqa
qgI=
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAux8fNj3cO+Xa4pbz04AkkA0UwaoSGTz68qz8VLfRhgDDDf7I
CCgCFAfK4tK4++lRy81haLqQEVB2z9NjWDXi0YWMgCrRnIrfRjTbkR0P9AuR
GiEIqB4eqpiBgx8B1UNCHhgFJGmEIKAuoN7JVxeToReoC6gXmADI0AvUBdQL
TDlk6AXqotC/lIQzJfFLYbqiJD0Tn4+waqQw/8IBpNwAphxgAgCSRJYbJAEA
XyXj0g==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAu++vt9xbOv1iU8fpfCAJZANFsKpEBo8/36s+mmC5QsBiBT8y
AooAxYGyuDTue7TBYbUkmi5kBJTd/3gjVo14dCEjoEo0p+K3Ec12ZMcD/UKk
RggCqoeHKmbg4EdA9ZCQB0YBSRohCKgLqHf6xUYy9AJ1AfUCEwAZeoG6wPY2
kWVvE4X+pSScKYlfCtMVJemZ+HyEVSOF+RcOYOVGI7jcaCSy3CAJAABd3KHK

           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAm5+v1z5b0Xu3rfpGCZAEsoEiWFUigwff7uddSVXZJ668TwwZ
AUWA4kBZXBq3v9ysc0ABTRcyAsrueLUFq0Y8upARUCWaU/HbiGY7suOBfiFS
IwQB1cNDFTNw8COgekjIA6OAJI0QBNQF1Ntzt5UMvUBdQL3ABECGXqAuoF5g
yiFDL1AXhf6lJJwpiV8K0xUl6Zn4fIRVI4X5Fw4g5QYw5QATAJAkstwgCQAA
i5iqCg==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}]}], "}"}]}], ",", " ", 
     RowBox[{"Blue", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAm9c/V6142tF2u7zkKpAEsoEiWFUig/v3v2akXZSR2CUtjoKA
IkBxoCwujVs2v1BR3IOmCxkBZbdueYFVIx5dyAioEs2p+G1Esx3Z8UC/EKkR
goDq4aGKGTj4EVA9JOSBUUCSRggC6gLq7Wi9TYZeoC6gXmACIEMvUBfI3jay
7G27TaF/KQlnSuKXwnRFSXomPh9h1Uhh/oUDaLnRCi43WoktN0gCADu3ns4=

           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAq4+/Fx95V7/2Rc6Cp0ASyAaKYFWJDO6+/Bkz7RFX0hXORBQE
FAGKA2VxaVx3+qNw+lU0XcgIKLv+zEesGvHoQkZAlWhOxW8jmu3Ijgf6hUiN
EARUDw9VzMDBj4DqISEPjAKSNEIQUBdQb92aF2ToBeoC6gUmADL0AnUB9QJT
Dhl6gboo9C8l4UxJ/FKYrihJz8TnI6waKcy/cAApN4ApB5gAgCSR5QZJAAB0
8fH4
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAu/c/t+58NmPenY7+60ASyAaKYFWJDB4//VrTfNnKda+lCwoC
igDFgbK4NO479NLRZz+aLmQElN1/6CVWjXh0IaN9qNqBjsFvI5rtyI4H+oVI
jRAEVA8PVczAwY+A6iEhD4wCkjRCEFAXUO/0uXfI0AvUBdQLTABk6AXqAuoF
phwy9AJ1UehfSsKZkvilMF1Rkp6Jz0dYNVKYf+EAUm4AUw4wAQBJIssNkgAA
0MPt7w==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAh1ff9y65vaTh7LTcY0ASyAaKYFWJDJ7d/dgddyCQZ0EANwoC
igDFgbK4NB5b/yBcdAmaLmQElD224QFWjXh0ISOgSjSn4rcRzXZkxwP9QqRG
CAKqh4cqZuDgR0D1kJAHRgFJGiEIqAuod3H9WTL0AnUB9QITABl6gbqAeoEp
hwy9QF0U+peScKYkfilMV5SkZxLyETaNFOZfOICUG8CUA0wAQJLIcoMkAADv
4K4E
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jA61ffli283lxzvDBjP5AEsoEiWFUig3t3PiRF7BBimSLIjIKA
IkBxoCwujRvX3JHmnYGmCxkBZTetvYNVIx5dyAioEs2p+G1Esx3Z8UC/EKkR
goDq4aGKGTj4EVA9JOSBUUCSRggC6gLqbao+ToZeoC6gXmACIEMvUBdQLzDl
kKEXqItC/1ISzpTEL4XpipL0THw+wqqRwvwLB5ByA5hygAkASBJZbpAEANyR
WdY=
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}]}], "}"}]}]}], "|>"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725772336055449*^9, 
  3.725772362563814*^9}},ExpressionUUID->"1d38d0ee-04fc-497b-b2f4-\
e132e6cc4bbe"],

Cell[BoxData[
 RowBox[{"classify", "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAp7dvjq1fvWFC95KGSiAJZANFsKpEBq8ePphVlJ2hrZCuJY+M
gCJAcaAsLo1nd27LNdZA04WMgLLndm3DqhGPLmQEVInmVPw2otmO7HigX4jU
CEFA9fBQxQwc/AioHhLywCggSSMEAXUB9a7v7yJDL1AXUC8wAZChF6gLqBeY
csjQC9RFoX8pCWdK4pfCdEVJeiY+H2HVSGH+hQNIuQFMOcAEACSJLDdIAgCm
J2H2
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->{20., Automatic},
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAl9fvLizfvK912pbiNiAJZANFsKpEBm/vPV6TUtkkZtYkaoqC
xMyA4kBZXBqvbdrbLm+LrgsJAWWvbd6HVSMeXcgIqBLNqfhtRLMd2fEgPxKn
EYKA6uGhiiVw8CMxM0jIA6OANI1gBNQF1Lu3ZSoZeoG6gHqBCYAMvUBdQL3A
lEOGXqAuCv1LSThTEr8UpitK0jMJ+QibRgrzLxxAyg1gygEmACBJZLlBEgAA
Ngx+Qg==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jA9w9v7+5bf2HphJMzGoAkkA0UwaoSGXx6/vBwb9HSEO2lwVoo
KEQbKA6UxaXx4fGdK6KM0XUhIaDso+O7sGrEowsZAVWiORW/jWi2Izse5Efi
NEIQUD08VLEEDn4Uog0JeWAUkKYRjIC6gHovLO0nQy9QF1AvMAGQoReoC2zv
BLLsnUChfykJZ0ril8J0RUl6Jj4fYdVIYf6FA1i50Q8uN/qJLDdIAgDsa9WQ

          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAt7fvb67fdmrCrEMN3UASyAaKYFWJDD4+fLKnqH6Wtt0sLVsU
pG0HFAfK4tJ4b+f+ecau6LqQEFD23q4DWDXi0YWMgCrRnIrfRjTbkR0P8iNx
GiEIqB4eqlgCBz/StoOEPDAKSNMIRkBdQL2n+meSoReoC6gXmADI0AvUBbJ3
wixy7J0wi0L/UhLOlMQvhemKkvRMQj7CphHuePLyLxxAy43+maByo38mkeUG
SQAArB20Iw==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAt08fbh3de3r94sOLpwJJIBsoglUlMvj48tnemV1z0vznpPqh
oDR/oDhQFpfGe2eOLsgORdeFhICy988ew6oRjy5kBFSJ5lT8NqLZjux4kB+J
0whBQPXwUMUSOPhRmj8k5IFRQJpGMALqAuo9vW4RGXqBuoB6gQmADL1AXSB7
1y8mx971iyn0LyXhTEn8UpiuKEnPxOcjrBopzL9wAC031i0ClRvrFhFZbpAE
ABEFA1E=
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}]}], "}"}]}], ",", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jA+6/vt13cMevA3O5tfUASyAaKYFWJDJ68e1q/vsmuzdm2zQkZ
AUWA4kBZXBr3Xz/o2u2FpgsZAWUP3DiEVSMeXcgIqBLNqfhtRLMd2fFAvxCp
EYKA6uGhihk4+BFQPSTkgVFAkkYIAuoC6p25fw4ZeoG6gHqBCYAMvUBdQL3A
lEOGXqAuCv1LSThTEr8UpitK0jPx+QirRgrzLxxAyg1gygEmACBJZLlBEgAA
X/24PA==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAx8/v9p/ctHzLlJkrW4AkkA0UwaoSGTx//ah/QXlYoXFogREy
AooAxYGyuDQev7AnpswKTRcyAsqeuLgXq0Y8upARUCWaU/HbiGY7suOBfiFS
IwQB1cNDFTNw8COgekjIA6OAJI0QBNQF1LtsyxQy9AJ1AfUCEwAZeoG6gHqX
k2XvcrC9lPiXknCmJH4pTFeUpGfi8xFWjRTmXziAlBvLwOXGMqLLDZIAAIqa
qgI=
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAux8fNj3cO+Xa4pbz04AkkA0UwaoSGTz68qz8VLfRhgDDDf7I
CCgCFAfK4tK4++lRy81haLqQEVB2z9NjWDXi0YWMgCrRnIrfRjTbkR0P9AuR
GiEIqB4eqpiBgx8B1UNCHhgFJGmEIKAuoN7JVxeToReoC6gXmADI0AvUBdQL
TDlk6AXqotC/lIQzJfFLYbqiJD0Tn4+waqQw/8IBpNwAphxgAgCSRJYbJAEA
XyXj0g==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAu++vt9xbOv1iU8fpfCAJZANFsKpEBo8/36s+mmC5QsBiBT8y
AooAxYGyuDTue7TBYbUkmi5kBJTd/3gjVo14dCEjoEo0p+K3Ec12ZMcD/UKk
RggCqoeHKmbg4EdA9ZCQB0YBSRohCKgLqHf6xUYy9AJ1AfUCEwAZeoG6wPY2
kWVvE4X+pSScKYlfCtMVJemZ+HyEVSOF+RcOYOVGI7jcaCSy3CAJAABd3KHK

          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAm5+v1z5b0Xu3rfpGCZAEsoEiWFUigwff7uddSVXZJ668TwwZ
AUWA4kBZXBq3v9ysc0ABTRcyAsrueLUFq0Y8upARUCWaU/HbiGY7suOBfiFS
IwQB1cNDFTNw8COgekjIA6OAJI0QBNQF1Ntzt5UMvUBdQL3ABECGXqAuoF5g
yiFDL1AXhf6lJJwpiV8K0xUl6Zn4fIRVI4X5Fw4g5QYw5QATAJAkstwgCQAA
i5iqCg==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}]}], "}"}]}], ",", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAm9c/V6142tF2u7zkKpAEsoEiWFUig/v3v2akXZSR2CUtjoKA
IkBxoCwujVs2v1BR3IOmCxkBZbdueYFVIx5dyAioEs2p+G1Esx3Z8UC/EKkR
goDq4aGKGTj4EVA9JOSBUUCSRggC6gLq7Wi9TYZeoC6gXmACIEMvUBfI3jay
7G27TaF/KQlnSuKXwnRFSXomPh9h1Uhh/oUDaLnRCi43WoktN0gCADu3ns4=

          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAq4+/Fx95V7/2Rc6Cp0ASyAaKYFWJDO6+/Bkz7RFX0hXORBQE
FAGKA2VxaVx3+qNw+lU0XcgIKLv+zEesGvHoQkZAlWhOxW8jmu3Ijgf6hUiN
EARUDw9VzMDBj4DqISEPjAKSNEIQUBdQb92aF2ToBeoC6gUmADL0AnUB9QJT
Dhl6gboo9C8l4UxJ/FKYrihJz8TnI6waKcy/cAApN4ApB5gAgCSR5QZJAAB0
8fH4
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAu/c/t+58NmPenY7+60ASyAaKYFWJDB4//VrTfNnKda+lCwoC
igDFgbK4NO479NLRZz+aLmQElN1/6CVWjXh0IaN9qNqBjsFvI5rtyI4H+oVI
jRAEVA8PVczAwY+A6iEhD4wCkjRCEFAXUO/0uXfI0AvUBdQLTABk6AXqAuoF
phwy9AJ1UehfSsKZkvilMF1Rkp6Jz0dYNVKYf+EAUm4AUw4wAQBJIssNkgAA
0MPt7w==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAh1ff9y65vaTh7LTcY0ASyAaKYFWJDJ7d/dgddyCQZ0EANwoC
igDFgbK4NB5b/yBcdAmaLmQElD224QFWjXh0ISOgSjSn4rcRzXZkxwP9QqRG
CAKqh4cqZuDgR0D1kJAHRgFJGiEIqAuod3H9WTL0AnUB9QITABl6gbqAeoEp
hwy9QF0U+peScKYkfilMV5SkZxLyETaNFOZfOICUG8CUA0wAQJLIcoMkAADv
4K4E
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], ",", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jA61ffli283lxzvDBjP5AEsoEiWFUig3t3PiRF7BBimSLIjIKA
IkBxoCwujRvX3JHmnYGmCxkBZTetvYNVIx5dyAioEs2p+G1Esx3Z8UC/EKkR
goDq4aGKGTj4EVA9JOSBUUCSRggC6gLqbao+ToZeoC6gXmACIEMvUBdQLzDl
kKEXqItC/1ISzpTEL4XpipL0THw+wqqRwvwLB5ByA5hygAkASBJZbpAEANyR
WdY=
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSize->20,
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}]}], "}"}]}]}], "\[RightAssociation]"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7257723643126307`*^9},ExpressionUUID->"613bf6bd-5337-48ed-ab3b-\
a26f2e806ef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"Red", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAp7dvjq1fvWFC95KGSiAJZANFsKpEBq8ePphVlJ2hrZCuJY+M
gCJAcaAsLo1nd27LNdZA04WMgLLndm3DqhGPLmQEVInmVPw2otmO7HigX4jU
CEFA9fBQxQwc/AioHhLywCggSSMEAXUB9a7v7yJDL1AXUC8wAZChF6gLqBeY
csjQC9RFoX8pCWdK4pfCdEVJeiY+H2HVSGH+hQNIuQFMOcAEACSJLDdIAgCm
J2H2
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAl9fvLizfvK912pbiNiAJZANFsKpEBm/vPV6TUtkkZtYkaoqC
xMyA4kBZXBqvbdrbLm+LrgsJAWWvbd6HVSMeXcgIqBLNqfhtRLMd2fEgPxKn
EYKA6uGhiiVw8CMxM0jIA6OANI1gBNQF1Lu3ZSoZeoG6gHqBCYAMvUBdQL3A
lEOGXqAuCv1LSThTEr8UpitK0jMJ+QibRgrzLxxAyg1gygEmACBJZLlBEgAA
Ngx+Qg==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jA9w9v7+5bf2HphJMzGoAkkA0UwaoSGXx6/vBwb9HSEO2lwVoo
KEQbKA6UxaXx4fGdK6KM0XUhIaDso+O7sGrEowsZAVWiORW/jWi2Izse5Efi
NEIQUD08VLEEDn4Uog0JeWAUkKYRjIC6gHovLO0nQy9QF1AvMAGQoReoC2zv
BLLsnUChfykJZ0ril8J0RUl6Jj4fYdVIYf6FA1i50Q8uN/qJLDdIAgDsa9WQ

           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAt7fvb67fdmrCrEMN3UASyAaKYFWJDD4+fLKnqH6Wtt0sLVsU
pG0HFAfK4tJ4b+f+ecau6LqQEFD23q4DWDXi0YWMgCrRnIrfRjTbkR0P8iNx
GiEIqB4eqlgCBz/StoOEPDAKSNMIRkBdQL2n+meSoReoC6gXmADI0AvUBbJ3
wixy7J0wi0L/UhLOlMQvhemKkvRMQj7CphHuePLyLxxAy43+maByo38mkeUG
SQAArB20Iw==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAt08fbh3de3r94sOLpwJJIBsoglUlMvj48tnemV1z0vznpPqh
oDR/oDhQFpfGe2eOLsgORdeFhICy988ew6oRjy5kBFSJ5lT8NqLZjux4kB+J
0whBQPXwUMUSOPhRmj8k5IFRQJpGMALqAuo9vW4RGXqBuoB6gQmADL1AXSB7
1y8mx971iyn0LyXhTEn8UpiuKEnPxOcjrBopzL9wAC031i0ClRvrFhFZbpAE
ABEFA1E=
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}]}], "}"}]}], ",", " ", 
     RowBox[{"Green", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jA+6/vt13cMevA3O5tfUASyAaKYFWJDJ68e1q/vsmuzdm2zQkZ
AUWA4kBZXBr3Xz/o2u2FpgsZAWUP3DiEVSMeXcgIqBLNqfhtRLMd2fFAvxCp
EYKA6uGhihk4+BFQPSTkgVFAkkYIAuoC6p25fw4ZeoG6gHqBCYAMvUBdQL3A
lEOGXqAuCv1LSThTEr8UpitK0jPx+QirRgrzLxxAyg1gygEmACBJZLlBEgAA
X/24PA==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAx8/v9p/ctHzLlJkrW4AkkA0UwaoSGTx//ah/QXlYoXFogREy
AooAxYGyuDQev7AnpswKTRcyAsqeuLgXq0Y8upARUCWaU/HbiGY7suOBfiFS
IwQB1cNDFTNw8COgekjIA6OAJI0QBNQF1LtsyxQy9AJ1AfUCEwAZeoG6gHqX
k2XvcrC9lPiXknCmJH4pTFeUpGfi8xFWjRTmXziAlBvLwOXGMqLLDZIAAIqa
qgI=
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAux8fNj3cO+Xa4pbz04AkkA0UwaoSGTz68qz8VLfRhgDDDf7I
CCgCFAfK4tK4++lRy81haLqQEVB2z9NjWDXi0YWMgCrRnIrfRjTbkR0P9AuR
GiEIqB4eqpiBgx8B1UNCHhgFJGmEIKAuoN7JVxeToReoC6gXmADI0AvUBdQL
TDlk6AXqotC/lIQzJfFLYbqiJD0Tn4+waqQw/8IBpNwAphxgAgCSRJYbJAEA
XyXj0g==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAu++vt9xbOv1iU8fpfCAJZANFsKpEBo8/36s+mmC5QsBiBT8y
AooAxYGyuDTue7TBYbUkmi5kBJTd/3gjVo14dCEjoEo0p+K3Ec12ZMcD/UKk
RggCqoeHKmbg4EdA9ZCQB0YBSRohCKgLqHf6xUYy9AJ1AfUCEwAZeoG6wPY2
kWVvE4X+pSScKYlfCtMVJemZ+HyEVSOF+RcOYOVGI7jcaCSy3CAJAABd3KHK

           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAm5+v1z5b0Xu3rfpGCZAEsoEiWFUigwff7uddSVXZJ668TwwZ
AUWA4kBZXBq3v9ysc0ABTRcyAsrueLUFq0Y8upARUCWaU/HbiGY7suOBfiFS
IwQB1cNDFTNw8COgekjIA6OAJI0QBNQF1Ntzt5UMvUBdQL3ABECGXqAuoF5g
yiFDL1AXhf6lJJwpiV8K0xUl6Zn4fIRVI4X5Fw4g5QYw5QATAJAkstwgCQAA
i5iqCg==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}]}], "}"}]}], ",", " ", 
     RowBox[{"Blue", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAm9c/V6142tF2u7zkKpAEsoEiWFUig/v3v2akXZSR2CUtjoKA
IkBxoCwujVs2v1BR3IOmCxkBZbdueYFVIx5dyAioEs2p+G1Esx3Z8UC/EKkR
goDq4aGKGTj4EVA9JOSBUUCSRggC6gLq7Wi9TYZeoC6gXmACIEMvUBfI3jay
7G27TaF/KQlnSuKXwnRFSXomPh9h1Uhh/oUDaLnRCi43WoktN0gCADu3ns4=

           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAq4+/Fx95V7/2Rc6Cp0ASyAaKYFWJDO6+/Bkz7RFX0hXORBQE
FAGKA2VxaVx3+qNw+lU0XcgIKLv+zEesGvHoQkZAlWhOxW8jmu3Ijgf6hUiN
EARUDw9VzMDBj4DqISEPjAKSNEIQUBdQb92aF2ToBeoC6gUmADL0AnUB9QJT
Dhl6gboo9C8l4UxJ/FKYrihJz8TnI6waKcy/cAApN4ApB5gAgCSR5QZJAAB0
8fH4
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAu/c/t+58NmPenY7+60ASyAaKYFWJDB4//VrTfNnKda+lCwoC
igDFgbK4NO479NLRZz+aLmQElN1/6CVWjXh0IaN9qNqBjsFvI5rtyI4H+oVI
jRAEVA8PVczAwY+A6iEhD4wCkjRCEFAXUO/0uXfI0AvUBdQLTABk6AXqAuoF
phwy9AJ1UehfSsKZkvilMF1Rkp6Jz0dYNVKYf+EAUm4AUw4wAQBJIssNkgAA
0MPt7w==
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAh1ff9y65vaTh7LTcY0ASyAaKYFWJDJ7d/dgddyCQZ0EANwoC
igDFgbK4NB5b/yBcdAmaLmQElD224QFWjXh0ISOgSjSn4rcRzXZkxwP9QqRG
CAKqh4cqZuDgR0D1kJAHRgFJGiEIqAuod3H9WTL0AnUB9QITABl6gbqAeoEp
hwy9QF0U+peScKYkfilMV5SkZxLyETaNFOZfOICUG8CUA0wAQJLIcoMkAADv
4K4E
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jA61ffli283lxzvDBjP5AEsoEiWFUig3t3PiRF7BBimSLIjIKA
IkBxoCwujRvX3JHmnYGmCxkBZTetvYNVIx5dyAioEs2p+G1Esx3Z8UC/EKkR
goDq4aGKGTj4EVA9JOSBUUCSRggC6gLqbao+ToZeoC6gXmACIEMvUBdQLzDl
kKEXqItC/1ISzpTEL4XpipL0THw+wqqRwvwLB5ByA5hygAkASBJZbpAEANyR
WdY=
           "], {{0, 20}, {20, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSize->20,
         ImageSizeRaw->{20, 20},
         PlotRange->{{0, 20}, {0, 20}}]}], "}"}]}]}], "|>"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257723739187136`*^9, 
  3.7257723739778776`*^9}},ExpressionUUID->"7091e52e-10cd-4281-8f07-\
a95378a9278f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["15", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257723773815203`*^9},ExpressionUUID->"7e08239e-f4ef-47d1-a7e1-\
82579349d521"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAlw9vL+7duH/xpG3TmoAkkA0UwaoSGbx79mhdd2lrgH6rvx4K
CtAHigNlcWm8fnRXV5g5ui4kBJS9fmw3Vo14dCEjoEo0p+K3Ec12ZMeD/Eic
RggCqoeHKpbAwY8C9CEhD4wC0jSCEVAXUO/+xRPJ0AvUBdQLTABk6AXqAts7
iSx7J1HoX0rCmZL4pTBdUZKeSchH2DRSmH/hAFZuTASXGxOJLDdIAgAZ5bUk

        "], {{0, 20}, {20, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSize->20,
      ImageSizeRaw->{20, 20},
      PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAEikHs/9jAu++vN99bOvVSc+vpAiAJZANFsKpEBo8/36s8lmi6UtBkpQAy
AooAxYGyuDTuebzRZo0Umi5kBJTd+3gTVo14dCEjoEo0p+K3Ec12ZMcD/UKk
RggCqoeHKmbg4EdA9ZCQB0YBSRohCKgLqHfqpSYy9AJ1AfUCEwAZeoG6wPY2
k2VvM4X+pSScKYlfCtMVJemZ+HyEVSOF+RcOYOVGE7jcaCKy3CAJAACM25/X

        "], {{0, 20}, {20, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSize->20,
      ImageSizeRaw->{20, 20},
      PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOM5ApAsUgNgNDgz21
8ZvX2fbv3ubaf/1SYr9sqar9xg0G9gH+/vbNTUz2kyYK2tvY2Ng/uH/fjpGR
0d7IyAhFHFk9sjm0cCepOC4uzj4pKQnspkMHD9q9ePbMTktLy76xocF28yYj
u39//9p9+lBgu36dnt2/P39IZiObg2w+sr209qORoaG9lZWVfVhoqP3JEyds
L14IsGtpZranxF+kspHtBaUPG2tr+2tXQ2niR3r6i1Q2sjspSasDFY+UxDup
aR45vwwGv5DKRnY/MeUqtcqcgWIjux9XOY9cFwwGN1OLjewvZP82NTLaT5wg
AK4HB4M7qcVG9heyf5HbAIPBndRiI/sL2b/I7ZzB4E5qsZH9NZLz70grn0da
/TuS21cjrf08ZPpHNPAjMWl+uPZ/icG4xjeQ2znIbQBk8cE8vjEUMQBtdAU5

        "], {{0, 20}, {20, 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
        Automatic],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->20,
      ImageSizeRaw->{20, 20},
      PlotRange->{{0, 20}, {0, 20}}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Probability\>\"", ",", " ", "Blue"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725772386170785*^9, 
  3.7257723862179174`*^9}},ExpressionUUID->"d9a5157e-da31-42a7-be76-\
a7031cde45b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0823016392419502`*^-6", ",", "8.992801729474327`*^-16", ",", 
   "0.9999790382219111`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.72577238840355*^9},ExpressionUUID->"efc1ce1d-e3b9-4efd-8970-d2a107bfbbf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<butter\>\"", ",", " ", "\"\<sugar\>\"", ",", " ", 
        "\"\<flour\>\""}], "}"}], "->", "\"\<bad\>\""}], ",", "\n", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<flour\>\"", ",", " ", "\"\<butter\>\""}], "}"}], "->", 
      "\"\<good\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<tomato\>\"", ",", " ", "\"\<salt\>\""}], "}"}], "->", 
      "\"\<good\>\""}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725772425082429*^9, 
  3.725772552473591*^9}},ExpressionUUID->"e8a2762c-e8b1-44b8-a6ef-\
040fe61da42f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Markov\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.72577255527013*^9},ExpressionUUID->"95457106-e862-4deb-b08e-2e607c4701a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "\"\<butter\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7257725572345047`*^9, 
  3.7257725628549223`*^9}},ExpressionUUID->"10781f4b-5cb4-4ba6-9899-\
a54a16c11b51"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction","mlincfttp",
   "\"Incompatible variable type \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"NominalSequence\\\\\\\"\\\"}]\\)) and variable \
value (\\!\\(\\*RowBox[{\\\"\\\\\\\"butter\\\\\\\"\\\"}]\\)).\"",2,23,10,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257725651732516`*^9},ExpressionUUID->"3310ebe9-c64e-425c-b286-\
5c5548b08c4d"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["ClassifierFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Markov\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
         DisplayFunction -> (
          ButtonBox[#, Active -> False, Alignment -> Left, 
           Appearance -> {
            "Default" -> 
             FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
           FrameMargins -> 7, BaseStyle -> {}, 
           DefaultBaseStyle -> {"Panel", Background -> None}, 
           BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "\<\"butter\"\>", "]"}]], "Output",
 CellChangeTimes->{
  3.7257725651898594`*^9},ExpressionUUID->"aea1afe3-09b8-42a1-acfd-\
169cf46e4266"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", "\"\<butter\>\"", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257725572345047`*^9, 
  3.725772591183325*^9}},ExpressionUUID->"87f8d70d-5f6d-48a1-83b3-\
8fd40ed126e4"],

Cell[BoxData["\<\"good\"\>"], "Output",
 CellChangeTimes->{
  3.725772592192171*^9},ExpressionUUID->"1521f69e-9fd2-45c8-98dd-\
65ea5bddb090"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<butter\>\"", ",", " ", "\"\<poison\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257725572345047`*^9, 
  3.725772601927955*^9}},ExpressionUUID->"d2880e1a-bb13-4e72-98eb-\
5deaa625fc1f"],

Cell[BoxData["\<\"bad\"\>"], "Output",
 CellChangeTimes->{
  3.725772602553814*^9},ExpressionUUID->"95ace73d-6986-49de-8989-\
f5c1de8d9dee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{
   RowBox[{"{", "\"\<poison\>\"", "}"}], ",", " ", "\"\<Probabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257725572345047`*^9, 
  3.7257726272797394`*^9}},ExpressionUUID->"12a94d00-d097-45b9-8c42-\
30f11dc81ddd"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"bad\"\>", "\[Rule]", "0.46153057300346123`"}], ",", 
   RowBox[{"\<\"good\"\>", "\[Rule]", "0.5384694269965389`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7257726283309917`*^9},ExpressionUUID->"c7d9519d-4b88-451f-9e83-\
e6bfad7d6391"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", "\"\<poison\>\"", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257725572345047`*^9, 
  3.7257726600978975`*^9}},ExpressionUUID->"f13933ec-a238-44ea-87af-\
a62bd2458e37"],

Cell[BoxData["\<\"good\"\>"], "Output",
 CellChangeTimes->{
  3.7257726608238654`*^9},ExpressionUUID->"cbecea75-877a-4bbd-adbc-\
baeb1613fbc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Characters", "[", "\"\<good\>\"", "]"}]], "Input",
 NumberMarks->False,ExpressionUUID->"471005ac-4176-41be-8add-1195da8996cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"g\"\>", ",", "\<\"o\"\>", ",", "\<\"o\"\>", ",", "\<\"d\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.725772681950197*^9},ExpressionUUID->"65334ffc-e5b9-4e3e-b625-\
c391333e6b4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<butter\>\"", ",", " ", "\"\<poison\>\""}], "}"}], ",", " ", 
   "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725772694996646*^9, 
  3.7257726998966856`*^9}},ExpressionUUID->"bd8da2fc-a6de-4bda-94ab-\
7723a530c3fe"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"bad\"\>", "\[Rule]", "0.5242560110351431`"}], ",", 
   RowBox[{"\<\"good\"\>", "\[Rule]", "0.475743988964857`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7257727016915216`*^9},ExpressionUUID->"0f3e9907-8e45-4f4c-8719-\
3851155f90af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", "c", "]"}]], "Input",
 CellChangeTimes->{{3.7257727261977463`*^9, 
  3.725772733534767*^9}},ExpressionUUID->"68d8f77c-c999-4c44-b53a-\
a22bb79d2659"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Input type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "\<\"NominalSequence\"\>"},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Classes\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",","\",\"","\"bad\"","\"good\""},
               "RowWithSeparators"]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"Markov\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 3, "InitialType" -> 
                    TypeSystem`Struct[{
                    "Order", "AdditiveSmoothing", "MinimumTokenCount"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Integer]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"Order"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "AdditiveSmoothing"} -> 
                    TypeSystem`PackageScope`AtomShape[60], {
                    "MinimumTokenCount"} -> 
                    TypeSystem`PackageScope`AtomShape[34]], 1], "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[776060899], "Type" -> 
                    TypeSystem`Struct[{
                    "Order", "AdditiveSmoothing", "MinimumTokenCount"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Integer]}], "HandleQ" -> True, 
                    "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[776060899]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Order\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Order\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1861050987][{
                    Key["Order"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1861050987][
                    GeneralUtilities`Slice[
                    Key["Order"]]], "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1861050987][
                    GeneralUtilities`Slice[
                    Key["Order"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"AdditiveSmoothing\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"AdditiveSmoothing\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1861050987][{
                    Key["AdditiveSmoothing"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1861050987][
                    GeneralUtilities`Slice[
                    Key["AdditiveSmoothing"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0.1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1861050987][
                    GeneralUtilities`Slice[
                    Key["AdditiveSmoothing"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MinimumTokenCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MinimumTokenCount\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1861050987][{
                    Key["MinimumTokenCount"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1861050987][
                    GeneralUtilities`Slice[
                    Key["MinimumTokenCount"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1861050987][
                    GeneralUtilities`Slice[
                    Key["MinimumTokenCount"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1861050987][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1861050987]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1861050987][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1861050987][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 "Order" -> 0, "AdditiveSmoothing" -> 0.1, 
                  "MinimumTokenCount" -> 0], 
                 
                 TypeSystem`Struct[{
                  "Order", "AdditiveSmoothing", "MinimumTokenCount"}, {
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer]}], 
                 Association["ID" -> 214009758674622]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Accuracy\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                TemplateBox[{
                 TemplateBox[{"100.`3.", "\"%\"", "percent", "\"Percent\""}, 
                   "QuantityPostfix", SyntaxForm -> Mod],StyleBox[
                   
                   TemplateBox[{"\" \[PlusMinus] \"", "Indeterminate"}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{"\"95% confidence interval: [\"", 
                  RowBox[{"-", "2.3158417847463239085`3.*^77"}], "\", \"", 
                  "2.3158417847463239085`3.*^77", "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", \
-2.3158417847463239085`3.*^77, ", ", 2.3158417847463239085`3.*^77, "]"}], 
                "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.2413568253351206783`3.",StyleBox[
                   
                   TemplateBox[{"\" \[PlusMinus] \"", "Indeterminate"}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{"\"95% confidence interval: [\"", 
                  RowBox[{"-", "2.3158417847463239085`3.*^77"}], "\", \"", 
                  "2.3158417847463239085`3.*^77", "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", \
-2.3158417847463239085`3.*^77, ", ", 2.3158417847463239085`3.*^77, "]"}], 
                "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "1.07`",
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}],"milliseconds per example",FractionBox[
                "\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Classifier memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"117.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"3","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"884.`","\"ms\"","milliseconds","\"Milliseconds\""},
               "Quantity"]}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{5, 5}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.7257727348872304`*^9},ExpressionUUID->"fe790a41-9175-4420-a0aa-\
252379d3933c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", " ", "=", " ", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"c", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1.4", "\[Rule]", "\"\<A\>\""}], ",", 
      RowBox[{"5.3", "\[Rule]", "\"\<B\>\""}], ",", 
      RowBox[{"1.2", "\[Rule]", "\"\<B\>\""}], ",", 
      RowBox[{"4.6", "\[Rule]", "\"\<B\>\""}], ",", 
      RowBox[{
       RowBox[{"-", "3"}], "\[Rule]", "\"\<A\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.72577281178806*^9, 
  3.7257728822106094`*^9}},ExpressionUUID->"8406772e-a927-4493-99fc-\
d7f44494ae0e"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierMeasurements","mlincfttp",
   "\"Incompatible variable type \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"Nominal\\\\\\\"\\\"}]\\)) and variable value \
(\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"A\\\\\\\"\\\", \\\",\\\", \\\
\"\\\\\\\"B\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"B\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"B\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"A\\\\\\\"\\\"}], \
\\\"}\\\"}]\\)).\"",2,31,11,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725772885561239*^9},ExpressionUUID->"53cf6468-ab01-4839-9458-\
0a536f10e951"],

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["ClassifierFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Markov\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1.4`", "\[Rule]", "\<\"A\"\>"}], ",", 
     RowBox[{"5.3`", "\[Rule]", "\<\"B\"\>"}], ",", 
     RowBox[{"1.2`", "\[Rule]", "\<\"B\"\>"}], ",", 
     RowBox[{"4.6`", "\[Rule]", "\<\"B\"\>"}], ",", 
     RowBox[{
      RowBox[{"-", "3"}], "\[Rule]", "\<\"A\"\>"}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7257728855782237`*^9},ExpressionUUID->"ed60fcbd-a984-419c-a400-\
c2311c74f273"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3.5", ",", "4", ",", "5"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<A\>\"", ",", "\"\<A\>\"", ",", "\"\<A\>\"", ",", "\"\<B\>\"", ",", 
      "\"\<B\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725772919182195*^9, 
  3.725772919232337*^9}},ExpressionUUID->"2a0f77e2-37a3-4532-8fe9-\
b58f7fe199ae"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257729222751226`*^9},ExpressionUUID->"f85953ac-b75c-49ac-82d5-\
f7521f222f7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", " ", "=", " ", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"c", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1.4", "\[Rule]", "\"\<A\>\""}], ",", 
      RowBox[{"5.3", "\[Rule]", "\"\<B\>\""}], ",", 
      RowBox[{"1.2", "\[Rule]", "\"\<B\>\""}], ",", 
      RowBox[{"4.6", "\[Rule]", "\"\<B\>\""}], ",", 
      RowBox[{
       RowBox[{"-", "3"}], "\[Rule]", "\"\<A\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",ExpressionUUID->"b00dcfac-f1a6-4af6-bbff-7bcb76a91a0b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[
                
                RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                 0.4746151541446917}, {0.7191592194171378, 0.5062062867304069,
                  0.8158644505878024}, {0.47333333333333333`, 
                 0.7727052229508918, 
                 0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                ImagePadding -> 0.2, 
                PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                PlotRangePadding -> Automatic, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[
                
                RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                 0.4746151541446917}, {0.7191592194171378, 0.5062062867304069,
                  0.8158644505878024}, {0.47333333333333333`, 
                 0.7727052229508918, 
                 0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                ImagePadding -> 0.2, 
                PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                PlotRangePadding -> Automatic, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "0.8000000000000000444`2.38629436111989", "\[PlusMinus]", 
                    "0.2000000000000001776`2."}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.72577292813577*^9},ExpressionUUID->"fca4143d-8bd5-4ed3-8ac4-6e687876ed12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7257729555083466`*^9, 
  3.7257729629043927`*^9}},ExpressionUUID->"4655f8c3-a5f0-41d3-8da4-\
1027b8074d97"],

Cell[BoxData["0.8`"], "Output",
 CellChangeTimes->{
  3.725772963714278*^9},ExpressionUUID->"29be1f73-e5fa-434b-ab4b-\
a811bbf90f97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7257730244188833`*^9, 
  3.7257730244705257`*^9}},ExpressionUUID->"694e2048-dcb6-4cce-83e8-\
023130e7ed2d"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.8867475, 0.6747384999999999, 0.234897555}, {1., 0.42, 
   0.}}, {{1., 0.42, 0.}, {1., 1., 1.}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "\"A\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.6666666666666666`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.8`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", "A", " correctly classified"}], 
         Row[{"Precision = ", 0.6666666666666666}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.8}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"A\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.3333333333333333`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.3333333333333333`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "B", " misclassified as ", "A"}], 
         Row[{"Column fraction = ", 0.3333333333333333}], 
         Row[{"Row fraction = ", 0.3333333333333333}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"A\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "A", " misclassified as ", "B"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "\"B\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.6666666666666666`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.8`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", "B", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.6666666666666666}], 
         Row[{"FScore = ", 0.8}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "2", "\" example\"", "\"s\"", "\" of class \"", "\"A\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{2, " example", "s", " of class ", "A"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "3", "\" example\"", "\"s\"", "\" of class \"", "\"B\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.6666666666666666`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{3, " example", "s", " of class ", "B"}], 
        Row[{"Recall = ", 0.6666666666666666}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "3", "\" example\"", "\"s\"", "\" classified as \"", "\"A\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.6666666666666666`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{3, " example", "s", " classified as ", "A"}], 
        Row[{"Precision = ", 0.6666666666666666}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "2", "\" example\"", "\"s\"", "\" classified as \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{2, " example", "s", " classified as ", "B"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"A\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 0.], TraditionalForm]}}, {{1.5, 
       FormBox["2", TraditionalForm]}, {0.5, 
       FormBox["3", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["3", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["2", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"A\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.7257730282401075`*^9},ExpressionUUID->"de4b6cd1-b404-4f99-a9d2-\
70adc373736f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Placeholder]", 
  RowBox[{"(*", 
   RowBox[{
   "Train", " ", "on", " ", "a", " ", "dataset", " ", "with", " ", "missing", 
    " ", "features"}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.725773083918784*^9, 3.725773085750381*^9}, {
  3.7257731899836206`*^9, 3.7257732116179876`*^9}, {3.7257732654633627`*^9, 
  3.7257732973954706`*^9}},ExpressionUUID->"bdb8b719-75b0-49d2-94f6-\
22e08762d041"],

Cell[BoxData["\[Placeholder]"], "Output",
 CellChangeTimes->{
  3.725773298198634*^9},ExpressionUUID->"d6e4ab51-1704-4d82-9cfe-\
dedec0a40465"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.3", ",", " ", "\"\<male\>\""}], "}"}], "\[Rule]", 
      "\"\<A\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4.8", ",", " ", 
        RowBox[{"Missing", "[", "]"}]}], "}"}], "\[Rule]", "\"\<B\>\""}], ",",
      " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Missing", "[", "]"}], ",", " ", "\"\<female\>\""}], "}"}], 
      "\[Rule]", "\"\<B\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5.2", ",", " ", "\"\<female\>\""}], "}"}], "\[Rule]", 
      "\"\<C\>\""}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Missing", "[", "]"}], ",", " ", "\"\<male\>\""}], "}"}], 
      "\[Rule]", "\"\<B\>\""}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.3", ",", " ", "\"\<male\>\""}], "}"}], "\[Rule]", 
      "\"\<A\>\""}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725773305873228*^9, 
  3.725773435953145*^9}},ExpressionUUID->"b261b4af-1f52-457e-b643-\
2d2ae6c4443c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\"", "\"C\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\"", "\"C\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257734392008657`*^9},ExpressionUUID->"a0688e18-0b27-4cda-98fe-\
503374e43abd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", 
   RowBox[{"1.2", ",", " ", "\"\<male\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257734462081413`*^9, 
  3.725773455410026*^9}},ExpressionUUID->"2accf9c2-5215-4b6f-b43c-\
efc2ce0d6378"],

Cell[BoxData["\<\"A\"\>"], "Output",
 CellChangeTimes->{
  3.7257734577643623`*^9},ExpressionUUID->"29521a45-5368-4d48-bedd-\
89354658dbc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.2", ",", " ", 
      RowBox[{"Missing", "[", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Missing", "[", "]"}], ",", " ", "\"\<female\>\""}], "}"}]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.72577346837862*^9, 
  3.725773502999551*^9}},ExpressionUUID->"1d1f515c-99d4-4f8c-b975-\
9acdd419cfbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A\"\>", ",", "\<\"B\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257735047413425`*^9},ExpressionUUID->"3ad6eb1c-834c-4499-a46c-\
20ade78ecda3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<age\>\"", "\[Rule]", "32"}], ",", 
       RowBox[{"\"\<height\>\"", "\[Rule]", "160"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "183"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "41"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "123"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "30"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "175"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "21"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "150"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "11"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<age\>\"", "\[Rule]", "52"}], ",", 
       RowBox[{"\"\<height\>\"", "\[Rule]", "164"}], ",", 
       RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257736287928753`*^9, 3.7257737410222287`*^9}, 
   3.7257738311622047`*^9},ExpressionUUID->"51198d3a-660f-4eb7-93f7-\
2066ab37c02f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 6, "Length" -> 6, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"age", "height", "gender"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["female", "male"]]}], 6], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "age"} -> 1, {All, "height"} -> 
           1, {All, "gender"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "age" -> TypeSystem`PackageScope`AtomShape[34], "height" -> 
              TypeSystem`PackageScope`AtomShape[34], "gender" -> 
              TypeSystem`PackageScope`AtomShape[54.]]]], 6, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[772844247], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"age", "height", "gender"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["female", "male"]]}], 6], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[772844247]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"age\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"age\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1069570908][{All, "age"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[All, "age"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"height\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"height\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1069570908][{All, "height"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[All, "height"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"gender\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"gender\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1069570908][{All, "gender"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[All, "gender"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[1, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["160"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[1, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[1, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["41"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[2, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["183"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[2, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[2, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["30"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[3, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["123"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[3, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[3, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["21"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[4, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["175"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[4, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["male", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[4, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[5, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["150"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[5, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["male", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[5, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["52"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[6, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["164"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[6, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
                  GeneralUtilities`Slice[6, 
                   Key["gender"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1069570908][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1069570908]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1069570908][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {157., {92., 98.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7257738327567015`*^9},ExpressionUUID->"2ae150ea-0bea-4807-b27a-\
b08c906616a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"d", "\[Rule]", "\"\<gender\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257738574193773`*^9, 
  3.725773874462616*^9}},ExpressionUUID->"b785d99a-8cf4-478b-a3fd-\
ab7cdc0f9c0a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"female\"", "\"male\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"female\"", "\"male\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257738777322907`*^9},ExpressionUUID->"45265cd6-66db-46fd-a53f-\
bbf3f1443b05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<height\>\"", "\[Rule]", "120"}], ",", " ", 
    RowBox[{"\"\<age\>\"", "\[Rule]", 
     RowBox[{"12", "\[Rule]", "12"}]}]}], "|>"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257739568920474`*^9, 
  3.725773991559531*^9}},ExpressionUUID->"8585caf0-11bd-45a7-ad60-\
d7504273c3be"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction","mlincfttp",
   "\"Incompatible variable type \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"Numerical\\\\\\\"\\\"}]\\)) and variable value \
(\\!\\(\\*RowBox[{\\\"12\\\", \\\"\[Rule]\\\", \\\"12\\\"}]\\)).\"",2,42,12,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257739944108973`*^9},ExpressionUUID->"21452e2e-8d6d-47ea-bca3-\
727a2bea4bc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<height\>\"", "\[Rule]", "120"}], ",", " ", 
     RowBox[{"\"\<age\>\"", "\[Rule]", "12"}]}], "|>"}], "]"}], 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["ClassifierFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"female\"", "\"male\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"female\"", "\"male\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "[", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<height\>\"", "\[Rule]", "120"}], ",", 
     RowBox[{"\"\<age\>\"", "\[Rule]", 
      RowBox[{"12", "\[Rule]", "12"}]}]}], "\[RightAssociation]"}], "]"}]}]], \
"Input",
 CellChangeTimes->{{3.7257740073183565`*^9, 
  3.7257740125829935`*^9}},ExpressionUUID->"7f8ea5a4-694e-4162-94b7-\
35fee2e88015"],

Cell[BoxData[
 TemplateBox[{
  "General","noinfo",
   "\"Input expression \
\\!\\(\\*TagBox[\\\"ClassifierFunction[\[Ellipsis]]\\\", False, \
Rule[Editable, False], Rule[SelectWithContents, True], Rule[Selectable, \
False]]\\) contains insufficient information to interpret the result.\"",2,43,
   13,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.72577401316226*^9},ExpressionUUID->"7f78ba42-27e3-40e2-8361-5da691d3d8c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<height\>\"", "\[Rule]", "120"}], ",", " ", 
    RowBox[{"\"\<age\>\"", "\[Rule]", "12"}]}], "|>"}], "]"}]], "Input",Expres\
sionUUID->"1f5b597d-072b-49cc-8d78-9b79e2eb9bcf"],

Cell[BoxData["\<\"female\"\>"], "Output",
 CellChangeTimes->{
  3.7257740311196766`*^9},ExpressionUUID->"22a910c2-f9c8-485a-a20a-\
39646d1ff697"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c", ",", " ", "FeatureNames"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257740485031776`*^9, 
  3.725774060642805*^9}},ExpressionUUID->"516a06d6-49ad-46ab-b5cc-\
41892c0f1944"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"age\"\>", ",", "\<\"height\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257740628395195`*^9},ExpressionUUID->"18a43500-8a44-44ca-bc97-\
51eab3f58d9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", 
   RowBox[{"12", ",", " ", "120"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257740673138404`*^9, 
  3.725774079025141*^9}},ExpressionUUID->"c58cadcf-8de4-4b89-b998-\
828fc887c82c"],

Cell[BoxData["\<\"female\"\>"], "Output",
 CellChangeTimes->{
  3.72577408008397*^9},ExpressionUUID->"67a4e04e-671c-4d52-8c08-34e3a0354772"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dnew", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "120"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "12"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "150"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "10"}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<height\>\"", "\[Rule]", "80"}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "8"}]}], "|>"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725774238811971*^9, 
  3.7257742640716963`*^9}},ExpressionUUID->"234b8801-ac74-47c6-8f90-\
3b8ac4c18c34"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"height", "age"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "height"} -> 1, {All, "age"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "height" -> TypeSystem`PackageScope`AtomShape[34], "age" -> 
              TypeSystem`PackageScope`AtomShape[34]]]], 3, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[421757161], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"height", "age"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[421757161]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"height\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"height\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1272103026][{All, "height"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1272103026][
                  GeneralUtilities`Slice[All, "height"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"age\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"age\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1272103026][{All, "age"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1272103026][
                  GeneralUtilities`Slice[All, "age"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["120"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1272103026][
                  GeneralUtilities`Slice[1, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1272103026][
                  GeneralUtilities`Slice[1, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["150"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1272103026][
                  GeneralUtilities`Slice[2, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1272103026][
                  GeneralUtilities`Slice[2, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1272103026][
                  GeneralUtilities`Slice[3, 
                   Key["height"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1272103026][
                  GeneralUtilities`Slice[3, 
                   Key["age"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1272103026][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1272103026]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1272103026][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1272103026][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {94., {55., 61.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7257742679514523`*^9},ExpressionUUID->"e1b2dfa4-9b8a-4a6c-a3ff-\
a2e8887853a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "dnew", "]"}]], "Input",
 CellChangeTimes->{{3.725774270198106*^9, 
  3.725774274618593*^9}},ExpressionUUID->"c4f2b03c-ebec-4a2b-94aa-\
950deadc24ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"female\"\>", ",", "\<\"male\"\>", ",", "\<\"female\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7257742760505867`*^9},ExpressionUUID->"e2ef97d7-cf16-48a4-a5fe-\
351db05351bc"]
}, Open  ]],

Cell["\<\
Create an artificial dataset from three normally distributed clusters :

\[LineSeparator]  
\
\>", "Text",
 CellChangeTimes->{{3.725774331320614*^9, 3.725774332263692*^9}, {
  3.7257745438272095`*^9, 3.7257746213832235`*^9}, {3.7257746869781637`*^9, 
  3.7257746915699663`*^9}, {3.72577472558438*^9, 3.7257747263653717`*^9}, {
  3.725774773630557*^9, 
  3.725774779479514*^9}},ExpressionUUID->"6337ecfa-4e51-4ec7-ac99-\
965cf6b1fbb9"],

Cell["Syntax::sntxi: Incomplete expression; more input is needed .", "Message", "MSG",
 CellChangeTimes->{
  3.725774722035596*^9},ExpressionUUID->"d8ed8772-85ee-4786-8e69-\
3a7ce364ea7d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7257747830693398`*^9, 
  3.725774800008585*^9}},ExpressionUUID->"ff2afb6e-6054-4d3c-88c3-\
f97ae9a95f75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampledata", "[", "center_", "]"}], " ", ":=", " ", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{"MultinormalDistribution", "[", 
    RowBox[{"center", ",", " ", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", " ", "200"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7257748036943736`*^9, 3.7257748639909105`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"c892356a-9fa6-4f4d-976c-d2fc189876eb"],

Cell[BoxData["sampledata"], "Input",
 CellChangeTimes->{{3.7257748825429134`*^9, 
  3.725774885071623*^9}},ExpressionUUID->"f261c791-bc1b-4ad1-9bd6-\
08a4dc674f17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampledata", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.7257748927024193`*^9, 
  3.72577489505089*^9}},ExpressionUUID->"e63c413a-c858-4ee2-9a9d-\
f7f203878683"],

Cell[BoxData[
 RowBox[{"sampledata", "[", "1", "]"}]], "Output",
 CellChangeTimes->{
  3.725774895463521*^9},ExpressionUUID->"71fcb44a-15fc-457d-8dcb-\
9b9b1eb81d44"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"clusters", " ", "=", " ", 
   RowBox[{"sampledata", " ", "/@", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.5", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"-", "3"}]}], "}"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.725774899228326*^9, 3.7257749167980337`*^9}, {
  3.7257749860693417`*^9, 
  3.7257750207048225`*^9}},ExpressionUUID->"729eddca-7df8-4a66-8a26-\
e7dd817baadf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"clusters", ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Darker", "@", 
     RowBox[{"{", 
      RowBox[{"Yellow", ",", " ", "Blue", ",", " ", "Greed"}], "}"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725775065177993*^9, 
  3.725775092074575*^9}},ExpressionUUID->"e244cf1e-7305-43b3-9bff-\
725d89897a66"],

Cell[BoxData[
 TemplateBox[{
  "Darker","arg",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[1, 1, 0], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], \
Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6666666666666666`, 0.6666666666666666`, 0.`]], Rule[FrameTicks, \
None], Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \\\"RGBColor[1, 1, \
0]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[1, 1, 0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[1, 1, 0], \
Rule[Editable, False], Rule[Selectable, False]], \\\",\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[RGBColor[0, 0, 1], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, RGBColor[0.`, 0.`, 0.6666666666666666`]], \
Rule[FrameTicks, None], Rule[PlotRangePadding, None], Rule[ImageSize, \
Dynamic[List[Automatic, Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \\\"RGBColor[0, 0, \
1]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0, 0, 1]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0, 0, 1], \
Rule[Editable, False], Rule[Selectable, False]], \\\",\\\", \\\"Greed\\\"}], \
\\\"}\\\"}]\\) should be a valid color directive, an image, or a list of \
them.\"",2,52,15,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725775093793886*^9},ExpressionUUID->"f4be7b84-6719-4d7e-859f-\
1ee5cafc33af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"clusters", ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Darker", "@", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}]}]}], 
   "]"}], 
  GraphicsBox[{{}, {}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-1.5, 1.5}, {-3., 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Input",
 CellChangeTimes->{{3.7257750992608256`*^9, 
  3.725775101691749*^9}},ExpressionUUID->"d7793ad9-7ae4-4b75-a966-\
3c09f6d4ac45"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[{{}, {}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-1.5, 1.5}, {-3., 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], " ", 
  GraphicsBox[{{}, {}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-1.5, 1.5}, {-3., 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellChangeTimes->{
  3.7257751035027237`*^9},ExpressionUUID->"9c5786e4-2b6b-41c9-9072-\
88f0ed8c5c46"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sampledata", "[", "center_", "]"}], " ", ":=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{"center", ",", " ", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], ",", " ", "200"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.725775124490013*^9, 
  3.725775134303457*^9}},ExpressionUUID->"f67c3320-7f0c-46fb-a2fb-\
7500d1d6f9cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"clusters", " ", "=", " ", 
   RowBox[{"sampledata", " ", "/@", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.5", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"-", "3"}]}], "}"}]}], "}"}]}]}], ";"}]], "Input",ExpressionUU\
ID->"7f73055d-0e2d-4333-9b35-9ce3fe7835f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"clusters", ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Darker", "@", 
     RowBox[{"{", 
      RowBox[{"Yellow", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}]}]}], 
  "]"}]], "Input",ExpressionUUID->"287f9227-a6bf-44e5-8b56-2871dcbf6180"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Pt20jiVw5mpJeOp2wP8ADOxJQQ==
      "]]}, 
    {RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
/weMGXM1
      "]]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Hy8QW04=
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.239484919913503, 
   3.8932560985464235`}, {-5.8626048395383386`, 3.919331585388259}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.725775164191409*^9},ExpressionUUID->"6f5a67cd-e6b1-42eb-8bbe-\
957579101bff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"Yellow", "\[Rule]", 
      RowBox[{"clusters", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{"Blue", " ", "\[Rule]", " ", 
      RowBox[{"clusters", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
     RowBox[{"Green", "\[Rule]", 
      RowBox[{"clusters", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}]}], "|>"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.72577518999487*^9, 
  3.7257752372489257`*^9}},ExpressionUUID->"e396dbdb-69bc-463c-aafe-\
b3a0674e06bb"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["600", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725775260800156*^9},ExpressionUUID->"cd3a3876-345e-4344-bfc1-\
ba90cd4da6e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clusters", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257753060195637`*^9, 
  3.7257753097014093`*^9}},ExpressionUUID->"963bcc7e-2288-4915-9c1a-\
e3e552742330"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.5243033029287647`", ",", "1.7929069132724393`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.38252305342620363`"}], ",", "1.583288918955318`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25326831477071887`", ",", 
     RowBox[{"-", "0.45303089344611513`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9044072566007647`", ",", "1.4365314627047978`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9476172093699513`", ",", 
     RowBox[{"-", "0.17654873578475172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8723665841349784`", ",", "1.807921931881928`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.4910137462510846`", ",", 
     RowBox[{"-", "0.8360594850818361`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46791637720737933`", ",", "3.268362290797839`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.190082227390397`", ",", "1.409928234979709`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9404926650182661`", ",", 
     RowBox[{"-", "0.9486117005802976`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5158844107069496`", ",", "0.10449978197436516`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3502214412074087`", ",", "1.465100415677192`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.617819295095361`", ",", "0.5469078061936838`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0183323811982403`", ",", 
     RowBox[{"-", "0.017931011313702783`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2941376613785494`", ",", "0.5230074576358064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7612563709553104`", ",", 
     RowBox[{"-", "1.55626453275588`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3474210802791413`", ",", "1.286397509783932`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2737646936610936`", ",", "0.17972047726403861`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7565969636165972`", ",", 
     RowBox[{"-", "0.2607299616719061`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3784601270533028`", ",", "1.3865744603901737`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3490273219671383`", ",", "1.324922327482504`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.093787021136426`", ",", "3.3729089782928976`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.657003561774887`", ",", 
     RowBox[{"-", "1.2719773461984558`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2101904843338667`", ",", 
     RowBox[{"-", "0.2561679865751634`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5343146471551812`", ",", "1.3723344662210004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.933018728938113`", ",", "0.8365691000759359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0322875448451243`", ",", 
     RowBox[{"-", "0.07350771574966819`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0610894013254384`", ",", "0.7068948605643655`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.987338845101387`", ",", "0.9558690835834424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.644317807428306`", ",", "0.6434941459253065`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1309344525126634`", ",", "1.4852819651278044`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1862523733152166`", ",", "2.8359118020337433`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5547514517371872`", ",", "1.901588105184617`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0817822570196354`", ",", 
     RowBox[{"-", "0.49964919796217777`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.153390184534622`", ",", "0.1636998524641442`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7953255581019194`", ",", "0.8980112789974845`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.713096836937643`", ",", "1.4487741133198966`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.166905564958248`", ",", "0.9030106312869887`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.569730245292714`", ",", "0.9650850182154622`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.576508736775253`", ",", "0.3712675252345847`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.280394149529952`", ",", "0.7594283290821277`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9253960736905495`", ",", "1.1032569743092455`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.539219131173425`", ",", "1.6676904320220993`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6529632228949188`", ",", "2.7239303361750293`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.8932560985464235`", ",", "2.8436729241281196`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.635655380080846`", ",", "2.1131033486517943`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9841081942254328`", ",", "1.330811453734857`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5267734118968692`", ",", "0.9452030838112178`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.724621753256764`"}], ",", "0.48178875543077504`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9498129179885547`", ",", "0.8928823094366977`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.922562080361422`", ",", "0.8561937941960591`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.72712407204695`", ",", 
     RowBox[{"-", "0.42855005600395435`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3840173360266017`", ",", "2.614279390832203`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3925839098079582`", ",", "0.9582382996948002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.937715173111572`", ",", "0.5514600494173876`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47262493928920546`", ",", 
     RowBox[{"-", "0.9703229793284314`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5074920507222234`", ",", "1.1142314960170294`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.181391592740558`", ",", "2.491328035598999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7105441218522914`", ",", "1.5901546501638608`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.124818261287286`", ",", "0.8716601722257603`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.312137896694325`", ",", "1.8905530276982914`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9361269397969911`", ",", "1.304197391292737`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2726110253957217`", ",", "1.4317057567224307`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7964156954117567`", ",", "1.167469712022752`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1512530216944215`", ",", "0.5677234611737727`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3962677069487475`", ",", "0.7567780245252922`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7607665809695625`", ",", "0.7054094382508689`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3008350264016206`", ",", "0.7488339003505777`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.590184319552212`", ",", "0.22506159698564143`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0891495292771514`", ",", "1.265096579784199`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7135131763707208`", ",", "1.7710931157863496`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6645761802619227`", ",", "0.01711251889471377`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6683367578101367`", ",", "0.0948004850635733`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5643423472319156`", ",", "2.391182321948685`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.257590492278312`", ",", "0.2726138178123221`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.0982997340675142`", ",", "0.5329339316394245`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.786165897716738`", ",", "0.6599019157412487`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5883303832187061`", ",", "1.4539741221523619`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2870103906303683`", ",", "1.3218709762017853`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.508415631023296`", ",", "0.7218480527005082`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7478822714238671`"}], ",", 
     RowBox[{"-", "0.2920982986522047`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2584773901246544`", ",", "0.2541950540586313`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.11307470464914315`"}], ",", 
     RowBox[{"-", "0.14219845866330072`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8762162833494103`", ",", "1.330563077406255`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1260564766851742`", ",", "1.8418237128077024`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.11312571590856`", ",", "1.098788430609626`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4234582407152572`", ",", "2.294300306856594`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.438664555486029`", ",", "2.4427441135617225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35783550099972117`", ",", 
     RowBox[{"-", "0.3908535368587547`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.117578829311373`", ",", "0.7052009244701583`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5856493422224194`", ",", 
     RowBox[{"-", "0.7730398613627469`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1015365375300687`", ",", "0.22699960505818118`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.370665019537705`", ",", "0.018059408045728587`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.46251789896404`", ",", "0.2367311110003636`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.1037378025979514`", ",", "2.2953735255206196`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.93452573148376`", ",", "0.64228359630308`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3480401833255204`", ",", "0.6466215764271779`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6405490284589894`", ",", "1.9123459013311144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6180920191036072`", ",", "0.22849514336022958`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.914525067314666`", ",", "0.4462745063186635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.32310668510008433`"}], ",", "1.753873427559108`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2982659230175957`", ",", 
     RowBox[{"-", "0.29171934743277306`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3874367177044729`", ",", "2.0441350716307847`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.506999479830588`", ",", "1.9449714130354518`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.86121879515362`", ",", "1.2609765469941001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6748896955583852`", ",", "1.8327836597236504`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.361102860339701`", ",", "0.8687999274052087`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6683886494119484`", ",", "1.2228394658755937`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.34006467124782214`"}], ",", "1.2190341498880808`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7538115081985022`", ",", "0.49701922518639474`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.1665009249505296`", ",", "0.870237720879317`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0125726480902946`", ",", "1.1115957543018928`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4863044643717802`", ",", "2.0657582657840594`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.7992052305422206`", ",", "1.4552146787280085`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5596968335958226`", ",", "1.5933891955877408`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2510714811092214`", ",", "1.5308724264077314`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0080677200139552`", ",", "0.4221838372364607`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7744972755319406`", ",", "2.0225325439887305`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5261169612520997`", ",", 
     RowBox[{"-", "0.7733264804137607`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.026318379584966634`", ",", 
     RowBox[{"-", "1.098876930430973`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2320442387838515`"}], ",", "1.7004911796519147`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1321811948309146`", ",", "0.07342347019920137`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.292031300276264`", ",", "1.8014518262329804`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8605856820839242`", ",", "1.9954525537287675`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9262434802820678`", ",", "1.0279724610085925`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1633946043912766`", ",", "1.5303513553198331`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6734958982669599`", ",", "1.305435720160845`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.281478750026607`", ",", "2.469730929681072`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7088321649885023`", ",", "0.9106434079807564`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.14032985276731`", ",", "1.361593080823574`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6773486207643284`", ",", "3.7503495664946063`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.34204090653583297`"}], ",", "2.1322867879451466`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2561215055846424`", ",", "1.2885916030325606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5418671477006405`", ",", "1.7213293238407679`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5974756638551`", ",", "0.9599568128788104`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.7195041667935356`", ",", 
     RowBox[{"-", "0.2459024471340734`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7341486242491095`", ",", "2.019596112772728`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7232747854626131`", ",", 
     RowBox[{"-", "0.7326633454200961`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9553897278252036`", ",", "2.8256733347607703`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6449107388104138`", ",", "2.614794261597634`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5349889337360605`", ",", "1.4246297784445465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.739288059121887`", ",", "0.6096901416785189`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.114342471951454`", ",", 
     RowBox[{"-", "1.124646593712293`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3863084725307502`", ",", "0.26630075359385685`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1265037886651963`", ",", "0.2879124274760544`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4669038582234204`", ",", "1.9489702604950816`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4473392043319595`", ",", "0.8003974165230037`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.10053303453931717`"}], ",", 
     RowBox[{"-", "0.13578629402931153`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49624137301582305`", ",", "3.7551233520411533`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6724616827390183`", ",", "1.936605126466852`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.28012753091020715`"}], ",", "0.568601458954394`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2167441820535936`", ",", "1.1234255085504041`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9998788858047727`", ",", "0.16703619793959723`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2404177184683629`"}], ",", "0.09731671550942`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1.3644362103441088`", ",", "3.768111025598628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.718327363961215`", ",", "0.9992591066822464`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.769903722849012`", ",", "0.20422671091765443`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4587578290419334`", ",", "0.7391285737898039`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.696776874588593`", ",", "0.8218321145696592`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.861244663474387`", ",", "2.328818916222258`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.611588324382083`", ",", "1.5267270877975734`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6139157958473153`", ",", 
     RowBox[{"-", "0.5399906553748159`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.335845196990668`", ",", "1.0128672757674673`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.238443542602921`", ",", "0.9511050179061452`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1683408473189287`", ",", "1.8394320030049434`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7918291640493024`", ",", "0.9345235309120645`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1637551500588899`", ",", "0.5616956734502965`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.17437118248506533`"}], ",", "1.3437974623589073`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6864593458911452`", ",", "0.9121333155816174`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8758073244706823`", ",", 
     RowBox[{"-", "0.14634204106710813`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7080106660801846`", ",", "0.45687604901876544`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5269567978755275`", ",", "1.3744419078716568`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7205640701203637`", ",", 
     RowBox[{"-", "0.4776092522482307`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8076460755190872`", ",", "1.329408290877086`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1301131399053763`", ",", 
     RowBox[{"-", "0.6932267270164094`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.0444871403811584`", ",", "1.4612120810147793`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4731023039713387`", ",", 
     RowBox[{"-", "1.3487342563458982`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.876669892165839`", ",", "2.6172373811914182`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.228838443697561`", ",", "1.7383034537114601`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7364266987720287`", ",", "1.3117902727223372`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.18424656039652`", ",", "1.8826588223531222`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2676242992076787`", ",", "0.5635181777905072`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7386997475041346`", ",", "1.5097599074053687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.121520071677236`", ",", "0.13359344950057483`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9230697146979524`", ",", 
     RowBox[{"-", "0.03347759574625675`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5086638706386346`", ",", "1.3993820729743491`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5361089132139062`", ",", 
     RowBox[{"-", "0.6950383030789913`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5001862454870523`", ",", "1.7348671269181144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.744208056911555`", ",", "2.5691419273064953`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.247549384708272`", ",", "2.0808264575523063`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.21300632322117785`"}], ",", "0.2230083535042997`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7903395206091084`", ",", "1.4147331972719663`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1654574654857799`", ",", "0.8355301400506246`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6543242375051918`", ",", "1.9821499725223424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6538433558033079`", ",", "2.440140179471503`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.170052756941392`", ",", "1.1994560360807796`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6416254036436122`", ",", "2.5194987757638545`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.29564225308505354`"}], ",", "0.529163929860925`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6760400709565155`", ",", "0.08178160955996938`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.426650182418438`", ",", "0.2990953998013641`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.725775311492394*^9},ExpressionUUID->"bdbbf0d3-5cba-488f-92c3-\
d32b4772c44a"]
}, {2}]],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
        RowBox[{"\"\<Probability\>\"", "\[Rule]", "Yellow"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"c", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
        RowBox[{"\"\<Probability\>\"", "\[Rule]", "Blue"}]}], "]"}], ",", " ",
       "\[IndentingNewLine]", 
      RowBox[{"c", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
        RowBox[{"\"\<Probability\>\"", "\[Rule]", " ", "Green"}]}], "]"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "4"}], ",", " ", "4"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"y", ",", " ", 
      RowBox[{"-", "5"}], ",", " ", "4"}], "}"}], ",", " ", 
    RowBox[{"Exclusions", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"#", ",", " ", "1"}], "]"}], "&"}], ",", " ", "clusters", 
       ",", " ", 
       RowBox[{"{", "2", "}"}], ",", " ", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Yellow", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}]}], 
      "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7257753335310526`*^9, 3.7257756072717094`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"d7d5325c-8cd0-4d66-aa67-ecfb33dfc339"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
         RowBox[{"\"\<Probability\>\"", "\[Rule]", "Yellow"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"c", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
         RowBox[{"\"\<Probability\>\"", "\[Rule]", "Blue"}]}], "]"}], ",", 
       " ", "\[IndentingNewLine]", 
       RowBox[{"c", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
         RowBox[{"\"\<Probability\>\"", "\[Rule]", " ", "Green"}]}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"y", ",", " ", 
       RowBox[{"-", "5"}], ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"#", ",", " ", "1"}], "]"}], "&"}], ",", " ", "clusters", 
       ",", " ", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.725775637427496*^9, 3.7257756731842318`*^9, {3.725775710391242*^9, 
   3.7257757122012916`*^9}},ExpressionUUID->"0896adf9-77ab-4348-a1c2-\
c1e8f3d21c4b"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
VqBP4KrBx6cTbVboE/jj5ila4+5cRp/A7ys3Prl68SH6BH7L4Mia2rck+gS+
d2vZhzNnKJ/A87d7/o5obUGfwF3caScySMoncOu7o7dufUb5BP5Qve2rfQvl
E3hQHitGifJJcl61PBl7Oen0VdMbuM9tumKtYqSgQK6jO5RO6A/Hfe4npYIl
vpYKZHj0hYAzVolYH0i9v9Divz6OoLDnvW+qGVgfYK9vJUeQi/U//UwUKsJ6
Eft5ehYjSJuL7+JLc6r+rQtFjiDtggyN450b/60LEfJk+7fZTgUSE9Abe38x
GOehxb93/GbOQm/s50QNxuk9XcFDdSoNvXH2+wrk/MRKff0zxuhN8r/nRw3G
KTFKdnP1i63/5uFgnKt+jLCqPbMPvc1snvXO3kKWHOhRiw/WfY3eOH+Hk9kn
h78vsvv4r7ew4eThu7G7D34sR29sriZHHvL6OLCC3ore2D6PypHW5qwpS671
oje2zyw50jYg9tZZJ1HMN7bPsfKk+5TGKWfpwzHf2M9tGoxTq2nuZM0CfZ58
kyUdnGX6R75ej95u/rc+GYxz34u+R3MW7EVv89jP3ZIjVXLuJW4b5Yje2D4H
4zwxVnyB8Dw39Mb2ORhnxWrZzHtJV9Db1qLtl8rmS5JO8S+NZhd/R2+a//ks
kyRnj3Pq+BPbid7Yf9yGkZNW7zexihHC65TjTYrcOJXp7lsjj9cpx48UebFH
6cXdZVgn5NYNpElfG+XkcvMZ6I2TPzJk3bL2TwuZOuiN/boG40zPmKQjRLNB
b5znYEmS5XFiCjLyJ/69Tl2HkTuGHXuSMd8dvbF9DsZpq3ynI97+Bnq49NrT
yEhBhOzWuJZwXJKqq5j/5ydBhFRN+d7VRELdTITjx0KUzO96N68jSh09cP6I
kUFePZq3cuehB06+iZFmGSYpWauxnsbd54qTWuOdt/rpr0MPbD9t4uSSW1va
NPW3ogeOn8H994I9CvavcN3Irb+JkM+qFzvuELqHHjj5Jkp6T1aXDZjxED2k
sfNNlJzuk/HITDMKPexnPy/uD7E90PtLtS5VJ5E5PdrPV22A0Hm4TbyshVpX
sP3MFyCzHes81tlhnZabPwLkjoCaKSG6m9ADJ38EyYq3D0uEpKzQAyd/hEi3
GiWrC9FO6IGTP0Jkdk5Dd2H7mX+vo8E4yyt3e0ocjkEPnPd3gDA7dzwu0jgV
PXDyR4Ac9aFUZp9iBnrgHEeALJ3DdD8vkoceSPXie0a+PwlFofxthyZR9RAr
tp8u4vvJo0pjVan9vizbz29iw+qnC6NJU/QQ9zhZOtG+m2Dt3PGseiG1vuLk
VQ9xOEm9xeLIOfTA+dtH3MmdZTOq2e9fD0b9xLOgp5pnt9z/Nx8G4/S/EKq5
UCUfPXBeVxeR8uWXhWxwyb/zyWCcl9oO6kpOqkQPS0un7/qvb2sjWm20Jp+q
C83t2me8yreaEDg61ij2HlX3OLc6gu6nVkfkVFUkLfanPOSHtmt/S2ggZrF+
xI39Q+3Tx/Vpa6gbNRMHzETfbbOg9unWbJ+tRNiTd6lqbdfxda1mv65qYmu0
7d0FK7/j6wpkx19HjO1b3XqUUY+vq5b9PMMG4niaxbe7lU34umax98vNxNQF
l83/e44r93Uxrs5xWD8w0EEct/L0XS1Hff56z6m3bx54TlebE51/7SRVl/Bm
TxC+hF6riO2b61RdYtQ2sz9Baq+IWO0pR6J3UK+XdjUp51BZBuF/ZalLXTj1
euezfeYT2sPLm7bV+uDrlWP/jaafCzHIKto0pM7A/uD3JYbf1k1cGkOtQ+Kc
ls+9PnhetXHv4jNHUuuQc8pzrWwHz5s2el7bf89r5cbJ2J40OXjF4Hm7E5f5
XaJR65Ae66duXxOKCeaLmdIz7lLrOj/2cUqJvx/P31yVR/nZzz5OPb1nIuva
6VtUnWHU3opHfwdq6Gcs1da5bKLqDNlSwS/i7b/TQ568PBU9naoz9LPPW06v
VSy+uvMOVWewZB//C735oH/rL2PKjwk7H+rp95unrFl+gtrnirD/1tKPOtYv
dgug1r2J7OvuO/3GvfD3c1MpPyXs/CynH/U3Ox1/ifKzlP2+fKFvL/dbevAj
5Sd0efm+l/af6MePV84e0Uz5kZ315K+xby69T614bOGQOkyp+wvDlb6/6Afa
m75a7qbqBjrsPOyiq09W611qQtUNPNl52ElvTTlQq15F1Q3q2Pn8g67YZBr4
ci9VN6Czr9MO+tTkvwantbzRz1q2n1/0k0cukrN2UX4es+eNLvrmM88t7nyi
/Aix//6kPzqU9eiCGFUH2Mael37Q/4hnTLR7SflJYPvsoEs7fnQMaab8qLCv
63Z6n6qODnNIXYUzD7TQQwRNP1kMqau4xW0k7coG6Fcdr+tMNaHqAF/Z3v7S
R+q5z/AYPRP9aLO9/aHPMmrZ8s2LqgNwvPXTGZoNtw8eoOoA9WxvffSVOpue
JY31Qj+cusQA/ZtundL8P9T1xfH2lz7HtCzPNZ7yw/H2h25wmtjHEKf8cLyx
6LWTt6d7DamTcLz10QfIwuUGQ/b18WxvvXTbH7/DQobsm4azPy966CdZFimZ
Q/ZNIzr6b69UEGW4+K5btmkvta/nvO8iDJELtDA7aapPYZe2VVUtS5ghlZ3g
qWZF7euD2POkMCNOJcHQcJ4d+slgr4uEGKdfpRnTfl9FP+w6w+B5v+WbWf10
p/y4sNdpIgwtGc8f9ucoP+Hsz2VhxsiNhSeteqjrq4j9OS7MyCg7vuhNMuWH
/T1rNyGGm1inltYQP7PY6wRBhuden8DWIX446wpBxo62+GFCQ+oe7Pd3/uD+
Ou3gqD23qH26wn/efCUZowQzH15Up/bpbG9tEow5GevWWlhR+3S2NyMJxqUl
NT/Npx5AP2xvYeKM9Z7V5dm/PNAPu24weN51B3xJX1neupAkY8x0pmnVSsoP
29vgeTMbLyc61lF+2N4Gz0vbl3itNoHyw/Y2eF6m0s1fY4fUMTjfTxdnpNUV
myUN8cNZf4oxZiZNlRpax3g59u5Ie4vhjG0J19bWTaH23Zz5RJbRM80jRmMP
te+WZ+ebLMN02vSXnzypfTeNnW8yjLiLZ99tWGaNfjj5Js2IuDTOdvJod/TD
WWcOZ1zaFmi7ypvaR3PWpbKMCMVvw32kKD+cdawso8F6znjvfMoPJ99kGJIe
pycZx1B+OPkmzfCOLV1FDqlLcNaN0owiWo7jAfRTxV1H/SAOufeF7f4ehxzW
FfY+lU3KGiR6Yz9neHCfe6r1nu2hGnjuqzQD+JIzjpJdXrjfZHAsyZMP/UxC
zS1ckbM9DO77rnksaJg9+Spy2J8uy18iKW7zADk7bwf3O8zXul9mTohGDvuy
m3Y5N67vT0cPtmz/UqSez+kXOlKByNl/BvdlnoWzf3br3UPO2T+KkX/f66Qv
eJyEHPYvrwTJuyXP36BPzjwjTfYenrJt6sww5LAfFLp3ndHDjEXOjmdw/xL3
ZKLYRPt05Fu5+6abDoujVh0uxNfFuR7FyRqzBZ6/xXG9zYD9l2HnUWmHSVWY
J7Bvqj/0NE5GOgg55/UKkiNDpXe/7kvB/OH8ESNPPfisuBb3NQLceUaA/PlQ
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
5COC+B7hSdvdJ/jI3wJx5bhn/NQjBYhniGtpjll88sVjxDP0Gb5fGDN167TL
iGd6P8GOia1BMYhniEe7vHzpWZCCeIY4l+tzpO1rNuIZ4mnLqyYZ33qHeIa4
qHa8XNJT2PeS9m3mH8rkbF7diPxvEDem9mGEPEO86F5q8gQn2v8G8bG9Fs27
qER/DwtxvddaL9KD6e9eIX4iQf/XrHsvEc8Qtxx7ymjvx3TEM8TFSx2DWTfj
EM8Q32u9Z2aQzWXEs+SvGsdUOfrlsMhdWH9UNY7HGw+nH+u8pft8knjnrxus
F9HnEM8Q37i0v9L8ReGIZ4jH6K6/V3wuEfEM8fVvkwf1/pKOeIZ4TyJn+TC/
Z4hniNtT+zBCniEudBafaO6bh3iGeHBCsy4nLAvxDHEnx03V1x/cx74vVuPs
+XwHvPgcjXiG+DX+jsc7p11APEM8cVfKpCeWxxGf0LfZ6rnQ73k1XSf5uwxR
V+e5n+ocfK+drpNA36N41phOjV94nUSd5+9p8aScrjsh36b7FnMXtX/qbH/T
vtUavN/XHluf+6eeBuvtds27l/L+qY9B3yZeT4O+zcW59z98+ac+Bn2bh78k
u8h00Xk9HH94f50XxmI6r4e+Tc489+Xl9PcvyLdpPKJ3pl4bXSeBvs23Nicv
eNP99JBvc6pvYoK+O80n9G0OYE28pZ1F8wl9m/ZXn51qFdB8Qt+m8M0eE1O6
zoN8m3KOrxM/iWg+oW/z+BG9I6G/aT6h77Hv+rr8W3QdD/k28Xoj8m2udhXO
oM+PfJtT1lWcfdZB8wl9m5d5q8ZENtB8Qt9m7r1LVk8+0XzC8d9y//xKj6D5
hL5NlYrmy+oXaT6hP5PVR4O/24T2WUF/5m7ue121NLruBP2ZnPQN+Wt20HxC
f6ac3QWQR9B8Qn+mZs3SY+8qaT6hP7Mo4NTX+laaT+jP/DYzq+cn+vsR5M/E
63jQn1n0PG6txVeaT+jPnDt4R2XNK5pP6M907FDrtA6n+YT+zA9mle0m1lhd
Tr0H73m5+Sat/qhvEvJVWuap3u/Rrw7xA32V59S/L/k4mPZHQV/lg5wlGucS
aT8P9FUuZiVM7t5M8wN9ldwG2SCQTvMDfZXBq24M/FhC8wN9lXhdDvoqfwp6
5j13ofmBvso3t0Vhe37TdSfoqxzqr3xDK57utwbHP5Ta/xTyA/2QLy6trxqu
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
4lMSh+T73bvMtF+zcL/0c03i/h7fl8w86s/e8++8TfKjGTcuokm1CWT9O2+T
+LK0E7OOpNRQ/W5oH4j6i5drk343gq//gcdIvXfEoJ/X2s51ZjXgOoZrUPgB
qfeIHGfOwCzOovVNYKHU+1eO88xI6cq0iEbwSur9IsdZ4xAzMvJcLWhJ/fe9
LMcJazvcZ8Gyb+CJ1POlwLnkfD3ptU0jqJN6vyhwtjZfWmn2uA7clXruyDzl
mLG/lns19X6hfSAHXx7uEDDyTWXOdq8eHXUkbvDv/Ebio178urtCgRz/v/Mb
iR+Zn2G/MapKep4hceUZPYrZDT2wfKcNBHAOP0y5VM/Q6+MWska1V2Pj+dMX
ZZ1eoMlrIUOv1wwTqna1CRl6/Z3sjyNmi4QMvf7eme5mk99Chl7fP2TX1D/7
ReJ6/dbHSrkTED+0Xu+ZY5NnRuK4Xv94v1Z3BXkeXK/vXF9ucJv8XVyvD5xu
4veaHCeu14NblT0ntAsBrte39iZYPcn5GdfryytTVXyzhADX6z2Be6PTSTzP
VeW5DX+1M0oRX1eo8goDisY9eYavK8j1bfeMq22VeJ6rygvMjmjf3ornuao8
TQPb8Mk/8TxXlRdj/7BWXYzx+Wc8O8+/CBYLGXr9xo4Rde9EQoZez8pRDtzV
IWTo9bKKCzwP1GB8kvjUISfb415ifJL4hvVLRkw9ifH5px9OsOXb8BZYx6P1
eseGedz4u40A1+tdQgc5TatqxJ4jJd7rDWse1v2sZ+j11+69q+giz4/r9crD
RZ9CDuH5rxIve+pkdycCz3+VeA9PX2u79hnPf5V467aevrW/EeOZxLfX6S1h
NwsZer35ateXD2qEDL0+X3/Sh19vhAy9vo01wWdqiJCh1/e5U3cieqCQodef
erO6NJfVBHC9vqPosswztF8trddPto9svT+jBuB6vf7R1QeW3arB4pnF6ywe
9fXpdgFDr7cIMzLwyqtn6PVHn9pbtmc3MvR6Q8Xpt+3KcZ2CxVtUemnalW14
PLN4S5WK3k1IwOOZxes9fvskz3Q8nlm8uluDjHzD8Hhm8bTbAmXPTMXjmcW7
sH2LR6xdE0Ov1zrBaVY+2cDQ6wcZGI47b1fL0OvrD/gZvYoRYPHM4n1eHz2o
jF0BcL3eJWNj0BOjz1g8y/ICL3e+11n9nqHXO46v9ep7QMDQ658rnVn6KqqG
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
PM59PZ/n3td53nNe554TWe72D0Ge1CAPx+RlP1pHgTypQT83yPzVq3aDPCmk
kt8ZnW8634TMk0LKNuqW5AuOn8yTQmqVenJBoVoB8qSQMpnWLKIG+yUyTwop
Za9jI4NCFSBPCqmM1Ls/I5oXgjyJ/fmWn2mLbJ+CPCmkVF2K5VZrroI8KaQC
4kdGzA8PAnlSSG1y9vxn54HFIE+KqbVj5rjmYr5knhRTd7tvDh+i1UHnz5O2
hPwarlGAPCmm8pZ6TW5RowB5Ukx1Onn1sEusAuRDMbUo2HjkqToZyIdiKqZD
1v5UvxcgH4qpnk693fQdY0E+FFPVFn+lS37tA/kQ+3DLXT2zJixn3091/vzU
FDur9WqKzHvYF71ML++z8Y+CzHtN3yX4tvfRtF+cDjp//uNdSVdblYLMexg/
Yx85eNUj/B7633nFJv+8anXC7YpiMr81fbchYlBkY+e3ZH7DeEDvO0crFkrJ
/IZx/5SBAqQ8ROa3Jp///LPRy+2ryfyG8Sluzr9OBE1AZs+88P+veN/7+v3f
vIf9Xt2ZKNthXyMk5Lgmpkb0+jDALYnbZ6fzk62tY7910VcgMdsuh88XHroq
zKpk9dfVb1y8vH1F+O5uPP/5bcfUA0+/Knj+0zXj7vsi/NxB//n6LC3M263g
+U8T0aDrZg9hXjVkvPaJBtfi5xT6z2GLCg8/qVfw/GfK/Avh569V8/yni6uv
XlRuDc9/UsnLXruvU/D858S3Q06FlCt4/lOumt48KEfB85+L69s2OJ9X8Pyn
bfe5z3+6lvL8J5M7dduP1pU8/xk+52bquKXVPP957/m09qFxNTz/OXpe9LNi
/J4L/eeaz97ZQQ4Knp98pleaPbzhPc9PFjf7iZ7vLOL5yUIzacGp6K88P9kt
vPNX5+MVPD+Zrn+zPL5lNc/X9V9etXvmvVSer7M7PTR/aMALnq/b/n7VsCSX
PJ6vy5+jajMkWsbzdfOWHL3p/aWE5+v2GusXWt0t5/moSVmfHN6PO8PzUZZ9
5Of33rjG81GZ+fUd8hYn83yUXvugMa9fP+P5KNcAp3nUhlyej5o4fPb3gCeF
PB/VWz8i52bkFzSdWNdQ0qWjK30T8uQ8nzPwdtI10ZdzPJ/j6TjMeeuJpTyf
s/jyuezUZwk8n3MlxGzS3XDE8znP+zi4Zu12Rc+Bz/E1fNx+deppns95PJxO
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
wO0z55nS+o4uWQuSJtQ3uk+VA7bJnLNJS2mXOY+SftI8c04ofaBP9NhQ7Hpk
yTHPPdR1z5zzSJebI5+YOOearXU6cW7VPzo/vUkaVObcQPpej8wxvTTDftH5
qXLVLrnPVW7SOXNuIz/fKXMOo/ikY+bcRhrjidFaqOLwGdGajOJ86QGr4YbY
k6I1GcX8J8NzEsfz50RrqsodlPdrrjXSd4/2z8rvpkdrPsrvpkXrdcoppA0c
BD9Pv58frbsqxzwjWudRfqSYX/NsYGaNXXGg9LMOmfM06bFDSsl/exEDqDs9
Wi9SnnVmtH6l3GqmcuDEOam0kL7wbann/sg8BjstWr9STtQ+uo1y5J6ZcxLp
q70y5yrSbDfnMdIJ8JaKfZx0ZuWC6setgnWRg+EXuNemPOY5njbbFKzhSy/e
mMdRU6QNZo73Tixb8ziQ35/j3EnRerjitKOiNXPFY00zazHSrxpmzoWkQyr/
UR4k/adR5nhUOmSDzHGtdML6mXMA6Yc1Mse+0lRLmeNjadpHR2u20pSOidax
lUvuGr1HoBhP2pe0R+0pxMxxuTTzNHOudRK8Y7SGprhOeerO8KOp89Rd4Mfg
EdH+TX5Oee1O8CO5Fqo1/6+KfZT2RxRPDsljTsWeGhMaG8oVJpb8PMvyGFs+
e9vM+tMKjdVgLVu66xNcv2qeH0p7lHatPVPlYtUy5xXSPKXDa59U8VWVzHma
4qVi5txMOmGzzHqK9MMmmbUqaZIhz/ekkSp335XrPJ5aY9d+ijSu3ahvBS9K
vUc7Dt5A3djM/lo53bjMflw5nfb4BtGmK9fYKbMf/xveMXMMtEH+ILP/ld/Q
3pni4S7U75B5nf4rOiZtR/11qWPPtvC1qWPPNvA1qXUjTbGLtbkeHX/qeQtw
zcTanfawFEt3jtalMMmFqdd6xZ+KQ1eUvWc0IVqXqgrPoc2YzHGYYkj1i/T/
u1PvI2o/Uc+p/ED7BfdSv0u039B82SF6jkyWLgQfkFgbfzP1fnF1rts0+t0V
qzeL/m7KF/aIjgM1f4dEj0lpmIOix550S8XQzfLYQzF7J/hG6q6N9o3SalaW
vc+lvVDt2Sl+2Fa5TNlxmuK1mpQWiXVd7avKn8uva22T35b/Vp6sfFl9J21K
eUen6FxQ+yP3cN+h0fNFeqz0j+rwpalzMqqSBfDfxDQNEut+im/0/MrXlCNq
32cmbTZS3yixfrgJbpxYG1TuWBc+lzZbqG+aWMPcDDdJrLeklNaJ80fll9pj
mq15xHH7xDnpBtrXT6xDrq/ma0q3fIryYuK1VTmo9rCmp85l1f58OESPPeWz
W0XPC423KtFjVflsMXqsKs/9J883NQaUL+q9LkmdL+qZ56fWKvS3IN8k1ryl
b5ydWovVsJ6WWlvlXzIjfxd9Q+ntg/I9e+mG1aLjK2nU0lmrwOel1l8VksxK
rfvWgC/L76t7fp2/g+bOOdRXovcHlJepv6ol1sPH537gqtRaiTQTaQWdS457
Ff8qj1d/zUudO6qPLk+dI6pfrk49xzTX5BOGRfsc6fZNouepcuGeeQ6rXFZa
lTQr6XUNouM37Sk0j47ZtAfRKjpO095crbxf9LzSOxWrFIL3iDUGtNdwXMl6
zhqNfcU6ifcsuuU5u3L3LDrO1z7ISnhN4j2IhtExsPYpbte4SbynoPhYcbJy
eu2NDIXv4n2HR/tzrR2Kr/Q3HPqbAcWlip9fiN4zGQLfmXqNkF6nv0+4MnpP
R/rtFdFrhPTbHtHXl47aHR6cWGtVHKi9A2k+2rcZRv2q1H0kf7i2mr+R/Nhq
6Xvyy4n3L37L57X2zHtGnystV3mx/r5EfwuxNHrPTnslLaPjbe0NKdZXzK+9
6GdT52iKq3tF30u+s1v0O0oH1h6OvmeHYL1Ee+jLtacXnc82zn2y8oD7Ks7X
9Lcz91Tsu5Sr3Z1rTtrTvzX1e2kM3ALvFh3bKJ6RbqQ99BWp/2ZAGp3WfflG
5Rz3V6zNKm9+rOK/45F/VpwjbUE+Qb5Bf6uhvWLptv8HMm+m0A==
            "]], Polygon3DBox[CompressedData["
1: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
sz76kBqOI9eRwyxQM0ecK5u1ubcc1NhsjD6qRuPRn2xdwrdHtPx79xJ/PWvL
l/co8eeDWv+4UQn/ldPJ7YboTms4ndxu8k70A/UEY58xUH1Aziv3lRP/t+ac
tvVL/Nk4LX/ZoMQfyrHkWnKwpWtyVOPrhiX+U04mN5PTLV/DAeWCcr75azis
XFZONo/vg/c5sCec+whzr9b/+4591/orfcMo8DIt55B7jAnewHyrJh/6x9/T
tzbRItRETsU2pElfc8AjaY/PMaAnOdkRtLdv/VHtiV5nzDP22Wc98CU1scUY
s6mxuEl+a567HH0Pb5LvmfctPzBjOrZ53wrgrcDjgQdzbE27b5tfr1zCB10T
xjpzQNfKzTW+WR+9JXg1cF/afThWAq8OLrQ/oM904FWaYOe8c998z75es3KT
eNX05J69d9+B78K8eMU2fhobZ+Pc0rS3bfPP0Xqif/Xl6N8TzrsNtgHgMXry
zD67HFOu6bl1wIvWxPNDeb4+3egdxkbntHN79yb+RT/zO7a9m/hX/az9f+ad
9OX/L67/JjmkPsGc8ZLe5Izmjqu331s9wlg1B2Ms2w1Hl6vPzrlpanIGcwf1
GvVN9U65jxxIfUtO5hp3PLmaOYK5gjnMfDU5urm6OcDUNTlOp5ucwdxHDU8t
7xo5QI0GohYiR7wMPJB77O1JjrZXjb7xt76sJJ81pzK3MqecsSZnNHdcADy8
Jscy11L/VR/+Vs5f4h/3aJLD9Kh9dJLbmJOam5qDzlyjL5u760P0JaPkaT2Z
k2+WxAC1BHNuY4Pf3G9/egk/U+NW61ZTP7+GN8mfvuhEk9GnGMvWLfE1+hx9
+zolvsgY571sURL7TuH6ScGfdMLhvEff9c4l9+4z6it3LXl2v6HPtn3JtzXG
+W62LIl9vjN9yU4l79J3pq/ZpeRdGmN8t5uXxB55ofzwM45vSvyx2uemJbH8
2Jr86JaWLx1dk5/c1PKrk2v48J0tvzqpJj+6o81HjqnJR25u+Zk+Xd9+Y8vn
Dq3h69e0fFqO4FzdpIQ7OMcWBW9XMvfkDM69jUu4xGE1+cK1Lb9Uc1YfOrsk
X5ibbzkh328iOSbtT/0u2CcGz9sNh5CbrN5yiz/hOP3By5bo83Ieuc/SJXqo
nFQNRw1FrmqMN9avVJI/dWv0xP+U8HPHl6usUZJPNDX6/Jol+e5fjD8GeLkS
fX6ubu75Pc49rm+r0StXKcnX+tfUD9Yq4fOj1ejLq5bky8ZYY+3VbX6qBqgf
0B+oDf7R798Ut7NMSX3A55PrLVXC9XxYY+UKLVeSA8rVVmu5oTUW9bRzSvIv
azzqUWeV5JffM571qEVK9Oif+qUutViJ3voj2NRm0RI91ZyvdsP5zQV/xT66
77ak3vFzv3/dS2fxEn32F/Bo4CVK9HRrRtaOrEGdy/V71OTvF5bke7vV5O/n
l+SD5mDmYvrka9WKmvBhefEY3Wh+an/q/cYXczBzsU1oXtcbDclczZxtH8bu
AQ/oxocd0CRmGjvPLMmPxqipv6xdkl+p4ajlrO8cqdGo1KrUqPYGf1ySG27Y
xrPn23vV/x+GbfRu+Lz+ST9ljc9anzWdM2o0dfOPU0r0C2s4agNqBOYL1gCt
BV4OvqDm3f/eiSa9SDcxwFhwcEl+ak7rB3RNu7atGZmLmZOdWVOTsTZzHvj0
Gs1K7UqNa8WaGoy1GGs4p9W8e/Phn9uYOGY3XEUNW41VTUxtTM1r5RqNUq1y
C31CTXydopucXG3HGpz6yNMl9Y2zavK/+0v0Ee/Re72vRD9Rk1Q/eaZEq7yz
Rqt8o6R+4Df1215Sog/tW5OvXlqix1gzVH86r0RvOLsm/3ygRL85oEavuKJE
H9+vJl++rESP2b9Gj7m8RG/avUbfuqBE7/Ab+a0eLcn1jPe93eRnasnyvem7
yWnVnuRnU3eTY6tVqJmqjXmP3quakzm/mpRa1CJtjvl4J7Wn5doahZxm7Sac
Te5mjF63iaanticHkgvJ4eRyctT1sd/NuZc6iZ2ztTUGeZP8ydqDNQ15qnzV
Woc5nd/Z722u9zfrmWXVWb6kPioHUNu25iE38DddG6eV3IsxZsx2Pht7fu4b
ruz9WE+YuJv15/WO4zdRW/Ob+60m6oZLmx+bJztH1NKcQ84d16C500Ula9P5
YC5wccna950eoa8pedfOKbWu69v1YM7gWri+JJcw3rk2byjJbczJXAvXleRq
zgm1OmOqc8U5Y23FmOtcspYl1/T7WD+aoBs+Ij9+q9UIf2/zJeeqc0jtzJjq
3NIHqn0ZI/WNP/VN7UU+L683Rg9s/YHr2zn/W5v/+OzGE3O/q0pyOXM6c88r
S3I9Y3i/1v/4rJ/2Dbdz/ljvkSPU1l8c3fI1c2w1xQv48AuXxGRjhrFjjib8
w/rJHyX89+E2B76I/v/QxzBlLv95GwPlMGrIxkZjzr5tfu94yzbx3Woc+mf9
6+Bu8gFzCWOKtT9jrLHGmLR/m78bq4xZ1grNUYxlcgy1LDmP3EPN7csSDqgW
pwY2aTc5hrmGupj6mPmAeYEcSu1JnyG3khOpXemz5ErmRw/RnrZdT9b4fizR
f6z9GUMubDmbsWVUq7Eu2Ym2bM1LTcb3ay1swpp3I7ezvj17zbtUSzHfUKNU
81WDVbtU4/+t5Buo/cvJelr/L1eTUxgPnBPODXMIY9mBJbmFnNj9Eg+VcGVj
jPXmh0tijzFK/fiekthlzLbe+mBJLHcNuZbuLYk1t4CfAr9Ush/l1hq96+WS
eu6sTfTqX9tnMQaZa9xdEptmaaI/+458V7fV7Fd4paSePlMT/cp35rtzDbgW
bi+JfX1LaqXmzObZxjBzm7tKYtvlNftLnijRv41H1r+fKtG/r6jZb/BkiV5u
TmQ9+rGSXMmcyPr+4yW50jU1+3OeLdk/oo/WV79YUn83Pqj9PVIS20tJbm+O
bz33upr9I8+V1K9vqNl/8UJJvf/6mv0Bz5fsZ3H9qYdZg5u+Ced8j/ZHJfsb
jI/Pg18vqeebYxqvB3aTe1pHtZ7qfJ+kmzXmWlNXlBuZM6p97FeSS6pxqJXs
W6J9mLOpt+kT9A1qInKH/Uu0EnNe9T99gL5ATmY+P6jlampIcoUDSrQlOd73
rd4k9zPGWtsxBzH2PsrxDu3/lexXUUOTO95aoq3dB34V/E7J/ol7wC+D3yrZ
L3V7zX6fV0v2E91Rsx/ktZL9JI+B3wV/WLIf6F7wK+C3S/bz3A9+DfxuyX6Y
R8Bvgz8o0W+3aaI3j+pG31ZzM9e8rUSLewj8Jvi9kv0hchb3PviN/FYPc7xF
+33OzTgwewi+LtGr3VsgZ3YvijmKXNqc5qhW7zUX8B7Ukl0j3pu/4V4U16C/
7X4RtRY1FrUW36F7f3wnvluf2b1QvhPfhXNoZHt/zi3zG+/XPRvbN3lGdW41
LZ/dd+jeHNeQ79Y5516SB9rn85mGl/gAn3WTJlrU0i332LbJfoxl2/0PrnH3
zrhGXftbNNGSlmn3W+hT3OvmmtTXbNSkPjJTW6+zBvpPSQ5qbVSf414S16y+
yDXlXhrXpGvNNefeEX2ga9E54t4zfYBzR58wuOUb+orNmuj9I9r9P/qI8Vo+
oe/QB7iXTB+pb9DHWGvTh+p7nJPu5XPNO1edY+4dc40795zD7gXSBzi35XdD
u+EA6lXz0Z6U3/+0kz0nCzWpB7vmXHtqYsO62UOiViank9v5jjZuwunkdj7D
5k1yTHNN57Dfc6kmuYw5lrnWxzWxzJqGe6/kn0O6iZHqcU9gn7MnObvzQ745
bTc+WC3xPedAJ/e8A/jBmr03fvPtjLc1c90azc7gT2tqS9aYdgXP3kQ/UXNT
e1uiyX6M/m29yTXpXjV9rmtVzi33lkMsVpOTuhfPnNtcdc4m9XF9mL5s3ib1
RWsEezWpuaiTq5dbi7EGYJ3Eeom1gYWb6Ondth66YBMtTQ1QLXCxJvlZbeuj
+mz3IhpT9eXGBOtB8ntjxQ/c04edaBz6c+O5dYuvwaPAw2pqu8ZM623yC3Ur
9avh4iZ9fUdqTXICuYExdET7Pf9s17/aq3zNWsniLV9Q0zi/rf+odfg9HHtY
63/URKxdDu1EKzFGGCvcY3Mp/O6s3via4a3/eqVGH1Mnk++pkbiXUQ1E7UTN
+IxWv1dLVrNxb6Uai1qOOYV7L83BzTXUYM5r61FqM+oB43dTk7FW656g8bqJ
MWrH7jEaWwGiJ3uP3EM0bjc1I/cWud/skxKfqG+0/nNaW29QS1ETOr2tN/Rp
+aI6n3rfsCb+2XXn+puxicZjbd4ag9rP/E1qbau0/kdNVm3WmpL1Q/2TdSjr
UfOofzZpOwdH1uiz1vms983Xrh9/23c6oEYvtY7nbyzQzl/7umYXrpmP5urm
7Oq7ajRqNc7ZRZpoTu7VsOaiFrVUTa7umnJ/mxxULmotTT6vnjJhNzW71Vt/
8FknfFZ+K4ddshNONnO7fv99NxyT1KzfbzrxUeq7zg9rex87hs9fs7fONbN4
E41OrU7NxP1d+je1lI070eZdv2rHcmK5sZrYMW19Ua3s/1rjqhE=
            "]], Polygon3DBox[CompressedData["
1:eJwt1wm4T2UaAPA/91ruxaVs2XctM6ihmJksDclUtE2WQpvsW9mTfc2+FJKt
siXZypKtRUWpqIhEKsxMk7SJ7P3eOfd5vM897+97v3PO/5zvfN+nwsM97u6e
M5VKbRa5IjJTqdnpqVQpSW95z4xUqo5o4XgQPy9eKJBKNWaPsjHyNLUL2Rpx
g+PaYr+2t9S8yC6ouZienCPOtYjlVpNHdGBNWFfRw3EZVlasjhr38px+peV9
tD2mJp09y0qwXqwHG6v2fVZRbGFL2GHRWv50mnOyAvIO+l6nXzm+iXWUD9B3
lTyXmMeeUne7uE101zaOr8xKpQbG73OcRyxQN157M9FUdNP2FF+h7k75HfFb
2Hi2ivV1vMjx7+5lir5Pah/GtrKicX72LBvKtsiLxLnYLNaHLZSf1ncyG8ie
YKtZbjGfjWO92Cz5d+qGsm6sN5vPfmJjWV/Whj3KlrMbWHE2ir0bz1msZ8+z
4ewNebH4DWx2vCM2XP6hvg+wBqwfezneL5vJRrIRbBsrKdayBaw/Wy6/pG4W
G8HaiUfE49qmadvgWc1yfMhxHbFX3VbtQ9hmeWHxCpvJ7hZ3iZ7aJvDV+v7d
+2ykfZ1rXGI3yq8Xtdkr7Ay7Qd5cn1sdj2PFtZ3Jm0q1ZC1iDLCqLI9zt2It
4xmzK1leVl//mx2vZzmMpQbyj3hjdcPSkm/olPO10PdONpOVYznUZKmd5Pg3
VlFhG3nBzOS9nmKVWVt5WmbyDv/LyrPW8kHOt8H5Cogl2qY635NsvTy/WMym
scHsdXmWWMqms3+Je8Rj2ibyNZ7VfY7bOF7oGtXVFdJeIjP5BtL5Va77oPwK
MZelsarsAXl5sZxdxq5hD8krZCbv5nL2Z/aw/GPnvEU+wjVyazvtufSO/jk8
NzUntV0rf8C9dIzvQF1ddeX0G8neiXlIrGPz4/7VltW3nr7H4zoxP6j72nFd
cUDdNnVz2bfy+uIgezfGGusl3+wat7PqbALbFb9VvMNWsodZj/RkDMVYqhJj
lPVMT955vPuqbCLbza4W77IVbBL7JJ6JeI+tYpPZp/I/ie1sNRvN3pOXiTHP
XmBT2R55DbGTrWVj2A55hfRkfl7M5rEj8gbiEHuPjWM75ZXFG+wlNp59KK8i
3mTL2DS2N555fMPxnbAp7LN4lmIHW8Oms8/l14mPYqyzvvGOPfubPPsTvJp8
vrqjjm8SX6nbrm4BOyb/hzjMdrBn2H55TbGLvc5msC/ktcRutpHdz9rKF3nO
NVhBNpMdZLXFHraFPcQ6xzevrj4rz55lX7G/is/ZG6wta5+efPsxB1wRawJr
x15m17Ni7EHWKeY5Vo+VZU+zfewv4mO2gXVhw+L9qGvL6rPObCj7gLVh9dhO
0YgNYv6lThr37dX1YVtBM1Yj1k/WO9Ys1pRVY53YEPY+a81uZHPYN6ye+JK9
wzqywfHO1N3P6sb6xvrGGGB3sGvZbHaY/U3sY2+ypayg91hItGe3sA/FzWqG
6Jsec5R7rhpzm+QK8SpbrqYMWye/oG4Gm8IqsbdYZswnbC4rwpbJf1Q3hg1n
Vdh2ViieP1vIKrI35RniRTaHlWUb5TnEc+wZVpm9Lc8X44PNY4XZS/ITrjGa
DWOXs6XsBzaKDWVFY25iv7DxbHQ8Z1bT7y+f/W11lv+YkazjZ7KS9T/2AcX5
SnZS34nqxrKS7FV2lk1nE1kp9ho7x55mk1g5tonlFHPYDFaMrZD/qm5C7J9Y
abaWnWfPsMnsMraEHWcj2RBWiC1m37MRbDD7NSOZ0y+453sdNxd51M2J709d
X3WPs0vxHca3wbrF75VfjHHO9rKurJM8pe+MGCusu7QLy8Fmsv1pyR4t9mp5
Y11gX7N+rBc7FXNgrEeeayvH92UkYyvG2NhYu/ji+E7jW5dP07e0tvzyjFh7
2DesP+vN8rMX2DE2iA1gP2Uke7KzWck+K/ZbP2cke61zWcmeIPYGv2Qk+4Lz
WcnaF2vg+Yxkn5GzoG8v7ktciPku5hbX6OIaHeQFXPdF9m82mD3B8rHn2VH2
JOvPMtkCdoQNZP3YNzGfsNmsEiscY8pv/oBViu+fLWXfxjwW4zvWfVZEfi6e
tTn2rsxkXxT7o7aijWjKLqpr5u/ZeE/q7nT8UKxZMZc4rpErWX9jHW4vP877
y19zjYasZsx/8exFS+15nKOVv4fiXamboq6UunzyH8QAtjZ7Hawl/150Z8uy
585YG++J/YrzFHft/2h73m9twjLljcTV2obIr4z9gPYScT+xH4tzsTpqqmev
eT3kV4kD8ivFNrZZ3S7RRD7KdfOw381NNdWdTk/Wo1iX+mUm4y3G3b2Oc7Hm
/lYXP6urH/t+1iv+DyB+S0/2ILEX6SM/od9I9rZr3OMaDeX/E93YS6wWqyxv
qDZdv43sVtZI/gm/Td34tP9/Pqlz7m83+ycbw/Jm7zH3sGZsKvOYUhfZpzHP
sIksHzvPPov3zSaz/OwCOxi/jU1iJeMzlR8Vj7C52XvWWMuOxToQ74Fdw0rK
j8QYiTmIVWFF5XvFHWw684mkLrnGQDdfxfPYFouW31hP/mXMKerGZu+VY1+8
P947G86KxH4x7kNttVzJnjD2hu3kX8R3Jx+prmicUn4g3g8bzYqx3PLGavPq
u4ndFuuR/DveVd1SVpNVku+Lb5sNZYVjTyr/A+qo2J4=
            "]], 
           Polygon3DBox[{{2400, 2399, 3497, 1297, 1298, 3498}, {2552, 1168, 
            1306, 3504, 2397, 2398}, {2390, 2389, 3501, 1301, 1302, 3502}, {
            2402, 2401, 3499, 1299, 1300, 3500}, {2551, 1167, 1304, 3503, 
            2395, 2396}, {2553, 1169, 1294, 3495, 2399, 2400}}]},
          Annotation[#, "Charting`Private`Tag$129838#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
1tYx/CN8rbSF+ge+Bn4J/i5nfX8KbX6Cr4MbEh+Xc85Qmvj38FVwfeLT4Kvh
BvB4eDd8Km0iPWtkj+hE7LVIXlzpxPmmtOgNtH0Orqa5xrXXa+1mXpRKvFZI
J5+SeD2Rfh7Jfd6MrJHkAeyFD2r+En81sqehnFR67bDuRbxlZH31Ddw8cr98
DTeL7JP0iL2WKv/qHjuPVl52j74H/Br3X8iz/U97BvGK1C10H62lsZ9fOdeQ
2HuHcp+h8IuR874RcNPIvs2k2PpNOeME+LXIOdGo2L+lnGhibC2nXHJ0bO2n
3G18bF2nnG41z/O41nd4DPF3Io+rsfC7kXXjIPiVyH5XF/iFyF6Q1latsfJ2
voTrRvagesP1IntBfeD6kX2qvnCDyH5aV7h6ZB9pOtw2sgd1NPb+Iv+zF1wn
so90PPZeI394Btwustc6E24f2eM9HHv/lQc4AG4Y2a/rBFeLPOanwJ9E9scG
w40j+2nj4PcieyPfw59F9sqmwp9G9tA6w89HnmsD4UaRvbv2cJXIY74NXDny
nOoAV408L9rBz0Qe2x3hZyPPhbbw05HHv+ai8tBHg/11aaGMdBN9NIH6T/po
TmzNrDxxVmzdLo9xRWwdJe9rVWytJR9pdWwNJr9oNvx+5Jx0d2yNKg+qUs5j
VGPyh9jaW57DEznPK82jijl7Q2OUT9GmQ2Tva25szS9v6sfYGl4517zY+YL8
q8Wx9aF8qp2x9aE8wC2xcwH5jTu5/zvaF+H1xLtH9gY3xs4d5H9uiJ1TyDv9
Nbb+lJ/WkuuGaB3gu22PnY/IR10TW7vKl9sUO2eRB7s3tlaX57Y/do4g7/Gv
2LmAvLuDse8pj3Eb3DeyH7s2tt6Qz7Ykth6Wt7YotmaW51Y157mtOZUpsKbc
BRfS2hH5TKEXsVnwAp7539g6VmcQRQqsjfbCxRNrWp1ZlC6wztAYKKExGvkM
Qt5qRbgO9+nB787k7yNF7StrrL4Y7BlrrtUN9ms1Z+sHe9iay7WDv700QJ/g
sbYF3hXss/2jNZzfvxheEflc40js/EhnJX/HzoPkwS6M7QvJ89zG8zTi2vnw
K1n3aV/ueSy2htf5S4Oc/09tykqLRD4rqZGzxyQ/6pLEOZfOR+5MrEnk1cvj
l1bpzT2HZ/1s6+Ayib+tzlbOTZzr6czlvMR5nM5r5Otrblah/VXSNJE93lY5
94366+nEvoH29CfhvDzv6U8l9g20F1dK7D9ov66c2FvQPq7cQDmCtMEDiT1D
7cvPJfajtM9eWGDdL4/uEeJHIuuEBxP7kDpTKJW1ZxXQOaWzziPkZ8rbKy4P
gfrZxB6j9tmHE3uS0hX3J/ZFdR5xY+I+la8uXyxONeRdifc++eF3SJNF9r11
/iY/Iqa+PXHerTORuxPrIvnk90mbRfbk5Snq+5xMfXPi3Fze+02J83F57xqb
an9EeXGBcxKNVeUy8ml1rndN4jxdnv95Bc5h5FVWSOyvSm/oXPHa9Js8ltin
laaqmaQ+s7R/kn4f+OIC54HSEtNi77nyQnWWdJD4JQXWmRfn2Qt9MUl9y2LO
E+Un65xRPp3y6+NZ5xfSBZcVOIeSP6S1UX6W8m7NGfl9yi/kTbTNeYxqXivv
kIcon7N2kvrP3K9WkvqixbyWaf2R9lUuJu9a56QXZO21ql+kmx6kzeO0vTKx
d6HzrEcT+8/Se/LglD/K91Z+Jx9TvnGS6mfpaPlp8uiK5/sc9ebUF5X+Ohe+
mPrqxD6MzkrkbypPlMeezdobj+SnZu1dSZM3yXld1nquczPtvzW4rlpij07a
T3rwYeLPBOvH8nDlYO32CFw1WKtWgJ8PPl/SHlop2A+7PPXTpDfLEX8q+OxL
Gumd4LNfaZhPg3XlQ/ATwdpZ2qBJ8Bma9u6ng3WZ9uXngs++pGcaBWtwaZjG
wV6atFCz4LNH6ZYuweeK0iRdg89YpCveDPbhpIVeCV4LpSvaB5/LSTe2DPbt
pCWaBp+NS2+0Cz7HllZpG6zxH4WrB+s16ahXg8/ZpDcqBvv30qXvBZ/vSTs1
DD6Xlnb9JPgc7zG4ZvC5n/Tex8Hnh9IhTwafE0obvxt81vc4XAv+PyV3jw0=

            "]], Polygon3DBox[CompressedData["
1:eJwtmnWgFtXWh1+OzkZmfA/HwO7ubq/XuN5rXK/d3S3Yid3dYgGCWICKdJci
AgKKikEZhAkGgijI9zzf2n8cOM9Ze+add2bvvX7rt2b9M9sc2bqhVqvdxz/L
8v9DZa12ULNabbtUqw1rWas9Dp8C7wwfBfeDb4dPgE+FT61qtbU49ju4D3wK
vCb8LdwbHl/n3Ix/rKjVLoZPI7428e+J94XPhNeDf4T7wV8y/kXGd2X8zfDX
8Etwd/hW+Cu4C9wNvgUeyPXcCZ/E8afDK3G+iXAX+EF4EPG74JPhM+CtiH8B
D4XXaKrVHiV+CLwjPJL4e/X4fvdx/vPgcfU4/kH4Qvgcjt+Q653H+IFwJ46/
mPi/4GPhzxn3EbwVY/7wGogfCG/L70OJd4YvgfeHj4PH1uP6H+C4C+CHiR8M
b098OPwj8aHwKOIPwJ/Bz8Cd4GvgAYy/Az6R8afBXxB/Dn6R+HXwT/Aw+N0i
7scU+HnvD3w93AvejGv9neOPhM/i+60P/wT39/sQf5bxnRl/rcfzee3gG4l/
5/OBO8B3wj/Aw8p43mfAZ8LPwcfBe8Fj4KH1+P5Xcb5T4B7Eb4CPJH4S/Bbc
Fj4KPhmezfiucE/G3wX3gY+BD4WPhtsx/kh4D8a/Bz8BHwbvCo+Cn4ePh/8J
j4V/5/jJ8HSOfxLuCx8LHw4fA8+CX4Pfgu/M8/9QeBeOfwd+B74FPg/+Bn4S
PhzeDX4Xfgo+At4dHg1/wvmehJ/nfFfCc+BucC/4bvhbuDvcG74H/gZ+GX4d
vg2eAXeGX4Nvgodz/vvhMzn/WfAI+AH4LPhseCT8IHw2fA78CPxfeAd4BDyT
870K9+B8d8DdiF8NH0L8RPh74m/CfYnfB79K/Er4YOLHwxfw9z2ZH1vws8A5
wPjXiffh7/cSf5vxN8PnEvsafpf5tClj58O/wV2JX0X8v/AJcHv4BHhveJzr
lfOdC19SxPU8Q/wceM8Uz3tiPb7vE8Rbe3/KmB+3ppiftUbmLjyf+AtwM3gu
/DvcyefB+E7wNYy/FG4gPg9eQLwzPL2M539LivU1jM+7Ar6+iP3uyzKe320p
1tdS4j/CvxHvCC+GZ8E/wc/DTZx/Wb7/8ozvAV/M/TiR+LFFrO/W8Mmu3yL2
nzbwqfDpRcy34fW4/zcUsb5X5HyJ8zVyvp7whVXM7yOL2F8uquJ+Hl3E/v0Y
1/s/eCfGvw1fQvwk+Pgi5sM44k/BF6fY3/7m836AfyXeAf60jPl3LfHL4BX4
/ILPr8NvwSW8mPgycFefN8ff6H5QxPxbnvjfcEG8O7wu/+/D8TvxM9s1VY/1
f3sR87li/BJ4WWLdPL55rbYOY/flpxW/tyD+F/EG4q8RXw7+E24GvwoX8Hx4
Med7yf2wjPxxQ4r110i8gXOV8BvwsvBvxP9ifBfzSxnr8fYU++MSrm82PJd4
ezgx/nd4CfwyPK2M9XQz46/O+6Prty18lftnGfnqevgK9+8y8tt18OVwS863
DNdTwW/CV/B8ziR+fhH72YR6rPfH4Utc7/VYP22LyHfvcb7H4QtS5KtVOF+d
862c8+uYeuSH+xl/PrwW8VbE1yY+GF4DXgleM+ezjxn/BOOfK+J6VyJeEl+B
eC94NPHbiN9L/Fx4ZeIV8RVzvm8FLw+vlPVAQxX554kU+8maxFcmvhY8CF4N
XgFePeebsxm/ATwXHuDz43M+5vit+duf/O2DeuxvT/L3NsRX5/gVia2Rx5tv
3D/+kWI/n8T4x+Bnipi/H9Xjfj1bxP3/C54J/wg/B38IPwo/XcT+YF40P+7B
TxPz790yznd+iu/fyN92I7Y7Py35/cMy8usVKfaniWXkz8tS6J8PysjPl6d4
npfyfU9zPy8iX00oI79fSvwi+HLiZ7ifFpFPJhFvD1+Z4vuPKeN5XZji+ZqP
3Y/vgG/weXL8Dmo7rm1L9M7n8C5wC3gruITfNT8x/n7XNzxB/ZBCb4ysR364
sQj9NKWK71vn+G04fhK8vc8b3g6eAG/rfIC3hS+oIv+bX4f4POFdne/EtyZ+
GXy6+aqI/PkJvKPzl/j2xMeWkT8vSqGP5nM9n8DTGP8EvACeCn8DPwWfy/Eb
cfzPeX5dB1/k/Sc+Hr4GvgBuU0S+aQWPhF9hfAs+72r4fLh1EXrhhTL25/2I
T4CvJX6hz4f4+85/eAT8MvHlOP56uHXWNxOJ3w3f3Sz04zTzKfwePBFuYPwt
8LXwTfAnxG+Gr8n3+2P4jiry6V3wF3AdHgi/wOcty/E3wZe7n6g73S/hAXBH
4ss0hR4eDr8EN4dfg8fAHxQRvwu+Fb4Hnsrxd1ahb+6Gp7ifwG/Dr3J8yfgb
4cvMB8QnEb8BbgNfDX8AN4d7u94Y/zf8KPxK1jPqxQLuCbcjvhgez/291+cB
z3Z/Jd7L9QcvcX+H+7he4aXwi/l5vVfE8fdWcfzD8Az4IfhpuAM8C74Vvs79
GZ7cMuZ7P7g952vG93kJfgceW8T13gPfAz8ETzcfwf09X4rn1Ra+VP1A/EP1
FdzR5w9/C08t4/NvYvz38MNV6OOXiM+BO8CD4JHwwrw/9nA/Y/yf5iP4Lfgp
+C/4dvimnE8/h2+Dr1efwJ+6/+TzdWJ8wfX1r0e9pn6wvuhP/Ct4DrwS8QHE
z3Y9FaHnNiY+qVnUKisT7wd/Cc8mviL8eL4+9eCPjN+kiv24H+NXIT4U/h7+
pYh66jH4jWahB60HusHj4ElFXN/Aeui5i4vQf12Jj4U/LGI+P5/n73D4d+JP
5fkwAJ4HP5HvTz/4J7g7/D78EZw4/tcy5tuvWW8+Q7wvPJj4r+aH/DyHwfPh
p/P8GgT/ArfL83cg/LPrHx4CvwMvgofA38E/w6vzeYPhb+F58Grwy/AoeFwR
87UX/Bk8A24k3ifXn1/BTXBv+HP4S7gl3BP+tFnUJ3W4JTwY7pzi+70Cj4Yn
FDF/3yxjfzuC+Gd83lXEz2sW+tl6axA8J+uXVRnfF54Cfw2vAPeool61bnV9
t8j36znOV4M75s9/m/gfnK993n9GwAvM3/n7dmX88ox/A/4Q/rSI/fB1+AN4
chH7z5t5vn1WxH47uR76s30ReumtPL/M+xXx+/l+B8DbpMgfq+b1+lrKcfhh
10sR9cbUeuRH15v5b1498pv362H4/TLWd+sU+4P1j/frfyn225fL0F8HpdhP
T+D8q5BPZma9/VIZ+fjAFPtf9zLyxaEp9u/Nq9CLA1PUl5tVUQ8MSJGvNq1C
b/SHH4d/rYdf4f15DN6Q+Ay4dwpeo4p6tXuK63+jjPxzeIr1v0sV+nUU/Cy8
XRX1z3C4Hbx9FfXPCPhpeJsq6pVhKfLlDlXUPyPhZ+A/uJ7p8KwixutXWI/8
O0U+61JGvj4gxf7Xs4x8d0yK/enJvL/35/i5LeMeuxfrGXjvrU/dz85h/FfE
epexnx6XIt90KKM+2idFfu1VRn45NkX+O4/zb8zz+CXr15PhNeA5WZ+uXoU+
6AY/BPcpI18dnyK/We+Yjy+BZ6oHy5g/V6fYv18vQx8cliJfvFiGPvtPivw2
uIx8fWqK/NCxjHpq3xT6YlE9np/7p/dzITwNnlnE89CPMr+fkkIPqOceUi+k
yA9r5/2wR4r9YZ28f76VYr2ulfP3myn2i/9UUT98lKJ+2aeK+mlCivp3P3ip
+T5FffvvKuqfSfCL8L5V1GcTU9THB1ZR332Sor7Zu4r6bnyK+nZ3eIH5N0U9
tHnerwal2F/2qqI+ez9F/ej8sB48OoXf0ynrEf0o890D8CPqgSL8lPuquB/q
e+fH0DLy3ekc/yU8vR71+6vEb4QfrGJuuX/4PKcRfwF+BW7rfl0Pf+7KIvyk
qYz/h/UM+rIV19s567fRReTbLlnvjClCf2yZ9+chKfb7g6qovyfDrxBfM+u5
N1Ls7xvl/a9viny7WxX14ugUfsBhVdRHU3K9vF4V86Mn/Ai8QRXrrxf8aF7/
7vevp8gHG+b9tE+K/PxLPfT6J0WMP6AKv+HjFPXv4VXUg1NzPf0z48cz/uMi
Pu+4Kuqxr1P4E8dWUQ9+levRXauop99NUR8dWkW990WK+vvoKuq3GfDr8BFw
IzwtRb1/fBX15jcp/IJDqqgnP09Rr2+R8+PgFPnzmCrquS9T1Oc7ZD3yNrwm
8T1z/h0Hr9cUe7Za2RrFvdz5/jO/13i+6xN/B17O2ozxG8H7w7+qN+ANmmKO
OdesKd2bnIPORfcEvT5zirnFOam35Rxzrpmz3Et25nzfOJbzrc35dsx6azG8
Fvw23Dz7NRs2haejNlOj6S2eT3y/hqiprK3c06zNzTnudQ8wZvOGqEHfq8Ij
0ityz9G71uPR69ED0rvX09HbcQ/V+9Nj0mvSE9Jbtsa01nRP1yu15rL2co/T
yxzOZyzk97/52zpNoanV1ubMIWXUVNbuPlNrLWtua2/njLW7HoJegnNKr9w9
ztpHD929zz3e2sKaxr3fmt/a32eu97xzfj7WkBP5fSd+9uL3bfgZz+9n8NPE
7z9wzKZc3yh4VXgdeJOm2OOtZaxh3PuvJH4Wv1/I37ZoihxiLWUOMre4h6v1
zQnu7SMZv8j5k+fXCPgPeClj1oWPgpvxedOJb9wUOVgtbo1hblYDWMu5x6sN
zIlqd/dA98Jnq6g/hvK3zZsix1ibmFPMPXp4ennWzPYOzMHmYnOKuVwNZC2t
Z6020iPSK1KT6IWv38hc5/pWSVFf659Zb6/Lz8YpPES9RD0kewcbNMZc8/5Z
z6/XGOu3VQp/4Iy8vq7Jz8/n8bXzI0V937wx8oHzxf1QT6ptXo/2Ztxn3W/V
mPo3w/L61G91PZsTrJVb5/ujR2KvSM9L70SPRO9Lz1fvxDW1JMU5XGt6snqz
eqT2ps7J9/umvJ71xO/I91+vvE1e765nc685wdxgT8Legxp2ShEaVG1bNg+/
RA9yoxQepV6lPQq9+KUp5qpz9o9cg1uLqznUkhPz9/P8ail7XKul2DPtfekx
6DWoQe1VqAHUru3z9akxrbXVSGpPNYq1pjWl2kUNZi2qRlKbqVGuzvdT7XIk
n1Hjs1L2U/4F/0KsIfs1RfPwh1rmZ97MvzfkY1Lca9eexywsQpPpfaiR1GrL
NA//xzXRPGsgvRY1qtqoefPwc5rynFy3MfSI59aPskaxVtGz07vTk9GbUVPb
G9Dz0vtSc9pbUVOprcwJ5gZzkt6dGttcZY7Ve1eDm3utwazFrBn0EqyZrAWs
CfQCrPmt/c35ehfmfHO/HoNehHuea/u0FHuhOUuvWY1jLvP+7t0Q91CvzZyu
F64GM9ebI/Wq1VDmTnOw3raay9ysh6GXoQbRG7HGtNa05lpaRo1jLeT6sfZR
Y1hLqrnUHmoCa0VrBLWCGkYto8bSS7DmtvZWU+oV6Pno/ahZ9Iqsua291ZR6
S3ocelNqDr0PNZpaTQ9Xr8I17lo3R6iF1Ih64e4Basf98/7onPioihyu165G
NberKfS61ShqDTW73rKaQi2vh6yXrEayl6wmsXeiJlWrqCHsPajB1BbWZOZW
c6y1mprX3o81j1pYzete436hNrAGm5bv12Y5n7g3ukfqTZ5eRa/BNa9Xqqa2
N6AGUmurqewtqOnUWq6nfzbEmvmwCs1jr8M5rhY6Kucr18DkKjS2vShrLrW3
Hr1evXuuvXE9c71zNZu9dWvI6fl5q7Wt0a3VraH15qyxrbXVhHqRegR6IdYM
egfW2NbaalK9TjW7XoCegFrenusVRWhke7F6dHp19jDsZajp5+b15Odbw1jL
qFGtNa0h9V7VsNaW1gj2wqxBrR3sAd9WRI/H3rAaVa1qzavWVVPrpeihqLXV
gPPy9akN9ZT0ltR89u7NyeZmc7Ja0ByyIN9P9wNrDntX1rjWImqYv/P89Pua
w5fm+btHFRp6ds6vams9ML0w+/djq6gR/kqR86wd1PRz8v6j1rdGn5zvv8df
mPXO3VkfqrHV2mp0tb4asDHPX9ePNbK1sp7Wd2V4Znpnevh6+dZ4ekNqZGs/
PTC9MGvsH8rwwPTC9OhmleEp6i3q0fxVhmend2dPd04ZHszkfP/1hvV09Hb0
EJeU4Xnpfem5/VSGB6cXp2e2sAzPR+9Hj25RGe8M2CM5IOsR3xE5uYieufpW
zd0yr8+Dq6hh9Z70wKxtrXH1wqyxrH316PTq9OR+KcOj06tTM/0OD6yiF2R+
1ovUs9O707ObV8Y7GKdmfe27GWryRUXkZ7XlqHrkbjWB2uC4rMdPzfn5hpx/
O+T7ryZSG62a9fmAKuaGmsb54DsJvptgT/jPMnqGXXL+tpdoj9h3MewJ2Tv+
tIre5878fFaFRjMvNuX9xx6271rYI5qR9au99i35GVOFR2b90S6vT3ta9rbs
admrtWdl78oelb1ua2BrYWvmmfDtrs8UPcv5Zbxj4Hr/f8+0jJ6fvT97LvYu
7YH7rok9LHvjm3G9Q4rwCNdujJ7nC0X0rOyF2lOzt2ZPyl6nPaxHi3gnxN6W
PVjfhbB+sjerJleb67mt0xg12XIpcoi5RA2qLmmZ92M1g9qhlvOtPauheX6Y
z+0R+S6N9Ya9IzWqvShrCLWrGsjekjnb3K0GsnflHu5e7jsYvfP6+7sMj25q
EZ6S3p2e0visH/Sa7s3rVc+7VoWn8mcRnpxey315/fXI+dPn30I9xHdYrnnU
EKvm52+u0MP7oQiPUG9vkzz/Vsn5zXdSfDfFdx7+KKPH6LsQ1q/2Hn2nw3c7
fIdhQRk1hvfHZ+az00OckPO7euHBnN+H5/3Ant+onO/tBVpjbZIiR5orfV4L
U8xJ56Y1tppxac6vvtPiuy320Bfn+fZgindARlehB32We+cen57OI0X0cPR6
/I7uFbNyPec7H77rY73juyC+w3BKET053204ONdnn+X63j3Vvf3TXG/bU+pY
RE/GXpM9mTfyfLdX457lubdOsZfZM7a+sv5Sj55kjmqIdxV8Xup9tfBeucdp
D+T7IjwA9yP1sHPzn7kn+kEV2qBZ9iPs0dqL950ve7fmIHPf2BS5yfyzKIWH
YG/m/Sr095LsJ9jj9900e/r2/vVcWqTw9PRifGfOd+d85+DHMnKeuXRMilxo
PrMmcw8dV0UP216+77zZ27bHeXkRPQV7n/YUbi3Cg7PXcGLW69Yr+i16cHpx
viPybRnv5Plunu9czC2jx2OvR33vuz/2FN4vomdgr8F3mny3yXcivi/jHb/u
WX/8XEaPyl6VPSPfRfo/krHEFQ==
            "]], Polygon3DBox[CompressedData["
1:eJwt13WcVWUaB/ArwkXmMsxgB6i4urq26666trtrBwKCCCpKGICUipTSSglI
SCoS0gYh3SGd0tKhdEso6n6fPfPH85nzfM/vfc+5p6dE5dqla+VLpVJbVAGV
LpJKrU6nUoVVfisezXC2Sp9RZ7NHWFf1ob5JTiq1MyuV2qX2ZqdS3dhcE007
S1bmGzWELWCz2YX6QubbwIqqLPM9xcapUfof5BbLXaGfEM7WsZXsGn1+Y3+I
cSqfsQ+zs9lKfSF1jroqN5X60/78ofbYp67stP0cL/ud5bXmW2G+q/XfqqFs
IZvDLor9UMPYIjaXXaw/xzbWs9zYju0+zQqyNfpsVYA9xr5SX+rnGTvT2PNj
m7EdtpItYpfrv1aD2Xw2i12gn6t2sZz4HearoO+p2uub2//Dfs8RNdZv+ger
aOyLqox1s+QWsSP6vea7Vz9TLWSH2R52j76X6sBaGHPUXMdUyu9YGudWnZF7
QCYfWx6/S/3BHmI9VDt9M2MPGndI/WJfJrEDtrFL7jqZ3upj1lLueGTUDLaA
HZLbLXd3HKfYHzaZfcfO0VdXt7BS7HHW0djOrD7rwTqzVWwI+4xNZxNYRv+5
+oR9ZLtnZH5X4+3fv9lLci+rctZNk5vGtut/NPYm/dQoto1tYDfq9xnbh02N
61m1N3YKn8K26tfL3RDbVO+zz1lPtjHv2MQx2p6dnL8jxnaRa215sFw/uR3W
91RlLJ/gJ9XlRZJ7Ke6pzcZ+FMc2J/kt8Zt2sy7sFNsTvdrC2rCD7EfLLS2P
sY0R5t1qfV/b7cRaW39Kf1ptlGvFxsqNlNvG1rKm7Bv2dVxH8utYM/atfqjc
Jrka5ruVlWFPsE7sZ/WT2pSdPBf2G9s9k+zXB5b3WrdP7bd+IFtl7BJjz5U5
wAax1WwpK8o+VW1ZU2P3G3dALZarzTrLfaJqWNctkxyj93OSYxHHZDKbzLbI
rDPf9frf+K+xn9nJNXJSfoPlFpZHyw2X22L9HNl16XgQOk7sSf16ueb6UXLD
2Oa8/Yn92pad3BOHzXed585xy9fmS67/v+Um+1zH8hdxztVPOclx/iCd9OH1
2dC4ftkM/UTbKJxJ7vW453dkJ/fsUbnZfK3lP+VOyT0RzyrVj81kk1i2frj6
gs1ik1mRTHL84zxszU6O7SHzjeQDLM+RmyqXqx+h+rPZbArL0R8yZiTbxFaz
S1gf1ZG1Ms8J856M/ZUbzXbIbZQrkUnu/3gO7MxO8sfj+WF5hOWNcQ+qwrnJ
/daXLYl3QLyMcpNrNa7Zn6zrbN2JnGQ7sb1d2cl1/Qs7Znl8Opkr5uwa9wyb
z37X/2Jf7opnRiaZ58Oc5HqI66KYe+4Iu1Fd7dy9JrPM2Lf1A43tY+xyuaWs
HhvAerNl7DJjD7Mb1F+MrWbscrl39IPk+sqtkFvC6rL+rBdbysaxe1lNVo31
ykreZSvi2mO/qoH2831zPsbe0FeWGyzXlD3NarE32Ej2AXucVWdV2BDWhD3K
XmOvsi9ZA/YgK88qsn5spX1pwIay/mx13rvh/++InOS6Lh7vXrmGlofJDZBb
a/0YdhN7hpVl881/oezeOCaqmOPyMruI7Y/7Q/01/jq/57GfLV+pLpGrKNdQ
PaSvEO83830Rx579wfawHXHs9RcYuyfe9+oyY19il7CDce+pEqwKO5/tjl5d
yl6Mbwv7/F/9O+arab7+tnGp3CF2fcwpVzXe3XL36GvIVZXrLXex3AF2Xey3
XOW837ZPf5G6WI13zFYY+57lIXGfG7sm7939z3TyLop30my594x/gJXTV5D7
PHLx7cRWsIWsuL6FepbVjWcf+0auJSvL6rPabAxrzkqyOqw6+5o1Y8+w2uxN
9hX7kJVnDVk9Ni4ruS+Hp5P7L+7DjvavtdzzrIG+rtx3cq1YOfYeq8PGsvbs
tXj/smZsDmvHqsX9xpqy2awDe521Yc3ZXNaR1WKdWFu2hH3M3mIdWRu2mNVl
d7EqrBT7lNVn97Pn2AvsM1aP/YtVY6VZD9aWVYrvF9aITWNvsb+z59lT7BOW
7VxuTiffkvFN+ZVjMDq+7Swvk5svd5l+THzHseVsASumf1fdx0qz8qyv+Wqx
29kL7GnWhdVkt7Gy7EnWmb3JbmYl2WPsY9aGvRzvQdaQTY33mHM0h+1l++JZ
ZP8+knsp3rX6BnJT5OqwO9mr7FnWndVmd7BKrCTrxt5md7PXCyTfIvFNctw2
JsZ7nO1k18pMZE+wRuxtNkyuMX+EVWWvsEFslVwjNjyeX2wdGxDvdDaBjWYF
9KvlGrMRbBBbL5fl2P/IzlUZ99YzcmvkmuhHyn0pt0GuhFymoGeAekjuFbkM
2yh3nirMSsZ7THWP+9HYUcbm1xeW28TOV9lyz7IibGs8g1RR9hzLZdvj2RJz
snJsupqt/9l828x3uz5Hbls8W2K/5cpmknM0N508w+NZXjw3ua625D0f4jlx
DTsjN8/yGZnj5rszvlXY9+w3dozdwY6ysWwX28yuivd7Jvnfpq3zn7J8Vnwz
yI1hO+U2yV2ZSd6NE9LJtRLXzIW22y+TfEe2yUn+T4r/lwaxnmySzFhjC8ac
9nkZyx/vUfYgO2G+6fqjcf2xW9hJNoMdY/vZzfG8ZovZWXEc2P3sT7ZEny9+
H7uPDVQ99BONHcPS+lNyM9lxdoDdyk6zWfG+ZwfZbexc+7cz3k3qAse+fJwf
uVf0zeVaxDvTb5zOXohjFWbsBL93CivF6sX1HO9CudXGp11TBWO/zbdGP0/u
DX3P+O40dp6xjfjDrDKrxAayRXI1WV/WnS2M96pcPvOdYkfZD/o5cpXlurB2
bHpWss+vppPv2vi+3WpfFsueYbv12+OZGN+1ck+xJuxdNtzY5TxlGyfZkfje
0H8vV1WuG+vAZsrNZVVYV9aezWALWQ3Wh3VjC9gk9iRrzN5hQ9kCVp31jm+r
eMezqxz7bNstoq5xrF633Wlyz8m1kmsiN0ruCrn8MgUiK1dKbqZcRbn2cq3k
JsoN5r3ZFDaOFdLPkKvA2rGWbLzcleYrZK4sVdx8leTmy70p10uui9z3ef/7
/SednNs4x0sd06msDGupbyz3rVxR8+1gxeKZYL7nzTcpk3xnxPfGb3xRPP8y
yXmI83GaLdTPMt+Lljuw1tZNyruuSqeTay+uwXW22yneDexTfae4DuT+B/V2
miM=
            "]], Polygon3DBox[{{3014, 1778, 1454, 1455, 1779, 3015}}]},
          Annotation[#, "Charting`Private`Tag$129838#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFmmeYFMUWhscddVqmdj3rVTErKiiiiEQVBAHJIDmqIEEkSVRJSlQRFcw5
55wT5pwVc06IShbEnL3vd79+nvujtt45fbqnp7q6zjlfba1hE3qNrygUCn/z
p0j/WVYoPAXPLBUKjVKhcBN8SlWhMJLPN8JPcPwu2jS4FbaGyfYF+BwA3wAf
UFkodOXYAvhRfBtgvx6ui3132qF8US36+hy7G/s4fA/i85vwkfgeAr8ND4a7
cOw0eAm+Q2ir4OuwXcuxzbjOaL63Bf5vYT8KW2e4NfY96Efivx77rfjvz7Hr
4L2wH4t9A3wb9kG0S+CHsR1FWwFfg20wvBK+Fh5Iuxh+EFtf+Hz4Kfhqrrkp
3zWKe7gGLsLHwlPgD/DpDl+N397Yl3PeVfBe8FfwlXAdeBl8GbwH/Dl8BVwb
/hKeTN+P1pd2Afad6D/UvcC7wp/AF8I7wx/pvuAd4Q/glVEojOBzL+6hPr+5
A/b96C/Htif8BT7Hwb9wn/fAreGX4fnw8dz/R3BPzp0Mfwj3gDvC98EHc53r
8N+H63yLf3vs92Jvhv1w+EH4DPzH4fMzfDc+M7B/AffG3hV+AD4d7gzfDzfk
3Ivw34Vrfox/98zfey58OMc6Yt+f/hD6o2kXcqwN/fCin2sT+iNoM+G5XPcx
zt+yulBYS38Rtnvpb+e7tsRnMseb0w/RuHKsf8nXewSfdbRr4afpZ2F/Fv4E
ng0/B38Kf1nmHuDHud4UfSdtAO0WPif6CVz/G3yOwecZbF/DI3RN+C7af/CZ
gs/B9INpZ3BsBT7H0j/L8a/gYfCT8CSOT6c1Kno+zMjnxDJ8hup9xGc5PFxz
Em7GsSNpp/N5Dt9xN/dbxTiszmy7n/6ezO/mKvqhRZ+j+b2ezzfTv05/GGPd
VPONa87nOi9iC67Tr+Qxe57P/TUW8GXYptAegpdiOxX/N+n/ZQ7W4zrtuM4+
9OPxuQef5zjWI/McOw/bd5nXmZfpT+Pct+ir+a5hJT/bZ/l8ENc4iraQz2sy
93fSDy95bXkB7qT3r+j5dBv3XQVP4nq3wpXwRHhD5rn3Dv3JnPsM/BH8feZ5
+yp9C3xHFH3difTTaANpx3DsO2y3cN54+FfNK3gnftuBHG9HvwOtMdyWfjda
K7gT/Y6VnqPt6Xep9Hd0oN+b1hbuQn8J1/qca37Ftd8oeZ4s1/uar2la2/al
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
/p/GBe+PzzXwUMVN+BH4BMVZjr0If6exwn4nPAb7qrLzluexjy26BlH9+Ubm
8VT9vSRZzzlZeSOfd4c/y2PNrXz+i7nfWms69kPpv82c6+p5fZnPVc3Zfpn1
lkvz39I399f8HZDP85Vl5xjPqZ5K1l5m8T3dK103SZN5KFlTmon9weR1YEaV
Y55i34vY/gznXtOxP5ysU50Ejym65lJddC3H6+o+teYk1yBT8WmUec5Mxj4K
W5ein/f9yTXFNHxaat4WXTduQztbcwP/y8J5njSWM8Pamdaii8O5o/STXZKf
0eeKCWH9S+vPWWENTuvVW+H86Xt8FoV1Ot3bJ+GcSXXl4rCWp/s5N1yDaUwu
Cue10mEuDOe10oUuCNchGs/O4Xh/UJX1T2mHXbB1Csf7A7G/Hc7VNqr+DWud
0t92TV4fvqA/L1wjaWzPD9c8miejw1qntLVzwtqcntGb4Tm9QfV6OLeWRvR0
eO5+CV8VzlM1J68I56bSoA7h+OFFawFXhvNXzZOFYb1S+tXpYS1SetqUcD2p
Wub4cD2p+mhMWG9V7Xkg59+qWAM3Tc43Wit2hPOAD6QlhOsBaWXXh/PFVzUG
4Vz/Zfi6cE75CnxXOC9/D74znB+oJromnOtrfl4dzvVVaytuKr5IH7whnKe+
hv3ucB7zPnxCuD5UrdchnGM1hduH87AmVdZwpBd2wxbJ8fQz+sF8PlRrf5Xz
Penf0kV6h/XuVtgPDWs3B8gnnLfVh1uH53dD1e/hPK8BPCSsz3bKtRTlvd2T
3x1pXtLahoU1NdVuhyTXAsulhySv36vp++PTJPOYd0vOmdfQjwhreaoHd0jO
LZtJ8w/r4NJ+h4Y1WdV6x4S1cunbzZLXvWX0HcO5rM5tGc4794ffyMdE62GP
cD7dAvvh4bzzYK054fW9ucYnOX61g3uG19BD4HfCNc8PyfFOGmRXbO+G66If
sS8Nr8Xr4V7hWNhSewTh/HU/uE3yvkN7abDh/K+e5mc4z6srvSpcY0iHUS2g
/QdpYO+H6w3pUR+GaxJpRM3CNcDenPtRuAaTbvNxuIaRlnVQOO/cB5+24Xqj
MTwprKdIizsxrEdIQ5gc1mKkRzXK1+Q+ytEq/W72om9e6bWxN30133FKha9Z
Az6pwuNfrrbm9b/aimu+knlPR5qkNNT7sW2XXCNonteo9pqrOaO9HunA0pGP
wq8FfQd8UrW1NtV6f4RjeU2utyKcH5cUm8L17ebww+H8XnrgZ+F4LM1te63d
FX6nVINrj0Xanmpw7ck8CldWOy+RdqR6XFr+klxfVC2jPZm/yq7j9Bz/5tjj
meuXCr3PFX7uj4XrCsWCYnK9pvfunnDdIu1UGqrGsFPJuq708vukNYbrgU84
75Zwfb4UfjxcT2p9fjBck3wKb8I9v515X+zWsGbxJvabw/X8G8qvq61Lqnau
gN/NvCdSqLZ2qXezVO21eJXGuezaU/NHOrNyutu53qfhel7a6Z/4HFfhObwp
576feS/moXBNojVqdbgu2oJrrArXZhm8JlzD1IBPC+8tSTOfG9YNVV+cGt6L
0h7HvLD2pxphTlhjUs0yI6wfSe86OaxJaV9sZlhLkq51Ulh7kj7WMjlHOgye
HdaztK93SnhPS5rSgvD+kPT8ceG9K2liByfnhG3giWGNUvr22PD+k3TR48J6
vTS3O8J6zTucNz2sZ0lzmxrW/qStjQ/rntJRbwtrPW/hPyusqWm/r0WyJtAW
bhLWEerAy8K13CaM4dpwfViGvwtrEJXSZcO1XwX8ZThnLcBfh7WYTeFvwvrF
ZvDycN1YlA4azl+lgf8S1pu2xl5OrmcVU34N577bYN8iuW5VHNkY1iMC+/fh
WndL6axhXaO23uvkWlgxaAD2ppnH9sewFrAV/j+ENY5q+LdwLr4tvC6sDSX4
p3C9/R94fbg+r4L7wY0z5wDNk/Ptr5LrU9Vu2me6OLl20LkXJef5+t5WyVrW
18m5sXJa5bZ3JmtWWn+mJ2sFWn+ODtdg2l+4SlpD0WMi3Vh1ofLptWVr1Hp2
05I1BK1X68rWvjQmVybXKRrnWcl6jt4dxWDF4rUa42TdQO9Ru+Q99BWqWZK1
HcWvuslajWJfvWSdR7Fpr2RtR7Fv32RdSHmC1g/lw9qrmhDep9E+zj9l6xKa
w22T9cBv6W9K1j/1LFona4PfaC1K1lWU2xSSdQnlS3NoP1Z4fu4NX1bhWNwz
WWdbpzUyWevTnJyYrHVo3k5I1jo0zyfB31R4fp6erAvpWS9I1ls058cn6zCa
5wOSdUjl2wOTdUjlvf2SdUvF7v7Jup9y1yOS6xrF97PDtYRqjUHJNZ3ygdOS
dSrNvanJWp/eneHhWkh7NGdrnS163iqeKi9SfqQYqjqsk8aDsR1Z4Tg+O1nH
q5HHXNUxHTTOYe1Se0DaC1J8aV7yMfmspF+cXHvqXVuUrAnrXbs8rEdrH2dU
eE9Re/SKc9J6FPe0z6N7qKN8PazpaO9+fliLke6xU3IdpJriibCmo/+p2DF5
T1A1hepn1dHKRRXzpZNof3Nj2Xqd8t76yfW4aoFXFHczz1vFT+1d6v89GuT7
79qHX1+21q08/GX8D8o891Snd8Wnh9aHsjXA17HfGNZzxc+Ga13t4/9S9v+Q
KIb+XLYGqJj4ZFi30n7x63m+ofFUHOtW9D7ir2VrVoqnz4Q1FP2/x6thfUH5
ifYuld8qz90yWe9VXP6+bA1fNYXire5Ze5wvcm6zzGvLb2VrJlrztT+rveW+
HK9K1iSVA2iuaM4oLk8L7xVpD2hD2fqkapOXsB+Y+R18IV9LlZNrP1d72n20
rudjrlz0iHw8lfc+l6+TyqsH5vemWDMov6ZiZV+OLalwXSCNWFqxaqjnw3m+
1lVpKRq3nvT/BRvHn+4=
            "]], Polygon3DBox[CompressedData["
1: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
Y1H8Y/Rc4Jl/hqZJ1mdnRufj5pnnRydx0vHdxJ3FzcVB3Czz/DhCXF08OVnP
j4iO39013kXjLcRbaPy8ZH1/SnS876rxozT+nrhaTcdk5u/b4k3El+j4H3X8
ePGPOr4sniLOxU0rjkHEyt2jY1PHzLH3CfE/vF/qEGI7+SD6PfA+mmvbOfq5
8HyI78T577Qdr/3G2h7k2TOXtd9U207i77X1036TKmvuVsFrnTW/iDkUPBeY
E8R5Yh6xe7foWEiMmkssjI5dZ4qXiweIv6o4BhK7d4mOjcRwYvG+0bGdGEhs
2zU6NjJ/PhL3F69EX4rfEfdhrYtHipeJ+4q/EF8r3kT3NkP8u/g08bsaP078
ZcUxk1hfJzqWMu+Z/x211WdOiBexfsUHR+uJzbU/S/sbdHwN8fnE8uh6IRef
J94uup4gZhO7t42uv4ihxNLNxXeJ/xWfLt5CfDe5XN/Xh+/Sdps+K+n8M8gt
2r9X4//p+FHkEvE9xI/M8e5V8b8V6/OK+Arxn+I5yXr5rOh6E01A7twjWisM
0vcNqiryNTFLfH/ZegJdMTe5Hjk7ut5lHbIeWfPURLOT9e+k6Pq1ZXDsJwfc
o88ODs4l5JQ7xN9q61vlHEXN+Lt+zzCNb6r9O3T+OF1vhXiQ+BvxWPHH4oHi
rws9WdK508W/VZyzyKVbRucyciy5c6vo3EtOJhdvHZ2ref7k6hid28hJ5OYQ
navm6/g/xeeJfxGfLf5SPIy1UOjBP8Tnin+uWA98Lh4qXoWeFn8hPpm1VXH8
XC8eJ15fxOvvxKeJV4unir8Xny5eI54m/kE8SrxWPFP8k3iC+KeKY9rgYo1P
zp3D0QI1onP7OeKV4uHiH4r5h3bZJlpLkLOniivRuRzNhRbcP1qL9UBD6vm2
ZO7pu4Zo/DWNdxN/pPGa4jloE/FhaDHx8+Ijxe+hvcQviI8Svy/uLX4S/SZ+
p2JNhtasG63VyIdLxb3En1as6e5Bu0VrvRFoEnFv8WcVa0K0537RWpF89qq4
q/hD8axk/Twx2m8hR6N1NonO3eRotNCG4Nw9VMe/Ie6h8Y/RguLXxd3FyyvW
TGijzaK1FBoALfNHoQ1+Fo8RlzTeEG2s898UHyNeIe4jfgq9KV4mHiB+UdxZ
/AHj2oYH/+ZWyTmXGPSgeGpufX259l+O9guoufGyWOOsdWp4vAxqEmp7aixq
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
ThcV98c75l3jF+DH8Y5518wBegvkcHI5eh1/iXqcXsv9xf0y55h7zAm8f/7G
AL8IfwY/5Kdk7xYPAy/jx2QvA88S7/Ln5FoBjxevd12yt4fHhtf2X/K1uCZe
1PHaRgZ/f/tkzcr5eFZo2X+TtexGj0v8d7J3ttETE/+Z/Fs21iTiv5K9so01
ifj35NoCDY+W35DsdVJzUHv8k+ydbfTkxJtk9prwxPDGOmfuzfM3G/z9yZ65
vQhqAOIf+gN98FOwVsfTxdtFs9TPXLNQu6C/+fsUPFC8UHJ008yeNd41GqBB
Zk8RbxG9u/HvTTJ7ScyPQzN70HjRaMaG2l+f7BXjoeKlljJ7eXhqeGt/UMOU
7fHi9VZp/KuyPTi8uJXJ2hwNjZb+MllLM8eZ6+XMXh0eHF7cZ8lanznKXK1b
5NNno2uBr5JreTQ/2r9tcXzT6JqUGpJadEVRW35TMB4RXtEXyWuLNcPa+Tx5
7bDGWGv8TSd/20lNS237dbK3hIeAl0ANzLN7M7o2jpm9LDw9vL0tMntdeGR4
ZeOL+TU42jvYLLN3haeFtxUyx288Lbytapm9RzxavNpNM3tfeJJ4k5tn9t7w
0PDS/g9ToPu8
            "]], Polygon3DBox[CompressedData["
1:eJwt13m8VdMeAPCj5B51O10ZUlEypNkQiTxPM6JSmifd5vFqnufRUClTosiQ
OdMzR2hSylDhPYQGhdI8aJD3/X32/eP3Oev33b+19j777L3WOuVy85r1L5BK
pTaIQuKi7FTqWVAhnUp9ICZkUqk/iqRS7dnz8hfEOHZQ3c3a/xWfONZBfkjc
Iv9efMo6yg+LRvIfxDLWSV5d/5Lym7KMIerkpFJHeWM2Ub5SXa68RdFUql/B
VGof/0ncIN/N62gPUfe+upbyP8WNrKNxmmk3F8dFMzZV3efqeshP178Xm8+2
sLFsl7jNOWo41lT7drFT3MquZo21m4j9ooG+I/T9SN+28r2iHhvGlrDW8hNx
fjaNrWU95XtEXTaUfcBayY/FudgUtoZ1l/8t7mDT2TrWS36qa7iTPci+Z0PZ
P6I1u499zfrJU+rasBlsPevPCrB2bBbbyO5iBVl7dj/7hg1gWawLe4RtYiPY
CL/Rk2xj1IlZ7u1p6nLZw/If1Q1XdzJ+J3Y3+4L1lqfV9WSPs81sDCvEOrOH
2A9sGJvpHFvZNlHN/X6f7RP15cPVfaiujfyv+I3iWWQrWGd5MeMNZy+zfWwG
O5NNYG+x4+wRVpyNZ/9hx9jD7Aw2ki1mB9gsNtm1rGZroj+rzqaxr+Xroz+7
kl2i7wPx3Om7nJeXT1S3RPvDdPLuxDtUSAzXXsxeFePV5Kgdof2Kvvsdm6nm
SDxrcTzGY3fKi6jrw55g29h4VpQNiPHZTjaN5RpzInubvSOG+40Kq+vNFsi3
qhun7oBoyEaypayd/Bx197PlrLB7v4idxaazJewUNp+dze6O78YKsAUswway
RWyX8aazfq5lNlsR76+Y5FpKqJvL1srP0PcVddnsLvYM+0PfqewK8WbcX75S
TDJWJXWrtNuom+tYZflg/ljMBewi472q32ZxNWvlfNdp1xJbRA3Wml2v/S/x
i7iKtWQ1tK8R20RN1pbdqF1b/CwuY52dY6HzVpP/JC5mzdkcVla+NcaI69P3
Bu1/x9zn+m5i92Ql81bMX5v4RawZm61vGfld6h6KuZOdp+4F9k3cG3YtG6zu
lJi/1HVjz7PnxA7nGsAeZv+Tn6/vizHfsO4xN7M/9R0Z8wjrwV5ku9kolsce
ZN+x0vo+z76N9yHm1qzkeY3ndmM8g6wmGxSLQ9wT32Ud2y2669tYfkvMB9q5
6j7lF8tHO8cz2jtYZcfeifeAPcG2sEvZm2wke4r9yiqyt9gY9iz7jVVh77Jh
bAHbzMqzN+J+xpokP0d0dH3nFk3mq4Uxl8RzH++/e9Uo5jV9usS84VgF+Sh1
T2tvZ5Uce9t4Vfnn8RywR+M3lzcUnRxvxd5zrIy8bsynbIf8JVEq3gPjPRJr
nroyjr1kvK/i/WeXsz7G+8v62UBtR8f/iPdflJbXFx3Y7/I3xXnyL2KO1q6i
by99D+s7yDnmsU3sQvWL1WwQhdk1bKC6f9S1VpfH3mBH2GQ1bdkQ9i47we5m
7dkw9j47ye5l7dhQ9h77m92TP79MSifvc7zXh9zTrmwK+0ye7VoeVdeXzYp5
kpVgz7AubDJbxYqwuflzxJx0sp7EunLUeB3YKPaRvKC62eo6s3Gxh2BZ7MF4
/9i+eO/FxaK6vnk++4tlamuruzz2AOpG+1zKT2X36/uruJa106dOrMWik7ox
7GN1hdTNYXeysbGfYaexB9h2cR1rr2+9WJvE+thLsBrqBrhXJ9373vrOYF+x
s/V9Sk0fNpN9Hc8qe5p9H3Mvq88m6JuRN1bXis1jP7E+7AdRgjVgE1mx2C+o
68SeirmADY61l/WNNYYdZBNZK9afvc4Os0msJevHXovfkU1g/dkD7FtWyvU9
x34U57KGMYery5E3UdeBPcl+ZYNYL3Yf+5Kdpe9C1o1NZatZUTaPNWUd2UK2
Xd+BrDubFmsty6h7jPVg97B1rDh7krVhg9PJ2hZr3B6/QU92L/tCfqa6J7KT
dTnW5+pxPWKKmlO8S221Z6rb4FiemiH8cfZzPEP6vhbromgQc3ns9VjNmAuc
Z41oqP76WL9ykn1h7A9vyiR7zXU5yXoR60b9TPJ8fZaTPFvxjDXIJM/N6piH
Ym2I64w50zmq+7w5xopnK/adrJbPRvo00We26/vWNXeNdYyVjeePPRZzXf67
sD/mQ3FJuHNUiO+s7nr5EHUHPJM3s9qxnrJVrIW+l7IUq8WuE4tykvs8KJ2s
MbHW5LFL2F/xnsVapu8u45VnR+VXxXvHdrKhbL6+v8S1+B6v569bXdncmE9F
z5xkfYx1sl4mWXNX5STX8k/+d4jvUiMnWb9jHa+TSdbwFezaWKfjXmeSNXxZ
jKddTbuvfotdSxXHd2Qnv1eHnOQ3bZi/zsd6XzuT7BOWx3qtXVW7j76vxN4i
+rHKrBd7iVWMc7JyMaew+ax0/l4i9hR1M8n6v9J412hfEOdV97i6Uo5XYUXT
yT2Oe10r9iesIushfyH+Y8V4rArrzV5mlWKuYheyTmwBOy/2NbEnYj3Zi+zS
2PewMjGvsXmsZHbyzNZKJ/NizI9xLy5nZ7LG8vvUna5ujTgRa5bowvb6Ldex
AuoqxW/GDrG17GSsO6Ib288+Z3/LLxBd2T52pXOcrW9TNpNlq1ktjsceR+Sy
PepuVddU3Rz2Heui5jNxLOYg0ZntVrecHYo9hGjLfmNj9V2k7++sqmftvdgL
eG8+YbvSyV4k9iSbYq+m/aPPUWpHiy/Vniqvpt3beEeMt5IdkV+Wlfy/jf+5
K9jhGF+0Y7+zT9mB2LuI1mw7W8YOxt5FtGE7iiS/eSad/KeN/7avufeVWBar
Ix+j7liR5P9vKdaC3SHeUXcVK51O/lfE/4szYs/FirPb2L2sMLuCncWasBms
CPtE7JWXEy3ZNueoqO60WBfj+7PjrDJLs7psLDvBPtZ3j7ysaMG2siVsZ6zl
4nb2M1vKdsvPj2tmW1hV4xUz3i1sMiugplr8z2GN2BRWkH0odslLimbsF30/
Yn/KS4vmbDP7P0PQG4Y=
            "]], 
           Polygon3DBox[{{3304, 2109, 2263, 3724, 3144, 3145}, {3306, 2111, 
            2256, 3718, 3148, 3149}, {3151, 3150, 3722, 2261, 2262, 3723}, {
            3661, 2134, 1945, 1944, 2273, 3391}, {3149, 3148, 3720, 2259, 
            2260, 3721}, {3361, 2238, 1876, 1877, 2239, 3362}, {3305, 2110, 
            2265, 3725, 3146, 3147}}]},
          Annotation[#, "Charting`Private`Tag$129838#3"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
          "Directional", 
           RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jlPVUEUAODzQEAEgc5CHsSapWRH9gbRwlI6EwgaIg0hWBjClgchhC1A
R2igIzTa2WFl6YbKnhD+AH+Ab0Jyz3xzMndmzsy9z96Ovf6QiYhZ0a2T+s81
17x9GFHBTHFENStYz2q2s54DbOcgX/KVeK8/wo+c4ALnuM117nOXX3jIbxx9
FPHEvr3ip7yTjaLhQcQveSN/s4l/2MxjtvAvW/mPbfyfauJJOgtP2cGztC7P
2cWLdGZepnkFEU/t1yeu0jibxXf1/ZB/5REP+Jk73OMqtzjDHMc5yWEOiXf6
/XyTauQL1rKNWdaxjFWscQc37LFveaqZWbGZ7x35Bh9zjaVcYQmXaWos0VKx
SJ8uciziPAvTN6ZjxjQdO6boiU+avHRnBisz9//BHcqnN+A=
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jsvpFEcwOEzZN22WNFgXcYY1mXIVgqXiCjcZsZ1RVwSYQjbrIRPQKJT
0GroREMnGjoRCZ1sJHQSEj7BbuWZKH55zj9535zznryxxbXxP5EQwraSOSH0
GfrZpJ2iECbN+1ziMTd4zi1ec49/ecgXvurUOvdrCJcs4R1jfOJPvrOb/5lm
ob0e2Ma0yjSoHkXzQihnDb8zxgrWspJxVrGO1axnlD/YoBrrRsay38RaNjPO
BOvYwnp+yw+hncPZ9zWkXq06WylnWMAk/zl7F9/YykdGectiXjDCoBPrZ/dy
wHvu8oqbPOM6j5jhjecT9kjpl3mAnfr9JYQJ8wrHucwxZjjKBY5wnsOc46zS
1tNMcYpJTnKIExzkGAc4wv7s+d1DR87n//AB27Iz5g==
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jtPFFEYgOEPtmCDUGBjDCGyctnlJiHEREt+gbqwsCxCQSgRQkDlYmFM
bLAglFAYSy2oIaGHXwAVF4VlxYQOGmLDM6F485yTTGbOfDOZydn8TFVEfNVi
KuJVdcQC+3TyIGLC/orv+J+fWFsX8Y2Puckcf/EFX2rHusB9TvGQ87zgF95w
nSnP+MGHHKiPGOayMvqgGR3VRDzlMVuSM7GVp2zjb7bzD7M8Y47nLKvD+oKd
rLCLf9nNS/bwH58l16UjilxRrz5qVrvO2MwtNvA7q7nGa+/ymWXO8YCT3OMg
89q2fs6fbOcGH3GVaa7w1mynk5maQ797L2nc/j1Lyfdwxrf2vRxjD0vs4ig7
WGSWI2xN5qVh6wwLfMIhNnGQjcwnz+Sb5Ex8zYo5jKbu/4c7ua8+pw==
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2291, 2602, 1091, 2290, 3727, 2507, 2292, 3728, 2508, 2293, 
        3729, 2509, 2294, 3730, 2510, 2295, 3731, 2511, 2296, 3732, 2512, 
        2297, 3414, 3806, 2298, 3733, 2513, 2299, 3734, 2514, 2300, 3735, 
        2515, 2301, 3736, 2516, 2302, 3737, 2517, 2303, 1258, 2518, 2603}], 
       Line3DBox[{2305, 3415, 3807, 2304, 1105, 2306, 3738, 2519, 2307, 3739, 
        2520, 2308, 3740, 2521, 2309, 3741, 2522, 2310, 3742, 2523, 2311, 
        3416, 3808, 2312, 3417, 3809, 2313, 3743, 2524, 2314, 3744, 2525, 
        2315, 3745, 2526, 2316, 3746, 2527, 2317, 3890, 2604, 2673, 2528, 
        2318}], Line3DBox[{2320, 3418, 3810, 2319, 3419, 3811, 2321, 1119, 
        2322, 3747, 2529, 2323, 3748, 2530, 2324, 3749, 2531, 2325, 3750, 
        2532, 2326, 3420, 3812, 2327, 3421, 3813, 2328, 3422, 3814, 2329, 
        3751, 2533, 2330, 1264, 2674, 2534, 2331, 3893, 2608, 2676, 2535, 
        2332, 3891, 2605, 2678, 2536, 2333}], 
       Line3DBox[{2335, 3423, 3815, 2334, 3424, 3816, 2336, 3425, 3817, 2337, 
        1131, 2338, 3752, 2537, 2339, 3753, 2538, 2340, 3754, 2539, 2341, 
        3426, 3818, 2342, 3427, 3819, 2343, 2613, 2614, 3896, 2344, 2616, 
        1275, 2345, 3892, 2606, 2675, 2607, 2346, 3894, 2609, 2677, 2610, 
        2347, 3895, 2611, 2679, 2612, 2348}], 
       Line3DBox[{2350, 3428, 3820, 2349, 3429, 3821, 2351, 3430, 3822, 2352, 
        3431, 3823, 2353, 1143, 2354, 3755, 2540, 2355, 3756, 2541, 2356, 
        2619, 2620, 3897, 2357, 2623, 2624, 3899, 2358, 2615, 2680, 1274, 
        2359, 2617, 2681, 3824, 3490, 2360, 3491, 3911, 2682, 2618, 2361, 
        3900, 2627, 2628, 2362, 3901, 2630, 2631, 2363}], 
       Line3DBox[{2365, 3432, 3825, 2364, 3433, 3826, 2366, 3434, 3827, 2367, 
        3435, 3828, 2368, 3436, 3829, 2369, 1155, 2370, 3757, 2542, 2371, 
        2621, 2683, 2622, 3898, 2372, 2625, 2684, 1282, 2373, 2626, 2685, 
        3830, 3492, 2374, 2636, 3831, 3494, 2375, 3496, 3832, 2639, 2376, 
        3493, 3912, 2686, 2629, 2377, 3902, 2632, 2687, 2633, 2378}], 
       Line3DBox[{2382, 3758, 2543, 2380, 3759, 2544, 2384, 3760, 2545, 2386, 
        3761, 2546, 2388, 3762, 2547, 2390, 3502, 3763, 2548, 2643, 3489, 
        3764, 2549, 2644, 2635, 3765, 2550, 2394, 2646, 2692, 3915, 2551, 
        2396, 2649, 2693, 3916, 2552, 2398, 2638, 2694, 3917, 2553, 2400, 
        3498, 3766, 2554, 2402, 3500, 3767, 2555, 2404, 3768, 2556, 2406}], 
       Line3DBox[{2405, 3842, 3442, 2403, 2641, 2691, 3914, 3499, 2401, 2640, 
        2690, 3913, 3497, 2399, 3495, 3841, 2689, 2637, 2397, 3504, 3840, 
        2648, 2395, 3503, 3839, 2645, 2393, 1292, 2688, 2634, 2392, 2601, 
        1254, 2391, 2642, 3838, 3501, 2389, 3837, 3441, 2387, 3836, 3440, 
        2385, 3835, 3439, 2383, 3834, 3438, 2379, 3833, 3437, 2381}], 
       Line3DBox[{2408, 3769, 2557, 2407, 3770, 2558, 2409, 3771, 2559, 2410, 
        3772, 2560, 2411, 3773, 2561, 2412, 3505, 3774, 2562, 2695, 3918, 
        2652, 2563, 2413, 3443, 3843, 2414, 2647, 3775, 2564, 2415, 2650, 
        3776, 2565, 2416, 2651, 3777, 2566, 2417, 3778, 2567, 2418, 3779, 
        2568, 2419, 3780, 2569, 2420}], 
       Line3DBox[{2422, 3444, 3844, 2421, 3781, 2570, 2423, 3782, 2571, 2424, 
        3783, 2572, 2425, 3784, 2573, 2426, 3903, 2653, 2574, 2696, 3919, 
        2654, 2575, 2427, 3445, 3845, 2428, 3446, 3846, 2429, 3785, 2576, 
        2430, 3786, 2577, 2431, 3787, 2578, 2432, 3788, 2579, 2433, 3789, 
        2580, 2434}], 
       Line3DBox[{2436, 3447, 3847, 2435, 3448, 3848, 2437, 3790, 2581, 2438, 
        3791, 2582, 2439, 3792, 2583, 2440, 3904, 2655, 2584, 2697, 3920, 
        2656, 2585, 2441, 3449, 3849, 2442, 3450, 3850, 2443, 3451, 3851, 
        2444, 3793, 2586, 2445, 3794, 2587, 2446, 3795, 2588, 2447, 3796, 
        2589, 2448}], 
       Line3DBox[{2450, 3452, 3852, 2449, 3453, 3853, 2451, 3454, 3854, 2452, 
        3797, 2590, 2453, 3798, 2591, 2454, 3905, 2657, 2592, 2698, 3921, 
        2658, 2593, 2455, 3455, 3855, 2456, 3456, 3856, 2457, 3457, 3857, 
        2458, 3458, 3858, 2459, 3799, 2594, 2460, 3800, 2595, 2461, 3801, 
        2596, 2462}], 
       Line3DBox[{2464, 3459, 3859, 2463, 3460, 3860, 2465, 3461, 3861, 2466, 
        3462, 3862, 2467, 3802, 2597, 2468, 3906, 2659, 2660, 2469, 3907, 
        2661, 2662, 2470, 3463, 3863, 2471, 3464, 3864, 2472, 3465, 3865, 
        2473, 3466, 3866, 2474, 3467, 3867, 2475, 3803, 2598, 2476, 3804, 
        2599, 2477}], 
       Line3DBox[{2479, 3468, 3868, 2478, 3469, 3869, 2480, 3470, 3870, 2481, 
        3471, 3871, 2482, 3472, 3872, 2483, 3908, 2663, 2664, 2484, 3909, 
        2665, 2666, 2485, 3473, 3873, 2486, 3474, 3874, 2487, 3475, 3875, 
        2488, 3476, 3876, 2489, 3477, 3877, 2490, 3478, 3878, 2491, 3805, 
        2600, 2492}], 
       Line3DBox[{2506, 2672, 1338, 2505, 3889, 3488, 2504, 3888, 3487, 2503, 
        3887, 3486, 2502, 3886, 3485, 2501, 3885, 3484, 2500, 3884, 3483, 
        2499, 2671, 2670, 3910, 2498, 2669, 3883, 3506, 2497, 3882, 3482, 
        2496, 3881, 3481, 2495, 3880, 3480, 2494, 3879, 3479, 2493, 1333, 
        2667, 2668}], 
       Line3DBox[{2700, 3016, 3507, 3922, 2699, 4029, 2921, 2701, 4030, 2922, 
        2702, 4031, 2923, 2703, 4032, 2924, 2704, 4033, 2925, 2705, 4034, 
        2926, 2706, 4035, 3508, 3923, 2707, 4036, 2927, 2708, 4037, 2928, 
        2709, 4038, 2929, 2710, 4039, 2930, 2711, 4040, 2931, 2712, 3614, 
        4138, 2932, 3017}], 
       Line3DBox[{2714, 3509, 3924, 2713, 3510, 3925, 2715, 4041, 2933, 2716, 
        4042, 2934, 2717, 4043, 2935, 2718, 4044, 2936, 2719, 4045, 2937, 
        2720, 4046, 3511, 3926, 2721, 3512, 3927, 2722, 4047, 2938, 2723, 
        4048, 2939, 2724, 4049, 2940, 2725, 4050, 2941, 2726, 4051, 2942, 
        2727}], Line3DBox[{2729, 3513, 3928, 2728, 3514, 3929, 2730, 3515, 
        3930, 2731, 4052, 2943, 2732, 4053, 2944, 2733, 4054, 2945, 2734, 
        4055, 2946, 2735, 4056, 3516, 3931, 2736, 3517, 3932, 2737, 3518, 
        3933, 2738, 4057, 2947, 2739, 4058, 2948, 2740, 4059, 2949, 2741, 
        4060, 2950, 2742}], 
       Line3DBox[{2744, 3519, 3934, 2743, 3520, 3935, 2745, 3521, 3936, 2746, 
        3522, 3937, 2747, 4061, 2951, 2748, 4062, 2952, 2749, 4063, 2953, 
        2750, 4064, 3523, 3938, 2751, 3524, 3939, 2752, 3525, 3940, 2753, 
        3526, 3941, 2754, 4065, 2954, 2755, 4066, 2955, 2756, 4067, 2956, 
        2757}], Line3DBox[{2759, 3527, 3942, 2758, 3528, 3943, 2760, 3529, 
        3944, 2761, 3530, 3945, 2762, 3531, 3946, 2763, 4068, 2957, 2764, 
        4069, 2958, 2765, 4070, 3532, 3947, 2766, 3533, 3948, 2767, 3534, 
        3949, 2768, 3535, 3950, 2769, 3536, 3951, 2770, 4071, 2959, 2771, 
        4072, 2960, 2772}], 
       Line3DBox[{2774, 3537, 3952, 2773, 3538, 3953, 2775, 3539, 3954, 2776, 
        3540, 3955, 2777, 3541, 3956, 2778, 3542, 3957, 2779, 4073, 2961, 
        2780, 4074, 3543, 3958, 2781, 3544, 3959, 2782, 3545, 3960, 2783, 
        3546, 3961, 2784, 3547, 3962, 2785, 3548, 3963, 2786, 4075, 2962, 
        2787}], Line3DBox[{2791, 4076, 2963, 2789, 4077, 2964, 2793, 4078, 
        2965, 2795, 4079, 2966, 2797, 4080, 2967, 2799, 4081, 2968, 2801, 
        4082, 2969, 2803, 3613, 4136, 4137, 2970, 2805, 4084, 2971, 2807, 
        4085, 2972, 2809, 4086, 2973, 2811, 4087, 2974, 2813, 4088, 2975, 
        2815, 4089, 2976, 2817}], 
       Line3DBox[{2816, 3977, 3561, 2814, 3976, 3560, 2812, 3975, 3559, 2810, 
        3974, 3558, 2808, 3973, 3557, 2806, 3972, 3556, 2804, 3971, 3015, 
        3014, 4083, 2802, 3970, 3555, 2800, 3969, 3554, 2798, 3968, 3553, 
        2796, 3967, 3552, 2794, 3966, 3551, 2792, 3965, 3550, 2788, 3964, 
        3549, 2790}], 
       Line3DBox[{2819, 3562, 3978, 2818, 4090, 2977, 2820, 4091, 2978, 2821, 
        4092, 2979, 2822, 4093, 2980, 2823, 4094, 2981, 2824, 4095, 2982, 
        2825, 4096, 3563, 3979, 2826, 4097, 2983, 2827, 4098, 2984, 2828, 
        4099, 2985, 2829, 4100, 2986, 2830, 4101, 2987, 2831, 4102, 2988, 
        2832}], Line3DBox[{2834, 3564, 3980, 2833, 3565, 3981, 2835, 4103, 
        2989, 2836, 4104, 2990, 2837, 4105, 2991, 2838, 4106, 2992, 2839, 
        4107, 2993, 2840, 4108, 3566, 3982, 2841, 3567, 3983, 2842, 4109, 
        2994, 2843, 4110, 2995, 2844, 4111, 2996, 2845, 4112, 2997, 2846, 
        4113, 2998, 2847}], 
       Line3DBox[{2849, 3568, 3984, 2848, 3569, 3985, 2850, 3570, 3986, 2851, 
        4114, 2999, 2852, 4115, 3000, 2853, 4116, 3018, 3001, 3036, 4117, 
        3019, 3002, 2854, 4118, 3571, 3987, 2855, 3572, 3988, 2856, 3573, 
        3989, 2857, 4119, 3003, 2858, 4120, 3004, 2859, 4121, 3005, 2860, 
        4122, 3006, 2861}], 
       Line3DBox[{2863, 3574, 3990, 2862, 3575, 3991, 2864, 3576, 3992, 2865, 
        3577, 3993, 2866, 4123, 3007, 2867, 4124, 3020, 3021, 2868, 4143, 
        3022, 3023, 2869, 4125, 3578, 3994, 2870, 3579, 3995, 2871, 3580, 
        3996, 2872, 3581, 3997, 2873, 4126, 3008, 2874, 4127, 3009, 2875, 
        4128, 3010, 2876}], 
       Line3DBox[{2878, 3582, 3998, 2877, 3583, 3999, 2879, 3584, 4000, 2880, 
        3585, 4001, 2881, 3586, 4002, 2882, 4129, 3024, 3025, 2883, 4144, 
        3026, 3027, 2884, 4130, 3587, 4003, 2885, 3588, 4004, 2886, 3589, 
        4005, 2887, 3590, 4006, 2888, 3591, 4007, 2889, 4131, 3011, 2890, 
        4132, 3012, 2891}], 
       Line3DBox[{2893, 3592, 4008, 2892, 3593, 4009, 2894, 3594, 4010, 2895, 
        3595, 4011, 2896, 3596, 4012, 2897, 3615, 4139, 3028, 2898, 4145, 
        3029, 3030, 2899, 4133, 3597, 4013, 2900, 3598, 4014, 2901, 3599, 
        4015, 2902, 3600, 4016, 2903, 3601, 4017, 2904, 3602, 4018, 2905, 
        4134, 3013, 2906}], 
       Line3DBox[{2920, 3035, 4142, 3618, 2919, 4028, 3612, 2918, 4027, 3611, 
        2917, 4026, 3610, 2916, 4025, 3609, 2915, 4024, 3608, 2914, 4023, 
        3607, 4135, 2913, 3034, 4141, 3617, 2912, 3033, 4140, 3616, 2911, 
        4022, 3606, 2910, 4021, 3605, 2909, 4020, 3604, 2908, 4019, 3603, 
        2907, 1800, 3031, 3032}], 
       Line3DBox[{3038, 3352, 3619, 4146, 3037, 4245, 3260, 3039, 4246, 3261, 
        3040, 4247, 3262, 3041, 4248, 3263, 3042, 4249, 3264, 3043, 4250, 
        3265, 3044, 4251, 3620, 4147, 3045, 4252, 3266, 3046, 4253, 3267, 
        3047, 4254, 3268, 3048, 4255, 3269, 3049, 4256, 3270, 3050, 3711, 
        4348, 3271, 3353}], 
       Line3DBox[{3052, 3621, 4148, 3051, 3622, 4149, 3053, 4257, 3272, 3054, 
        4258, 3273, 3055, 4259, 3274, 3056, 4260, 3275, 3057, 4261, 3276, 
        3058, 4262, 3623, 4150, 3059, 3624, 4151, 3060, 4263, 3277, 3061, 
        4264, 3278, 3062, 4265, 3279, 3063, 4266, 3280, 3064, 4267, 3354, 
        3395, 3281, 3065}], 
       Line3DBox[{3067, 3625, 4152, 3066, 3626, 4153, 3068, 3627, 4154, 3069, 
        4268, 3282, 3070, 4269, 3283, 3071, 4270, 3284, 3072, 4271, 3285, 
        3073, 4272, 3628, 4155, 3074, 3629, 4156, 3075, 3630, 4157, 3076, 
        4273, 3286, 3077, 3712, 4366, 3396, 3287, 3078, 4274, 3356, 3397, 
        3288, 3079, 4275, 3355, 3398, 3289, 3080}], 
       Line3DBox[{3082, 3631, 4158, 3081, 3632, 4159, 3083, 3633, 4160, 3084, 
        3634, 4161, 3085, 4276, 3290, 3086, 4277, 3291, 3087, 4278, 3292, 
        3088, 4279, 3635, 4162, 3089, 3636, 4163, 3090, 827, 4164, 3091, 829, 
        4165, 3092, 4280, 823, 3093, 4281, 825, 3094, 4282, 826, 3095}], 
       Line3DBox[{3097, 3637, 4166, 3096, 3638, 4167, 3098, 3639, 4168, 3099, 
        3640, 4169, 3100, 3641, 4170, 3101, 4283, 3293, 3102, 4284, 3294, 
        3103, 4285, 3361, 3362, 4171, 3104, 3365, 3366, 4172, 3105, 3357, 
        3399, 3358, 4173, 3106, 3359, 3400, 4367, 3713, 3107, 3714, 4349, 
        3401, 3360, 3108, 4286, 3370, 3371, 3109, 4287, 3373, 3374, 3110}], 
       Line3DBox[{3112, 3642, 4174, 3111, 3643, 4175, 3113, 3644, 4176, 3114, 
        3645, 4177, 3115, 3646, 4178, 3116, 3647, 4179, 3117, 4288, 3295, 
        3118, 4289, 3363, 3402, 3364, 4180, 3119, 3367, 3403, 3368, 4181, 
        3120, 3369, 3404, 4368, 3715, 3121, 3377, 4351, 3717, 3122, 3719, 
        4353, 3380, 3123, 3716, 4350, 3405, 3372, 3124, 4290, 3375, 3406, 
        3376, 3125}], 
       Line3DBox[{3129, 4291, 3296, 3127, 4292, 3297, 3131, 4293, 3298, 3133, 
        4294, 3299, 3135, 4295, 3300, 3137, 4296, 3301, 3139, 4297, 3302, 
        3141, 4299, 4300, 3303, 3143, 3384, 3410, 4359, 3304, 3145, 3387, 
        3411, 4362, 3305, 3147, 3379, 3412, 4352, 3306, 3149, 3721, 4355, 
        3307, 3151, 3723, 4357, 3308, 3153, 4301, 3309, 3155}], 
       Line3DBox[{3154, 4190, 3656, 3152, 3382, 3409, 4356, 3722, 3150, 3381, 
        3408, 4354, 3720, 3148, 3718, 4369, 3407, 3378, 3146, 3725, 4361, 
        3386, 3144, 3724, 4358, 3383, 3142, 4189, 3655, 4298, 3140, 4188, 
        3654, 3138, 4187, 3653, 3136, 4186, 3652, 3134, 4185, 3651, 3132, 
        4184, 3650, 3130, 4183, 3649, 3126, 4182, 3648, 3128}], 
       Line3DBox[{3157, 3657, 4191, 3156, 4302, 3310, 3158, 4303, 3311, 3159, 
        4304, 3312, 3160, 4305, 3313, 3161, 4306, 3314, 3162, 4307, 3315, 
        3163, 4308, 3390, 3413, 3658, 4192, 3164, 3385, 4360, 3316, 3165, 
        3388, 4363, 3317, 3166, 3389, 4364, 3318, 3167, 4309, 3319, 3168, 
        4310, 3320, 3169, 4311, 3321, 3170}], 
       Line3DBox[{3172, 3659, 4193, 3171, 3660, 4194, 3173, 4312, 3322, 3174, 
        4313, 3323, 3175, 4314, 3324, 3176, 4315, 3325, 3177, 4316, 3326, 
        3178, 4317, 3391, 3661, 4195, 3179, 3662, 4196, 3180, 4318, 3327, 
        3181, 4319, 3328, 3182, 4320, 3329, 3183, 4321, 3330, 3184, 4322, 
        3331, 3185}], 
       Line3DBox[{3187, 3663, 4197, 3186, 3664, 4198, 3188, 3665, 4199, 3189, 
        4323, 3332, 3190, 4324, 3333, 3191, 4325, 3334, 3192, 4326, 3335, 
        3193, 4327, 3666, 4200, 3194, 3667, 4201, 3195, 3668, 4202, 3196, 
        4328, 3336, 3197, 4329, 3337, 3198, 4330, 3338, 3199, 4331, 3339, 
        3200}], Line3DBox[{3202, 3669, 4203, 3201, 3670, 4204, 3203, 3671, 
        4205, 3204, 3672, 4206, 3205, 4332, 3340, 3206, 4333, 3341, 3207, 
        4334, 3342, 3208, 4335, 3673, 4207, 3209, 3674, 4208, 3210, 3675, 
        4209, 3211, 3676, 4210, 3212, 4336, 3343, 3213, 4337, 3344, 3214, 
        4338, 3345, 3215}], 
       Line3DBox[{3217, 3677, 4211, 3216, 3678, 4212, 3218, 3679, 4213, 3219, 
        3680, 4214, 3220, 3681, 4215, 3221, 4339, 3346, 3222, 4340, 3347, 
        3223, 4341, 3682, 4216, 3224, 3683, 4217, 3225, 3684, 4218, 3226, 
        3685, 4219, 3227, 3686, 4220, 3228, 4342, 3348, 3229, 4343, 3349, 
        3230}], Line3DBox[{3232, 3687, 4221, 3231, 3688, 4222, 3233, 3689, 
        4223, 3234, 3690, 4224, 3235, 3691, 4225, 3236, 3692, 4226, 3237, 
        4344, 3350, 3238, 4345, 3693, 4227, 3239, 3694, 4228, 3240, 3695, 
        4229, 3241, 3696, 4230, 3242, 3697, 4231, 3243, 3698, 4232, 3244, 
        4346, 3351, 3245}], 
       Line3DBox[{3259, 3394, 4365, 3726, 3258, 4244, 3710, 3257, 4243, 3709, 
        3256, 4242, 3708, 3255, 4241, 3707, 3254, 4240, 3706, 3253, 4239, 
        3705, 4347, 3252, 4238, 3704, 3251, 4237, 3703, 3250, 4236, 3702, 
        3249, 4235, 3701, 3248, 4234, 3700, 3247, 4233, 3699, 3246, 2274, 
        3392, 3393}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{893, 1092, 3727, 894, 1105, 920, 3811, 1118, 933, 3816, 
        1129, 944, 3821, 1140, 957, 3826, 1151, 969, 3834, 1162, 3759, 981, 
        1172, 3770, 995, 1184, 3781, 1009, 3848, 1196, 1023, 3853, 1208, 1037,
         3860, 1220, 1051, 3869, 1232, 1065, 3879, 1244, 1079}], 
       Line3DBox[{895, 1093, 3728, 896, 1106, 3738, 921, 1119, 934, 3817, 
        1130, 945, 3822, 1141, 958, 3827, 1152, 970, 3835, 1163, 3760, 982, 
        1173, 3771, 996, 1185, 3782, 1010, 1197, 3790, 1024, 3854, 1209, 1038,
         3861, 1221, 1052, 3870, 1233, 1066, 3880, 1245, 1080}], 
       Line3DBox[{897, 1094, 3729, 898, 1107, 3739, 922, 1120, 3747, 935, 
        1131, 946, 3823, 1142, 959, 3828, 1153, 971, 3836, 1164, 3761, 983, 
        1174, 3772, 997, 1186, 3783, 1011, 1198, 3791, 1025, 1210, 3797, 1039,
         3862, 1222, 1053, 3871, 1234, 1067, 3881, 1246, 1081}], 
       Line3DBox[{899, 1095, 3730, 900, 1108, 3740, 923, 1121, 3748, 936, 
        1132, 3752, 947, 1143, 960, 3829, 1154, 972, 3837, 1165, 3762, 984, 
        1175, 3773, 998, 1187, 3784, 1012, 1199, 3792, 1026, 1211, 3798, 1040,
         1223, 3802, 1054, 3872, 1235, 1068, 3882, 1247, 1082}], 
       Line3DBox[{901, 1096, 3731, 902, 1109, 3741, 924, 1122, 3749, 937, 
        1133, 3753, 948, 1144, 3755, 961, 1155, 973, 3838, 1301, 1302, 3763, 
        985, 1309, 1310, 3774, 999, 1313, 3903, 1314, 1013, 1317, 3904, 1318, 
        1027, 1321, 3905, 1322, 1041, 1325, 3906, 1326, 1055, 1329, 3908, 
        1330, 1069, 3883, 1334, 1335, 1083}], 
       Line3DBox[{903, 1097, 3732, 904, 1110, 3742, 925, 1123, 3750, 938, 
        1134, 3754, 949, 1145, 3756, 962, 1156, 3757, 974, 1254, 1303, 1255, 
        3764, 986, 1311, 1351, 3918, 1312, 1000, 1315, 1352, 3919, 1316, 1014,
         1319, 1353, 3920, 1320, 1028, 1323, 1354, 3921, 1324, 1042, 1327, 
        3907, 1355, 1328, 1056, 1331, 3909, 1356, 1332, 1070, 1336, 3910, 
        1357, 1337, 1084}], 
       Line3DBox[{8, 2297, 23, 2311, 38, 2326, 53, 2341, 68, 2356, 83, 2371, 
        98, 2392, 260, 2644, 113, 2413, 128, 2427, 143, 2441, 158, 2455, 173, 
        2470, 188, 2485, 203, 2499, 218}], 
       Line3DBox[{905, 3806, 1098, 906, 3808, 1111, 926, 3812, 1124, 939, 
        3818, 1135, 950, 1279, 3897, 1146, 963, 1280, 3898, 1157, 975, 1292, 
        1166, 3765, 987, 3843, 1176, 1001, 3845, 1188, 1015, 3849, 1200, 1029,
         3855, 1212, 1043, 3863, 1224, 1057, 3873, 1236, 1071, 3884, 1248, 
        1085}], Line3DBox[{907, 1099, 3733, 908, 3809, 1112, 927, 3813, 1125, 
        940, 3819, 1136, 951, 1281, 3899, 1147, 964, 1282, 1158, 976, 3839, 
        1304, 1167, 3915, 988, 1305, 1177, 3775, 1002, 3846, 1189, 1016, 3850,
         1201, 1030, 3856, 1213, 1044, 3864, 1225, 1058, 3874, 1237, 1072, 
        3885, 1249, 1086}], 
       Line3DBox[{909, 1100, 3734, 910, 1113, 3743, 928, 3814, 1126, 941, 
        1273, 3896, 1137, 952, 1274, 1148, 965, 3830, 1283, 1159, 977, 3840, 
        1306, 1168, 3916, 989, 1307, 1178, 3776, 1003, 1190, 3785, 1017, 3851,
         1202, 1031, 3857, 1214, 1045, 3865, 1226, 1059, 3875, 1238, 1073, 
        3886, 1250, 1087}], 
       Line3DBox[{911, 1101, 3735, 912, 1114, 3744, 929, 1127, 3751, 942, 
        1275, 1138, 953, 3824, 1276, 1149, 966, 3831, 1293, 1160, 978, 3841, 
        1294, 1169, 3917, 990, 1308, 1179, 3777, 1004, 1191, 3786, 1018, 1203,
         3793, 1032, 3858, 1215, 1046, 3866, 1227, 1060, 3876, 1239, 1074, 
        3887, 1251, 1088}], 
       Line3DBox[{913, 1102, 3736, 914, 1115, 3745, 930, 1263, 1264, 1343, 
        1265, 3892, 1266, 1346, 3911, 1277, 1278, 967, 3832, 1295, 1296, 1349,
         3913, 1297, 1298, 3766, 991, 1180, 3778, 1005, 1192, 3787, 1019, 
        1204, 3794, 1033, 1216, 3799, 1047, 3867, 1228, 1061, 3877, 1240, 
        1075, 3888, 1252, 1089}], 
       Line3DBox[{915, 1103, 3737, 916, 1116, 3746, 931, 1267, 3893, 1268, 
        1344, 1269, 3894, 1270, 954, 1284, 3900, 1285, 1347, 3912, 1286, 1287,
         1350, 3914, 1299, 1300, 3767, 992, 1181, 3779, 1006, 1193, 3788, 
        1020, 1205, 3795, 1034, 1217, 3800, 1048, 1229, 3803, 1062, 3878, 
        1241, 1076, 3889, 1253, 1090}], 
       Line3DBox[{917, 1257, 1258, 918, 1259, 3890, 1260, 1342, 1261, 3891, 
        1262, 1345, 1271, 3895, 1272, 955, 1288, 3901, 1289, 1348, 1290, 3902,
         1291, 979, 3842, 1170, 3768, 993, 1182, 3780, 1007, 1194, 3789, 1021,
         1206, 3796, 1035, 1218, 3801, 1049, 1230, 3804, 1063, 1242, 3805, 
        1077, 1338, 1339, 1340}], 
       Line3DBox[{1078, 1243, 1333, 1064, 1231, 3868, 1050, 1219, 3859, 1036, 
        1207, 3852, 1022, 1195, 3847, 1008, 1183, 3844, 994, 3769, 1171, 980, 
        3758, 1161, 3833, 968, 1150, 3825, 956, 1139, 3820, 943, 1128, 3815, 
        932, 1117, 3810, 919, 1104, 3807, 892, 1091, 1256, 1341}], 
       Line3DBox[{1359, 1582, 4029, 1360, 3925, 1596, 1388, 3929, 1611, 1403, 
        3935, 1626, 1418, 3943, 1641, 1433, 3953, 1656, 1448, 3965, 1671, 
        4077, 1463, 1685, 4090, 1478, 3981, 1700, 1493, 3985, 1715, 1508, 
        3991, 1728, 1523, 3999, 1741, 1538, 4009, 1754, 1553, 4019, 1767, 
        1568}], Line3DBox[{1361, 1583, 4030, 1362, 1597, 4041, 1389, 3930, 
        1612, 1404, 3936, 1627, 1419, 3944, 1642, 1434, 3954, 1657, 1449, 
        3966, 1672, 4078, 1464, 1686, 4091, 1479, 1701, 4103, 1494, 3986, 
        1716, 1509, 3992, 1729, 1524, 4000, 1742, 1539, 4010, 1755, 1554, 
        4020, 1768, 1569}], 
       Line3DBox[{1363, 1584, 4031, 1364, 1598, 4042, 1390, 1613, 4052, 1405, 
        3937, 1628, 1420, 3945, 1643, 1435, 3955, 1658, 1450, 3967, 1673, 
        4079, 1465, 1687, 4092, 1480, 1702, 4104, 1495, 1717, 4114, 1510, 
        3993, 1730, 1525, 4001, 1743, 1540, 4011, 1756, 1555, 4021, 1769, 
        1570}], Line3DBox[{1365, 1585, 4032, 1366, 1599, 4043, 1391, 1614, 
        4053, 1406, 1629, 4061, 1421, 3946, 1644, 1436, 3956, 1659, 1451, 
        3968, 1674, 4080, 1466, 1688, 4093, 1481, 1703, 4105, 1496, 1718, 
        4115, 1511, 1731, 4123, 1526, 4002, 1744, 1541, 4012, 1757, 1556, 
        4022, 1770, 1571}], 
       Line3DBox[{1367, 1586, 4033, 1368, 1600, 4044, 1392, 1615, 4054, 1407, 
        1630, 4062, 1422, 1645, 4068, 1437, 3957, 1660, 1452, 3969, 1675, 
        4081, 1467, 1689, 4094, 1482, 1704, 4106, 1497, 1784, 4116, 1785, 
        1512, 1788, 4124, 1789, 1527, 1792, 4129, 1793, 1542, 4139, 1796, 
        1797, 1557, 4140, 1801, 1802, 1572}], 
       Line3DBox[{1369, 1587, 4034, 1370, 1601, 4045, 1393, 1616, 4055, 1408, 
        1631, 4063, 1423, 1646, 4069, 1438, 1661, 4073, 1453, 3970, 1676, 
        4082, 1468, 1690, 4095, 1483, 1705, 4107, 1498, 1786, 1809, 4117, 
        1787, 1513, 1790, 4143, 1810, 1791, 1528, 1794, 4144, 1811, 1795, 
        1543, 1798, 4145, 1812, 1799, 1558, 4141, 1803, 1813, 1804, 1573}], 
       Line3DBox[{1371, 1588, 4035, 1373, 1602, 4046, 1394, 1617, 4056, 1409, 
        1632, 4064, 1424, 1647, 4070, 1439, 1662, 4074, 1454, 1778, 4083, 
        1780, 4136, 1469, 1691, 4096, 1484, 1706, 4108, 1499, 1719, 4118, 
        1514, 1732, 4125, 1529, 1745, 4130, 1544, 1758, 4133, 1559, 1771, 
        4135, 1574}], 
       Line3DBox[{1375, 1590, 4036, 1376, 3927, 1604, 1396, 3932, 1619, 1411, 
        3939, 1634, 1426, 3948, 1649, 1441, 3959, 1664, 1456, 3972, 1678, 
        4084, 1471, 1693, 4097, 1486, 3983, 1708, 1501, 3988, 1721, 1516, 
        3995, 1734, 1531, 4004, 1747, 1546, 4014, 1760, 1561, 4024, 1773, 
        1576}], Line3DBox[{1377, 1591, 4037, 1378, 1605, 4047, 1397, 3933, 
        1620, 1412, 3940, 1635, 1427, 3949, 1650, 1442, 3960, 1665, 1457, 
        3973, 1679, 4085, 1472, 1694, 4098, 1487, 1709, 4109, 1502, 3989, 
        1722, 1517, 3996, 1735, 1532, 4005, 1748, 1547, 4015, 1761, 1562, 
        4025, 1774, 1577}], 
       Line3DBox[{1379, 1592, 4038, 1380, 1606, 4048, 1398, 1621, 4057, 1413, 
        3941, 1636, 1428, 3950, 1651, 1443, 3961, 1666, 1458, 3974, 1680, 
        4086, 1473, 1695, 4099, 1488, 1710, 4110, 1503, 1723, 4119, 1518, 
        3997, 1736, 1533, 4006, 1749, 1548, 4016, 1762, 1563, 4026, 1775, 
        1578}], Line3DBox[{1381, 1593, 4039, 1382, 1607, 4049, 1399, 1622, 
        4058, 1414, 1637, 4065, 1429, 3951, 1652, 1444, 3962, 1667, 1459, 
        3975, 1681, 4087, 1474, 1696, 4100, 1489, 1711, 4111, 1504, 1724, 
        4120, 1519, 1737, 4126, 1534, 4007, 1750, 1549, 4017, 1763, 1564, 
        4027, 1776, 1579}], 
       Line3DBox[{1383, 1594, 4040, 1384, 1608, 4050, 1400, 1623, 4059, 1415, 
        1638, 4066, 1430, 1653, 4071, 1445, 3963, 1668, 1460, 3976, 1682, 
        4088, 1475, 1697, 4101, 1490, 1712, 4112, 1505, 1725, 4121, 1520, 
        1738, 4127, 1535, 1751, 4131, 1550, 4018, 1764, 1565, 4028, 1777, 
        1580}], Line3DBox[{1385, 1782, 1783, 4138, 1386, 1609, 4051, 1401, 
        1624, 4060, 1416, 1639, 4067, 1431, 1654, 4072, 1446, 1669, 4075, 
        1461, 3977, 1683, 4089, 1476, 1698, 4102, 1491, 1713, 4113, 1506, 
        1726, 4122, 1521, 1739, 4128, 1536, 1752, 4132, 1551, 1765, 4134, 
        1566, 4142, 1805, 1806, 1807}], 
       Line3DBox[{1567, 1766, 1800, 1552, 1753, 4008, 1537, 1740, 3998, 1522, 
        1727, 3990, 1507, 1714, 3984, 1492, 1699, 3980, 1477, 1684, 3978, 
        1462, 4076, 1670, 3964, 1447, 1655, 3952, 1432, 1640, 3942, 1417, 
        1625, 3934, 1402, 1610, 3928, 1387, 1595, 3924, 1358, 1581, 3922, 
        1781, 1808}], 
       Line3DBox[{1575, 1772, 4023, 1560, 1759, 4013, 1545, 1746, 4003, 1530, 
        1733, 3994, 1515, 1720, 3987, 1500, 1707, 3982, 1485, 1692, 3979, 
        1470, 4137, 1677, 3971, 1779, 1455, 1663, 3958, 1440, 1648, 3947, 
        1425, 1633, 3938, 1410, 1618, 3931, 1395, 1603, 3926, 1374, 1589, 
        3923, 1372}], 
       Line3DBox[{1815, 2027, 4245, 1816, 4149, 2041, 1844, 4153, 2055, 1858, 
        4159, 2067, 1870, 4167, 2079, 1884, 4175, 2090, 1896, 4183, 2101, 
        4292, 1909, 2114, 4302, 1924, 4194, 2128, 1938, 4198, 2142, 1953, 
        4204, 2157, 1968, 4212, 2172, 1983, 4222, 2187, 1998, 4233, 2202, 
        2013}], Line3DBox[{1817, 2028, 4246, 1818, 2042, 4257, 1845, 4154, 
        2056, 1859, 4160, 2068, 1871, 4168, 2080, 1885, 4176, 2091, 1897, 
        4184, 2102, 4293, 1910, 2115, 4303, 1925, 2129, 4312, 1939, 4199, 
        2143, 1954, 4205, 2158, 1969, 4213, 2173, 1984, 4223, 2188, 1999, 
        4234, 2203, 2014}], 
       Line3DBox[{1819, 2029, 4247, 1820, 2043, 4258, 1846, 2057, 4268, 1860, 
        4161, 2069, 1872, 4169, 2081, 1886, 4177, 2092, 1898, 4185, 2103, 
        4294, 1911, 2116, 4304, 1926, 2130, 4313, 1940, 2144, 4323, 1955, 
        4206, 2159, 1970, 4214, 2174, 1985, 4224, 2189, 2000, 4235, 2204, 
        2015}], Line3DBox[{1821, 2030, 4248, 1822, 2044, 4259, 1847, 2058, 
        4269, 1861, 2070, 4276, 1873, 4170, 2082, 1887, 4178, 2093, 1899, 
        4186, 2104, 4295, 1912, 2117, 4305, 1927, 2131, 4314, 1941, 2145, 
        4324, 1956, 2160, 4332, 1971, 4215, 2175, 1986, 4225, 2190, 2001, 
        4236, 2205, 2016}], 
       Line3DBox[{1823, 2031, 4249, 1824, 2045, 4260, 1848, 2059, 4270, 1862, 
        2071, 4277, 1874, 2083, 4283, 1888, 4179, 2094, 1900, 4187, 2105, 
        4296, 1913, 2118, 4306, 1928, 2132, 4315, 1942, 2146, 4325, 1957, 
        2161, 4333, 1972, 2176, 4339, 1987, 4226, 2191, 2002, 4237, 2206, 
        2017}], Line3DBox[{1825, 2032, 4250, 1826, 2046, 4261, 1849, 2060, 
        4271, 1863, 2072, 4278, 1875, 2084, 4284, 1889, 2095, 4288, 1901, 
        4188, 2106, 4297, 1914, 2119, 4307, 1929, 2133, 4316, 1943, 2147, 
        4326, 1958, 2162, 4334, 1973, 2177, 4340, 1988, 2192, 4344, 2003, 
        4238, 2207, 2018}], 
       Line3DBox[{1827, 2033, 4251, 1829, 2047, 4262, 1850, 2061, 4272, 1864, 
        2073, 4279, 1876, 2238, 4285, 2240, 2284, 2241, 4289, 2243, 1902, 
        2107, 4298, 4299, 1915, 2268, 4308, 2270, 2289, 2271, 4317, 2273, 
        1944, 2148, 4327, 1959, 2163, 4335, 1974, 2178, 4341, 1989, 2193, 
        4345, 2004, 2208, 4347, 2019}], 
       Line3DBox[{1831, 2035, 4252, 1832, 4151, 2049, 1852, 4156, 2063, 1866, 
        4163, 2075, 1878, 2244, 4172, 2086, 1891, 2245, 4181, 2097, 1904, 
        4358, 2263, 2109, 4359, 1917, 2264, 2121, 4360, 1931, 4196, 2135, 
        1946, 4201, 2150, 1961, 4208, 2165, 1976, 4217, 2180, 1991, 4228, 
        2195, 2006, 4240, 2210, 2021}], 
       Line3DBox[{1833, 2036, 4253, 1834, 2050, 4263, 1853, 4157, 2064, 1867, 
        2232, 4164, 2076, 1879, 2233, 4173, 2087, 1892, 4368, 2246, 2098, 
        1905, 4361, 2265, 2110, 4362, 1918, 2266, 2122, 4363, 1932, 2136, 
        4318, 1947, 4202, 2151, 1962, 4209, 2166, 1977, 4218, 2181, 1992, 
        4229, 2196, 2007, 4241, 2211, 2022}], 
       Line3DBox[{1835, 2037, 4254, 1836, 2051, 4264, 1854, 2065, 4273, 1868, 
        2234, 4165, 2077, 1880, 4367, 2235, 2088, 1893, 4351, 2255, 2099, 
        1906, 4369, 2256, 2111, 4352, 1919, 2267, 2123, 4364, 1933, 2137, 
        4319, 1948, 2152, 4328, 1963, 4210, 2167, 1978, 4219, 2182, 1993, 
        4230, 2197, 2008, 4242, 2212, 2023}], 
       Line3DBox[{1837, 2038, 4255, 1838, 2052, 4265, 1855, 2222, 2223, 4366, 
        2280, 2224, 4280, 2225, 2283, 4349, 2236, 2237, 1894, 4353, 2257, 
        2258, 2287, 4354, 2259, 2260, 4355, 1920, 2124, 4309, 1934, 2138, 
        4320, 1949, 2153, 4329, 1964, 2168, 4336, 1979, 4220, 2183, 1994, 
        4231, 2198, 2009, 4243, 2213, 2024}], 
       Line3DBox[{1839, 2039, 4256, 1840, 2053, 4266, 1856, 2226, 4274, 2227, 
        2281, 2228, 4281, 2229, 1881, 2247, 4286, 2248, 2285, 4350, 2249, 
        2250, 2288, 4356, 2261, 2262, 4357, 1921, 2125, 4310, 1935, 2139, 
        4321, 1950, 2154, 4330, 1965, 2169, 4337, 1980, 2184, 4342, 1995, 
        4232, 2199, 2010, 4244, 2214, 2025}], 
       Line3DBox[{1841, 2216, 2217, 4348, 1842, 2218, 4267, 2219, 2279, 2220, 
        4275, 2221, 2282, 2230, 4282, 2231, 1882, 2251, 4287, 2252, 2286, 
        2253, 4290, 2254, 1907, 4190, 2112, 4301, 1922, 2126, 4311, 1936, 
        2140, 4322, 1951, 2155, 4331, 1966, 2170, 4338, 1981, 2185, 4343, 
        1996, 2200, 4346, 2011, 4365, 2275, 2276, 2277}], 
       Line3DBox[{2012, 2201, 2274, 1997, 2186, 4221, 1982, 2171, 4211, 1967, 
        2156, 4203, 1952, 2141, 4197, 1937, 2127, 4193, 1923, 2113, 4191, 
        1908, 4291, 2100, 4182, 1895, 2089, 4174, 1883, 2078, 4166, 1869, 
        2066, 4158, 1857, 2054, 4152, 1843, 2040, 4148, 1814, 2026, 4146, 
        2215, 2278}], 
       Line3DBox[{2020, 2209, 4239, 2005, 2194, 4227, 1990, 2179, 4216, 1975, 
        2164, 4207, 1960, 2149, 4200, 1945, 2134, 4195, 2272, 1930, 2120, 
        4192, 2269, 1916, 4300, 2108, 4189, 1903, 2096, 4180, 2242, 1890, 
        2085, 4171, 2239, 1877, 2074, 4162, 1865, 2062, 4155, 1851, 2048, 
        4150, 1830, 2034, 4147, 1828}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
VEPDn9gMyA4rBGKXMz5dDi47978Rsej4gIxXHZcFKlx8//znxUSrX0AXkga3
K3V5htXWU7j9AXzVS23lqMvOUgzXezihtFn+ajs40m8rm3pSH8Yd2l/41/4P
4/BcP4d9Trt2TLeLn/NFaHQIMr5RGrx/Hh5UDaLn+D+50/7PJq0HfFAU8v2U
5c0tqhtX1S7486qcjs+u/Q/js2tmx4b10SFxHMZNqb+2EiHjlV5y9Wj5xDzV
n37z4b/RGcwFlIIPYc0L7jcOrzz5L+aFth/vKa376uByGKC7N8T3NIE1Pmrd
iY+R7/g8YkaurfOr/+3y98hLK/kPIjqSzoX6sM7kNnBKZg1ryHGk3me6Ra7L
4pF7nDJwxENfff/oPZ+GFUB8g9UsP6HE0/XZLb5Q9Puun/6DUNHBpiqZdGhA
qjqJOiYHrcHcoLBcEAO0bTftM72cDjGn06jEReeg0x+u8lIUwDovjSPu+XaV
w100UkVQ9vf19f6u7UAznS9n+70h2G9Zz5o3VS+Zif2s+SXVdSRpKc4vhK3n
41UYkf5zildkWYN+DbDMFWw80uoM4+kuJ7ISF+FeGiHq8E8jId/getliY0M4
1+Cu92lI1HW57qdw/gHusFEXPH6X9Cv8q+QVztoiM6jQmUE+fBHWxeJHjNXf
GERAGFPRghfbn0EOXmin+iYMIPaX5ux4hZwP/Hw9617qIvDQF3zBSZFHGa7X
nrX90FL8bggX7sK2bG+SCLIf2KFneXT8WzsQuTUoWZqBxK3wePFalLVt4du1
KrNg8Aj9Q2QcNrN+8eAP4hMXTuh96H5gIHK+MpEntfH9llqwMeK8uJNINtze
zR03Xwd34+/7Vlx4jjz1y12sinC9N3vTm4f/H/A83pcnIyaN8MfhnMoZei0P
aL2++0xQC/mOWKhYzDrD6Nc8207HOTo6J87RfmD7htwvCXKTp1T8ZIx1fo+9
Kuzy+g9Qcd5aQs8KDFi+rCMDJfAY0IaVeITl+kMbGD4IUvcj+XPoRGSq9/tC
AX4E54d+IHiocb3MHrP7UKV1R60H1nPx90wa48HoQiLfLNdh32PAgyOekUBc
QKvmO37ofQVPLPY8fq9eXO2KOR20kplu1r0xxNA+RjbxPvQpz9p59QfPF3r0
YtsQP0WCCZ11YXk9qGQysNcdRngyIXcbiGEo/SXPDiL169bLtkHOhKalPeHl
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
     "]], {
    {RGBColor[1, 1, 0], Point3DBox[CompressedData["
1:eJxFWHk4FNobnmEI11bXkrITKglRpDpHpN1SpOuq7LmEYtqtWSLJEi0uQuUm
RUVRZIaibGWNLhn7vowxllmYn+f3PPeceZ75533e5zvf+b73/c43o+Lid8yd
j0AgfF358q98s4wMumJdF4HT+VYtSgEXEP7/oYNzj9azTK93UPZE0Cs17FgI
r/c0s7xt2Ah2ne88eHG5i/Ifvvp1XuAwfQL8pAEvIe484gdPvc09v5EHnPZo
q2k8rEZ8f/Kj4z5j46D7kv5tMInPddp/Pv3BJD9M4+5u5lHHEN8zxT7anvEL
ZObMKv+9QQT+h/vcet16MJIIlRQLRiTj8blMOQ/hvaI80CfaMiH45xSKc1Ag
ghitTIKSNJJXCPUD4u8K3VcfljoHnIU2q4pdWEC4dLHnonZVP3CbfFVvHtqL
8Ifm6wdlDtMBob6oPswxCcU/r57V4ebAB2HEJ9VrZT2I78aLThaTFYTJX8Ie
XxxaRPxj42JFEV9EoEuH6h3pFCbih+s4y9g7M0Fmlmq2FPEL7suXaS+B9VwQ
Op9eUl/QiOJIaau2vDLqALnhcYWeW3EdZH/f9ONbLR+knVev6NWfQ3ht/IDn
71QCpBk1FRZzcD37ff6QjjUVgNUNjDGSAxPFf6pp+seVfCKk/9D8S9wdn3u+
jxked3sRbAo05krN4fhjFezI5kuroGTA23jtqjGE/9vRPAMiVvrMr9Hi0fQG
xVm/7WivEZsOcgqvLfZmDCG+b7B8k1o9D7xm/FN57d4Uwue1/HWVrdhA3W5J
KOz+AMJvulx+b7mWAVQJDwWKP+E+Prvp3HchiAiPp/ZEMQoE0X0nWlsUoqi9
4OArtZzhc8uI/+IleZRtOQMCZXWyIJuG8tRtlcxW30mEnlUnBxSYnxF/RKI4
xTJgFHhftte4UTaB/WJ8ROFckQAMIFI/bdHB+Uwpl6Q02wnDIO1NcZcGMd/J
yWVip0kfEBLpZ7F68X3DJp8YOxuzwEhl2a+OynaEF0e73g0OZIIY4ezHu46O
IBwkCCic+7YMSmmcr/ScGYRnquUrHrMmQXO9exu78tkIr3JmK/8+OAC6s2a5
f9cKoPrQX6wmu26QgNqGYvfbKbhu62uHA5ulxaCnUeCH7GECwmW/dpuMlPPA
sWnfWcJhrAc+jsTY8c4ecDIyK2YdwPeq/ydqTk53mHJiQTgss60b4SnRNyS6
3abA2SfV40FJuD6pox/IjZXLYDlK7SbdfRzhh3b8/HkkmwM65L5vP+XTifoV
kuOQf3kNPzz2U8/6tzESyrON1SEpeGAeJLR3n+rPxflEZ8tm9hJ4QDQ2Nzb+
Kfa7lIPzi0DQDZJKO6r7RKdR/C//CC7bS5DgbYn3ZwdacJ29S8h+QQFEGPnb
E7fdU/zo3H8/vazQKxCAvXczCRYX8Fy9VNnna8qbATFT6bTHA/he2Zo2mntD
+OARGenoIoD1ufhk7DqVOQnaZf2ll3/huRH3bNQp3ZEJ3PtyD5uP4DmQJHTK
RbGcCwTtwkuYLxkI31I7of7ZkAjvGZ9yq93Uh/A9/pZn72zmh/KnDG9H7cC6
8jQRrhWVEYTRV/wb3yVhn8rrBLsaNTLBmlukcP/5YYQne8/Iu6/cc1e1TXjT
t3qEV26NFdfyWamXxf7Rtt04/0m/rtrbXhxAS9Qscz+B34UtGUtmhuaDoGet
QNFMZCLC32842Rf2mg10DZa3d5iXINyi3KY9dhULMO0D9dVVcP2rok0NZZWY
4IEZ1zjMvwnxNxksnrapIcC83WMX68Rw3/9ICHLZpzUKtJ7aPRpTGES4SP4b
xYa/WKBmOej0NTPs69lRacMH95kgVXafjosG1n/wxp7tu1aTYPCck4yzHK6P
bqVyQ87UMGXAmyPx8XUz0hWJLK37XpUJjmjybEvNGxG/Z/XV8kuMMkqPBFU5
flsl4q/L0yidF54AUQ+9b3AP4nO1l+rrjpMYQHmdkbr8lSWsB6tEcv6Kb89J
em95nIx1+4BXdZ8u1wnmt8coflh5x/7DzbM4SlWkBTA9S/T5eAvXM00ihlY9
9AP0uKXElfP/RPlY3cg9kdo7AxyfX7pJTMQ6sdVUnPAsIMHlNmfZ8rIRxPc4
7uTK+E6ArfwLhcfEGxB/W2CVkdICH6Qqfv5zU3ASwuvaFTZf9VgA0ekdQQZH
vyFcSE07kNwqBIdKwuomHHH+4V8pYdnDk+CDsrztvTj8Xhia2KQkJc4BRgK5
VOk1xi+RY0+8Amxw+q0YafEB9p1rCI9c1M8C1hf5dW0BzvPHSGkEw3oVtLX3
ZlTGd+F+TZzN/fKyleIufDjllwTWM6l+B7NGpgUMuBpm3szDfV+c57bT9eeB
voxIkKsDnqsTr/aX24mT4EmLTSdTFXnY77bc4nXx4yCwwb18Thv7qDrZweLN
g0EgE+o/J3Uc993dMGgwpp8PrlU6E2bYgOcMvbv/cMmKj8rkHitQE2ax37e5
pGV8aqNkPBqe3RiG8bLZXitjpRGgu8nr/cbvNDw/bTv9lm2FIX/4r2puB47v
NxvpFLJtpU4pellra7DefPlydIe/LIDntFX7XkTh+yZ8Bu+q3MTh1rKurfEH
sL9MQynPI5iLYCDlaF5kMJ6fMLnykx4fH3Sw6pImBy/iOfNdLuM3lRW/brj4
p4RAJ8KN+G1N7d24oHtH160NOvhc2r1t3wMNRWEabNSWpWB9UpPO3jGYTQXk
ayMsXvIMwuFjD63MwgbKWJfJ7u2GHBQ/R9FqlZcCA1ALzLx7697g970yM0zq
BB+80+6nQWnGehA+ygua+7wEgiu2PjszifsbqsDLH2haBnY3j8O7/nS815mq
5ZqlM0D+t+FCm0B8365glX374wZB1XRTgmQ/1kO3pNXUZcgHmfqah/gqsX+b
rWi11PwhwBadfbKkNon4/JZ8e92ViLA7LqZFugbPk0NxVfztLwYB8YiARTFB
HMWxrv91i9ffRkk/oeQ0IU5E+HXLJN8YUT4o3nBn55oMnM87r76+wLxFcC9v
MT3hFq5bT7rFk73xLGDvnPbHQjF+l7e9i/OIrRCD1nuMd5Ve/Y7qr+/jaB1D
E4APhkqJqlq4j452P5OjkzhAvu2CB/vCMOIP6gVfi0uaAucaJR6xU/E+c/ca
nIizYYMrT9hQbhzvCSI1n+SzFHtBmonhgwN1+D0lrzIvVmrlgLdBHkPJN/px
nqn1LtpjBOjWZuQTt4x1osxj19rozAMYNGi95jf87mTo6f/QEmSAd19XAS2f
Zjy3ox1LqL2/gBv4+zxHB+vh3CeDdIOsLrA9fVGkM20U1y0l3C+67D3FaVx0
+YJzBd5X/yZu8a6kgbDCPPlgEdyv4rxBx28Rg+Cx+I5ndlw834SWlgTSJpso
qifbCjh6eB+4f/gk5evlWXD6Yp5gHAv7d6bnH0IYjwdsRQq3XnCuQjg1T45H
rP5Gib57+Q5lFL/LgSGWkqWtc0Bpw1s32Q04n90qxLwY7hBYVT1pMsWaRnzr
A+MJUTZcYGug0yynXot/l1kKBayxXwA6E8EL9Bz8nu65KnGDt4EDQlW7uvyP
4N8d042c3a39gjC1o/O7dxYfOhe4fPwhWcMCDsoEl6s+2Eenthp+1H/aD6rP
PLqeur8X1fNMyMPtj87MAdlKYZsiA+xHeadYGbsRIhReOl0b4Id1ayymoB31
mrEyL8OgtS+ewwGxAQrPT4wC7fDjA+nD2HeQ5lTyMYMBLCuvGPzFwnvIs1er
Q+psqinEK8mf9UKxH9W33Kor47BBznWCob4ujkPWCb9lyb8MJHsNSCdK8Z5A
NSeEEJ8LQBelHSIXd/9CfN7Cs9DWrh5gtnig/t0Sji/u91HX9yYHqEvnuWsk
dqM4V+XVUnZ1jIL6pKpM032Yf6NaJGJGigEimJpNozpDiP9m18ga+T8J0OzZ
/nElZzzPn4QVlrQkLoB1fMpnvJLnEH99wU1SvtgEqC6ga6yjYz/Kszkhx3Jn
QZ+v2QHZRjw3soTeOJ79ygHx/wrVyy7hOWPVSY58wWCAvZFXOk8rYZ1T47fk
VSg3gVqWsIW9ENZ5V0hiy7smDojs1yOyNbEeHA5NhtMWhSA8fEDqvlwFwiu+
JobUxEwCKrfiLUstC+W/874KmWXRA/bH9JC7XfHc8FbZ3Nug2QsyVHIWqLtx
faQM/Z86E0hw+oi1EKkS36vRwcQrrnEYvLzhdiA1DtfBpoyzmcMmwuy3wfbR
T/Hco1KEb9ea1VFgcsSzmFi8by8Jp4mZPOWCsbuTFpRsnI8QJ7Hp7ZYqIEs7
VJRbhv0y+7uqizF9AMjzl/X3vcPzR0rhdID6JTZ43te/3TMSvyN/mb3MMHck
whZL3vdFXbwn0Ee/8daas4FIuTNrShPnb7tTKrBhvJnisuOR3ugU/p/E1+NC
jWL2IDh57uqHx9NFeE9W2Kce3zIPbNkqQs7qLQj/H6X/Ngk=
      "]]}, 
    {RGBColor[0, 0, 1], Point3DBox[CompressedData["
1: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
nV/9
      "]]}, 
    {RGBColor[0, 1, 0], Point3DBox[CompressedData["
1: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

      "]]}}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{418.7422527385096, 311.2746180154955},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-4, 4}, {-5, 4}, {0., 0.9999907212389867}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.201508825270491, -2.6433254609418726`, 1.7375865590909663`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.725775720630707*^9, 
  3.7257757661024537`*^9},ExpressionUUID->"29a4787a-eea0-41d2-aa28-\
8071a364a898"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<Language\>\"", ",", " ", "\"\<the house is blue\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257759492529607`*^9, 
  3.7257759956705017`*^9}},ExpressionUUID->"a426992a-d6ad-4dea-bedf-\
30eb4da4ec67"],

Cell[BoxData[
 TemplateBox[{"\"English\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Language\"", ",", "\"English\""}], "]"}],
   "\"Entity[\\\"Language\\\", \\\"English\\\"]\"","\"language\""},
  "Entity"]], "Output",
 CellChangeTimes->{
  3.7257760165941143`*^9},ExpressionUUID->"972ba074-8e33-4896-aa3a-\
8e7fe9ba7799"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{
  "\"\<Language\>\"", ",", "\"\<the house is blue, la maison est bleue\>\"", 
   ",", "\"\<TopProbabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725776088369857*^9, 
  3.72577608842405*^9}},ExpressionUUID->"570e511b-8d80-4283-ba3b-\
aba653064768"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"French\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Language\"", ",", "\"French\""}], "]"}],
      "\"Entity[\\\"Language\\\", \\\"French\\\"]\"","\"language\""},
     "Entity"], "\[Rule]", "0.7078341950605682`"}], ",", 
   RowBox[{
    TemplateBox[{"\"English\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Language\"", ",", "\"English\""}], "]"}],
      "\"Entity[\\\"Language\\\", \\\"English\\\"]\"","\"language\""},
     "Entity"], "\[Rule]", "0.29203622634825427`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257760895926323`*^9},ExpressionUUID->"e9cf33e8-02f9-4329-b577-\
aed90f2aab45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<Language\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<What is this language?\>\"", ",", 
     "\"\<\[DownQuestion]Qu\[EAcute] idioma es ese?\>\"", ",", 
     "\"\<Quelle est cette langue?\>\""}], "}"}], ",", 
   RowBox[{"ClassPriors", "\[Rule]", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Language\>\"", ",", "\"\<English\>\""}], "]"}], 
       "\[Rule]", "0.5"}], ",", 
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Language\>\"", ",", "\"\<Spanish\>\""}], "]"}], 
       "\[Rule]", "0.5"}]}], "|>"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725776109337181*^9, 
  3.725776109386755*^9}},ExpressionUUID->"ae987df7-d05f-40e4-9347-\
4455f9781c77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"English\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Language\"", ",", "\"English\""}], "]"}],
     "\"Entity[\\\"Language\\\", \\\"English\\\"]\"","\"language\""},
    "Entity"], ",", 
   TemplateBox[{"\"Spanish\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}],
     "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"","\"language\""},
    "Entity"], ",", 
   TemplateBox[{"\"Spanish\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}],
     "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"","\"language\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.725776117106694*^9},ExpressionUUID->"18c8ea5d-898c-4b5c-9c5b-\
d364e1f62c2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{
  "\"\<FacebookTopic\>\"", ",", " ", 
   "\"\<I love eating carrots in the morning\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257761398306923`*^9, 
  3.72577616422176*^9}},ExpressionUUID->"c36203aa-2a90-47ca-acd0-\
41ac02ba32a7"],

Cell[BoxData["\<\"FoodAndDrink\"\>"], "Output",
 CellChangeTimes->{
  3.7257761769885254`*^9},ExpressionUUID->"e4ab03e9-bed2-4385-a099-\
6c60003de353"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<FacebookTopic\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<I bought a new computer\>\"", ",", "\"\<happy birthday!\>\"", ",", 
     "\"\<this skirt looks nice\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725776218448847*^9, 
  3.725776218500992*^9}},ExpressionUUID->"4f58bd00-6c11-4e3e-b7d6-\
368d4ee6a3b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Technology\"\>", ",", "\<\"SpecialOccasions\"\>", 
   ",", "\<\"Fashion\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257762247255015`*^9},ExpressionUUID->"5b745b91-f97d-4cc4-906b-\
24847414b72b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classift", "[", 
  RowBox[{"\"\<FacebookTopic\>\"", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<what is this topic?\>\"", ",", " ", "\"\<wdsfsdfsfsdffds\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257762373291464`*^9, 3.7257762518115873`*^9}, {
  3.725776290665859*^9, 
  3.7257763065501547`*^9}},ExpressionUUID->"af9b3d71-1c47-403b-b675-\
2c94a913103e"],

Cell[BoxData[
 RowBox[{"Classift", "[", 
  RowBox[{"\<\"FacebookTopic\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"what is this topic?\"\>", ",", "\<\"wdsfsdfsfsdffds\"\>"}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7257763111603103`*^9},ExpressionUUID->"4de1ccde-dc97-465f-9c11-\
01cded5beb5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<FacebookTopic\>\"", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<what is this topic?\>\"", ",", " ", "\"\<wdsfsdfsfsdffds\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257762373291464`*^9, 3.7257762518115873`*^9}, {
  3.725776290665859*^9, 
  3.725776319154798*^9}},ExpressionUUID->"42ad3e3d-c45c-4380-8337-\
65f8b3937ee8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Indeterminate", ",", "Indeterminate"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257763197954755`*^9},ExpressionUUID->"c549de20-a53a-46e7-8f91-\
0053532dc08c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<CountryFlag\>\"", ",", " ", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJztXQd4VGXWvnfuTAqhyQKKuAgCKoKohJKQOpmUmYRmb7CsDRWVTjpJBFFE
say7q6s/CukJoiCIEJCuSEmbzCQBKXZddXdVFEh9/3O+706YQGIBNKDD8xym
5CZz732/c857ynemz51Tr5tkUBRlpg/9d90dCeYZM+5Iur4zvbhxysz7751y
z922KbPuufeeGQF3avTmDSSJJEYSJTcSHvGIRzziEY94xCMe8YhHPHKS5ERB
yY5q+/PwyJmVPAthG0yPNmg5Hnx/f2KGmhsOQ2EkSTQ9t5wF5+SR0xPWWcYx
inR2BJT8cVCW+Ov2OQYGgXH08WNzPXp97gjjFQu1IBpabihhOgqds0biqY09
sGjjn3Fedghhb4WWHUzH0LF5MXSMmR7pd/M8OJ/9EgVTXhhhGARlaTTiVlyD
kt0XANUqiQFle7rCtvJqKFmEa2YINPbPuXR8FmGb09bn7pEfEwNha2BsM6PR
k54/t/UiNFYqgFNDrUPBsQoD4CCpNOKfmy/H+ctIvzOtpMdj6fdoPeSY4bHV
Z4O4MJC+U6XnWl4E4UM+NSsCf10dgIPlXUhfFdQ4VNTZFdRWKagnjI84fFDn
aEc/03CgtAfuePNSqIvZjsdAy3f/2x5pG2GfGUd4kB/NDCSdJX6cHyFs8WXL
zFi+4zKhn3AynqSrFaS/hCtKFTSU03uEdSNJnd2LjqP3K33w2pbuGLCM9Dc7
jv5eMAnZ7nyz5Ggs2RE6X2vra/+9i85784kTLyOd5efZscKu3r9qJL4ubQ/s
VQV+DYyruzhOeE1SV6EJnQbp9meODpi97mL5OTmRgmOruR58f10sT7ynbDvN
FPPYiP+Sjr0SiatfG4a33rkIeJ9sMNnjumLDSTi2LLQOylmXVTQ4NMDOvrkD
1u/qjKGvB5BtID+eZyW/HIHjMZTF7dza+v6c6xItYxd6rrI+kah54eRnyTbn
RKAdcd70DQPxbZkquHFNhS9qCaOT9JZwFI+k0yjn5wahy40u0Y9pID9dX83c
y4AfyoyI39AHBrb7OaNhoriZP1vJtUls82POgvtzLgv72FFkF1lPzGQrbfDJ
YT0iHcoKRuxrI7C1pAfZYraxBuJQRokj+1Z63cC66CS8mFuVG9BI/LnRaUR9
Kf2sjJ7T+w1OX3rPi0Ta8gbdhteTPgtbXqni3V3dYFk5knSZP5tiqWVxZLOt
MvZq83t0rgtzpgAYCinmySLdyQpFp8JoPLXxEtQ7TYIb1RJnqitjfVSb9JUx
5TiortSEesKWORUL4yj4FGNIxx2t8KPjfAhXg9Bdd71n/11vZ45Ga4d+75+b
L0Yvzl0vHQKVz4d9g8cfn6Lofpd0Vysge5jFuQczxq26Bo7y8wSW9YRrfRlh
S7zomG5jG9iPlukYkS/GJyQHvAU/rinxw3c7z8O3Je1xpJRiowriztWE3yE6
5qDEnfW2ofz4OmE7cIxsQA3bgkoNB+1+uHUNcepsOseckeQnIt1y2VFu0tb3
7ywWtsfEaTTyb2o+2cFXrOiTPRQv7+xDeJgk52UcKtuhvrID2VkT2V/iwOXe
ItbFhwr+W9kVW9dfgfRFZoyfPBGWu+7HkPFTMeiWmbji1qm45rZpiL7vftyS
cCsynrBh2xtDcNjhJ7GmddFAMVV9Oek+6W0dCedFfqDPEGuCfHPBtl4YWBhI
NjtG5DQNBcwTKH7mHFhBmMyBefJgJwvrw7Iw4sYhIv9kWhKBSRuG4d+VnUT8
0iBiHlW3n96odfrgexL2wThgxK41l2HW3Bsx6PokmILnQxn5NyhBqVBC40lS
oIQlkiSTpNP7GVBGzCWhx5CFGHTjbDy4wIadbw4jffYWsXNtqYYGsvGNhDW/
rnP4CFsN8vUflbXH/esuhBf7kKxryc6MgvqyHkMxD/PYbjSPMcin5eo6sNQK
/2X+eHPnZYSrJvA8Rjay0c0/CptcYhTY7iZ/PH7a3fANewRKAOFpng4laha8
x82Ed2wqjFEpMMQkukkytOgkGFkip0KLnQ3F8jCthwx0DE3D+PhJ2LPxcmC/
Kux2Q6k3fbZJ+O0G4te1FDPDYRL8a8N758E/fxidN517YQw0zmnz+mzze9s2
ourSFPsIHxYlfJmSFQ2/7GA8vL4/vrWfJ+4f28cGsom1ZdLHcjwjfCTherjK
F+mP2dAhLI30k3QxKgOmUfHQolKhRhF29Fq1kL5Gkd7GJJ0s0QlQIghrazr9
TjyMMbOhxZCuh2SgPeGdMe9G1O3rJWxHXZkXnQutsWKZE2kkX1FTITn2N852
SH9rILzJJyv5YymmMlMsFSL7Rf5g/QRatlnm//PDoRIf1nJCZU0uKwoj3xiK
LXt6SFtIvlRwZLvkuw0O9oUa8V0v4WcPvncxIm67h3Al+xo9DUYbYRo9C6rA
LUUK6a1CuqpYk+VjS2JN0n+eIp/ToylGXw/hc2D56zR8sKM3sE/B98V+8lwq
Od5SxVrjXKewKZW+2L6rB0LeuJLsD8XK2bFks7kfKPyPVXPk/D/FsYb8AFEH
UBZHoGNhCDI29cb31R1k7EL+robzxnbVLUehEY/1FXpbvKEvLhlLmAQmkI1N
hhpB9lVgkto6jr9ECG/VynpNz0OT0dc2EyVFgwXGDSVkU+gcGkmf3WOpWqc8
16MV7fD0pgHoxLjSdWpks725ttzW9/1XF1fsQDpLsY5SMAZarg1j3hwOZ2k3
gOxvLXGnWocv6YeviFebcsZ2yZlxUMPu1X1xoYVscQT51NiZdP/JNseSTbXO
ljp4JvAVkgQtcg682b5HZOB8y3S8u2Ug8WtvisukX3bPkdUQv66hNdjAvpnw
t5f74NrVVwqMlRzOuUW53Qd+tJzw+lwWmTM25DOH4hzfWPQj/5SzjWwxxTio
kjkJlB/PUzSK2g/xJ6HLqrTJ71yGi8cwF06EL9tSvvfWKYQF8eHodN2vniF8
yS4osazHqfCOoM8MT8IltnRUkV8QeRW7T/McKK0/PmfmfUcF/iTvn4e8zb1w
JddCRH6Tc6xhOuZxegwVfhbgczpigVpAdor8rZJJkj0ad63si084x1BNusC8
2N5cF5pyxRV+Qp9rCeNvK89D9PjJhC3ZZOLG0l8mn2GdbV2MhLUSko6AiZPw
7b6eaHAaie+pJ5+3fu615XqujOSLEi/cu36A4I9KVhwMy+mecG2T7fY5nsfW
RB6KrmPpaFz5WiBydpG+Or1E3u9YpUH41dbqO41lRjqGdHifiuTHx1D8kg6v
OIp3zMSLbVOEbnGsw75SjTkuvw7GKfCJobhr6FPIWDhK5EHqy1qpU3HsVilr
FsIuVbUT17t+Rzf4r4iReRHSW43zIkJ/zxEbnXc8R6dSfK/lcS4vGj5kh2YW
DcR3Dp1/MjcuVWU+0dmKDnAemfOC7xsoFr0CHczzYRxF/pa51CjSX8scKJEJ
Mvax0CPFsootSXBgwY1i00jn5hCvJj8t3jvRdrP+p7jp/0/bdgPZaUNUMs6j
dbVn7aXCZzTYWz5/Vywn8qakyzWcN6X1/F97Ozy8ph+MmRRLLY0j/jWMfFak
vG95Z2kfJ8eu3D+eGUG22Eo6GyJ717IsGL4iEDv29BQxj+BJTn198/WXt4xr
E2chfOsrNYy9+2aRZ/INTUf7kNnwi5mDbqMfRf9x89BvTBp6jnsSHWMehR/5
SJ+QBKjkn5VA1jXyzcPp0Uyvg8mHxqYQ3tLWMt6GiEQYeZ2YZ0BlrhadKuOq
VviWQjG1IZL+TlgGRs+YQmuPc1u8Rr2b5V5w4rUxR2Q+Ua77nb0+2Lq7ByKX
k19ewvkvsnPc95UvudjZhTHn46JF3GPIDSJeHCWe/+nVCCzaOIgwaidz96V6
Ld1xwnW3ii/XdLzwZXkkFi3bRFxsN97ZUYbMd9aj9NCH+L+KbVht342PPzqE
5957Cxv2VWPznlKs2VWMvHd3IWfVdiT/qwgT0ldg8MQX0D2MOHdQgoiplJHx
wg6oMbMoBppFNj5dcGSR7zhJz0+Im+LmUJydjA7BSSjb0A84INdh449eS3O9
rtVj+qMOE57YEoCuhaQbSwnjTPLN+W2Npxuurl4ZtsXMCfPp/F4JRuwKf+wr
/rOIE2q4bs68WL+mH8fUHXuDqOF98dkS/N++HVj9cRG2f74b8dsXY+0npcj7
bCOyP9qEVz/bjsfKluLbxi8xb++ruGHLoyj73A7+9/4Pn2PZ3nX43+Ev8PEn
X2HZlgrE/20NIqe8iAtiCc8A0uuRM4gfJ+Lq658kTu6OZQt2m/0BPWpx9HxE
Mh5MvQH4gPWydR/TUs8Ix/d1FcQtKtqJ9/bu6Y4xK9nmse4SF82VOb2T9fg3
1GvRVxFDfD9UxjzZY3BRQSgyt/YU+R3YNdQRP+JcfKPDIGuvzp/A1+7yW3Q8
+6sq8nH4D9765G2s/bIUe498jJ3/qcaHX36Mdfu3YeWBYpR+9gmWVL2DvR8f
RPHnVbQWivDVsf8KfNfv30k/W4U6HBGviz7djed35+D9rw+hqGofnsjfgHFJ
BQi4dQFWrHei69j55Mtnw3sU+e4o6WsV2xwZK0XrmJO/FzaacO53wyx8Y+8s
MGuVS7ekw3YTXZtJ6HxNqZf0V9Xt8K8tl+NizmPn2ESNQsZS0h5KXfqt8iQU
x+aEwJQfJvuF82Ix8c0rcdDeSfSc1tH6PNEf/SyxyzxkPXFmtuWHSq/DSyvK
MO/5Dbgp/hWMuOs5DJv4Ei4f+ySuvvU5DIxbiEstczH4uqcx4Prn4H/bCxgz
NRvjU3OQ9vxKPLtsPZZt34UPvia8a+ux+Ssndn1RjipaI3O3vogl+zbgqyP/
xsrid5G3pgTWSc/Dh3y4MmwGYfiAzHlGpVHsm6jnPCXGIgfKWEek4u0NA0Vv
UH0rPOvnSH2F3ltQpeDT8i64c/WldI9Hib4gmcuOkr1g2b9Nb7Ym9Ddc9JL2
J46/7N3uTfkc9i1Cf0/xWrmPps7uJ+xe6t/J5l/DdbypGH7X8+h926PEmR6g
GJi4UMg04jnMpzn3QHw6ZAa9Ji4V+iD5WJJhxLOD4uFlTsKfCAvrfS9g2hMr
sLrICfu+T/DeV7tQ9l8ncj7dgcfL87D9KwccX+xH1pp3cfuMl9E+imxxAHFm
WyI0zoFa0wW/cnFvg5U+e+jjWPhsrDjXutLW47yfvGa9D6yOcXZKG77y3T4Y
UBAk9tYw5zLkx5L/G4Vfr6/PIvIvYi8HxTzeS8MxfX0AvmK/SngeqfAR/TCN
bJedp3adkn+YZI7voDdunnETjMEL6f4+hKcKdmPSvJXQQpLhHfMITJF072Nm
kyRIDAhDQ2QqHZsGzZYBY1wavU86ZiEcwggrMz33J/yHz0R/23zcPDMLmSt2
4u1qO4q/rsT7hz/F3+2r8d6/9+DD/32OFzdtwi0zF8M7jNZO8FSy1cSrbKm6
P06hz+D352PCjNsIXx+KhU8fX5ZaipePMifdq+FrWuepb/SCb9ZIyb/IXqsu
P5zTUm/pKQj3U+RbaP2QD8g0yzrPykBs3fVn4U8bxN4A2W/c6PAh3TXquadT
k7oyVdhoVLeH5b7JpIOsK3NEfd5EWKkU3yhR8Xq8wv6Q9YnuO/tE5keMaWSi
jIuJD6kUE6nEi7W4JHgR9zXw71vpZyNYP2eg95gFGD97OVZsdSKrYh2KvtyN
eSXZeKZkKQ4d/QwvFG1HzB3PEg+jtWGZDm3sHJjoc42R0j6H3zGJdK693ndw
6jbaHWvY9dhf3AcjNu7sihGvD6V7z72bFDPnDpExS57t9DDmNZLJ+UWyxS+H
wCdzKBZs7I+a4s6C37Z4TaeBrcCXr7Hai3iHH4aMf0j0W7COivpQE6dtIUa1
EB8i/WJRovVjWzleZftKuGuEtxI2FSGTX0S38DSE3f0ilq54DyVffIw9/6nE
0n1v4snil/HBtx8id4UTvazPiJjaxzodRiudU3gq/G9/EDVlPnp8dPr4uovI
i3DMzHtqKs7HY2//GR1F3noc1GXBp5cPEXslI8gmk93PDELUW2FwlnYRfvZY
pexLPJPX4hLueQLh+7/d7dD3hvvpHsreC5Gf+rH8EutrAPnkoBk/P+dI+BvJ
d4c89ALOv578ayitp8BpGHnLo8hdX4pVB9/Bhi934PMfvkPO+0VY79yBB+a+
QbqfRrxrGvmDNFxxyxQcLvYS3KjxNDhWi/jqvV9cXznCONPrg7s6ImrV1VCW
mGHI1nE6Vf3NZ3xpvWRSTLvSH/uLu8lcBfsJ9rWOnx/X/yzbVCH7VtkGfE1/
v/cN97aOb1NPRrL0s0HTMT5jFUbNLhBcy2B101nmRfT7BtJb1arz4KafpQiu
plnjyXdnkF8lnWbOPHQaLJOewlqKmfd/8xnid7xEvrkSe7/7EI+9+hZ6sk8g
G3/57bPw9U4fHd8zgOmJtrBSFXVTsXb2eeMAxVNRq8g+544VeyXPBLcSPj3L
jPMKRmLu+stwzNFF9DIepc+sdbawz+dUr41jI66tlRPHKG+HobeSPoYQLtE6
vtZU6VvJFqv8mt8n7ATvIR494q4XceWE5+TP3fBVo3Wfy3lq9tP8N1zCuAve
lCL9OL3WuG7BOIcR5oHJuDM9G5sPluODug8I5+eQ99luHDjwb1wz8UVcFjcB
3zk66LH76etvfaXeR0g8hvuBjrKdpPd+cPpgXtEg/GlJIOns9VC57yX7zOUy
DdwnmBNDdiGS+NVV2LzrfOJ4vuKcjjnUM6LHjfreAd7L2VhJ6/Te+4jXkJ9k
HHU9NBEv1kTsSdyJuJXBxaVYlzluYr5rO6EuwDyLbMAFsXNx0ViKsczxor/O
hW9ruUgj/24M4Rw4A8OuW4h/rdqCVR9uxe6PqrDh0E7k7i3GC4ufweFSg6z3
ngn7XCZtcq1d5+NVBmwmfhX22mDSMfKVBTbZh5hPdjXXlfc4A/FRDu+lM0Mr
kH/POysUs9cOxn8qusm8hFvv6qmJqtda2uMo7809qGBc/PXC12nEf1UR/xAe
ITLmHXz/S+gWNw9qJOmb6JWaJfIRGuthRPzxnit+5PpCwHTclf4G7pi3mp5P
oXUw+8fxJfGi9eRFa8M4hv8mcaohKZjzzzWo/uZzvFTxOpYd3AF8vxE/lHgL
HM6EDeN64lGxl9ULXzo7I3F9b7rXVoGlVmCGmjlc6m2+7czgKrBlXxyl14ki
RV+N3DMZg/75V2BJcd+m3vNaWsP1FYbjPL9C+Zm5LL1vg+LoGhJ8pCBlAa3P
gAXwjppN8Qjdb/NMTH92Na6auBDnXzsfHUalE76cf0gVPpV5saj/inxikrTh
lkT0ufERdB1HdsBM68ScDB/S+2F3PwVTxCz8aM8W/12Ke5Vwwtg2lzgzvTd8
CoLveQVvO3fiOwC1h54V19hg9z5lf1tXqaGx3CA5a5Xsvc3bfRGGcD1J9NDb
pP0UeIyhex+r9+D+irmO3DBaT/Q5SyMEv75rrT8Olck+dLZTzPlq9brYL7pm
p/TDrL9bV/WGV8RCutfkN4NJf0mfFr68CSGTnhU5LXUU3e/AqXTPp7rFQhJb
1k0DPwZPxy0ZBRj8l8dlzisiGT1uWID5ue+gU6zEX22tv9JVW+Y1ECJ7dLy4
r2/ETPS/KQPby75A3Qd3in0y9fZTy28IfDnmZxtfreLT0o74S9FVhN9YssdB
YiZB83lO7ntVfw1sdckOFTpsoPhJzbeI3psLC2Px0tZeqN/fSZz7Ud4fZD+x
D/Knr5dzJswpDu9rh56Wh3DNX5/FvWm5dI9J30JnSUy4Fks2+ZqJz2Lk/f8Q
dYEmTuXyrSSCW/lPxoC/PItBd/8dBvLRrPNK0BTCP6F1+6xzbNWaJvx8wJ1P
oNetC0Q+pRPz8eAkDBqXgCOV3YXP/MXrWLdr9U6j7K+uUrF4+yD047wF4aou
CZEznE4n/jkd0XvTeUaCmmfRZ1+EiL1XsasC4CjuLXwS5yvq3Pff/hx8K/Q9
mgdV3JVgxcCb/46bEzPpnnLO/2HiPElkK+NFbS/ugcW487HlIvdsYH5tbY4v
66BKtr0z2df20WkiZ81rQ7UkifWg2tz03j0nwrUF9uuRqcSzUlH4thPD73wB
yrDpyHh6BbqOeQJ3J8aKczzC+1h+Cb906P2EdtmH5yzuAuuKYSIHKec2RZHO
hLTtHiaxh0pfXzlyTgX3mXCOmnsSupLveGzbAByt8tH3Y8p8V8NP9Gw04cx6
X62gcv1AmLguH0r4uflKlTi1D/nHK255hnCeIut2tnmEbbzgXO45KyPXfohX
97v+SVxy8yKp14wj214RM+kc3JIof499uR43GWykvzHppLPzYL1vKfxiE9At
Zj66WOegbN3lFEOY8H2F4Uc5RqNrT2Ol5KA1ei28xuGHBUWXokMB6cpSMwxL
6R7muHHivLOl987dF5Au58uah7J4OCKWh2LnrotIl3nPH+/R+vk8s4Fj4QMd
ccuMm6COeARarHuOMRndSJf/Mu9NUWtQzEmyhhRBfCgmrZmtNbFOj7wPj2Zu
QUbm2+Szp8gYi/ewMJYUL7niaEPsHIl5+GyBs8avyU4ow+Px2OIiXHTTk1AG
zsJNMyah8QM/NBR7yT3/5V6tX4tT2mJhxxhrh4Zt7/XCiFeHCH0V8yZejdb7
YCKb3cu2x/ZE4dkn/mRfYqFlxoraRHuSKWsvw3fMi7l33a622pfWDN9yOt5p
Qsnb/dHBnEH2N1GvvSbJ2DcsXvArA3GmDqPnYtqiXPSOfVLkMNw5E+9DUiwp
tB7moqNV5kLEz+JkDsMYpnNwrjMS1hyHsc6zjWDfPejWJzHlb0VQhrBtn4vO
pNvFGy8V+xm4h1LuPfNt+To4hqhU5T4WskdfVXZB0rrLYORZW0vGki0OhMqz
W5bZ9H2HZ/v8LV5zNrHXXsmnWKqA+R7JK6NwTWEwXnvnAsmxqzmWkv1p7nyj
mV1zGuR+7Y+9kCD6Y1NgiiXdjEiTdSKyqVqs7InrTHr2j5W74T/hecJylhu+
KTL/ZUsQeS2Zv0oQ+sv7Cm9bsAoXjU6HKXwmel2Xgb7XLyBfnYH7nt8Er6BE
2Ka/iKvGP4oxiXlkB2aJPaYpC24Qewvry3zFXjO5L/hk7sTcg+t9sm/FB6/v
6g3/QsJ1cayIYQ2Feq970yyAUHmvzmp83W22PnuM+7Ny9dljOVG4960r8eme
znL2WKUmfNIRp15baIYx6UZpJ9QTT/u+ujeCJ04W+mXiHllbYnO+a+a+uZkw
EG8Sz1uIeQSfcuW0SP+N4YkYPPEZUStWhkxG0IMvYWx8DgyB09BtVCpM9Lds
Ca/AL+Zh8v8ThY0eecdkfFfVmc7Z+CM+VxW9c0f0+PDTkp6YtG4Q+VjuMY3S
Y55ot/vUkp87h0SfEcZ838A+5hUz+hbGYem2/vo8DIPISdbYm9u1RpHz8yY7
rYk5DAfo+H6MRdg8+HENoFnPMutpsuRIUT9SaxLH6JyKeVfgg+h5bQZs8Zkw
hU6FFjwVXcc+hqezd6ML9+ANTUJ74fcfQR+yFfvf7ST3fleYWo95xGwXWpvE
vbI2D8bFBWbRO2zg+dP5us62NSa/Ar7ieTbPdOUcOcVVS8fgxjXDUFbcXeiy
nGly3F7znIQGp4tzcq+7ivI3B6FnDPlB4lNarPTFiqvW4Ipt9D7HVoU5E/Nj
rhlHzMLQ2xdizqK3yC7MhBY1i/Q2BZeOmwsvWkNeMWQrwtNwYfhD2LG2v4iH
fnAYUV/uC9e8Htf51rte05qtKO+E2NU8j/gmOcOU6wH5cq7t8bnEv0Ph+Cnf
KmdZ6fm3TrnBWLSpL8VSvnLvjt1H7A8VM4wcqr7XTBXzbrjndtem/rg4cobY
i+QVNR2aRcarQp9F3NtCLdGSIDiTFqXHxyJ/odek2J5z7Zh9uzUNXeKS8NfH
VqA91ylGxqPP6FQUrxtKPlfWt+qdmuTBFbJW2kjv1XJ/Dp3zMYcXntrcD50L
I8Q+YC0vDIYCq+TFWbre/u73Ax/fG6nxPnfex5IZhtDlIdiz53wxq4ZnXdSL
3trjvUmiT5HvI+l6dfkAhNzxAPHbx8mvzoZGeIuYljGKbO6bOS+thM5Gn9ue
Qt9bFsnedrf+ZuGXWadjEmAyT0F76wL0vfUpKEHpCLx9Eg7uIU6433h8to5d
1vG4Psocqp75IsnWXX4IWhHWtMdZzCRo6pWKbLtcVFsK8S01cyT5Jt6rZEXH
nNF4eP3lOOz0lT3u+t590Rct9nbwHmt5Pw/v80PGo1b4medBCZ4L2fcm884y
jkqWtUK217x3iPTUFNHcZyt6TYJ7CJrsfXgGTP4PIm3+OPywv6Pwt0dpXTU4
NTdbbEQt5xaJP39j74SUDRfDi2t2WcwzRni+A8AlPKtB7KOLkH6Z8yKZozH8
1SBs2HWhjKWcPNPEIPoqGxwdULfXGzXlRrlX+KCCkqJ+uHbmvejAfZJDEmXN
J2aOmKXBtUXu5TCOShP5ZkM06bqVa/gJogdSi6WYh3GN5Jk68+AbloEbZ92O
kg2DgQ+l/eBaiajdl+kzGRz6foxqb7xF5ziQ9xFljSZMQ8V+SZ7N0Ob39awT
177DCL0HNwaGrJG4Z8MQfMV7qYlL1zjZz5Gd5LjT7ie5qj5rBXuNKFnfG/Hz
bsOA6+KhWoj7DiO9DpojenyUkLlyLlIE++cU+XzkIxTzpEMNmY/BNyYi/tGb
sHOtP60ZmRvl/ol611y8ckXuKXFI/vSxvTtmvnkpjGLvRjiMtE5Fbvb3zJ3O
oBgIY1XkYsfg0leDkbu1u7zPVTKOYvvonqsWdRiOtQ4Y8E1FN2xZF4gFT1hx
5/QJsNwzGUMnTMWVt8/G5bfNgD9J7H2TMHH2WDxCx2xdexW+rWwHHOIeJx+x
d4JnVrr2OnK9o5bXUZWMbV/b0huXvBoi67A8K5rzTrxP2zPT7BcI52MD4MV7
bl4eJfbATFg1FPvskkM32Jv3s9U7NLLZrG9ektvyfMIPSfb7iv7kY3YvHC71
wf+KTfi+2CTm9eOgrzyG5xPS7xwt5bq1Fxr2qrJmXy6xFZ9D2FYVd6F4jmKe
3GvlfMKCUNJZs/Qvv7eY9reQbM698/cpBMKbc7Tk1y7MDcNzG7sTZj4yz1Cu
yRjKwdgQHlUcV2li5ijv02vQe4ca9bqca76o6CkiW8/2vp7nWXF8rdcx68t9
ZO+xHs8eq26P5ygm6yHmZkSKvVeGHKu+Bm36HiwPn/rl4rpnXCczQxM9BWNF
/THmtWHYWtpD4CVmnlXrs4HLWuoHUptyS42uPYot1mUp3qky0trQUK/P7t+x
szvCXg8VM4lFz0rTjAL3Od+/93j2txC+hzbSGzMMy6LFnBbv/Aikbx4g+1Od
+vxXu9vMsV8ozJFFDops8feVXkja4g9jznBaT+HwIj01emZK/nrC3LTQos/Z
Zj2iWKowUuSIhi8PwTvvyf1Q7JtdnFf0Yzpa0FVXr4VYB5rooxC48u9XmbBm
+/kIKBwq/IMhj3MwQcf7Gdr6PvyuxVU7k3yG++5NYp9qNLzp9eSiAcSdpV09
qs8OrKuQ/reZnjJvqpQ5qLoKk5x9Qsd/WtEVSUWDYOC9tpk3wlA4Qn5eXnTT
d921/T34o8jxeXCi9pjNOYbrxHfcLNvuK+qtvNe8XsxlP6FnhHCt4bngrLPc
L/S+N/Lf7YeBecPEXGJFzIjhx7OlP8YjamEoNPbLzGuzRmHCmgF4v8RXxEEN
DmNTv0ijmN2v98lUmnCwuBsm8EzQLIvo8dZyg6BmB8ke8hwPvmeHyB4CJTtM
7FNWeVbTUhsuyAvF81svkr0zHOcQJ66tlN+f0uAwYfG2Xugj8k8RYp6JQeAZ
LeMy3u+c80eYC3ouiSt2CYfG+lgwWn6/5PKrsMdxvuRTznYo390DscsDxdwp
hWcnnuRXPTzq7BW2s9zXx/n+EVD5+xCyx8AnZxwWvd0Tj2+7BJ0KhsvvteOZ
XVmevNO5JVF6rlDvlSD8xPc5ZPFMg2uhvEL+lfgxxz1KHtlx7p35g81YP/fF
NXtE7s3i72Nx7bEw6N8HcLzm7qn3nLticZO2PhePeMQjHvGIRzziEY94xCMe
8Uhbyv8DghfwCQ==
        "], {{0, 84}, {120, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSizeRaw->{120, 84},
      PlotRange->{{0, 120}, {0, 84}}], ",", " ", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt2ktKA0EQgOGezkTFB3gFLyAIxmShJiNuVESIeICIUdxEiIJ6S0V0oZkx
V8g7qLGs+D6AIpR/w9ddPdsfejUzu0fFfe+cOx7TrVg6jarV0vn2tF52KseH
B5Xy3lrlpHxQruZ2U/pxXZ2p0L0uAQAAAAAAAAAAAAAAAAAA+E+Cd/7bDDuc
D7SzVx8nLJkd97IwmZa5qbTkJkKZVxmYUc+E0o9S0sgH0l320ik4GFLLjcrD
yrCvk17BKwdD4qyekZNm9Na7DVOSbKDvs5OW6hb+/j3Bz6KvbfS1jb620dc2
+tpGX9voaxt9baOvbfS1jb620dc2+tpGX9voaxt9baOvbfdZ/9l3+L9ON4Il
cSaUx3wgzUW9L2lzmFJfDaS35aWx6aWz4WBM/zKQJ/V4FcjgYjg7GPJcdzKo
qUTnWBsnsERuHSy7AwAAAAAAAAAAAAAAAPBbnmqpL3FajcAQid2XBNY0b/Kf
WjdL0r6GJS/NrBwd
        "], {{0, 74}, {120, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSizeRaw->{120, 74},
      PlotRange->{{0, 120}, {0, 74}}], ",", " ", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
        "], {{0, 63}, {120, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSizeRaw->{120, 63},
      PlotRange->{{0, 120}, {0, 63}}], ",", " ", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJztnX+Q1GUdx3dvD2QQk7RBPQ84juPuOLBEEBE1lSAjdCwuyGGwUdKoRkmQ
8kc6TIzUOJKNU0bTNFRjVoRWnKSFY2L94dCYCuqk1dhgSArH3f74/n5+vPt8
nmf3jjvuzju8XfDmWXjY3e9+93l2n9f38/P5PMuUVV9b+qWqVCp1+xj6Z+mN
d1y5bt2Nd7WOpyfL1tz+ldVrbr5p8Zr1N6++ed28VRk6eCm1O6lVU/OvSKFS
zaMWLKyGP4ueb/46JAApYkBj5Ny0/TLy0Nv0fcfCv5y/e7pic3wim+M7slul
+epSx7p73st+LTm+FeFrkCoiTPNNd4jpiEgEhBr+sXoO7PhWRH6pT6UUEh4j
8CEOH6GxFPEtM2DHt2J8hUjANAttO+B9046XlFuAHd+K8E20gpSsjzXC21cj
mDEW4TsHja7ussXluDm+FeErtfWu/EOH4V80FeIcGvO3v7RDlVNHO75l4Es+
VO9OpISgO3/3swjrM9CT0/CWXwUlpTn/GBkermvM8R1WvvxWlcQIqemj5FIT
x5Du/Q3roc5NQTenETWdCv/VV61vTa+z/yWUNE0lEgk919rq9OP+SI7v8PKV
zMX6UUrGRd2rzV8/24GOyxqg6ohvSwZhDY2/5ftmXL4mlCQbHUvLmxqRhRbc
n+N7svAVSYKOe9fBb/uF6c/cKM7lLsPndiOpqzayK5oykJNTiFqvQKik0eiS
zuP4KfzvfuR//BDig29B8KWRyP4HdHwrxNfaULaxyfLF8Cak0PntexC9+TpC
jo28LPIrF0NOSkE1VUE3poGmFJKGUchuvBdJwUdM54Uv7IF/2TS0f/TDiNo7
7DWiHN8Tz9dyYG3cce9tkKR7w4nU74U1aP9iK7zPfxIxPZdNaWJbBTSmTNPU
JNnjaNkCFG64Gt7M8ZDkW+eWXAgRx6Y/7fieHHyl5RD+9IdQNWnEM0ZDTCWG
xE+RLk5IbhXJrSqyLfFVzeRPs1xP5MdVSGqrEN75ZctWkN52fE8avvzW/I7t
SEh+MZ3klOW1uRrgxjq5yBS9miauqnkUJF8TZ6UgHtjQ45pxfE8QX/aPS7Gr
slFv8speqBmnQzWkDN/eLAdsLL90bXhbf3Qs36PHcnwrK7/FOIjfGh05jHDu
ROgpzLdqCHxJ1ul6COvSKPzlaYtHFfMfx5vjcnyPiy9PW5ztRH7rT+g+a21l
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
L3cr
        "], {{0, 60}, {120, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSizeRaw->{120, 60},
      PlotRange->{{0, 120}, {0, 60}}], ",", " ", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt23lUlWUewHFn6o85czozTedMTYuNaXYyp9xKrdwaNS01FcsFxQQxKcs1
lzS31AkVARcWUQEXAjdEEAREBQHxYiCggCDgZZF9X+Tu33nue9FsTjb9IRc6
53nu+XG57728L+f9vM/z/J7nee9LDotsPvtjly5dlv1J/LCxX/ne0qX230x5
Urz4ZOGyz+cvnOf4wcKv582ft3Sww2Ni42gRq0Q8LqLLals6W/xh9Uy6rJrO
X9faUdfchAkwmcw/O0kxmjCKJ21dHbf6vkVuz77k9nqT3FcHdLroaEvpK32l
r/S1apG+0reTREdbSl/pK32lr1WL9JW+nSQ62lL6Sl/pK32tWqSv9O0k0dGW
0lf6Sl/pa9UifaVvJ4mOtpS+0vfR+ZowGY0iDOJXo/T9nfuahKFRWJpMBvGs
43/3oDd7G/QWc/EwSN/fla/BIFzNIYzNdndbminISCDnWjTlhdlotbo2LnEd
GIS/QSd9fze+5rppUCzMpfzmj4RstiFivQ3xuz8mZOUYwjfMID18P60tGjTi
M3qd9O3Mvj99RJx/pZ/VUlqQhfpGIjnJZznrNpXDC/qzb86/cJvYm7WTe7HP
thdn102nMD1BqeMGvUE5lvHXjid9O6z+VpTnUFZaoPyN+loAqQHLiXCZxvXg
ZUQE+RJ/8GvCVg9l98whjHy9JwsnvIHL/OG4fTGa/IQQ5e80Gg06vUG5RqRv
x/vee6+xoZzLV47Q1FhBbUEmcVtn4fdpN/wWvMulnRPwmPISO74cQ5z7EI5/
NQT7Qd3YMWsoi8f3x+btV9lo05+sxNPKvrQa/cPzLelrNV9T28NcmporOR97
kCJ1Mg35B7l5aoqov3aEi3430XMal3ZPY+W4rhxdO5jIZaOYMbAbqyb1w822
P0tGdGXBiJdxsX2XmuLbGMx1V9bfjvcVua/JJPIikx698S6ZmZfIvvoDBfEL
Kbg4Dl1TEbcj3VB5T8N7yShmv9ODoOUjOWw/hGVjXmGt3Qgc3u3B6lHdWTr8
ZZaPeIGzexZZ6q7xITVY+lrRV6eca+UzIp+yVGU9uZlRJIQuoUydQfqxb0jZ
vwB3u344Du+Nj20f1o99kVV2w9g4cQCrR76Iq91wnMe9zpbZg3Ae+QINBTfv
W0rfjvK1zEloKq/QUnwWnTjpepEXqdVpnD/nS35RJmnRBzjy7SjCNtmw7KNX
mPjWyzgN7coWm0G4fPZvDn81ghObphCwdhqeTkPwcHqHHTN7c2b7YrR60y/P
c0nfdvU1/668VsYxeu6WhVOSupGyshzy1Omci3CnsvSGsDeSsG8B0c6fkLRt
AoeXDOGzwa8wbsDTrJn8Jkcde3NkxVj+M3Mw6yb1ws1hIL6Ob7J9Vm/Wzx4q
8mj9/eNJX+v6KuNbkzkF0irvt2o15GXGkBQfREZKlPI50VqTGr6HRJf3ueRp
x/7F7zFvWHcWj+6Or/1AkgJd2TtnKC6Ob+E68202T36d9ZP6sMmmL6snv0FV
RbmF02j4ubH0tVL7bD73lu1V1Xkib86gtOQ64b72VKb501oSwJ28WA4t/4At
toNwGv4a66cOJdZzDksn9sRj53a0VaWcC/DljI8XwVvX47VwFp5LHFnx4SAq
ykp+8ZjS99H73m8nTZbR0I8ZEVTXFCr5VevdSppbdKTlRKMuTuFmXChJwQvI
PzcZbckeTu1YyZoPn2PfstFEb/uYwK2zmdjvH6yYMVL011BdXUVGWgon/L0I
3LCIgDWr2OxkL/JxS99beieX5ua6Nlqd9H3EvpZ6alTWC8wlLT0ar/1OFJXk
Kms/lRd9aMyNpamxieh4bzS6esrS/8OZ/VNRHZ9AyZUg/BYNw3nOCLbYjeOD
Pi+xeMjzfDHoWZbbjadcna3sN1mlwm+XMwc3b8RjyyZlW0nxLQJ+WEpUzB5L
O23UK+uL0vfR+xpNlj43JMSdA35f0traKOpfM/rQIIiMRKtt5MaNS1y98D3x
BweQEjyRwtgpZBz+CNX2sTiN6MqEPt1Y+X4PNox9jbVj+zN34N9ZMq4PCZEh
ynEyc28SExNBSHCg8vp6Zhzb3D4kOPQ7cX3plXzabCx9H237bJkLtrTUZSUq
zp1bR1XZJXT6VrQ6PS67vZnhf4K0glwld05TxVGYHoa+pZTUUGdC1w4nYu9m
gnes4Jv+TzNV5Fkjez/B8pHdWTbsORYO78ox181in3e4cjWV1JRUcS01U16q
EtbrqKzIb7vOZPvcHr6W/MoSumY1RTlhNNerlXPeqtUy0GM3j2/ZiuPJE9S3
iHY86zraM0fa1oQ08MAwdqn9XNFGP4PbBmc+HT+UT3r9hen9nsau95/Z5rqD
iooS8grMbbaBhqpMKtSR6Fqr7v8PJoNR+raLL/fnmvPzU0i4fIqyynylPl3J
y+c9r918tN+fsUcC+fqgH2mJyaQWl+AaEsYxVQKFJUUUZYl+OteLtKMDMORt
I/taDKGBR4g6foj8rJsUJxynTq1CJ9rhrNx4wiJ2UVaa2zYea/sfjNK33XyV
FwauppzA3WMSp4K3YzBZZrL0OhPR2Tk8t20Xj63+np679tLL05Pn3bzo4e7B
5MPHmb9hgeiX3+FkyLeERc9FdfpLastr2ZeTTfTFREzhoWg1LdTUV+HpPQ23
PRO5ogr9aU5Fjo/a1ddibBS5cjFnI3fi4z+Xuw256AxadC3Z6OtvcLu0jMCE
C5zPuMHKiHCeFN5PubjyhIs3I/b44rh3F708AvnnTj+mH/DGLTSCv23dw6vf
baG+ukGMixqpqcplv68j3gfsqasvart3QPpaw9fQdp9UY30Z6ar9os09gF5r
7hdrqbhzmXU55cTVazmeo6a6tpGMmyqCk5KJSU3GM+kKA3Yfwu7YSbwSE9kc
FcWwvf6M9vXGOzFBjK3Ma1FakaMlk5joI/rifEuv8OA8tPRtZ18jrQYNBl0x
jZUpZKVGEBS8hZLyLOEDQRm36Hshl2cvl2KXpqbq7Pe0nnBAG7yAUT5ejNnw
FbpYD6qbNSRVaPgx7yK6KpWy74rKElTJIeTkXqCmJlO0+c3KuPdn93JI33b1
VYzRWZZ2xObC4nT8Ap3w8rOjpraGjDuVFNQ04V1QyTNxxWSELYaoWdSdsiXe
z5HS07NIj1jDUzHZfK66TX5hhsCqp6quHF+/hezwHE14zM62a0nTVn+Rvlb0
5V42LbY3iFzofKwvHnsduXjBB5rThEE1tVWprL9Vx7WTYvzqZ8OdA+MpPTSW
ev8xJPovYU1BExGFlTQ36mluUpOcfBTfg04EnVxDzq2kn+dUDxbpayVfcyot
Mme9joaGCkpKYrme6kxO5mkys5NQpYrxU1EKd2ur8Yy9KPraM2wLP4N3VIwY
89yhtiyNEyKPvpQUQGH+RXIyDlNRns3dFsuc2UNv+ZK+1vNVvqPQtk6rb0JX
d4vzCYc44O/AHm9bXHc7iHHyQdTqdDwvHKUsMpz8mnzS0sPxcJ/CRteRePs5
UFyUhUFbidHQ0rZf/UNwpa81fX9ytsx86JV7OO5SWnGL1PQIklPCyLsVz9H4
YwQG+ZC/dStZZ3/gZk6C6GN9iIp2JycvGY1W++DefvVY0tf6vveMzWtMSt4l
Qqe3mLVo9Vy/cZ3ykPOcvBxNVlwc+haNsv5vuFf3jaa2cddvuM9a+naYr2Ue
0dJmm2cRdcLbYDApt8lpxPtmwRbF0/x9I63ou03KeEu5Ln7rV2Ckb4f4/v/y
iL5DLH07qe8jKtJX+naS6GhL6St9pa/0tWqRvtK3k0RHW0pf6St9pa9Vi/SV
vp0kOtpS+kpf6St9rVqkr/TtJNHRltJX+kpf6WvVIn2lbyeJjraUvu0b/wWp
RxLV
        "], {{0, 69}, {120, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSizeRaw->{120, 69},
      PlotRange->{{0, 120}, {0, 69}}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.72577633683405*^9, 
  3.7257763368882065`*^9}},ExpressionUUID->"35c16216-e664-45d6-bd81-\
86ce04307f4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Brazil\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Germany\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Canada\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mexico\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"","\"country\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.72577635412641*^9},ExpressionUUID->"9bafd998-3210-46ac-8318-396962f3b627"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<NameGender\>\"", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Tom\>\"", ",", " ", "\"\<Stacy\>\"", ",", " ", "\"\<John\>\"", ",", 
     " ", "\"\<Natalie\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725776399365201*^9, 
  3.7257764285922422`*^9}},ExpressionUUID->"79fabb03-4bee-444b-a094-\
9f6617c6e023"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Male\"\>", ",", "\<\"Female\"\>", ",", "\<\"Male\"\>", 
   ",", "\<\"Female\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257764356172523`*^9},ExpressionUUID->"a9179ef9-685c-458d-bab8-\
5fb3de17e065"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<NotablePerson\>\"", ",", " ", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzs3ee3bFlV93GEhu4GA0EURUHAhBlExQyKAmYJJkxkQQUliKgYwAgoGAAV
zIGkgoFgFoxgzhEVQUAd/A1bPnv4vWM+66lz6lz6NjT0fbFP1dm141rzN/Oc
6xb3eejdHnDNa1zjGg+/7A1/7nbvR93xYQ+796Pvfv03/HPPhzz8QQ98yP3v
d9eHPOL+D7z/w25/n2u9Yecr/2+75A3bDW94w+207R3f8R1P3W50oxvt2zzn
Bje4wQXbjj3fse3Y9W984xvvz3/9619/e/u3f/vt7d7u7fZP/zv/Xd/1Xff3
dKzjbnKTm+z73uVd3mX/bnvP93zP7QM/8AO3W9/61tu7vdu77de0/2Y3u9n2
Hu/xHtstb3nL7f3f//33fY75jM/4jO2bv/mbt8c97nHbF33RF20Pf/jDt4c+
9KHbV33VV21f/dVfvX3913/99sM//MPbM57xjO27v/u7t8/+7M/ePu/zPm+7
//3vvx/39Kc/ffue7/meff997nOf7cEPfvD22Mc+dvvxH//x7fu///u3Rz/6
0ftxzvnkT/7k7Su/8iu3RzziEdsXfuEXbve+9723e93rXttHf/RHbx/zMR+z
ffiHf/j2cR/3cdsnfdInbbe//e23D/iAD9jucIc7bJ/1WZ+17/uIj/iI/fe7
3OUu+3N/6qd+6vbxH//x24d8yIds7/3e772/m3e8+c1vvr+v7d3f/d23m970
pvs4vdM7vdM+fsbSmNqMpX3Gyff2297hHd7h3NY8nLbN4zuneWwur+xt3n8+
24Wi8bd2DPYOYbAxDXPoCXbQFHrzv+v6Dd2h2Q/6oA/acYimXO9Wt7rVjkm4
e9/3fd/9WPvQ78Me9rDtW77lW7Zv//Zv37Hynd/5nduP/uiP7tjx/bu+67u2
7/u+79u+93u/d3vIQx6yfc7nfM72yEc+cvumb/qm/fMHfuAHtp/6qZ/aHvOY
x+x4hT2YfO5zn7v9zM/8zP4//H3N13zN9mVf9mX7cd/4jd+4Y/UzP/Mzt7vf
/e7bp3/6p+/4+rRP+7TtTne603aPe9xj++Iv/uL9tzvf+c77cfAKq+7hOl/y
JV+yff7nf/5+zkd+5Efu7wV7t7jFLbb3eq/32v83BsYH9nz6rf/f+Z3feR+H
5tT3eNtFDF61MXhlb5NHr/iDqXCFjmAwuvId9j7lUz5lp0lY/NAP/dCdttH4
J3zCJ2wf9mEftn3wB3/wdre73W37uq/7uu07vuM7dpn3tV/7tTtWvu3bvm3H
C5n4Dd/wDfsx9sHg4x//+O2BD3zg9oQnPGH72Z/92e1HfuRHdpw++9nP3p74
xCfumHLeT/zET2w/93M/t/3kT/7kfv373ve+O17gzv9w+a3f+q27XPNcZOdd
73rXHWOuYT95ec973nPHl80xX/AFX7DLXRh0rPf0bmQiGQhzZLr3I0vJUONB
DhovmPPdOOFVycRJK2HyIgZPx2AYO7a9pWKwZ28+00HTJ+mW9M50J3T1fu/3
fjsd2uCPrHrQgx6065V0vzve8Y67LPE/3Q+No2myCQbhw+eXf/mX7/vIKpiE
Ozijg8IdvNl+8Ad/cHvqU5+666d+hy3ykvyDvx/6oR/a9ddklg3uyEzYhW/Y
8hyeFZ7gi5wj2+yja3p2MhEePf/nfu7n7vtue9vbbu/zPu+zYwxf8T9+492N
xW1uc5tz++GSjtp+shLPMobp/Rfl4FsWBo/NwbHtLO8/75NszO5Da3Ss7Bq0
RBaiMb997Md+7C5P0D07iV6GNtEv/NHt7ne/++3yjt1mPzkIh/aReTZ4efKT
n7zjkOx7ylOesv30T//0jjt65ktf+tLtN3/zN7cf+7Ef2zEKd64DizDm2rDs
PL+TfzbXpePCu+Ppt2QlzHqu+AQs2nynk3qvj/qoj9rlHjkHY94PJumv5LxP
72ojBx13u9vdbsci/PnMNiQXp9500R48OwbPitG3VAyu9/H88JZNQ9bRpWDS
Z/4H9MVHgW7RIhpFs/Q1cobcya6CUXSfT+VpT3vajhOyD6bokeQeWQePfnMM
PNn/whe+cPe3+A324NL/z3rWs87puOxF+GUr/sIv/ML2i7/4izsG/QbT5KJP
uq59ZKhP/z/pSU/a9dv4wpd+6Zfu8hAW6a10UzKTjmvz3e90W8cYB7yGLwce
jQ1bmDzEv9LfjWG6/UUMXsTgoXukm6aDhr38C+iJ3UdGsKPQIrmA/9M/yRT6
Hn8jmsw3gjbRMvsNtuCBfvkbv/Ebu24JW3RGGIQ/+ic/DZyw9+CJPHMuvPLr
8KHAjOP9TmY63tY1YQvu+FD9bz9fj3s7z3fY5R/ioyVLYYouCofwhpc84AEP
2B71qEft+vNXfMVX7MeRofgPP5NjfBoLcpNM5E/1iTeRiXRUY4i3wd6kk4sY
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
kP47bd/s1raJx7Z65tAVi3EYM3qKjXykp+Ct5gheWqcAb42/kmPmmX5KZppT
GOTjcT38sbqs+qeaJ7oQGkAzrflqQ3NoJLsof0z9/VpLNlk49dEZt7iyMDhx
CBvJpZkD6tlaEyndNJuwtaizJ8vdDnc2soqNiCcVuzA2ycfGi/4Af8Xx88Xk
LzXGruM+ZCpdhpz0bK3vY/zxUXNG/uG95qXYI9vdPnRQbz/6kWtVh8FuJEth
0if56t6+07FgE59Ha2iv3i71rijuThbWE6painK+k5H5SYsHovvWLcvuLC5R
3LF4ZLmh9sNQcnnmuqU3t37vaVu+omqtioW0rlpYrP9bOm++3XyqtnrUtV6o
z3JO+abrNUoWth5F812+FP4oD4Y+y3aoH6Lr4JP0FuOYflHuVL47Oi7ace1k
y5q/1uZ/emv5zGFqxu8vBAaP1UqEwXjF7EGBzuMV9ZyvVqReMtXMe1eYar0W
MgxfgxvP4PrJQ3ib9qHxqr+vMYSp+KU5wxvpMf6vjxPMkXn2OwbG4Ko6cFhz
LByKUzjW/+a5GtTqw+lJ8GZ/WDT3cIev14+oenM0UP52eMzfiTbrWVM8MH9G
vaTyyxRTrFaXnGv9MnGOsNa6TuKTaobrdQibNhhs7Yppu/b9tK21C1vf1Ja/
Kd/rrBOBwXLCvVc94PIHta4Uvb915YrvFkvEW/FGvNScmN9y98lMfLQ1Zfhd
4JHvp/7I5gA/ZENkn/oNRqtxKnafD2P2LJ05zmjWb2Gw+rsLicFjNbxw6bnK
tyvHzjMm88iw6t5tM14414po/Ra4Mr71z8OfnJMekE+ntSfolNX0lhco1iu+
YB5sMGZ8s/3MG1lnMx/56OCG/gJT5hNfJR/rzYf/tm4C3db55GK1ccWa0Y3r
VvtWT6R88/w29cTPrst3kB+0+qPsw2rHnVN8fcqs9McwB2/hTt82uTvyBuDT
/vJL4bC8gXCcHxWeum76bP1pwttJv3u2dNPpk8Vzqtuq92o+KVgsfkt+1W/N
+BpbOCOz4DCZhVbw1NZOtg8Pt49MNC/mA67p+3Re8s812QszhuGe5q/4sOtU
u5MPIr8nes0Gm77Tah0uRAz/rL0sWnuMvOsZk235TafPJl9MGM1e9K5iCsaw
9a7IRThzjOfJD1T+qOu33gibAC5ss88lnOQPrb8FW46OY27KH4W51vvkQ8UP
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
evFC9gcZaO6qdSIb0QmZCVv1ZmzNZPdzTfNIJ41m6D3wSxaiv/g1WTLl3ayj
n/nbJ21nweAh2Tf7TB1bT2KNF05bcPa4n7k1bNwwWAzfe9MD8Def9ZUpd8UY
sQvwSnjgF6VT1I+ptZynPHTtcgbiCeWozpq08oPzdSdbW4+P/tma6Tb6TWti
F3OvV0W5W/H/4mcwWJ6036p/mH6RKZOKy4WV6QeZ/ptZg7TWMc2c0nTQ5Fay
a2KzY6dsm3prW9eLhxzapj271hxODJJzxXTq501mlc/A70yX5OOEG/y32k7f
q4Mp7x790GfgFF6bP9hufQo+GvPpfNdBM2QguoHB6uXQT33x00PT88LlhcTg
SX3erigG6yM6+1wUfy+HND5W3QV8zPWyqp/Gs8i81r42ZvRGYw+nxq66l+rD
jFf5b/UAqGcbn47ruxc8uh9b1DXhW3yRDsqfxlYpLtg61Ohn9lKDr9YMyg5K
BtZ7u9rW9NFyK9ctm7KctuqfqqcIb2EtvMJUemR6ar7N6bdJP52/lWMz8Thl
5sRw8m+tN5w5PfUhPkkftRWrr4+psa3vfr2/64Fq/FtLpBrO/GutSVquFNud
/CM/XRfGW0eSnK3flnu5R/3fzHu5+/Do+mQEWsq3MWn+ysDg2vP3LBgsZr/K
u34rn7v6XDym/G2YMYbwU62E36pbqd65Hk7Gh31O9pGLeKJ9dE84hKHW9q3n
zVxzB/7h0/Vgzv1bSy3fdz0vqxOkg/Kp4aOtn1utbTSWrrVisR4Q9YYqLtba
MDM3bdJrNFvuTL3s0X9Yy+dSDLCYAjtQX9P/+q//2vE18TdtQ1u/T8y6Rptr
+XSu+4a7+rnhL+nb1XbMeuFy1lYMzngpf3I+E3IqPxdc2k8+1ivRMWxDWDNP
1eUWNzRv9ZZFH+aM7V7MqJ49Nteuxhg2nQO/eC8Z6TudFh7ZLOgT/eTjQNPH
1jc8Hwyu+Wlts6/omi+TjrfW0s/e9jBXz3/8pPV3ir0ZT35/39lh5FK9kvk8
HW+M889UT936L60fmD3tGmSce8Pl7KvfOvbZl3gcLLp+OcH8Y2K2vnsm18Yf
6S71d8I/0VD9d0/b8tWHsdYyI1OKt4Uf2Mj3n88z+zC8JLeSWf53brGDNXft
EK74btqSix27+nb+53/+55xvJ/tx6preKz4y1zAOm/1efLT87dYLJ5PKlYGx
1uqpXykM0T2y6+gj9eeiR7IZ8HJ825yRY+bNnOHT5qp+b2Ss68w11mzu4bqw
l03IHkFj9K/2uU/xCvJJjLC8lHTUevLar/fhKhcP+WpOikOchsG5hs3s5TT7
abflA6lOxMbe847lXbceC95T3zKf1SrQB4ulpivQF6tHYhPyl5Fhxso98IBk
YZt91UiUH16OXD3b4Nu18Qh2QvVpnqcet7BYPmh5L+V8zpq8av3q4RKNkg/V
Pky85YNJtyweN+Pm8FG8oH3TbzLxly/ztNjD1E0PxRLzwc6c8PbjD8m/cmNm
3vbM3SYHW+ewfPbW6ggn1T7DYjoofJSb2BpnfNUwWO4ZvkmnyY9GnsEtXKfH
wnU9wslF2DOn0VtrZ7iXa6JN/Lx1RfOR1qfaJ3qa8e+pU+Y3PV8MHsLhoXUm
TuujNut30T1ZlAyrVgG9J8f4tvxvo8+z+VoPsD7rxsX/xq06abho/c/qyWCH
/AyDs9/itEWLcbQWCCyWNwrD+CkdBF8w78XnW0NmrkU59clyYuaWH3H1n+QH
LSczvFWz0P7wlF4oVuCTjEpe+S05OuMK4XPahYfk4cTxag9W25R/ZuZ/T5m4
5shMnTp/TD3myqk1hvWayy5rTTX7W/fTvMMguQZ/xYls9uUTRzf4uN/J0Xot
1pe1Z8Ez63vTWiGt20PX5XcTR6SL4sX1fKPv1ueNTKGfzr7zswdMuDkLBo/1
2F7tv0NrfJZDOuVhuh8s1BemZ6dfzrXm+ZerizbGxhM/w/Ngrh6CvtNDOo6e
2Lq69bjAD+tF0zo7PWO9ssjHYvXlu9EzfLIL8YV6lbA9PYtPz1OPinqhpXNl
H635WWvsetYAFnNP1qH96Luc0DAEK2HQxt6z2ee3MDT1yqlrzpzuZGTxv4np
1X+Tvux5Z/18ftj8s+WKJguTg/mW0H35odVcwqHP+pGaXziEvY6hQ5KFeDBs
tWZB9WOt4Rsm0QVfaOuTk7fmodrn1hqodqpeyniDc9j98F6+W7k0PtED+xPf
xsfRDxona+baosnF8mnOisGT1pyYeJt9+dtm/9/pe5lrS8ACXwsMonmyMd8v
3lL9Hp2CbMPXxFiNs3mJV8Ki+cCr8Dt4ax16GKzXiGuXazTXfZzPB4dsw/w9
9Z00xvWrgUN6Lp7gmWAfrzSvMx6fzTNrH6afYvorZh18siafyiFddPWZlMcZ
Hq+IHLSt+6ctmD3oPq2XUY5MW+960jtP2dN64PWSa+3D+uTHb2efuXqTwkT9
02z0EjKwtSfrqwaX+UHxSc+EByTz4p18MvUkjWd6vtZUq0aNXtq6iq0fhVfD
YGu4+47O67V0mp/0EAaPrblUbksYXNd8mXLQJ/r2TMk8eMsWTPfzCXveB4b8
Vq8C7wlfxpMfxPuzn6sNMr5+w5fgDubqy0t/dy33dJ/8yeURlLuTPCxGWX5g
/d48F12UPdh69fBHBuOV+TVbZ3CtoZu1O+GzvmTlwSTrZj1uND7zYWauZrYd
jCXn8snko1lrmSaeyp1Jltq6bvltychwOfNHq0ssV4b8qz4i/CUjZ2yiGAya
b+1AWAtnZB9/Sb1Xba0zGM9t/VEbPMJg9TNiw3BoH7zmT+jY6tyKS5RXUT+R
ajyrLS6HnF7sevXYoJvizWLI6Kw8knoiwWQx/VlfcVYMnoTDSb9zTevZ7ykZ
0xov5BDdji0LD/XGau0WtI7uW9ujGEUx8/rvGt/iQnAHC9VXk5n8J+bBeNNL
YZAcI89gbI1fzn7Esx9VfcPJRWNKJreuGl23+AS53Dry5os/Zvaan2swZW+U
c732+Zz52mEyuzE9z/9r3DxshsV8MflJ1v4yM79mzbFxzqE877mVI9e962WR
/Tdjg2tNb72GW9+m3LMpB/OH8qEU96n+q/VNjTlcwQP/ZXXb5ZuxEVozuB6T
eKcNH3Wca1dLTd6mc/qNPDW3noOuXG0xunNcvlT3aI1fdLuu85teOtfzO18M
HlpzYsqRWR+R32disD69/IzlvFRD638Y4/fwf/LK/vLDYM851bWLvXvv8sXg
kFzkuyGn/Ea3xyvpja3RQ78sRjmfPf25nvrhb8buWyOq/kHyc+A7PwD/QPEJ
c1rMffa1bW0Gsnv66+e29pzPXuw3n/6fdF9e25SdE38zjyU/T7g8Kdftv//7
v/c44rQtk63THnTP7NpZT7z2jJo2YeuvtZ5w/XOSc621Qbfh7yKj/FZcsNgd
bFR7hBeai/Dnf7/VJ5284pvBv2HSPLkWjCfP0FB9FNFNOfrxW8/SWt+tbREN
wrfYJLpt3fZ0qnJB/F9/l/O1Bw/5ZY6tRzFr/j1Dvv76tMAZXFSXx66lb3p3
ssw+WCPT+EbLeTA+9Qphd5uHcpta88E80mH8TkdwD9jOF5NdPHMQyllNDra2
wFyzHH8jT/EF/h5yN13UnJC7+GZ1oni0Z6kWorWRos9Zp1sNUjha89LWOqLV
bpv2IZzADQzBUnG8qbOux691TtmPqw6aXXisbmniL/k+e0SVmzZ7O821bloX
pv6v6aR+qyYMbquJN/bmge4JLzCVPGttLXgxJ3DkGsUGiwWSbWJd6K78q9Yn
RY/1xDC/6Kw1t52D78MinNPfqi0sTwUW7OMLQfvJrLlGTHlv9c8/yxqgp63L
NPvH5GssJxoG+XXrsWOMvJv3oMOz6eyHNbTuWPFV/C0ax7/Qv+PpIfWlzEdm
bGDE+dmDM9f9GAaNWf1M05F9VttUbWj9fVsL1vPgC+RdfbCzgWYMYvpiZk5o
W77RWZc7cTj9LNO3Of002Xq+O2fqo2u+2orFidHVf2M7qX6wvLW1dnD6TGGx
vJiZJ1S/33wy5F7rhsJjtmBrUTnWvKMH+EEb9Mf84+QdTMARWWa/rR7C5fbm
35u+ILTk3Hojmmu6pu+tiVH/ILy/nlA+2UXoA53T/+pNSi6Rhflt6k8z1xZN
Hk4MnlQveAyj0XDrj7W+g/fAZ+jPMIjfkPetUU4e5vtQ8+WdybNisa1HJjZH
B4Q/W+uimwPHdT6Zmp5er7aeda3lD4PlHJU/17oW9cDxTrMXBn8pXkh3Mpfs
wmoj8hPOHtT1pVj7g8JhGDmGw/TItX9amCnHJrwUYyz2X/xvlacz32ata5q1
FTPHLRz2++xN472yi9voBNVKrL2O6/dPzpF5xeTDSP0Jit2VL0MOogHz3/rn
6KM1ftFM6yzjzWgN7289EDhCR2SbeSQbs/3QXLopXcycuw6ZkDx0LzRQLhzM
1z+F3Mk3U0ysHoL1TKze6Y3JkzmUxxY9o9nyTvL1kyFoNoyInYdL42I/uUdv
9x5kIp5jXMnCerw6ntypPy9eRxcxD/ynrmODb37S1pCZcZSJw+qtimG2Bgb5
3doCs8YRFl0Txs2zOag2G08v95HtUx1E/eHR54xdZx+RD+gXTU+5uOKw/MzZ
96z6vlmbFCbD4Mzfnv1gDvW8OJazveZ4h9WuHQ7roV+MdPpDZ/18a5mufR/T
GWHQJ/zRMdJ7yD+yqLg83oxm6FVooRpAdAJ7cg+r54XBYhrxb/oTWoPpMAmP
rg/LaI/fAk2hrY4lI+oZho6zK7OlyKB6hqGdenjO+OFaX3gsX3Ruh2L1vtcn
ojokz5ANOHsSeu5yPNnF8CfuVj0gfNHFjQFc+r+aMboheQTH9Y50jN+dbz7c
By9I9vcZBss5CIOe2/MWc82vVW659zEX+KL74bn1zq+/b70Kq1MqXg2LaLl1
UYpNrOuVVXs3641mP8HZ+2zmtaWXzlztMNkxx2xBW/GKNc4x+0WdttXnyXPm
Bz2p//2htZnCWv3wySQykRx0XL2dwgocTQyihXrEVFeDhqo/c+yse8E/51o7
5eFUt0hvdU49a/nzyTjXKncfLbB96rlfbkj+xuoP88tMH2nYy89yqK/aIbyt
+TFzfSjntB5FOWDkINoly+ACL6F74h/eb8ZY65/r/ch4PKx1OqsHdD4MekeY
7nfnwoMxpkcYMzith1s96mZ98ewJHu9oPcTyCMRS6vfbOpXm24Z38A3gyfVU
o2eht/pUZBsmD2efsZlLOut3VxwmE+f3WVubjTjjhemm7Vt1z0M24ZSLs9dF
vTQO9Z1Zc1DL5c6vO/NFZ1+PQ70s6sMTBtNJ603ArwIfxSXMdfkw+C/6QDfR
Sz3Y0QjezG5Ha9WA5n/ND1StFH5abSG91z2qRa33LLz7zTORD/DJd8ePXy/w
1qvBw9O7pvzLH5N/ZcXgafJuXZetrXzocjKrFSoHM1+oZ25dIrzHO+cf804w
WO0E+q92oTwa1zIOrbPj0ziXu9SY4AH5Wg5hsLUxigmWT1M9VbZsaxm0FiE9
By8sh64cbroTfk0npV/h6fWpIAuKaZN9xe6Tk3NdpJNweBLtJ4fKp0lfDE/J
wVl7G65mHe/MeUkmz63jT/MbFbuoZ8fMm5l1WHM9mHT4eh6WP5MuWq+scq7D
HxpCK/W4xIfL+4c/82SrP3q9R8hT+ErnLPemOKNrVyMFf80xbBczw5Nhn/3q
d3ZS+R10P7TTenuwiZ/PNUZnDs0hOXiSznkS9ooJpu8WY8t+KlbnOdEuXgR3
+F357DZjQq8wZvSH4oP1B6mPJPmT/7S+SzBpv7mgf3hvclB8Ya3jn7UfE4Pl
OrCnnY/n4QOepX7d/vd89Gjz0joJrVlWTW61E/lo5poQ2U2z78qsO584nD7T
td5v2mO26i9m/8+w67xV7q0x+EO9MKYf9pCePO3VMDhzZ2aezMTgxOHcWkse
BtB3awaWq0L2wAj6LwZY7hJdik3DV9Aak/WqxUOLL+VLgDl0V9+24iHFD2G8
WAfdatbk1C+zHonlZtE/yb38C2IS6Kk6VnSWbtaaTjNeeKwuYq7psq5x5juZ
Vw/G+mXnS4Sj1g/33saXXkE/gKPW6Jg+G++Ln9Ev6BrObQ16W/E6Y+q81nyR
K2osvH9ry/ROqw+pnNHyWKttnGvdwZ9nd/38PniF8Ucv+WTmGvLoCf7CV3W3
ay+micti8eVER9fZkzOnO1zMPp/5ROHM8eEXluoPelps4rR87hW7a95c7+HZ
vUP+mGp77TvW0yk5GOboibDoe3nC1RqxwdkB5Fc2CH2T3EMD1b/BJtnYmj1+
L+83m7F1tGHNtd2zdbXwWdguPu16ziFXxObtjwegT7Kv3jP4P1pCU+isPqXR
Y3W9c53QMDjzuGZNUjkl1UHU97Qa3Wr06rHrOenG8ABTxsZ4FRf1/K3fMH1U
ZAz90rjVPxTds3XlcFZ3QU7CaTUlxjKfafXO5dF6nukfnWvShMF6/oqrtOYy
+d369Z7X3DYX5r9e6XSn1vhszfjWqS5OWK7X2ss6DKJTx/idHEzHc41k58yJ
mXkxfps1ffUd9FlfwkNx/Ymrk+KDxTLWGvw1hlEfYe9RvcSKwdlPZu3ptPpG
i9vDXbEK3+u9XYyCvGo+qifMRwpLZGV5pHin73g62kMvxQOrvYcl+hRaZTey
ccL3rFtFn/lDnUMWopF8FmQl+VeNIXmAzg7lkrYdwl/x6/wWrUlWD5jWToK7
6pPsd29ypN7HsOT54Y/O6PnJFzTd+n3l3xo/7wxLrlHPVvI0nJQDZ9xcm75R
Dmm+MPqkZ/E++M3MNV/XhTI25ROkO9ezmY7R+tee17x5Ts9dfQ3amb74fDFz
nb5yQdNL1x5nxR2SYWG0PLW1p+ja26Xa+3Tc2QN4lW+rLuqYk+rry/M+1Atj
jU14bjxj1innA25s6vex9rIot6+c/HwE5Y3CZPHD1lxlh/Nxopm5Hj28oYXW
3oWniUEyIB+beZUXM3HF59JaBvBtztEYukAf6NH/xblbE8j9fIrHtb4m2oIP
tAgrc93AQ70Lo8219q/eS+WllgfDBrU/Ova9uiRyqB4fbMF6AZJxfJreGy7L
NRCTyOdYrTyMpc+6r2u3VpxPOHSt+i611gDcwA9c4SXk/Ky5mnGJ+Iprw2B9
flv/3Fh71mx881G+Gl6MDqoNra89Wqtvb3berMedeS8Th8UaihnaT4/NBps+
kdVv6Vr+L4/TvmTm1F9njG/al4dwV7yi3Ju1pnDapcljsnz6Y8Lg7JVzqKdM
9bTlw8y+5XOtKrp/de/wWP+ZfDToCf6KaZVL6vdsvPpTTr98a6hnc5QXQ27A
N9sHrtALumHr0NHQRjoZXMMw+ikPOhk1Mdia1Ov6EsnA7L10tORoscYwCBdk
UjZoOc7uDYPoGVbwBHgyZrDmXe3zzMaLXkBn93/rHTmefPeOrlP+69oTlJ7o
WDqI908fIAfd23nFZWbNR7K+/qbVeNiMm3Pr1YzH2fAFc9vaS3iqOeVLKsce
/bSmYOtYp4vNWsDZnz4czFq//Jv2z3NX3E08ulY9BmEQbpO3ycO1T8XcJgbX
2sH6OU2dduqk1WW0Htqs8W1b1yScOAyL7EJykAw0ptUVlQ9fD+D6m1QfWN8n
PlPyrjhEupX5Mn/lnJFzfc/f0LqHzuWTQAN0tdawdyw5ScfMl4dG7KvXdPYl
24sMIH/QKqykizovDM6Yw+wRk18z2Td9ruHQ/2jV5v/yRO2vBpacIrvxj2pC
yJF8VK2Ra2tdHTpoa7zjU+i9deGK+XsvWK13qzFy/XpFtrYqGepZWmctDLY1
jmt/094VnzC+5Gpr1sN8905n8fzuHY3US6bYA71wxvVmTtmUKeEPvTumODm5
MntczB71M1bo3Ho/5VOd+d8r5tZ8mWM1vrPfxaynCNuHep/O/Ly5ttvscZGP
tNjg3NJNW0uVnLQPVtAMnbTYFl4IK9UZwSndC12Vk1xONp0R9rId4bT639Zh
qqc+WiIP/E/PhE8+A7ioxrT1nOl7MIjG0Q9arUYv/0n9z6Zd1BoRs56u+nL0
63w4bs3Odd1a/6eLtl6E49hxnpee7V29I7mCrvEdMpGsp1vUj4VtTvfA1+j7
xoSMZI9V11SPJfirb4gxNv7pFPBiTNY8hXA41ygNg7DnPW3eLz23HpMwnQ7d
2kvuyVbBw6uDaF2jqYOW65kMDG+TnmevGLQdvefbTC4Wd1hzZaqlT5et72ey
91Ce2sxVW2MVq2+0HhdTFk67csrpud7vzJktLjrXFw6HsFZcddZ8hUFyMSyS
eXAoXsFPA4etT1F8Hw9HG3St1gpK5rWf/Ug2wGu9vdEkeVq/zPK18NxiE603
U18ydO0z3wc6gb9q17Pr5vpps0daa3hODLbmU3QZTVaD5NruUa/BWbtYjnP9
ycgN75Bf0XvhWWiXzma+igsZA7zL2Bg3co3OAb/erRh5febYxNWHtV6IsXcM
zHrWfEezBvkQBvG1dGifeE4+H+9RDj0+Wt6uuUcX6Cm/ZvirlrdevMmrclmS
K5Oew2C1SOi+uMNcbyXcdD2/qVmqbomcSxbRWQ/JvYm/5PO6TsyMD6aXrv3c
VgyW09M4rGtlT1mYTmorf7SYIB2zXLJpJ9Zvpp6HxYfIP7ikn7L5snH4GdAQ
rKGt/H4wWL0FeUCPrE7HtarZdyy5ibfDI36MtsStYKLeQ3Dne+skzL4orTNd
nHqt3ylujy6Tf61JVm17Mq+ehPblb2ndUnpcPdOS0+iX/G6d8OqOjKVxhRu8
iz5JtlV3Un2Fz/RY57ceAPlaDzsYpBO6dn0gHesZy8NOByhXoZ6MYbB39vxw
2xpPdE96aPzDPLgXDNJ3Zi8UdFauaP5Q34tTwCcMRMPJM3QON9mI5bWQa9VT
5Ls5DSewrP7Wec5xrXpw57Msl8xzeL78qMXb0y3Ln0lv9b3aiviD+818b8e1
pmj1xflJ51reM3e9tTjooq1P3NoSMJevho3tNzlr5XbCWrjzf3GK4nrmp1pv
WIQjvD091W/+h0k4jHaKP5WrvPauxYvrCY1Xo3O82hYmycjsQTSFturjUA1S
+TFzfbLWxE2mwVG1f7CcfKgnrnuHv7mWmO9o3zmei+zwfq0Zb7zoGegXXzI2
eItj8K7yhYxT/XSMUWMDl3T7jjU+cGg/zLsnGey58rFMDNYPYMVga10k59nb
7OzWp2stAnNi/qthzHeHttBTdNWaE9mI5AFaT37kR2zNpHTU+s7DE6w5xvGH
+oJOHIZbGyzYV054MY904bA481c9d9ihV3t2PCRfruefa7FVV+yzGGZrw5Sv
Wvykuo9Zx1y/4/TRem3Dm/GEt/ojw1/riaMdMQpycNb6tk4oGmvttPztdE84
RD/mEt3V5xcG0VD1Fui1tSd9p2fWSxr+yt1AY/UlI4+Ko831u8iBeuTPXirr
2oDpZ9WQF/OrH9O0AX1W3zP9omh84pdt2JqA3gEdez/jUi877w9HeE0+Dryp
NW2razG+9AbHkKmtkWMs09Fdv/WP2Zute1afj3Tstffi7OeU/Cu/CK9zLc/d
c9rMa7YqfRRfRi/VAPhMX0JL9ZJBc8kgtFocvX5NyZgwqCY+HS85s+JwxWBx
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
yhPvGHzBvFZ/jC+jCzodOuN7QE/kB+zVN5HMmP25w2Dr2pOHvjuHjhutGsNi
0caPHlFuHxozh+X++16cEG3hT+RCtdj1+/PcaNxcssGqfXePYv3wUU1D60eQ
h96ldZjSQSfmVkyWw1aPi3qvwTzaqEY3OYhfx3M8Y3W/5Wrj12SiZ6/epvVO
WosPr2x9THMVDbe2bPRkPtNzHNtv4a9c7dM2GIynT5spHdc15ppO0V9YK65d
nklrTdTzvjoPfAQ+4MRmntBc9jN55nh8CMbqJ1n8x3ziV2iodXpdjx5VrQZ+
7f9kc73+Z1xw9uZond7yapNn+XqziScfS+ef6+rUM6uc3OqGO0d+bjGgzk/m
4zf1GMdX6n/pffH01qVEq/wYdLjsvxWD5U6TMWwwtlB5O/kHjS39wliSbWyA
asLxsXyc9YXA38pJzo6iTzsf/cIAbMIF/Rnew6r5pcd4FxghE2ERf2gtuEN9
uFfdlPxs/ew29vRcu5p898ytNdjahPWbwec9Vz1l4K81zZxHJ4VF/MmYwBzb
Ao8yT8lCdGW+Z1yv+AD54bepM64184d6hSYH29bcl0lz0e6qy1XvW63TzO0m
vz2f9zD3dOz6H+OlMx/N/JZXmj1DrzCmxs55aKW1r41LMWa6Lvy17lkxmYmv
+MeUhba5buns0REGq1MuB8n1y2VvbYv61s16zPQGefL112/c6z+Xzu7Z8ZBy
i9krxiL7iiwgN7IL84dWo5sumg+Sj5U+avzyFdYrtx4Gxt996CbsJfRo3Omy
cED3IDPwTGNy3eted7vOda6z9yPy7p4Vrly78+IZntvzOx9W3dM8O968Oq56
ptUHs/po0j/LDWyNzmIQ3qk8qXJlilvE1zwPnuCY1mYqb6aefsXg0VP1QObb
HJEl9qPx1vMyp9FVfVFOw+ChnoWrX7S+T/U+zBac60fnU5w52l2j9TOzw8Ih
PJRX5pO8J/eMA3yZ63qzGNtigK2zg9fhZ/gUHDqX3oA3u355DOUwFLOppmPm
iYbByU/scyz5PXvklLPQetn4onvhJ96DPMAzs3nL8Y3vuG6yca3bnDK1NbLy
zdU3CEbQU3nsZEK+0tn3utoIeiodr9oNtGw8jSFdFM2SH2g2Odf6HrZ6VRtb
vAXOjCmbCW3T/1yLLmo8vAO9Ddbgorx0n+Qb2WUO3TuZWI9nMhNf8V5rLGKN
VZQvije3Rr3Peq3hAfANbzBG3pWjBmN4APpqvRf8gM8g/bOe9ejV3MEiOkIb
5qo4XPQxfZkds/pR4rWt8zLxN2WCbdqD+XGy+ZID4a5egeXKdV70nY/Qu9jS
j51jLqtBrl9L/jbjhY+SiebXfmOS/mos+WKymbOfo3m6Eh5l3KL/cvnqeRPu
wt6Ug/k6i7d43nyi3gPOyFz3YYNWO5XcyJ9eP9pywfgh+Wtbx6n+kq2dGp9s
v2fwPOXdGCN063rkEv2tWqFq/macsD7X2ZDo1jOhyXp14m3oFh3DAkyV6wp/
xt38ePbWwcwnlBx2D/gxL/nenUt/9DufrXOyEY2JOW6tTnIZbygntJ4xsJcc
9Fv+Kdfy/6y3d75xYe+5ZmshwWC9LKqfx+vhrh7d9UKkb8Cf+cX78PP4K/uq
uFW4mb0Go/sp02Zu8vSl+16uqN9bS6E4fnU8Z8VgtenT9xDtVIeHbssvxzvq
N+q+fisWXv6ncUEX5t0YwKvnK+/bONHVkkHpbT7LczB+eHdyt5445X3MLQy2
5Qudsrw6wuo60Bu5Ya7x4PBQbku9lOiJ9EG0hfeiffNNfnum/Dqr7diaiNmX
xg3myX8YQZd0vTBYDTAcTtvQs8BLcbV8+ujVBoMwABtkFzlV/me5ruYCHuq9
C3vlWM91r93H+cbYO5lTx3gGz5qvxVh4h9YLJINhO9y1rfjLN1PeWr2z6Lp0
UtcoT7Qehq5NLtpHv6YLmz9YnP1j6tHF3q3HKByGxXJn0cPsM5GPfeacTYzO
35pnn63fGQbJIhusr3bgtDXDYHZffKE+UeVsp09V95uvO79M+efp2LAIZzCF
18e3YK38Hjgq9lEOrOOTg2i6XkuuXb1Wvphy0fIvta14zAfVmPnuvmQse6d1
V8loOjG7In9dPJm8QMPeoZrRcg/RRDqRZzWO+VLjYfWb9Nl6PObUONEV3RuN
ouv6cM8YxeyfSA7VOx6vgD+0S1Z4fnirrysaRqd4IfzVmwc++WXxRv87B47o
wfReOCt2id/gNebxmte85j5f8Fa9FH0yPy2/jecwJsbMc4W7Q9hrTYrqCvGU
iUH3xVM8Zz4Yc1BNE6yZDzo9O6a+vPUXxd9trfmJjsrxzE+Z/2XibMrA2asv
/XLNz25NCfad82CgPp0wMmPxcy3fdMviFG1zvehouvV388fksyiXp767nZ/t
gw/QyVtvid5WbN3zGAtbMQ7yzjHkEzz6HyaLBeZTn32/s+3SO3vmeE9+0nyn
nnGuLWP+8G/YQwutwz17TZlP8V40YM7hz7nl3Hi+enThM8a9+ufmCu7gUD/U
1h/w7ugG3cJg6xtWB5QvtHUqWv+P3EKn9Y4vBlsPFs+PZvEIfJ8MwCfKPSGr
3Le+tn4vVu88chJ+4AomyES6obnUU5l9YE7DKWzlcymO6LnqX5jOucYkitfb
yueudnjWE7oXXtK6nMXt8RTz539z4p3w1dbqbd3r6Km+SeWYoY8ZkwqHE3/z
t3TS5OPsXdG6u/H58rHhJjspDCZbiz/MvtoTf1O+ZB/W67e1a9NJzaX/kzn1
PPU737zxQdPoAd3Fa+qTmK0Mx+mzNtjEu9BJeK2HR77M2TOmfL3kd3rD7K3q
OLyDzIIjmDLH0S4MuS8ZjG7ZOtWfswlb4xNNwS384hWe33mtA4dXFF80L2Gw
OIa58CyeAwbRoOvW2758mXohpodW+04GOQc22HrlNbfWUDUm6A+9knf2s8/J
MnPtWa53vevtz/c2b/M227Wuda2dlvxvXsgUMrUYJFyYT8+Ojr07LMFacrk6
0tan91vyrvg8zOVXss11tMNgtajmpZ7YdAaYqwdsOTG9f+uvO8bG9hG3Lx/N
HJkX9ItG0QbZtdb7TfytPbJnzXwycK615Hs+uY4rJ/kQBsuJyw9TDH76NJKB
+efLM0wm5st3TPUK1QQ7hrwxb2Rl9Y9wDBP1E663bzWU+VurP2x9iTDY9fNT
rfK7uHt6Q+Pinn5rzV1yq/rE1l7FR+vD3Pp15YTQf/D5eri3Tjv5g7aNo/Gp
J0hyMF90ftN4kGdl79Lt0CE9E/bU5M1+a+qV8kcWw/eJluGiPpCt3ex/7ydW
lC1FF8UrjaFnuvzyy3e8oQnY84zlvRrHZLX34C8zTtln5sN7+nTtcmHr48VG
hb9wOOVd2GuNCv7VcNe29iCl41Y/DXMw6F3LIfUM9NV8weVJOq610qp1Ky/b
83s/79k6gXM9suyHejPNPr3JwLCXPyZfXHGH1iL024zHzzrdMFj8sfhHsrMY
YblYyZZkLezNXrsz3zvskv/pArNv6ez9XU44/ZnMg9XyO6uBqz9oebVdPxme
fyYMptMXQ4/vOB4tlsNSv3RzRMfCO8kM/Ly6tNbEqt7E93TsMIlO1Begy+z6
WROWPIzf2lyLzKRvoUsYgz19DOuHXa166/VWD0wvhVvygi2Kzuhf+Ard2f9o
kV1IT45HNrbxCOPkmS699NJzfCH+hYZg9bLLLtsx7fr4BV5VvBg+YaXctNa+
LV/dM+ZXXrHXGqLZ3bMHML202l+/1+cZFuGr3IBkYL0qzIFPPKleTp6bDKBj
oTMYTDfx7smvsDbtvFVOzpr51vyc63t2XljsGocwmC63YjBbasYK89n0e7GS
6viKuZVrWc9u81kP4Wr96rNUvCD/DxzW2xRufWbThkHy0j171tb2nLr0IQwa
m3yirgk/zZX5cT9y2Dy1ngjaIoONKV6GDl1HHNtnPc7dXyyK3kpGmHs03twW
l6jPa7aDzZjxdcAJmuR3VWP/+te//lwftfqU1ruldZDIX+egUfKBroGP8AF6
fjRLltOtm1P2Ed0SJvN15iOAwexW7xid+UxemqfWozZ39GhyHAbgppriMJY9
mc55CH90+/w1s9+F86q5r/928Xq8T8zCfetnUI8numi9Zbwn/iT+yc9Qz050
FAa9R36yuV78xFjx37nO3vx9/jbXwkwPdVwxj7mW7sx3XP2JM68mn8bcnx5I
npFLc12YKZvC7cRH15n9u9e+L9mJ+FZjZqvfW33rq12Y8fhDfcfzaZUrai6K
vbeur+tXJ9h6MmHXNdJZyoHnv6C3oU+5JeSF53JdWKhWrzmOn6Jv14n/RMPk
RP0Rw159ImafqHpiVKMPi+izNbzIBzYsXhLf8x6elz+R3YZ+q0vFF6597Wvv
dLLaMcZfrBSfcGz+htaH9t0Y4lfp0zBDFw2LeAS/6VwffPYG9lu+0err689R
3yfXLH/Uu9Vzpnp6W/X25YdWE4AHVfPe+kLRSL0jsulO2sxxGA1f7Tef9ZBZ
+1ck7yYGD+Gv/JgVZxO36aczj3X2yp94KsY4dcPVTltrHNJ3W6+6OqDWd0LP
+UVXDGarZrse8gPP9TfKmSnXxrHp1e7p3valSxR/veSSS86NPT9GPT/cox7M
nil7k/x2r7CbT8a5PsMg/syWCYP12SUPw2Ax+3oI5psJg2g6eqebokf+5PxU
9E/0yJaCDzp2dnb5kc1JY+gd6An8sGxK74bevIfxqb+Y+a9+mV7PV0vO+WSr
8sEkA5N7Pu0rh9RWn19ysHxSuLTPderxVFzCBnvsX3ynuKQYUr3TypfNH9P8
zJ68x/DX3GUz1ium/fHWuXVMWxg8CX8zX3Ribx5f7VQ1CnMdlTAwMTjxN3tD
zRqqmZfQedXt5yfNNsz3Uw3jzFObNZfTNzrXwJnyPjk94wb5ezx3uUfOLUcQ
9vPrwJDv6NHvsMcngLbpt8bJmJcL55pzPTq8M/nqOfjs2DloFAZbj6L+TfVf
O0kGluPd+qMwQ7fl0yzXyH08J5mAbt2PD6n8o3hffWaNOx2OX9JzkS98G/wd
7E007bjmkG3NN0IH5K/ko/IM1dnjC/TKav5bJ4AM5Auu58y0BW31wK9vdPWF
5ae3lm7rLpUryt9N75Z/kZ1Px0Fn5VBPP8qxLd10Hj972c81zuY62Nkc/j8J
f8XMjmG0Otfyrar1N3fR/Kxdn3bZodye6eutr8JpGCw+X15OGJz5BNms6bbV
PSQL3at6rOrojZnfXd91jDO55Vy4d5xz+93+ZCAMex4Yot+RWehfDMa1jXv9
lcvbtZWna0xcX/yKnEGXra3bWjE+W28p/LUOaH0jbHDaWkx+Jz/obDBDJ2MX
5a+HQb4amHLv9LT69Rlvcg19i3vQ+dB+OQSw4X/+DuMZTdCF680LJ3BHHzU2
5WZP7LVeWutS1Ic7HJZDCnvu7XvrplVPwd6Fwep161FLBrLRvR8M8u2Ve2/O
p145c1xO2qLb2cc+2plYmut/mmexYPQyMbhib/bjPPTb7PfQ9ePf9bA5VDNb
js30i8y8gtXPdMweNH7l5pSLk747fUblGeQ7Kh89Wdg6G/VELAfPueHGs8J/
a416NvfkS622hQzgx3EM3ls/QzKDT6AYaDpC/Yh79/zSjkPv7Bv0CGut9VIf
tdaEOIS/6ifqF4HWXSdbCg74Deu/DFMwVJ61Z0W35EbrQ8ISGePc1ruxuTba
5xOpJ73z2LPl/FT7C6Pu55mq4yXv6kXVmhT1PqwHWz4Zz1icHgZ9F3u0+T//
DHk+89LIPu9QnSB93Bz5pHeXlzZl2Vlk4YwHRrv52fNdJnOyMafPxucxjK3/
h5u5hsrsm5/Mmr3ww2DxjRmPXPMKpv1q/+ynX6+M4oX1IMen7ZsYDH/V5KZn
JofD2c3/rwdItmZ2YPXyEx/lGqGp2eun9YHt98lPYe7xbPKntd3gqb6VdDQ0
4dl6/+SGe3sePJusIRvSJ6uhL197tf/CX2twOhZdl/NV7jN6rYbOZ/37831U
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
3sN78T54Dr6Fp5E56zmW3Alz2wcJPsmqxdjie7BXv91yQMwbvy0/CfbcE5kU
9v2H3QZ2+1/90dyrZ/ETDL7lwb9h8Kke2rWxf8JfGP1VPnjz5DcOLVtmfvjN
2V1etxhc/1/xL28Y7LtqY5UT5ffdD5Khi6HLXvpTDD6N6tCXo7ExTOxy32Sb
6jhtjEZYjCbKb6lvWrH+2wvVfZEN8SryG3sFXoAvoMt85vkC0C1aRbdeq9lY
fWr2UTyIPxA2YTJ8J2Nn76GfwTD+BXvpfmRNfM71fDbqqQs//BDmYY7eF6Pm
+vnbXb84NPsBfdS1+EuypfIlGq5fbybPwLqlb/8Eg59w+IbBmyN+6zR8yi2I
7tDhGwbbXxcf3/B3fQnpSPHO1Sd37H/XB/gTDLLTGdsvzn/SFTtfmM5mWq7s
T2TRm1/RSDYtd6acmWTJt/y1N4wu5tp3s1V59u4Ln8Ab8AN4gwX0zvaB/9DJ
6vFALgwP5criTfQ08mK5RMWu1D+KPAgD+UOSZ/k22S35IPE1uPNfvK6+SeZR
HjHcOWf+QLg3b/Oorja9srhsvJb/0j5AHmVzSW6FvWou5+PHG/3Ps/qJXfSt
J8sbBtcHfPudFKf1CX/VBvpVm8zlZTdHLqzcuNCLwc6fzOs/9X97w6D1McpV
D4PVGFyfvs/18Shv+hsGv+XZd476BVo362699FvJxvFtPNXG233Yd/WbsM7m
57nS88iL7BV4Q7oZ+kz22zqgMAiLsMAHzi4JG7AnfkVsKRuKmBbvDbpccdjp
WeRYMiH+53mbA2xs32K4qP8MrPQZ5uqdZK71klgMFr+TfAx/huvgh/Wd8p9w
DtvO7Tt2UnI2fNGZ3zD41pvsDYOf+n5dDH7KrfNbOFr74daZvrFkN2Z6cyGu
7Bl+nuJbYGhHPneY2nF/v8f0Xcct362Oy8VusaXm/eZT/SaH5nPM1l990JUl
3/oq7V56e0eVmxXP9r3nj/7RWTHM9Cd0WJ14+CMTZo+Es/L0YMoxYleKYynf
XRxoNQfrS41v+h2PrC81uU9cGIyYB4x4j3/xGbDRkBfjdauz8aPjZfgmvMB1
dk26JfmzWhUwh8ejvfIp4/X4rVf37TvzyjZqT6AHbD3X66dYe/Sb72L1i+V7
2z/kaR+PPt70xeVl+bPt72Hwk9/g1m1au83KncsTl7+9Yav640+/91u4WhyG
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
Mewc/xsWDFni
      "], {{0, 225}, {225, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->Automatic,
    ImageSizeRaw->{225, 225},
    PlotRange->{{0, 225}, {0, 225}}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257764673809986`*^9, 
  3.725776510390761*^9}},ExpressionUUID->"0129fddd-0566-4328-8e97-\
398a1d694acd"],

Cell[BoxData[
 TemplateBox[{"\"Albert Einstein\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Person\"", ",", "\"AlbertEinstein::6tb7g\""}], "]"}],
   "\"Entity[\\\"Person\\\", \\\"AlbertEinstein::6tb7g\\\"]\"","\"person\""},
  "Entity"]], "Output",
 CellChangeTimes->{
  3.7257765659489183`*^9},ExpressionUUID->"d8f4a247-d1a5-4099-b0cf-\
c948e3d5d3e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<Sentiment\>\"", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<I love this movie\>\"", ",", " ", "\"\<I am so sad\>\"", ",", " ", 
     "\"\<My phone broke again\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257765755254736`*^9, 3.7257765900530767`*^9}, {
  3.72577684378374*^9, 3.7257768669472504`*^9}, {3.7257769223912826`*^9, 
  3.7257769297289457`*^9}},ExpressionUUID->"003aa18a-b946-415e-98f5-\
34599b4d787d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Positive\"\>", ",", "\<\"Negative\"\>", 
   ",", "\<\"Negative\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.725776937356393*^9},ExpressionUUID->"4eccd0cd-7c69-4c32-82fc-\
6c202b979f6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<Profanity\>\"", ",", " ", 
   RowBox[{
   "Import", "[", "\"\<http://www.urbandictionary.com/random.php\>\"", 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257769477062764`*^9, 
  3.7257769860480795`*^9}},ExpressionUUID->"76b7b5a8-c1ee-46df-8cb1-\
3013a47be51b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.725776999803459*^9},ExpressionUUID->"831bec51-9961-4b8f-aea5-\
089a521efe7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Classify", "[", 
   RowBox[{"\"\<Profanity\>\"", ",", " ", 
    RowBox[{
    "Import", "[", "\"\<http://www.urbandictionary.com/random.php\>\"", 
     "]"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7257769477062764`*^9, 3.7257769860480795`*^9}, {
  3.725777261036944*^9, 
  3.7257772613777995`*^9}},ExpressionUUID->"5f7fbd38-83c1-4deb-9dc8-\
05449099d0be"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7257772740277243`*^9},ExpressionUUID->"6f93e539-4c1f-4962-bbd1-\
c7bcae24f171"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Classify", "[", 
   RowBox[{"\"\<Profanity\>\"", ",", " ", 
    RowBox[{
    "Import", "[", "\"\<http://www.urbandictionary.com/random.php\>\"", 
     "]"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7257769477062764`*^9, 3.7257769860480795`*^9}, {
  3.725777261036944*^9, 
  3.725777282226895*^9}},ExpressionUUID->"eef18d32-861d-4f61-af1d-\
76937a5d3539"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.72577728649454*^9},ExpressionUUID->"f61976ef-a892-47cb-abe6-4dfd84313f08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{
  "\"\<Spam\>\"", ",", 
   "\"\<Dear recipient,*** Technologies announces the beginning of a new \
unprecendented global employment campaign.reviser yeller winers butchery \
twenties\n Due to company's exploding growth *** is expanding business to the \
European region.During last employment campaign over 1500 people worldwide \
took part in ***'s business\n and more than half of them are currently \
employed by the company.And now we are offering you\n one more opportunity to \
earn extra money working with *** Technologies.druggists blame classy gentry \
Aladdin\n \[IndentingNewLine]We are looking for \
honest,responsible,hard-working people that can dedicate 2-4 hours of their\n \
time per day and earn extra \[CapitalAHat]$300-500 weekly.All offered \
positions are currently part-time\n and give you a chance to work mainly from \
home.lovelies hockey Malton meager reordered\n \[IndentingNewLine]Please \
visit ***'s corporate web site (http://www.***.com/sta/home/0077.htm) for \
more details regarding these vacancies.\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257775080001607`*^9, 
  3.7257775080567493`*^9}},ExpressionUUID->"949877be-5a31-4874-a14b-\
5626f193a048"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.725777530544238*^9},ExpressionUUID->"7b069c9b-8b72-448b-ba4e-\
b848ba870eed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"2", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"3", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"4", " ", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"5", "\[Rule]", " ", "False"}], ",", " ", 
     RowBox[{"6", "\[Rule]", " ", "True"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7257775913582087`*^9, 
  3.7257776395839634`*^9}},ExpressionUUID->"7b5d1b26-4466-44fa-b93b-\
9fd828327dec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.7257776459372764`*^9, 
  3.7257776550824833`*^9}},ExpressionUUID->"de05d253-ea23-4bc6-8e0b-\
b2eb6cfd44a7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NaiveBayes\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257776598558655`*^9},ExpressionUUID->"827f10eb-b2dc-442f-93d8-\
fee478de4dcd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"c", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.725777725028491*^9, 
  3.7257777261421237`*^9}},ExpressionUUID->"7d868b84-b727-455f-ba01-\
a6b49d3d6a36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Truec", "[", 
  RowBox[{"5", ",", " ", "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725777736213332*^9, 
  3.7257777453653393`*^9}},ExpressionUUID->"a4e45c69-24c9-48e6-ad62-\
db3413ca916e"],

Cell[BoxData[
 RowBox[{"Truec", "[", 
  RowBox[{"5", ",", "\<\"Probabilities\"\>"}], "]"}]], "Output",
 CellChangeTimes->{
  3.725777746178995*^9},ExpressionUUID->"bd8a47d7-0614-4f47-997c-\
20f6ffd34cdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"5", ",", " ", "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725777736213332*^9, 
  3.7257777606057467`*^9}},ExpressionUUID->"b04c82cc-bc5d-4010-9514-\
ab24c7d38eeb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"False", "\[Rule]", "0.4307228915662651`"}], ",", 
   RowBox[{"True", "\[Rule]", "0.5692771084337349`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.725777761224705*^9},ExpressionUUID->"dda8d8b4-6744-4c8a-b7d0-\
c945d87dd081"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"5", ",", " ", 
   RowBox[{"ClassPriors", "\[Rule]", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"False", "\[Rule]", "0.5"}], ",", " ", 
      RowBox[{"True", " ", "\[Rule]", "0.5"}]}], "|>"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257777778138742`*^9, 
  3.725777829225721*^9}},ExpressionUUID->"8c1c47fb-2810-4d9c-b0c4-\
48fd0d8e3c08"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.725777832031292*^9},ExpressionUUID->"f79cc44b-eed9-4ae8-baee-\
91cc272da76f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"5", ",", " ", "\"\<Probabilities\>\"", ",", " ", 
   RowBox[{"ClassPriors", "\[Rule]", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"False", "\[Rule]", "0.5"}], ",", " ", 
      RowBox[{"True", " ", "\[Rule]", "0.5"}]}], "|>"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257777778138742`*^9, 
  3.725777864932706*^9}},ExpressionUUID->"90f00933-3283-4550-a8ae-\
f13c4b73008b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"False", "\[Rule]", "0.6941747572815535`"}], ",", 
   RowBox[{"True", "\[Rule]", "0.3058252427184466`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7257778664876604`*^9},ExpressionUUID->"78acd509-63db-4d07-a3a8-\
c89eb3dee853"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"data", ",", 
    RowBox[{"ClassPriors", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"False", "\[Rule]", "0.5"}], ",", 
       RowBox[{"True", "\[Rule]", "0.5"}]}], "|>"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257780451961536`*^9, 
  3.725778045242234*^9}},ExpressionUUID->"7913cb2e-32e8-4332-b3d7-\
e0dd848bc60e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NaiveBayes\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725778047803733*^9},ExpressionUUID->"fabe37dd-c696-4ca4-96e6-\
a399dff36755"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.725778104271801*^9, 
  3.725778105336666*^9}},ExpressionUUID->"288772fb-013b-4788-b661-\
faa851727cf4"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.7257781067717795`*^9},ExpressionUUID->"d2fdc0d6-6fdb-4e40-b99b-\
1abc2e3cc362"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"5", ",", " ", "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257781099563785`*^9, 
  3.7257781175552225`*^9}},ExpressionUUID->"c2135c68-884e-4ea2-ba3d-\
d103d17480f2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"False", "\[Rule]", "0.6941747572815535`"}], ",", 
   RowBox[{"True", "\[Rule]", "0.3058252427184466`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7257781183282585`*^9},ExpressionUUID->"a314b097-3410-4db0-a370-\
d4b476415f43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"5", ",", " ", 
   RowBox[{"ClassPriors", " ", "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"False", " ", "\[Rule]", " ", "0.2"}], ",", " ", 
      RowBox[{"True", " ", "\[Rule]", " ", "0.8"}]}], " ", "|>"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725778199967989*^9, 
  3.7257782633464117`*^9}},ExpressionUUID->"f4c92919-e336-4bcb-88b9-\
965005e3abb9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.725778265140954*^9},ExpressionUUID->"f54ae380-9215-4110-be75-\
3f96b92b07de"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.4", ",", " ", "\"\<A\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", " ", "\"\<A\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2.3", ",", " ", "\"\<B\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"5.4", ",", " ", "\"\<B\>\""}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7257794155564365`*^9, 
  3.725779469464723*^9}},ExpressionUUID->"175561d6-8560-4b6a-b12b-\
92eec2edf865"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fe", " ", "=", " ", 
  RowBox[{"FeatureExtraction", "[", "dataset", "]"}]}]], "Input",
 CellChangeTimes->{{3.7257794958766675`*^9, 
  3.7257795073668222`*^9}},ExpressionUUID->"d92b28c6-6ab9-4092-a252-\
802eaec6268c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["FeatureExtractorFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{
                 InsetBox[
                  FormBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.21999999999999997`}}, 
                    "Rows" -> {{-0.43}}}], "Grid"], TraditionalForm], {295, 
                  559}], 
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {0, 0}], {{{
                    0.9994395074667094, -0.033476423266254246`}, {
                    0.033476423266254246`, 0.9994395074667094}}, Center}], {{{
                   1, 0}, {0, 1}}, Center}], 
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {42, 42}], {{{
                    0.9977885385845798, -0.06646828017369152}, {
                    0.06646828017369152, 0.9977885385845798}}, Center}], {{{
                   0.8, 0.}, {0., 0.8}}, Center}]}, ImagePadding -> 0.2, 
                PlotRange -> {{242, 348}, {506, 612}}, PlotRangeClipping -> 
                True, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "3", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{
                 InsetBox[
                  FormBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.21999999999999997`}}, 
                    "Rows" -> {{-0.43}}}], "Grid"], TraditionalForm], {295, 
                  559}], 
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {0, 0}], {{{
                    0.9994395074667094, -0.033476423266254246`}, {
                    0.033476423266254246`, 0.9994395074667094}}, Center}], {{{
                   1, 0}, {0, 1}}, Center}], 
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {42, 42}], {{{
                    0.9977885385845798, -0.06646828017369152}, {
                    0.06646828017369152, 0.9977885385845798}}, Center}], {{{
                   0.8, 0.}, {0., 0.8}}, Center}]}, ImagePadding -> 0.2, 
                PlotRange -> {{242, 348}, {506, 612}}, PlotRangeClipping -> 
                True, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "3", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Invertibility: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Perfect\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Missing values: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Imputed\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("FeatureExtractorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257795100526905`*^9},ExpressionUUID->"bfb7a3ee-11de-43d5-9242-\
534f94c7124d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{
   RowBox[{"dataset", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Yes\>\"", ",", " ", "\"\<No\>\"", ",", " ", "\"\<No\>\"", ",", " ", 
      "\"\<No\>\""}], "}"}]}], ",", " ", 
   RowBox[{"FeatureExtractor", "\[Rule]", "fe"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257795306515665`*^9, 
  3.7257795953877945`*^9}},ExpressionUUID->"b9a0d550-e3c7-4762-a899-\
42737e214596"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"No\"", "\"Yes\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"No\"", "\"Yes\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725779597943508*^9},ExpressionUUID->"51efa3fe-5880-417d-9f22-\
639e35e4b1db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["fe"], "Input",
 CellChangeTimes->{{3.725779656553477*^9, 
  3.725779656695407*^9}},ExpressionUUID->"e43e68bf-0ee8-40ae-abb0-\
995b73d3aa5e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["FeatureExtractorFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{
                 InsetBox[
                  FormBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.21999999999999997`}}, 
                    "Rows" -> {{-0.43}}}], "Grid"], TraditionalForm], {295, 
                  559}], 
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {0, 0}], {{{
                    0.9994395074667094, -0.033476423266254246`}, {
                    0.033476423266254246`, 0.9994395074667094}}, Center}], {{{
                   1, 0}, {0, 1}}, Center}], 
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {42, 42}], {{{
                    0.9977885385845798, -0.06646828017369152}, {
                    0.06646828017369152, 0.9977885385845798}}, Center}], {{{
                   0.8, 0.}, {0., 0.8}}, Center}]}, ImagePadding -> 0.2, 
                PlotRange -> {{242, 348}, {506, 612}}, PlotRangeClipping -> 
                True, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "3", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{
                 InsetBox[
                  FormBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["7", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["0", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["9", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}, {
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["1", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["8", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["4", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["2", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["3", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["6", 5, 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox["5", 5, 
                    GrayLevel[0.7], StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.21999999999999997`}}, 
                    "Rows" -> {{-0.43}}}], "Grid"], TraditionalForm], {295, 
                  559}], 
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {0, 0}], {{{
                    0.9994395074667094, -0.033476423266254246`}, {
                    0.033476423266254246`, 0.9994395074667094}}, Center}], {{{
                   1, 0}, {0, 1}}, Center}], 
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{
                    Thickness[0.015], 
                    JoinForm[{"Miter", 10.}], 
                    GrayLevel[0.7], 
                    Opacity[1.], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}], 
                    GrayLevel[0], 
                    Opacity[1.], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJyNl3toVEcYxVcFsamKxdT6wBr7R0iwaQkhgtjIlKhRkLSJVYgG29gKSnX3
3rsUTYrde7GK8RVDRBG1KFqIQmyqpijYNvVRNLSijRDfmipSTaKUkGCVPu7O
95t7wWWpf4icPec735mZb2cnExfHypcMjEQibf6/5P91p/pyKttt1bHfKsro
8VRupf/JL7ayizI69j/yVBLmnLNVElqPPaX1p0Os+WZbHfDLO/6kfjd8r6f6
c/wPavHvQ78K/jb8Mvq14b8Qv5ZUfNqHddPSY62fRL8W/MfYKtmu6Bj9h9Dv
CPxfltR/S32XJfm+YT03LPFrMuuH/xG/RuovkWcL/N1UrP02WZLnXirW/mss
yfc7+arp3wm24W+Bq/C/Tv1ccAf+09H/Rp638PvV7A/5z8IPhv8+PdZ5T6Zi
46dxozkP8DZzXmAXvoB8NdTnkucz9jeL9cTQjyTPMnOe4CpPre0qO/763zHB
FZ7q9uHa3pj4zYPviUm/ck9NSH5wH1wKvznkdX0BeL6nyn3YdTUqfhXg81FZ
z/vgE1HRz8SvCf4dTyXpsr3gN/FviEre8aY//sNSsc67jvX0uS+MdZ6H6bHW
d7qSvzYm+a645EN/Af128M8u6wH/QP1B8HfwH+F/EH4M57MH/mJU7T6T1ezU
4d8flfNe6cr689BXgVeQb04q1n7W/+BWMw9uMD867yJX5i+f+VzqyrxNZf4+
doPvk8YfujLPpdQvgK+k/gP4KHwp/h7zOht+HX4lbnAf6Hwz6N8AXwzeCJ+H
/kv41/D7Av8BrG+rpQ6XdNZkPk1I/32WmuXDw70JqT9mqc8zfcUj+BOWStIl
PYngvtP1D8Ht6O+jf2CpJKy5k5B+EVvqb+KfaUv9tYTky+b+HUjeyXaQX/aX
+zsvFet+Femx1i8PseyHHeyX7Af93gbvRZ/vBr9nmi8At1JfmB7r+kLy/BRi
vV/XWe8b5Onn92gE9SMcOY9n7N9oR/gIfJYj/QZQn+1IvkFm/xzxH2z2C5xB
/7ng4eBP8XvVzCN4PH7b0Web+aLfVPQ2+D30i8j7CXmXOtzPYAv/FdRX4++E
/pqvNucD9tDvxK82xJqvZT278NsQYp1vI/m+Qr+Z+n341dP/APoG+EvgOur/
YX2b8J8UF7weXBAX/3rqp8SlfhfrUfBfw79LfSP1xXHJf8icH/om+s9E3xxi
eb/gNxt9C/Vz0LfCl6FvM/MAfxk+Ny77cfO59d7D7zK4Oz02vzfpsN6Pf+nf
Dv8S74EL8CPN+5PzHGven+gnwp/h/HJ5LzyAL8RvOPtfDJ/P+spSsTm/dFi+
f/HgvSHvHfwT6O86wftG7k8zf+B6M8/mvYt+lRd8fzS/2gu+r7p+Df1noV9P
/RQzz+Z9ZeYXPA68A/9R6Hd6wX0j84n+ZfZzD/6vwB817znqz3vBfaTz3OE8
hjrB+1XzT7jf/jD7w33aRZ5b8N3or4R/fzz/98h/NOnbyg==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/U0jpv/QygKHJQW2XNcPNjgc/goU6CtwuL4YKHCz
wQEo+1WjA8r/CJWfVuBQCFS+mKvRASQds7jAgQukQKXRAWzewQIHkHSBeSNE
/weoftdGB02QgEwhxL7ARoh5foUQ+VCo+oZCiPl+UPM3F0LMc4fyb0PVW0LN
+wI1TxGqX6AI7j6w+WJQ/ieofziK4P4Dm/cbav7+Boh5dwoh/lkDVb8BKj+/
Ae4+sH0TofwAqHv7oOEjB5WfCjX/NTR85kD5h6Hhs7rBAT38ARfPvOE=
                    "]}, CurveClosed -> {1, 1}]}, {42, 42}], {{{
                    0.9977885385845798, -0.06646828017369152}, {
                    0.06646828017369152, 0.9977885385845798}}, Center}], {{{
                   0.8, 0.}, {0., 0.8}}, Center}]}, ImagePadding -> 0.2, 
                PlotRange -> {{242, 348}, {506, 612}}, PlotRangeClipping -> 
                True, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "3", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Invertibility: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Perfect\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Missing values: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Imputed\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("FeatureExtractorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725779657961856*^9},ExpressionUUID->"d2149c86-69b6-4c36-a065-\
6bc2a7d53637"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<The cat is grey.\>\"", " ", "->", " ", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
2ARKKAYPHqyIekLXQNe26xowmUHaQK7V80vZvXu36wsVmVOKaqxnPXUWvPyB
2QBYoxF5yrBKRlYFBQVGM9Ex6G3m5ubyM2satkNGSprLiR9pAyFmmnPcZULa
okWLFFFMULohXbL8y3fjWf3W60dYDc+ePesixU8dtLW1YWy03VXGnSVKtjFq
LKcP8XJvPsI/dObMGaOZ6Bg1NTWyv10mSrGc6ikJiYiIqKysbGxsrK+vz87O
hkpqJsNQ2q66fMywadMmOVjTnYid+eGZe2Sali5dynNr0SgtLdVwS9SRH1Rd
nqugoCDrkb6uMcY+jqupISEhb9++xQ9hOjomT86ePRsn8Azt1NRU1ZW4st6P
paKioguctAu5sBQiSkLV0NCAn5NJMRGyfft2zeXR0dGqZV0dT2hsNo1fR/IV
GhpqL64ACCe4ysnJ4SKGZtOqvXv3YjISr3SmS5qbm1WxGoXP1+x55QRgDYuc
rUdib0eWqLO8AQUxMH78+Pfv36uWU3B5kQV5PXktIodz585JKcKEZ6PkSu5J
kpWVpVmObS/GFJO5O3/+vGppf3iaNz3A3bt3raeSzp07F2fSa+W9xVTLLeyc
A7mTW35+vnV0bRfQbSmIQtGAjY91VYrsfGBgICsgQPp78eJFuSBFNa/LcL7N
xxwPzKdyBFgHq6ur8Yu8PIc7yzp16NAhxTzRncfURo8e3dLSwoODmoVRTsMX
ExITE9EdaB/yWTuCuhweHq5ardNhi837UbS2to4ZMwZXQcJ7mzB//nwpkIYk
PnV1dWFhYXg2Hn+3L0uK6RVQZscr+7DeVrWa6ALGSkpKUAXSWIOYmBhNbNN9
xtgE8fx81WobQAK9QYqKuTIsn41TXblqTzEXTDoLvpZ+KyAgYOLEiVFRUQcO
HMBjyAfjJ09OTuanUoRriIuL432xVDupYbuEs6hTXkyPOnLkSMmA8pOSC89v
VOxUZ4CYUb6zceNGHj5mQw0SyDQtXrxYblLE3vnIkSM6fewaS3KbI3YiZCHJ
2ZFB0Czz5EeSs4h9fX3l2qtu6qYmcVZME4nlo6rmfAd0URI0c+ZMxWxC+cEo
kidNseNeKLgJfhq3vX37dnx8PK9rUCyVjstudHDRokXHjx9/8uSJagq9Hjx4
QEdk4N1ZijRHeJkA3ZOeUzMpjmMtAr3i2NhYrtigkrZ27VqWve6zxL+O2VOX
Ll3CYiL8KH22mw6TsFHYwDN7NV3IyMiYNWvWjBkzwjuPf5jA7WnTptHn9OnT
KVNuamqCZ2TTah0PUOKD9WJgGLMfecl890HM092eP38eGRkJKmAxNCMyCBET
EhIo8mEnJQUbEQV/7ULsxwvlrAHBkKG4BG+5oJrcUGFhYVJS0oULF2QfuxmL
cuzx9OlTf39/ja2QBnbq1Klk4V+9eiX9ppyiJonq/p6BvEjceosqPoKHl3sR
yI1iePM0O04oQn8papKGmvcDpPbSpUuvXLkiNwHQrETWtLu/baAM0TVfWYzl
za13S9acb6/9HumHiArJEn9SYFNbW8uP4To1NEMA2rds2aIJacie5+TkqKYX
5PwM3TUBE01apliOYx48eBAncHbgFpNPHA0igXSN/R2BzDjUDa6WHe4vroPA
woULvb29WQeXLFmiY11/WcCDHD16VBEDKMHBwapYayBL679B2THF2HJrO4rJ
VbOxIrpcbc6zUQAhDx8+DAwM5OlAJGMVFRWqZeXH9edhOhqcHTx+/BipOgTM
19e3vLycw6rffhBWiP+rC1LGvLy8oKAgaGJAQAARyAr422SpZplhFSPGysrK
Nm/enJaWVldXJ8/5lUEqxv6O4nOeLaCaqPtt0jWQqbpqNuOyxKHa9v9neTxk
cYA1EXYJX0GafSsbbgouVsjSkyoiKwOfzSj8F7aTAW0=
          "], {{0, 95}, {100, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSize->{32.14375000000152, Automatic},
        ImageSizeRaw->{100, 95},
        PlotRange->{{0, 100}, {0, 95}}]}], ",", " ", 
      RowBox[{"\"\<My cat is fast.\>\"", " ", "->", " ", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
2ARKKAYPHqyIekLXQNe26xowmUHaQK7V80vZvXu36wsVmVOKaqxnPXUWvPyB
2QBYoxF5yrBKRlYFBQVGM9Ex6G3m5ubyM2satkNGSprLiR9pAyFmmnPcZULa
okWLFFFMULohXbL8y3fjWf3W60dYDc+ePesixU8dtLW1YWy03VXGnSVKtjFq
LKcP8XJvPsI/dObMGaOZ6Bg1NTWyv10mSrGc6ikJiYiIqKysbGxsrK+vz87O
hkpqJsNQ2q66fMywadMmOVjTnYid+eGZe2Sali5dynNr0SgtLdVwS9SRH1Rd
nqugoCDrkb6uMcY+jqupISEhb9++xQ9hOjomT86ePRsn8Azt1NRU1ZW4st6P
paKioguctAu5sBQiSkLV0NCAn5NJMRGyfft2zeXR0dGqZV0dT2hsNo1fR/IV
GhpqL64ACCe4ysnJ4SKGZtOqvXv3YjISr3SmS5qbm1WxGoXP1+x55QRgDYuc
rUdib0eWqLO8AQUxMH78+Pfv36uWU3B5kQV5PXktIodz585JKcKEZ6PkSu5J
kpWVpVmObS/GFJO5O3/+vGppf3iaNz3A3bt3raeSzp07F2fSa+W9xVTLLeyc
A7mTW35+vnV0bRfQbSmIQtGAjY91VYrsfGBgICsgQPp78eJFuSBFNa/LcL7N
xxwPzKdyBFgHq6ur8Yu8PIc7yzp16NAhxTzRncfURo8e3dLSwoODmoVRTsMX
ExITE9EdaB/yWTuCuhweHq5ardNhi837UbS2to4ZMwZXQcJ7mzB//nwpkIYk
PnV1dWFhYXg2Hn+3L0uK6RVQZscr+7DeVrWa6ALGSkpKUAXSWIOYmBhNbNN9
xtgE8fx81WobQAK9QYqKuTIsn41TXblqTzEXTDoLvpZ+KyAgYOLEiVFRUQcO
HMBjyAfjJ09OTuanUoRriIuL432xVDupYbuEs6hTXkyPOnLkSMmA8pOSC89v
VOxUZ4CYUb6zceNGHj5mQw0SyDQtXrxYblLE3vnIkSM6fewaS3KbI3YiZCHJ
2ZFB0Czz5EeSs4h9fX3l2qtu6qYmcVZME4nlo6rmfAd0URI0c+ZMxWxC+cEo
kidNseNeKLgJfhq3vX37dnx8PK9rUCyVjstudHDRokXHjx9/8uSJagq9Hjx4
QEdk4N1ZijRHeJkA3ZOeUzMpjmMtAr3i2NhYrtigkrZ27VqWve6zxL+O2VOX
Ll3CYiL8KH22mw6TsFHYwDN7NV3IyMiYNWvWjBkzwjuPf5jA7WnTptHn9OnT
KVNuamqCZ2TTah0PUOKD9WJgGLMfecl890HM092eP38eGRkJKmAxNCMyCBET
EhIo8mEnJQUbEQV/7ULsxwvlrAHBkKG4BG+5oJrcUGFhYVJS0oULF2QfuxmL
cuzx9OlTf39/ja2QBnbq1Klk4V+9eiX9ppyiJonq/p6BvEjceosqPoKHl3sR
yI1iePM0O04oQn8papKGmvcDpPbSpUuvXLkiNwHQrETWtLu/baAM0TVfWYzl
za13S9acb6/9HumHiArJEn9SYFNbW8uP4To1NEMA2rds2aIJacie5+TkqKYX
5PwM3TUBE01apliOYx48eBAncHbgFpNPHA0igXSN/R2BzDjUDa6WHe4vroPA
woULvb29WQeXLFmiY11/WcCDHD16VBEDKMHBwapYayBL679B2THF2HJrO4rJ
VbOxIrpcbc6zUQAhDx8+DAwM5OlAJGMVFRWqZeXH9edhOhqcHTx+/BipOgTM
19e3vLycw6rffhBWiP+rC1LGvLy8oKAgaGJAQAARyAr422SpZplhFSPGysrK
Nm/enJaWVldXJ8/5lUEqxv6O4nOeLaCaqPtt0jWQqbpqNuOyxKHa9v9neTxk
cYA1EXYJX0GafSsbbgouVsjSkyoiKwOfzSj8F7aTAW0=
          "], {{0, 95}, {100, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSize->{32.14375000000152, Automatic},
        ImageSizeRaw->{100, 95},
        PlotRange->{{0, 100}, {0, 95}}]}], ",", " ", 
      RowBox[{"\"\<This dog is scary.\>\"", " ", "->", " ", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
          "], {{0, 100}, {100, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSize->{30.109375000000554`, Automatic},
        ImageSizeRaw->{100, 100},
        PlotRange->{{0, 100}, {0, 100}}]}], " ", ",", " ", 
      RowBox[{"\"\<The big dog.\>\"", " ", "->", " ", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
          "], {{0, 100}, {100, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSize->{30.109375000000554`, Automatic},
        ImageSizeRaw->{100, 100},
        PlotRange->{{0, 100}, {0, 100}}]}]}], "}"}], ",", " ", "\n", "  ", 
    RowBox[{"FeatureExtractor", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "ToUpperCase", ",", " ", "RemoveDiacritics", ",", " ", "\n", "    ", 
       "\"\<SegmentedWords\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257796993278303`*^9, 
  3.7257796993769665`*^9}},ExpressionUUID->"10e9fa69-9c02-4770-a37a-\
8e58271c3b8b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
2ARKKAYPHqyIekLXQNe26xowmUHaQK7V80vZvXu36wsVmVOKaqxnPXUWvPyB
2QBYoxF5yrBKRlYFBQVGM9Ex6G3m5ubyM2satkNGSprLiR9pAyFmmnPcZULa
okWLFFFMULohXbL8y3fjWf3W60dYDc+ePesixU8dtLW1YWy03VXGnSVKtjFq
LKcP8XJvPsI/dObMGaOZ6Bg1NTWyv10mSrGc6ikJiYiIqKysbGxsrK+vz87O
hkpqJsNQ2q66fMywadMmOVjTnYid+eGZe2Sali5dynNr0SgtLdVwS9SRH1Rd
nqugoCDrkb6uMcY+jqupISEhb9++xQ9hOjomT86ePRsn8Azt1NRU1ZW4st6P
paKioguctAu5sBQiSkLV0NCAn5NJMRGyfft2zeXR0dGqZV0dT2hsNo1fR/IV
GhpqL64ACCe4ysnJ4SKGZtOqvXv3YjISr3SmS5qbm1WxGoXP1+x55QRgDYuc
rUdib0eWqLO8AQUxMH78+Pfv36uWU3B5kQV5PXktIodz585JKcKEZ6PkSu5J
kpWVpVmObS/GFJO5O3/+vGppf3iaNz3A3bt3raeSzp07F2fSa+W9xVTLLeyc
A7mTW35+vnV0bRfQbSmIQtGAjY91VYrsfGBgICsgQPp78eJFuSBFNa/LcL7N
xxwPzKdyBFgHq6ur8Yu8PIc7yzp16NAhxTzRncfURo8e3dLSwoODmoVRTsMX
ExITE9EdaB/yWTuCuhweHq5ardNhi837UbS2to4ZMwZXQcJ7mzB//nwpkIYk
PnV1dWFhYXg2Hn+3L0uK6RVQZscr+7DeVrWa6ALGSkpKUAXSWIOYmBhNbNN9
xtgE8fx81WobQAK9QYqKuTIsn41TXblqTzEXTDoLvpZ+KyAgYOLEiVFRUQcO
HMBjyAfjJ09OTuanUoRriIuL432xVDupYbuEs6hTXkyPOnLkSMmA8pOSC89v
VOxUZ4CYUb6zceNGHj5mQw0SyDQtXrxYblLE3vnIkSM6fewaS3KbI3YiZCHJ
2ZFB0Czz5EeSs4h9fX3l2qtu6qYmcVZME4nlo6rmfAd0URI0c+ZMxWxC+cEo
kidNseNeKLgJfhq3vX37dnx8PK9rUCyVjstudHDRokXHjx9/8uSJagq9Hjx4
QEdk4N1ZijRHeJkA3ZOeUzMpjmMtAr3i2NhYrtigkrZ27VqWve6zxL+O2VOX
Ll3CYiL8KH22mw6TsFHYwDN7NV3IyMiYNWvWjBkzwjuPf5jA7WnTptHn9OnT
KVNuamqCZ2TTah0PUOKD9WJgGLMfecl890HM092eP38eGRkJKmAxNCMyCBET
EhIo8mEnJQUbEQV/7ULsxwvlrAHBkKG4BG+5oJrcUGFhYVJS0oULF2QfuxmL
cuzx9OlTf39/ja2QBnbq1Klk4V+9eiX9ppyiJonq/p6BvEjceosqPoKHl3sR
yI1iePM0O04oQn8papKGmvcDpPbSpUuvXLkiNwHQrETWtLu/baAM0TVfWYzl
za13S9acb6/9HumHiArJEn9SYFNbW8uP4To1NEMA2rds2aIJacie5+TkqKYX
5PwM3TUBE01apliOYx48eBAncHbgFpNPHA0igXSN/R2BzDjUDa6WHe4vroPA
woULvb29WQeXLFmiY11/WcCDHD16VBEDKMHBwapYayBL679B2THF2HJrO4rJ
VbOxIrpcbc6zUQAhDx8+DAwM5OlAJGMVFRWqZeXH9edhOhqcHTx+/BipOgTM
19e3vLycw6rffhBWiP+rC1LGvLy8oKAgaGJAQAARyAr422SpZplhFSPGysrK
Nm/enJaWVldXJ8/5lUEqxv6O4nOeLaCaqPtt0jWQqbpqNuOyxKHa9v9neTxk
cYA1EXYJX0GafSsbbgouVsjSkyoiKwOfzSj8F7aTAW0=
                    "], {{0, 95}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {100, 95}, 
                    PlotRange -> {{0, 100}, {0, 95}}, 
                    ImageSize -> {32.14375000000152, Automatic}], 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztXQuwZEV5nnPmfR4zZ2bOa15nZlYERQ3iollBTchayisQ1ldMKhAIK6wp
13IJUuhqqRAogQoBRQqUSDRGKhgsLatEizValhQBCwMutQYTSPCBFSGxCnB3
79w7N//f/feZnrkzd+fOnXtm9u501b939t6ePt399f/sv/u0Ln7/jveosVjs
8gz8s+OiK0/fs+eiq95mwX/esfvyXZfu3nnJmbv/auelO/dsuzgOv7yEKBGb
l3mZl3mZl3mZlwgLqmFUv+q0O3KMF4UopiiK/Lt5ib6weVdVJWaZ+jtrvnND
Jp3aIv9tXiIrbL6zqVSqXrbvalb95aDsLTcq7r+nU8kSVZhjEkGheVaziUSq
6bv/FFS85XrZbQMdbMJnt1T4MMouZe7ORVIUrrtjTtG6qFkFLHx3ISi7wB/u
ItAS/P8BVVHU2Jw/oipKXFVV4Id/xfknHBCPDv4EPfI04JEVdafa001eBG/k
Df33UWfUCQOiJcLjQcAjPu2+bvZCeiOeSSYzMO8PSTJK4NEOKoiHe5PKbd85
JhtYkDdQT3ulwnVNrsNlLNj/kWdyhr4TqoMVHEtOu8+btQg5lTO001tVfxF0
9mLQK6sQj6UG4OQVCx9A6wrxmNu8ky8Kj4Eo2XTKgnn/aV3SFX3UQX0CPPIi
2F7vp6/P7awJFlrfCS2bjTUr/j2oH/p0xgpCvNAO9u3ijZqmsWYUKZgyL+MX
4dPB3O4le2pVLEI+AXnWAtnVqJVvT2dwT3DOJ+stAotSIX8u6O8OYdEZAQ/O
J77TbpSd5XrF/1wW+Au4RJ0QnyC22Ld47Nix4VjcHHTGCY2K/xz5GSNj0WMD
w89GrfIZcCGxSZy/dWOCsLL2OLybmu9wqPBDzWRSZlDxHmkM19+j8Qlh4hat
T9IjEJNx9kn4GsmkX1bznOtAl93iu/ZZyubGhOlvHGK9Yn8JY7ZH0t8jYrII
djJi8hHpWQn2LO7XjKJfUN7FQA5+gfk/vrsMbS7kTePkGOeUTbcXprD5UWIw
bx9sUNx2vVhItvAS2GjLXsn6eDaTzAxRJavOKfr9Nd/5LrSHMcwXcL3U/OJn
qalNpUuEz+fm82cyn6/srEl/j2h3LaEt3Ki4Byqec5Nl6n+ZN7S3FvO5lxia
llwFDLEHqWB8rNGN1UD/vJ+lUylNrrcJitDfLeCL/6lL8doNIKaLGsxP8TnV
yge3VP39pXTq5diPYbIHeQp0x3cEHoAv+p8dkFmnrva9o6mQz6eAniwAFo8F
3bW3EVjImOAe1iJiDzqBYV/17a9QLHLQvKLBjPrjK0EXjzbimTf13TSWoz5m
JuFhAx4PBJKdGhF1gnAvi8Xqpa71lATyR9Vzbm50+9hucBw/h/v4saNfhzDb
U/B5BmNUFfd+1JOkyzdKZvUTe1bNs+8exh/CP80bxgcoVtAWsg9wfFiKXR51
OmSAnA3txUwqlW147j+iTRlwOTK27zEqiVh9IWdcSP1bsfcu7YX9Yau7FybW
y/Og+8pU9WjSIWxPCT8gf3tFaxfYnx+kBYVLk/3NgA9+wdrbqJWX62uXX2vl
qSWcW7QjYC0UqZMr1rhYLznTaAJ2hwKfP4tiysuA05lU72iRWWE/LV17Tc23
70MfA8fiFK2P0Z8URfKfy4bx5mbZ/UnA8xaEnF8NhyXCb2RbGeovsH2TUuEG
1oHh88kVhKomwOb9icCS6RD4vlPM7+XbLrOd10K+L/NtQWebMO5rgN8PCt9b
yAr4/c3pdIp9B1iHxetwcHo6VWrZhVsaYFdKc9AvwxgOhC+bX0kvLA3BBn/H
clOg/lPpVNKOHdnPVplP6JW+KLW/SLjeTzGyWdMfYkzhOsEx+I59dqtafqxB
sYaete5zTECX35vJpGz6WgJaYm3gggV58EbQm9/Geg0+fqFbWDuIMfj1H4J6
J8LPq0H/PCfhgs9cIvt2kXgNn4dY/CfI/pNEV1cdGI3JMo33tbrx/w7fc/EP
gyw7ng9XSfFYQ0hx6ecopK6RlJAUPv9KNwYdFuBtnMdt4EP9c6MSrsuBskTs
bdQrzo8Lhn5qF1wlbBfXH9j659c95/stlpMYfvcJkIHb5IUJcxy4Jeuj8Lf9
OFeh7wdE3wW/0/sU8GyF5vqIejjUIbp2MrQj5xktIrZgC9+lzBB7IDiAQTpn
6FvtorUH+rkP/VfCYhRbia/1mn8Y5Nde0K+ZbtMK+lphzi7g/Ecgx/8F5Nj9
MPdVqhenOQvXBfQnmdP1VwCO74bv7ALaaZn6W8C2LkkxrFFtIvF81CGPy7Fn
sgkwZnkbPOtCeM5fAF0MdAF7tqn/CXx+F9AOovOAzgI6G+gM+PsfAG3HXCag
04DeAPR6oK1ApwCdDH9/JSNDf3ne0I4DeinQFvh/DahuGXo1n8+U4PMWGOMF
Vb90B8iUJwCDpSbJCkm/jm7vgDzj9q77MLR9LvlaYkbSYl4SiURM07ICsH49
3IPLkDLOfkhcAT6tV/y/lXRIqJOEjTIh6rC55IQyfQGo3eI/DyGhnIafv0WC
zy82a97z8Plgi8l1T55XoevG8elCWwrbBT/tW4DLOXEJmD47aLU5FfJUyPCE
so59KSGzQIdsxXmqr7QXUEctEfHPPhHZ1gPJZzqOrd+hNGod/nnpCPbMOMR9
A64vkV8e8IvWZSCfHJobZdx5XWfhdpbvfpZshknE2zrSz0nQJOZ/Nb3CntHg
vsiBuKKku0s28oLPVDPptA3y+RGxdjZ4DmaRFil35HBB10a2izYIEL5fU7Ku
nyCPHG3E5CzqNrAzXjMtPMJ8SVN/PdiCBwM/Ehkxk4S6qsXjRWfLcxMhFkxW
GeAXNTznwTHsx01FaDcQHn9O8xNpvEg8r2job5d89KnPyxTxaFM89X3TwAMf
iXGCqu/sCyS7/FglgYdpaFcSHpHtkQpdZRr68eiTURzumNQbErH4rV+wrqZY
UWT80Y0n6pfNZdUKPK6JGo8YhsPYHnrpNtoviHKffyYJ94+YvNK1j9KajUpe
8Vgiz4m7j/pzzPNHqM9N/aop4aECHj+k/hyLPnk/HotkX11GkxSVvBJ4YKz9
0TkeIR4if+B8mqSo/MGQP+rgB87xYNQh/3zJMo1TaJKiipeE+qPu29+h/hzr
+kPse/9vOpWy5HmKChN25qDsflnKqd6ocYrcgDbZ1YvB7PEjv4MB5MU08gEV
yhl1i9Z1FNNd2KgxCgrzvru5GbOEC8+X9ZxbVSU8fxZZEbZDTtcu2SB/UPj6
vwEd9Ujdd75a9d2bQFfudorW7mbF34/nJbAO7jcG4++/ToTYmRqYB9AdF8nz
EyEefK82Z7wOddiE4yVszTdrlbu1TLoMeiqpsuSdLvtn06mMXyy8B3jz0aaU
XxNIucQRktj7aOdM7USan0j3BsXzMplkDvrz62ByeHQCfv6tbVnmS7uPC/Md
BbGSTqeShZzxTpDb32Z5R93ckU4QXR66uE/pCczhkfocZWFzhP8EvvMteV1P
YmxB2fsN2SnD8gLC/Gcs7K5CQz+lWbT+BjB5qsVzCjk2fojNJPMZ+nkSdIf9
xVXOzERRmE53SvmrQW6IMU9mrXnOz2Fko5x9E3nOPKc4hncXJjXgmfOqrn0H
YPJ0q+YvN6ScK9J1E8NH+OWwHsRZpKnkLUvnDt464A6ucUnc3fVjlXJkY6Pz
fk+eGa7VbDZpWDn9DKeYvxHa/ZHIz2yIufQdsb7H7XuHzhd3QJdvo85Oiz/Y
PGnJpAY26JOr3G+zFlqkefqaOv55diHL+nN245jPCDbIZVXf/vtGxX8KeKcj
5zaPxc9Md3rPZdLpafiBPUXwCNig1zcncy57gez4GwmP9fK+QmdpEv2/1DUt
W8ibv+sV8le0Kt7PgvHytYif7R9IfDF1PPKm/kbk2TBffn2yuJM3jF3U/iRl
sXzeIJQpOHluybqqMeButxGI/MDSHTNybpJ1AuxOA3Tnr+Q1MxYeXBajX7Wd
Gt9IWYxswuxnQ9NeAuvghbWeLw9j7GaYwzDtc8VCyCu19cd6l8B2Rlvov0AW
G3L7G91/PA8COusHa+0/nXdBXf4mamwm+AMP3gAe3w8knTyGrKLzbtb11HAU
YxPrKVX1ncfXiIfwlV7IplOe3N4Ui1hfKbBR/6O3n2vGA/dzFk1dezU1vOF2
o9K1EfEOxP8b0H/xGbF6fgU/M13uPC7puaniIXyxnJ59FcY41nG/hzh7+N14
hGcPwzicYZzA8pZW9p/1q1kr345ytA8j3mfPvm+VuxMiLWEuddH62Cr2yRHx
4XcOecuuXdwZi/DOeYEH+CXbyaddwR8YRy5auZ0V1z5AvkoPHrWye5cyA/cc
01iUTCpZhD7/kmK84+hyttfZKHvPZvjZ3sjio1KM4c8G7BuweYexHQb76dUV
p7Sf8BBjXMD4ZatoXRefjK80kbG4xcIVQ3iDy9eyc2+94twlr6k+ortPnDuV
iONxwj61TP1K6e6PEA/sF9gpP00kVK3q2f/Wd06S5fcUdG2qcSt6Npu4bCpp
oFyVzlz3rHvsL/D6K8pO6RO0tlb473WSCbAGT49144NRFbobx76Zztq2e9ZJ
hcVu7onH1VjNsx/sw4PtQeXM6eSzyyXMF80ZO2hdrbiXgPfZ+4WmZZWqa98m
3QU0oJ77mBQ/jHQoLC/DC++OakvrZKHJ7O/CXvS9AZfv9ehxn+MB6+iP5TmZ
UqF8UQfneVCsfbHB7vR3vopjqfn25wfhgWe86Gz0lUr0Y+K+B8vrsx+Q55p0
Wgd1Sk7XzsF69bLzjUYvHh3C41xqbFr6XPhQmJ/4sLzOJeJrq2R9kuPhfDlY
KQ9ErHoBxnyCaDPqcYB9ncV3pfTZguKuiRdzplnDenUcQy8ey4THm6mxqeAR
7tWm0wXwTQf5UGzds7VlaJeysZTdewboc+FPPQ1zkuk2H+04cjndYbGr3j1n
6pv7iKqqTMdAP++UeXyG8OA2u2m8En3AgXgQr+cN7TysC2vr3gF5WuIOs/+O
T+E9Pt1xaC/Dfao+PNi4QIffqVAuRd1zb5b/JuWHnkXtTQsPYbO/qTXEhxJx
thzUwbpgp4s7HBb667Uq/m8tTatR21PAQz+1yfcKwnGEe7AUt+XnwNxrG9IY
UH+0OH+cJ89L1EXC4y2ST9vr33FeXoDx/A7WLeTMC1ldv0fPdMQZSMs0dlDb
UZ4pEns351DfZHkr9mDD+3zgs3iXQT8eb5fbi7pI49jeP44+/jgEdfDepViO
yQRv0Lk2dh8QyIV9KncGo/QFEzSOC/rWiojb/hp0ZD5GPAvrb4/sMwr/A317
ub2oi8Tnw3LhKM7gH8wZBntPKPhTSdCH+wfZYt1xaWdQ+5Gss65v3nMvZ9i/
qm8/KO0nIh6X9+Eh9qLeS+1NFQ9L16og+18cpD8Ij8OgP5gdy3wu1/408MJA
X4V05/ci5pG40vWhZFtc2BmPUi4uww3PPREfCTza/D1d2hWx6b6nS6HBJOqD
93CEvFqCNf868aVizjh3iC8/DR4R+2hox+7rs8X53ZwVfyGva1upfrwfj0Ds
nxWsv6YG0WafVq4P3Z9ofyHoXVs98wv6/E+pvpJNpUz42y+G5AX180gk+7Tw
LNxHOzBgTYnPj2mZ9HFYF9bKh/vwYLIa7zmEOs3+tqMsSlem7h7y/qQ23gFW
9Ut3Uu+SOM1B1b+lby2u5BEzEnte4IG++ZOD9BqTu/xOtV+VrNx28Lcupdzt
lTH5ivdLt2hdC7LrNEVqP6oS6pCcua1VK3cG2FhLLE+s4j6TSSdzsRg/vwN2
70mtqtcGOTcoV5PlCdY9+0sR5MEKPOJ0BnLQXa3h3AMPPFsve9cEg881dKgO
3q+I991eu45cvnWNR8tmM3hH7CAZJOKfhZxxPn0nifqxVnb/gfTn4RUYcj16
QOV3RG70mIQ+v5Vi7YeCwfeZcX6ouIjHc8HgvF92Zy7mn26plds50ziOOh8l
JuxeYLCbPjPk/Xuw3r1OxSt9nuqzeziz6XS9UfWfkTBYlMaO8axnAQ+TvrOR
4xHv9ghwTYVnFWBOu3f+4T3tDub7Pqtl0+Wab99Le28LQfceRkELNdAtdMfP
Vup8lP6U8ENe2+R+yMo9kFBmpXL0HaYTfMN4bdNzHureIezwMfrOIuDxc8Aj
qvgij41m0i28cxD6/AzdlSnuw2236pUf+XbpNKyXBb0NdR5uSTnZMuG+GrTz
dZADidjwsxIbWVTaq7mbeKTnHKGQWbhvRYNn+SjYybiqoA15Fvhdd9O9oDB+
vKfevjXifVue0ALPTIMNiHFSfses9nuFvLlV1/VEjMcU6T0HyRTI4Aug37fD
uL9Z85x9YBd+A3D4O7dU3IPvQaB2p5FrIt7hWgHZ9CRh0CZeboOuOEQxhY9T
B5PS9/gHVY2BH388xiPAV34vjHca7zxSY6vjvyJXmr3rr49mpPC99HTqRJCt
D/H7zj3iX8b3Txu6dhJVlMfc886AGSniTlx+L64y8H2mirLyDnIRV0gMqB95
EfMMPl+yYBrvrrmlG6tl5wawb3eB7vCP9L5IGn9CmZHxrLHMan+7Moi9t7On
m7Pa581ehAwS75g8Gtf7vMzLvMzLvMzLpi3/DxoHiCs=
                    "], {{0, 100}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {100, 100}, 
                    PlotRange -> {{0, 100}, {0, 100}}, 
                    ImageSize -> {30.109375000000554`, Automatic}]}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
2ARKKAYPHqyIekLXQNe26xowmUHaQK7V80vZvXu36wsVmVOKaqxnPXUWvPyB
2QBYoxF5yrBKRlYFBQVGM9Ex6G3m5ubyM2satkNGSprLiR9pAyFmmnPcZULa
okWLFFFMULohXbL8y3fjWf3W60dYDc+ePesixU8dtLW1YWy03VXGnSVKtjFq
LKcP8XJvPsI/dObMGaOZ6Bg1NTWyv10mSrGc6ikJiYiIqKysbGxsrK+vz87O
hkpqJsNQ2q66fMywadMmOVjTnYid+eGZe2Sali5dynNr0SgtLdVwS9SRH1Rd
nqugoCDrkb6uMcY+jqupISEhb9++xQ9hOjomT86ePRsn8Azt1NRU1ZW4st6P
paKioguctAu5sBQiSkLV0NCAn5NJMRGyfft2zeXR0dGqZV0dT2hsNo1fR/IV
GhpqL64ACCe4ysnJ4SKGZtOqvXv3YjISr3SmS5qbm1WxGoXP1+x55QRgDYuc
rUdib0eWqLO8AQUxMH78+Pfv36uWU3B5kQV5PXktIodz585JKcKEZ6PkSu5J
kpWVpVmObS/GFJO5O3/+vGppf3iaNz3A3bt3raeSzp07F2fSa+W9xVTLLeyc
A7mTW35+vnV0bRfQbSmIQtGAjY91VYrsfGBgICsgQPp78eJFuSBFNa/LcL7N
xxwPzKdyBFgHq6ur8Yu8PIc7yzp16NAhxTzRncfURo8e3dLSwoODmoVRTsMX
ExITE9EdaB/yWTuCuhweHq5ardNhi837UbS2to4ZMwZXQcJ7mzB//nwpkIYk
PnV1dWFhYXg2Hn+3L0uK6RVQZscr+7DeVrWa6ALGSkpKUAXSWIOYmBhNbNN9
xtgE8fx81WobQAK9QYqKuTIsn41TXblqTzEXTDoLvpZ+KyAgYOLEiVFRUQcO
HMBjyAfjJ09OTuanUoRriIuL432xVDupYbuEs6hTXkyPOnLkSMmA8pOSC89v
VOxUZ4CYUb6zceNGHj5mQw0SyDQtXrxYblLE3vnIkSM6fewaS3KbI3YiZCHJ
2ZFB0Czz5EeSs4h9fX3l2qtu6qYmcVZME4nlo6rmfAd0URI0c+ZMxWxC+cEo
kidNseNeKLgJfhq3vX37dnx8PK9rUCyVjstudHDRokXHjx9/8uSJagq9Hjx4
QEdk4N1ZijRHeJkA3ZOeUzMpjmMtAr3i2NhYrtigkrZ27VqWve6zxL+O2VOX
Ll3CYiL8KH22mw6TsFHYwDN7NV3IyMiYNWvWjBkzwjuPf5jA7WnTptHn9OnT
KVNuamqCZ2TTah0PUOKD9WJgGLMfecl890HM092eP38eGRkJKmAxNCMyCBET
EhIo8mEnJQUbEQV/7ULsxwvlrAHBkKG4BG+5oJrcUGFhYVJS0oULF2QfuxmL
cuzx9OlTf39/ja2QBnbq1Klk4V+9eiX9ppyiJonq/p6BvEjceosqPoKHl3sR
yI1iePM0O04oQn8papKGmvcDpPbSpUuvXLkiNwHQrETWtLu/baAM0TVfWYzl
za13S9acb6/9HumHiArJEn9SYFNbW8uP4To1NEMA2rds2aIJacie5+TkqKYX
5PwM3TUBE01apliOYx48eBAncHbgFpNPHA0igXSN/R2BzDjUDa6WHe4vroPA
woULvb29WQeXLFmiY11/WcCDHD16VBEDKMHBwapYayBL679B2THF2HJrO4rJ
VbOxIrpcbc6zUQAhDx8+DAwM5OlAJGMVFRWqZeXH9edhOhqcHTx+/BipOgTM
19e3vLycw6rffhBWiP+rC1LGvLy8oKAgaGJAQAARyAr422SpZplhFSPGysrK
Nm/enJaWVldXJ8/5lUEqxv6O4nOeLaCaqPtt0jWQqbpqNuOyxKHa9v9neTxk
cYA1EXYJX0GafSsbbgouVsjSkyoiKwOfzSj8F7aTAW0=
                    "], {{0, 95}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {100, 95}, 
                    PlotRange -> {{0, 100}, {0, 95}}, 
                    ImageSize -> {32.14375000000152, Automatic}], 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
                    "], {{0, 100}, {100, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {100, 100}, 
                    PlotRange -> {{0, 100}, {0, 100}}, 
                    ImageSize -> {30.109375000000554`, Automatic}]}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Markov\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725779702133679*^9},ExpressionUUID->"d19ccb9d-2a7b-4114-8851-\
12d645e303f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Nice CAT\>\"", ",", "\"\<What a d\[ODoubleDot]g\>\""}], "}"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.725779740474693*^9, 
  3.725779740524771*^9}},ExpressionUUID->"656c4424-3dbb-4efc-addb-\
b508a338a4b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
2ARKKAYPHqyIekLXQNe26xowmUHaQK7V80vZvXu36wsVmVOKaqxnPXUWvPyB
2QBYoxF5yrBKRlYFBQVGM9Ex6G3m5ubyM2satkNGSprLiR9pAyFmmnPcZULa
okWLFFFMULohXbL8y3fjWf3W60dYDc+ePesixU8dtLW1YWy03VXGnSVKtjFq
LKcP8XJvPsI/dObMGaOZ6Bg1NTWyv10mSrGc6ikJiYiIqKysbGxsrK+vz87O
hkpqJsNQ2q66fMywadMmOVjTnYid+eGZe2Sali5dynNr0SgtLdVwS9SRH1Rd
nqugoCDrkb6uMcY+jqupISEhb9++xQ9hOjomT86ePRsn8Azt1NRU1ZW4st6P
paKioguctAu5sBQiSkLV0NCAn5NJMRGyfft2zeXR0dGqZV0dT2hsNo1fR/IV
GhpqL64ACCe4ysnJ4SKGZtOqvXv3YjISr3SmS5qbm1WxGoXP1+x55QRgDYuc
rUdib0eWqLO8AQUxMH78+Pfv36uWU3B5kQV5PXktIodz585JKcKEZ6PkSu5J
kpWVpVmObS/GFJO5O3/+vGppf3iaNz3A3bt3raeSzp07F2fSa+W9xVTLLeyc
A7mTW35+vnV0bRfQbSmIQtGAjY91VYrsfGBgICsgQPp78eJFuSBFNa/LcL7N
xxwPzKdyBFgHq6ur8Yu8PIc7yzp16NAhxTzRncfURo8e3dLSwoODmoVRTsMX
ExITE9EdaB/yWTuCuhweHq5ardNhi837UbS2to4ZMwZXQcJ7mzB//nwpkIYk
PnV1dWFhYXg2Hn+3L0uK6RVQZscr+7DeVrWa6ALGSkpKUAXSWIOYmBhNbNN9
xtgE8fx81WobQAK9QYqKuTIsn41TXblqTzEXTDoLvpZ+KyAgYOLEiVFRUQcO
HMBjyAfjJ09OTuanUoRriIuL432xVDupYbuEs6hTXkyPOnLkSMmA8pOSC89v
VOxUZ4CYUb6zceNGHj5mQw0SyDQtXrxYblLE3vnIkSM6fewaS3KbI3YiZCHJ
2ZFB0Czz5EeSs4h9fX3l2qtu6qYmcVZME4nlo6rmfAd0URI0c+ZMxWxC+cEo
kidNseNeKLgJfhq3vX37dnx8PK9rUCyVjstudHDRokXHjx9/8uSJagq9Hjx4
QEdk4N1ZijRHeJkA3ZOeUzMpjmMtAr3i2NhYrtigkrZ27VqWve6zxL+O2VOX
Ll3CYiL8KH22mw6TsFHYwDN7NV3IyMiYNWvWjBkzwjuPf5jA7WnTptHn9OnT
KVNuamqCZ2TTah0PUOKD9WJgGLMfecl890HM092eP38eGRkJKmAxNCMyCBET
EhIo8mEnJQUbEQV/7ULsxwvlrAHBkKG4BG+5oJrcUGFhYVJS0oULF2QfuxmL
cuzx9OlTf39/ja2QBnbq1Klk4V+9eiX9ppyiJonq/p6BvEjceosqPoKHl3sR
yI1iePM0O04oQn8papKGmvcDpPbSpUuvXLkiNwHQrETWtLu/baAM0TVfWYzl
za13S9acb6/9HumHiArJEn9SYFNbW8uP4To1NEMA2rds2aIJacie5+TkqKYX
5PwM3TUBE01apliOYx48eBAncHbgFpNPHA0igXSN/R2BzDjUDa6WHe4vroPA
woULvb29WQeXLFmiY11/WcCDHD16VBEDKMHBwapYayBL679B2THF2HJrO4rJ
VbOxIrpcbc6zUQAhDx8+DAwM5OlAJGMVFRWqZeXH9edhOhqcHTx+/BipOgTM
19e3vLycw6rffhBWiP+rC1LGvLy8oKAgaGJAQAARyAr422SpZplhFSPGysrK
Nm/enJaWVldXJ8/5lUEqxv6O4nOeLaCaqPtt0jWQqbpqNuOyxKHa9v9neTxk
cYA1EXYJX0GafSsbbgouVsjSkyoiKwOfzSj8F7aTAW0=
      "], {{0, 95}, {100, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{32.14375000000152, Automatic},
    ImageSizeRaw->{100, 95},
    PlotRange->{{0, 100}, {0, 95}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      "], {{0, 100}, {100, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{30.109375000000554`, Automatic},
    ImageSizeRaw->{100, 100},
    PlotRange->{{0, 100}, {0, 100}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257797430076036`*^9},ExpressionUUID->"a4754378-d72b-4a41-aa9e-\
ec1499d2ff74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.3", ",", " ", "\"\<male\>\""}], "}"}], "\[Rule]", 
       "\"\<a\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.8", ",", " ", 
         RowBox[{"Missing", "[", "]"}]}], "}"}], "\[Rule]", "\"\<b\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Missing", "[", "]"}], ",", " ", "\"\<female\>\""}], "}"}], 
       "\[Rule]", "\"\<a\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.2", ",", " ", "\"\<female\>\""}], "}"}], "\[Rule]", 
       "\"\<b\>\""}]}], "}"}], ",", " ", 
    RowBox[{"FeatureNames", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<age\>\"", ",", " ", "\"\<gender\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257798240327406`*^9, 3.725779936002477*^9}, {
  3.725780076656904*^9, 
  3.7257800776043215`*^9}},ExpressionUUID->"7c65aea7-c599-499a-8fbe-\
cd43177d4e74"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction","mlincfttp",
   "\"Incompatible variable type \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"Numerical\\\\\\\"\\\"}]\\)) and variable value \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"age\\\\\\\"\\\", \\\" \\\", \
\\\"FeatureNames\\\"}]\\)).\"",2,94,20,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257799411378555`*^9},ExpressionUUID->"d7bc5d13-7654-4c7d-a2b6-\
4d374dc95331"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["ClassifierFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
         DisplayFunction -> (
          ButtonBox[#, Active -> False, Alignment -> Left, 
           Appearance -> {
            "Default" -> 
             FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
           FrameMargins -> 7, BaseStyle -> {}, 
           DefaultBaseStyle -> {"Panel", Background -> None}, 
           BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"age\"\>", " ", "FeatureNames"}], ",", 
     RowBox[{"\<\"gender\"\>", " ", "FeatureNames"}]}], "}"}], ",", 
   RowBox[{"\<\"BatchProcessing\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"TieBreakerFunction\"\>", "\[Rule]", "RandomChoice"}], ",", 
   RowBox[{"ClassPriors", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"IndeterminateThreshold", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"RandomSeeding", "\[Rule]", "1234"}], ",", 
   RowBox[{"UtilityFunction", "\[Rule]", "Automatic"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7257799412321177`*^9},ExpressionUUID->"1073b441-f235-42bb-9116-\
0750cb9f83d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<age\>\"", "\[Rule]", "3.3"}], ",", " ", 
    RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257800145181584`*^9, 
  3.725780040919015*^9}},ExpressionUUID->"5991e6a5-bfb1-4852-8a21-\
e3025c4ea37e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["ClassifierFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"age\"\>", " ", "FeatureNames"}], ",", 
      RowBox[{"\<\"gender\"\>", " ", "FeatureNames"}]}], "}"}], ",", 
    RowBox[{"\<\"BatchProcessing\"\>", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"\<\"TieBreakerFunction\"\>", "\[Rule]", "RandomChoice"}], ",", 
    RowBox[{"ClassPriors", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"IndeterminateThreshold", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"RandomSeeding", "\[Rule]", "1234"}], ",", 
    RowBox[{"UtilityFunction", "\[Rule]", "Automatic"}]}], "]"}], "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"age\"\>", "\[Rule]", "3.3`"}], ",", 
    RowBox[{"\<\"gender\"\>", "\[Rule]", "\<\"male\"\>"}]}], 
   "\[RightAssociation]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7257800422266774`*^9},ExpressionUUID->"879bc06c-08f4-4139-a5c9-\
9beb7a61bcbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.3", ",", " ", "\"\<male\>\""}], "}"}], "\[Rule]", 
       "\"\<a\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.8", ",", " ", 
         RowBox[{"Missing", "[", "]"}]}], "}"}], "\[Rule]", "\"\<b\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Missing", "[", "]"}], ",", " ", "\"\<female\>\""}], "}"}], 
       "\[Rule]", "\"\<a\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.2", ",", " ", "\"\<female\>\""}], "}"}], "\[Rule]", 
       "\"\<b\>\""}]}], "}"}], ",", " ", 
    RowBox[{"FeatureNames", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<age\>\"", ",", " ", "\"\<gender\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",ExpressionUUID->"c834ff22-735a-4377-9f05-27e243bdd2f8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.72578008548744*^9},ExpressionUUID->"6231924a-fa06-49ae-94ee-2cb226341dee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<age\>\"", "\[Rule]", "3.3"}], ",", " ", 
    RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], 
  "]"}]], "Input",ExpressionUUID->"d42edcc3-2412-46e2-9eba-cf8ac453327e"],

Cell[BoxData["\<\"a\"\>"], "Output",
 CellChangeTimes->{
  3.7257801441589904`*^9},ExpressionUUID->"3f5cc8f1-6955-47f5-a91b-\
9f5cd2ce68bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", 
   RowBox[{"3.3", ",", " ", "\"\<male\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.725780153031638*^9, 
  3.725780166066874*^9}},ExpressionUUID->"f5862d7a-7bb2-429f-9288-\
5e34da07a0c9"],

Cell[BoxData["\<\"a\"\>"], "Output",
 CellChangeTimes->{
  3.7257801672595434`*^9},ExpressionUUID->"2793e5dd-e1a5-415e-9378-\
e68bcb754135"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.725780130080535*^9, 
  3.725780131313404*^9}},ExpressionUUID->"944145d5-a982-4004-853a-\
321a89c53182"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<age\>\"", "\[Rule]", "2.3"}], ",", 
         RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], 
       "\[Rule]", "\"\<a\>\""}], ",", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{"\"\<age\>\"", "\[Rule]", "4.6"}], "|>"}], "\[Rule]", 
       "\"\<b\>\""}], ",", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}], "|>"}], 
       "\[Rule]", "\"\<a\>\""}], ",", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<female\>\""}], ",", 
         RowBox[{"\"\<age\>\"", "\[Rule]", "5.2"}]}], "|>"}], "\[Rule]", 
       "\"\<b\>\""}]}], "}"}], ",", 
    RowBox[{"FeatureNames", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<gender\>\"", ",", "\"\<age\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257802082236743`*^9, 
  3.7257802082748146`*^9}},ExpressionUUID->"630fee12-817c-4d03-96e2-\
c3d421491e8b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Nominal\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Nominal\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725780232841482*^9},ExpressionUUID->"42eebc77-56e9-403c-b1f4-\
8dd9847af22d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c", ",", " ", "FeatureNames"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257802385630054`*^9, 
  3.725780250913274*^9}},ExpressionUUID->"f95c04f5-f811-4cc6-b808-\
115e89d6b924"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"gender\"\>", ",", "\<\"age\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.725780251719759*^9},ExpressionUUID->"fc59ad92-5935-4ba7-b047-\
3a613a529436"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<female\>\"", ",", " ", "6.5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257802777100935`*^9, 
  3.7257802915479727`*^9}},ExpressionUUID->"1485da17-eb8d-44fc-9ec1-\
411e19de5d22"],

Cell[BoxData["\<\"b\"\>"], "Output",
 CellChangeTimes->{
  3.7257802937081594`*^9},ExpressionUUID->"185374b8-6a56-49f4-970d-\
ed43244662a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<butter\>\"", ",", " ", "\"\<sugar\>\""}], "}"}], 
      "\[Rule]", "\"\<bad\>\""}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<flour\>\"", ",", " ", "\"\<butter\>\""}], "}"}], 
      "\[Rule]", "\"\<good\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<tomato\>\"", ",", " ", "\"\<salt\>\""}], "}"}], 
      "\[Rule]", "\"\<good\>\""}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257804330748158`*^9, 
  3.725780515990512*^9}},ExpressionUUID->"2b5fa325-34b4-4352-86a6-\
6076e2b6a2b6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Text\"", ",", "\"Text\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Text\"", ",", "\"Text\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725780518714678*^9},ExpressionUUID->"34f72746-1666-4029-9edf-\
3be320130e5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c", ",", " ", "FeatureTypes"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257805657535067`*^9, 
  3.725780583700529*^9}},ExpressionUUID->"b84947a2-5fd8-442a-8267-\
93e10fa64a93"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "\<\"Text\"\>"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "\<\"Text\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7257805842115517`*^9},ExpressionUUID->"e5c48215-984c-4dcc-846d-\
69eadd7b62aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{
  "\"\<butter\>\"", ",", " ", "\"\<tomato\>\"", ",", " ", "\"\<apple\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257805880760813`*^9, 
  3.725780607164474*^9}},ExpressionUUID->"b958f660-193e-4a68-9df7-\
3c746d8fded3"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction","nonopt",
   "\"Options expected (instead of \\!\\(\\*RowBox[{\\\"\\\\\\\"apple\\\\\\\"\
\\\"}]\\)) beyond position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{TagBox[TemplateBox[List[RowBox[List[StyleBox[TagBox[\\\"\
ClassifierFunction\\\", \\\"SummaryHead\\\"], \
\\\"NonInterpretableSummary\\\"], StyleBox[\\\"[\\\", \
\\\"NonInterpretableSummary\\\"], DynamicModuleBox[List[Set[Typeset`open$$, \
False], Set[Typeset`embedState$$, \\\"Ready\\\"]], \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquarePlusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Text\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"Text\\\\\\\"\\\"]], \\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \\\"\\\\\\\"bad\
\\\\\\\"\\\", \\\"\\\\\\\"good\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[2]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquareMinusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Text\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"Text\\\\\\\"\\\"]], \\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \\\"\\\\\\\"bad\
\\\\\\\"\\\", \\\"\\\\\\\"good\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Method: \\\\\\\"\
\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\
\"\\\\\\\"DecisionTree\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Number of training examples: \
\\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"3\\\", \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`open$$], \
Rule[ImageSize, Automatic]]], \\\"SummaryPanel\\\", Rule[DisplayFunction, \
Function[ButtonBox[Slot[1], Rule[Active, False], Rule[Alignment, Left], \
Rule[Appearance, List[Rule[\\\"Default\\\", \
FrontEnd`FileName[List[\\\"Typeset\\\", \\\"SummaryBox\\\"], \
\\\"Panel.9.png\\\"]]]], Rule[FrameMargins, 7], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, List[\\\"Panel\\\", Rule[Background, None]]], \
Rule[BaselinePosition, Baseline]]]]], RuleDelayed[DynamicModuleValues, \
List[]]], StyleBox[\\\"]\\\", \\\"NonInterpretableSummary\\\"]]]], \
\\\"CopyTag\\\", Rule[DisplayFunction, Function[Slot[1]]], \
Rule[InterpretationFunction, \
Function[\\\"ClassifierFunction[\\\\[Ellipsis]]\\\"]]], False, \
Rule[Selectable, False], Rule[Editable, False], Rule[SelectWithContents, \
True]], \\\"[\\\", RowBox[{\\\"\\\\\\\"butter\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"tomato\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"apple\\\\\\\"\\\"}], \
\\\"]\\\"}]\\). An option must be a rule or a list of rules.\"",2,105,21,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725780607917863*^9},ExpressionUUID->"9d61e6d8-4850-4539-be23-\
fd9a0060caec"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["ClassifierFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Text\"", ",", "\"Text\""}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Text\"", ",", "\"Text\""}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
         DisplayFunction -> (
          ButtonBox[#, Active -> False, Alignment -> Left, 
           Appearance -> {
            "Default" -> 
             FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
           FrameMargins -> 7, BaseStyle -> {}, 
           DefaultBaseStyle -> {"Panel", Background -> None}, 
           BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{"\<\"butter\"\>", ",", "\<\"tomato\"\>", ",", "\<\"apple\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7257806079364133`*^9},ExpressionUUID->"d398811f-0f7f-4c3b-89a6-\
94c3853a30b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<butter\>\"", ",", " ", "\"\<sugar\>\""}], "}"}], 
       "\[Rule]", "\"\<bad\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<flour\>\"", ",", " ", "\"\<butter\>\""}], "}"}], 
       "\[Rule]", " ", "\"\<good\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<tomato\>\"", ",", " ", "\"\<salt\>\""}], "}"}], 
       "\[Rule]", "\"\<good\>\""}]}], "}"}], ",", " ", 
    RowBox[{"FeatureTypes", "\[Rule]", "\"\<NominalSequence\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257807059566584`*^9, 
  3.7257808038353643`*^9}},ExpressionUUID->"dc68e51e-10d3-4621-8682-\
91312ad2f6cf"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"bad\"", "\"good\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Markov\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725780805225788*^9},ExpressionUUID->"9414453d-8d40-4315-91fc-\
6d50045346c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c2", ",", " ", "FeatureTypes"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257808095438757`*^9, 
  3.725780824247026*^9}},ExpressionUUID->"8ca2cef6-17ba-455a-9007-\
bd5ca7fbd221"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"f1\"\>", "\[Rule]", "\<\"NominalSequence\"\>"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.725780824799977*^9},ExpressionUUID->"9a07ea46-55e0-4082-b4f2-\
200fffa16ebc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<butter\>\"", ",", " ", "\"\<tomato\>\"", ",", " ", "\"\<apple\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257808458188915`*^9, 
  3.7257808616106415`*^9}},ExpressionUUID->"850aaa4a-6a4f-499b-9eac-\
9a990d14c672"],

Cell[BoxData["\<\"good\"\>"], "Output",
 CellChangeTimes->{
  3.725780862513914*^9},ExpressionUUID->"cf300e9d-3b2b-45c2-bc40-\
9542fadf9c8f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<age\>\"", "\[Rule]", "32"}], ",", 
        RowBox[{"\"\<gender\>\"", "\[Rule]", "1"}]}], "|>"}], "\[Rule]", 
      "\"\<tall\>\""}], ",", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<age\>\"", "\[Rule]", "41"}], ",", 
        RowBox[{"\"\<gender\>\"", "\[Rule]", "2"}]}], "|>"}], "\[Rule]", 
      "\"\<short\>\""}], ",", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<age\>\"", "\[Rule]", "17"}], ",", 
        RowBox[{"\"\<gender\>\"", "\[Rule]", "2"}]}], "|>"}], "\[Rule]", 
      "\"\<short\>\""}], ",", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<age\>\"", "\[Rule]", "11"}], ",", 
        RowBox[{"\"\<gender\>\"", "\[Rule]", "1"}]}], "|>"}], "\[Rule]", 
      "\"\<tall\>\""}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7257808753082952`*^9, 
  3.72578087535693*^9}},ExpressionUUID->"821b0660-f703-4820-8c15-\
23a4c45e6e10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", "trainingset", "]"}]}]], "Input",
 CellChangeTimes->{{3.725780879831296*^9, 
  3.7257808908595643`*^9}},ExpressionUUID->"68622b16-58de-435d-93f2-\
eb8092bd6e32"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"short\"", "\"tall\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"short\"", "\"tall\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725780895214217*^9},ExpressionUUID->"ce125a07-7efa-4d8e-8327-\
221c8662a5c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c", ",", " ", "FeatureTypes"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257809022626247`*^9, 
  3.725780912571124*^9}},ExpressionUUID->"2b99ffe0-bf90-45b0-a9c7-\
bc5ed6cb665d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"age\"\>", "\[Rule]", "\<\"Numerical\"\>"}], ",", 
   RowBox[{"\<\"gender\"\>", "\[Rule]", "\<\"Numerical\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7257809129587493`*^9},ExpressionUUID->"7790953e-cb1c-4cd6-a8df-\
8f174d0fcba7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"FeatureTypes", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{"\"\<gender\>\"", "\[Rule]", "\"\<Nominal\>\""}], "|>"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257809590548763`*^9, 
  3.7257810125437164`*^9}},ExpressionUUID->"6da88979-6e22-41dd-a6e7-\
e6354c042e94"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"short\"", "\"tall\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"short\"", "\"tall\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725781043473713*^9},ExpressionUUID->"5828fd69-bd27-4469-8daf-\
d0d7042855a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c", ",", " ", "FeatureTypes"}], "]"}]], "Input",
 CellChangeTimes->{{3.725781047948668*^9, 
  3.725781060286465*^9}},ExpressionUUID->"19ea79c4-ad7d-4dd8-9d5e-\
2bfbe11bc6c0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"age\"\>", "\[Rule]", "\<\"Numerical\"\>"}], ",", 
   RowBox[{"\<\"gender\"\>", "\[Rule]", "\<\"Nominal\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.725781061657221*^9},ExpressionUUID->"64c99c5e-4b3e-40cf-a367-\
0a77efbafa96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"5", ",", " ", "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725781137802579*^9, 
  3.7257811459452405`*^9}},ExpressionUUID->"ec9a88ea-cf5e-49d2-9f42-\
92c8653cf230"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction","mlbddataev",
   "\"The data being evaluated is not formatted correctly.\"",2,114,22,
   24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257811479828596`*^9},ExpressionUUID->"3fbfd46a-dba7-4db8-b7f6-\
584c0d56043f"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["ClassifierFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"short\"", "\"tall\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{
                   PointSize[0.13], 
                   GrayLevel[0.45], 
                   
                   PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                   GrayLevel[0.7], 
                   
                   PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                 ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"short\"", "\"tall\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
         DisplayFunction -> (
          ButtonBox[#, Active -> False, Alignment -> Left, 
           Appearance -> {
            "Default" -> 
             FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
           FrameMargins -> 7, BaseStyle -> {}, 
           DefaultBaseStyle -> {"Panel", Background -> None}, 
           BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{"5", ",", "\<\"Probabilities\"\>"}], "]"}]], "Output",
 CellChangeTimes->{
  3.725781148003414*^9},ExpressionUUID->"e0f527d1-c425-4e83-ab88-\
ad37bcc63e4e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"data", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "\"\<B\>\""}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"2", "\[Rule]", "\"\<B\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"3", "\[Rule]", "\"\<A\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"4", "\[Rule]", "\"\<B\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"5", "\[Rule]", "\"\<A\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"6", "\[Rule]", "\"\<A\>\""}]}], "\[IndentingNewLine]", "}"}]}],
    ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.725781158431568*^9, 
  3.7257812670752697`*^9}},ExpressionUUID->"201b17e9-1b29-4e3c-a4ee-\
00e6b35cc900"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"IndeterminateThreshold", "\[Rule]", "0.9"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725781299255601*^9, 
  3.725781318547789*^9}},ExpressionUUID->"ff8b5bb1-bf5b-4c9d-bcbb-\
1752e0e9fce6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725781321042821*^9},ExpressionUUID->"e7d5f3e3-1d69-420a-a133-\
a76c9432f73b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"5", ",", " ", "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725781347345275*^9, 
  3.7257813561241302`*^9}},ExpressionUUID->"0d6863bd-d32a-4c12-ba42-\
39f3f5839acf"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"A\"\>", "\[Rule]", "0.6666666666666666`"}], ",", 
   RowBox[{"\<\"B\"\>", "\[Rule]", "0.3333333333333333`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.725781356858116*^9},ExpressionUUID->"7c14d676-30d9-4be8-89e5-\
ffd4d6050d79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.725781383332203*^9, 
  3.725781384161018*^9}},ExpressionUUID->"e0b89eb4-07d9-4b39-a1d5-\
e259c61308ef"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{
  3.725781384891474*^9},ExpressionUUID->"6650fa4e-e8e6-4aec-a237-\
67546844a367"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"5", ",", " ", 
   RowBox[{"IndeterminateThreshold", "\[Rule]", "0.5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257813941394677`*^9, 
  3.725781406589202*^9}},ExpressionUUID->"8e76f73a-ee10-480a-a1be-\
574eb2c86d85"],

Cell[BoxData["\<\"A\"\>"], "Output",
 CellChangeTimes->{
  3.725781407273297*^9},ExpressionUUID->"74a44e2b-6417-41fe-8c12-\
71d5f9993d7f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"traingingset", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", " ", 
      "6", ",", " ", "7"}], "}"}], "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a\>\"", ",", " ", "\"\<a\>\"", ",", " ", "\"\<b\>\"", ",", " ", 
      "\"\<a\>\"", ",", " ", "\"\<b\>\"", ",", " ", "\"\<b\>\"", ",", " ", 
      "\"\<b\>\""}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7257814901734533`*^9, 
  3.725781538329946*^9}},ExpressionUUID->"58c4cf36-2cb6-4abb-8eed-\
e920dc678131"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logistic", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725781557421935*^9, 
  3.7257815802787375`*^9}},ExpressionUUID->"d983792b-ebed-4fe1-a2a5-\
8c42df89d1b3"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"short\"", "\"tall\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"short\"", "\"tall\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725781583812913*^9},ExpressionUUID->"fc86358d-60c5-4ada-a359-\
0fcf4f114564"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"rf", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", "\"\<RandomForest\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257816397511*^9, 
  3.725781658077305*^9}},ExpressionUUID->"516ebaf4-5b41-4f91-b4fa-\
cb1c1ca9af3b"],

Cell[CellGroupData[{

Cell[BoxData[{
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"short\"", "\"tall\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"short\"", "\"tall\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traingingset", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", " ", 
      "6", ",", " ", "7"}], "}"}], "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a\>\"", ",", " ", "\"\<a\>\"", ",", " ", "\"\<b\>\"", ",", " ", 
      "\"\<a\>\"", ",", " ", "\"\<b\>\"", ",", " ", "\"\<b\>\"", ",", " ", 
      "\"\<b\>\""}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7257816989527225`*^9, 
  3.7257816997561045`*^9}},ExpressionUUID->"cf348120-46bb-4bae-837b-\
9ba73d38281b"],

Cell[BoxData[
 TemplateBox[{
  "General","noinfo",
   "\"Input expression \
\\!\\(\\*TagBox[\\\"ClassifierFunction[\[Ellipsis]]\\\", False, \
Rule[Editable, False], Rule[SelectWithContents, True], Rule[Selectable, \
False]]\\) contains insufficient information to interpret the result.\"",2,
   123,23,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725781700841997*^9},ExpressionUUID->"c13d0042-1b82-430f-ac6b-\
6cac93ce9c3d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", " ", 
      "6", ",", " ", "7"}], "}"}], "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a\>\"", ",", " ", "\"\<a\>\"", ",", " ", "\"\<b\>\"", ",", " ", 
      "\"\<a\>\"", ",", " ", "\"\<b\>\"", ",", " ", "\"\<b\>\"", ",", " ", 
      "\"\<b\>\""}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.725781706893872*^9, 
  3.72578171574618*^9}},ExpressionUUID->"c736c964-683f-4979-a1ff-\
1a15617c3319"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logistic", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",ExpressionUUID->"7dcf133c-e51e-434c-b30f-fa32aae75f81"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["7", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725781731535717*^9},ExpressionUUID->"d4b7d9f6-3be5-423f-ba4f-\
008414e2d2fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rf", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", "\"\<RandomForest\>\""}]}], 
   "]"}]}]], "Input",ExpressionUUID->"52cabd5f-749a-4b37-90db-135f8b90d7d2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["7", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725781738062871*^9},ExpressionUUID->"9a4f2b24-ef3a-4414-a51f-\
c37d4f4b54b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"logistic", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"\"\<Probability\>\"", " ", "\[Rule]", " ", "\"\<a\>\""}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rf", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<a\>\""}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725781742851497*^9, 3.725781829351595*^9}, {
  3.725781932303133*^9, 
  3.725781936417776*^9}},ExpressionUUID->"65caf135-d87d-4ed0-ba70-\
34bb539ed243"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVzn9Q03UYB/BnY8YSb2yIwoAxMUhBC84QWVbfT+EBgR6IIHDi3HFIhJZA
JEIWTjfz15KUUxTQKQYNTjZk0F1A7WRHYsiPsBMu3IgmQYhAt4H8iG+f54/n
Pve6z/Pj7Zd+JOEgFwAiaeEbc3CszzSufg/O2H/gwTDz1s2yikZxPgP8uGZ0
7KMn9yrFKgZO6Izo5Iy5tkviUgaOyRvQT4O/jtCI7zCgeFCL1q6JO31ObGQg
vKISreQ3bjgrNjMwHHEKnZJ6Sz8985hha/xj0C6sMi3K10r3dbujA3a/GGs/
b2NgnWrYibqgW8aU2ccZNvjXGrSHUWThcKYYNu6PPHTzSERXzzv/MjBwXIa+
n13pnfrcTu8HcdCO1991vfvJHANabReXmjtfJ/QOWKD3vr+MDmMVzXvqlxhI
KZSju1Sh3R1BLAOee4PQ0pKJed0LIOxW8wyHemLOavk9hEsge7EVfeefloeC
b5wIu8J8Ci2Q1EzZbDwCR8ti0Rc+bsrU+r9C4OVWD/QsqbNlFTsTGMmwAHX+
FrNxbTufwECaDm2tN5/v81tJQDZ6BL2Y/bg8sMiFQM4X29Cb3ndezmxZRaB5
kIuOuu33UYOHgLAPLl1mWStTIDmw/s80VwI7eIHozc+TXJ7sEhI4rDEtU692
neabF6gzZXFo3s/l+tcqRASOFzz7j/pQaMvgq7FuBLIG8tB1H6Zrf5qlXorn
oh0TXsLRK6sJGPZdW6Ju2hPlVLrDnUD42Q3o4mj1TeModW902yK139OYgSr1
GgIb1yWh396mKhVvWUuAeNkWqNN8e+Y5/dQl1UVox0PNSI7Sg4A2iY8u48nz
E/w9CZiuVM5jfkvTba7Zk3C0U6HoFV8qE2W5YsLGHWp/SQ06uX7EzYuwroWp
6Lzreo3bfS+aVzc6R9226Qxf9Kk34UzPfI4WxeRtPinwIaDoWoUeeqO3v7DV
h3BKOq/PUhtuMP42uYTAdEoIer8+TCRZRrO/OKhPqG8ph2p9ab7Ovei7Y5Jy
wU4p4RgCJu3UGQmTAfW7pQTij46jfVpbDbuSqYc7nqHPXdzXcSGd9guzLOis
sGszKwupFbU96PUq92jnatoPwffQg5N//VZdR/+1xfXokuTG/ZENUsIN6a1F
s0EJn6lbcT63Cj3Ud/GGUz+1qbEUXbr9QGDVAHU871t07HdvGj+wYJ5EDfrH
Y486lePUwlk1OnekItFvitoQeRK9cedhq8lOTa5+hR5u2p6tWKD7ev8uQl+V
ujhYljonvAD9P0nID/A=
       "]]},
     Annotation[#, "Charting`Private`Tag$271482#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFzX1Q03UcB/BtwICGYxsP48Gx0JEZSAiox1J/E8RNHgJEEjpCWTdQhJKJ
EnidjDZNHsK6HXGhMjGQh8MtGlPDQGGlTVMISjjZENjRgDUcMWiytuqPvp8/
3ve+1z/vdzD/wwMCAg6HE/6b/zpBYBi+OyfZ3cU3EXxEY5jMJ+Vclb8S+98i
t283XfBXI2dmXZW/MI8ikxyibG7QJHJImskwWK1HLn0cgzUszyHTlVQdHr+I
rJqOe/Rk5xLyQMHlwCzjMrLltV2eXUWryARrJyUw5CXydscRVfoNG/IjcfTj
H99wILPHDEI/Ebgt9DK94CnYVxWVFD0NFnM0FXYjeElzpOfBKljRsVayH4/j
dE+ljejYz7CgbV+0e3mAq/tf12l9wXmjGVxhGDh2rlJBjAUrdu7IyGwAMy8u
WNtNYBe1wNhfh0deWJ3U/RpBQOaZfz4onAR/Pd+rIX/mhGxOzaqbuwXefXMl
XT0D/oUS5HLGBBYUxKu2WsHh9HFyrR3812BhvsHJmcN/V3he8vA5NnACdzfO
HVzDkPo1kcHdQ9PlHizw+CdbtWUx4JLUwrw368BkxvVFvR6cHBfeOSB2gf1j
PXkyFhF5hdOpP3rWFfYi1UrfQTfkyRvq6uHgV5DXCkYbN5eTkO/9EMBLawaf
fzV3+SMNeD5ZrKnRgZPPXJfJlsCt+yLqW1bBdurt6g4b+JB2j0iO9+CwT6e8
k12hxRRtmtNKIpiPTeT2UcBev/2R9CAA3FRd3kI/Dg7d42rP6wXfLpZG1hxb
h8xtDs7/hk5GLmUc3jCV7YkcZswgPU2mwJ/nCzf1S7DH7/ETJxOpyM79jfKN
l8A5lzaytffBt8o61fV/gt8/ZbOss4LJxcmbJHaw3mTp5+BpnFaWmbfXNIV9
V3gl0+YEvji/z3yTCBYcXbxw0h185/DnxlxvMO1QVEoqE9wXX+q9ZRv4eHTv
uHsimNRP3qWXgTv382V9K2DLQgBltt4LuSed6yTd6418lidpUs6Cg7UJY9ck
PshtUVncewpweFW+SvcMPMQMpbXOgot7TEVFZnBsxVDg8AqYltj9U7QNXB5x
TTZrB8/4SEsb8L6chcG3WhqtM1jSmvjtBGew8vmpEBsRvEr6e6JqPZi9Qyz1
jwQ/7Nh8v7YSnB30xIofAVs0tdMnRHTkBueckgMsP2QvXU8zQQ12+Vh0MKbY
HxnXniOfpgUgC7+S19IGwN+HfupG/SAQmZogDKskr0ee2DI0UnYHrLiCsfQ5
DOT35NupDDu4QnJVNNERhNxlYDSSk5jIG8TePNdW8JdMksXhAP8DsEN2Rg==

       "]]},
     Annotation[#, "Charting`Private`Tag$271482#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.3828785446762975},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8}, {0.3828785446762975, 0.6242197253433209}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7257818332640457`*^9},ExpressionUUID->"1ddbada4-cda0-4c2b-aee8-\
9095d8b8ee73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"logistic", "[", 
      RowBox[{"x", ",", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<a\>\""}]}], "]"}], ",", 
     RowBox[{"rf", "[", 
      RowBox[{"x", ",", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<a\>\""}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257819814542427`*^9, 
  3.7257819815028768`*^9}},ExpressionUUID->"173f46a4-1896-41e2-bd6f-\
4bc88f7e1aca"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVzn9Q03UYB/BnY8YSb2yIwoAxMUhBC84QWVbfT+EBgR6IIHDi3HFIhJZA
JEIWTjfz15KUUxTQKQYNTjZk0F1A7WRHYsiPsBMu3IgmQYhAt4H8iG+f54/n
Pve6z/Pj7Zd+JOEgFwAiaeEbc3CszzSufg/O2H/gwTDz1s2yikZxPgP8uGZ0
7KMn9yrFKgZO6Izo5Iy5tkviUgaOyRvQT4O/jtCI7zCgeFCL1q6JO31ObGQg
vKISreQ3bjgrNjMwHHEKnZJ6Sz8985hha/xj0C6sMi3K10r3dbujA3a/GGs/
b2NgnWrYibqgW8aU2ccZNvjXGrSHUWThcKYYNu6PPHTzSERXzzv/MjBwXIa+
n13pnfrcTu8HcdCO1991vfvJHANabReXmjtfJ/QOWKD3vr+MDmMVzXvqlxhI
KZSju1Sh3R1BLAOee4PQ0pKJed0LIOxW8wyHemLOavk9hEsge7EVfeefloeC
b5wIu8J8Ci2Q1EzZbDwCR8ti0Rc+bsrU+r9C4OVWD/QsqbNlFTsTGMmwAHX+
FrNxbTufwECaDm2tN5/v81tJQDZ6BL2Y/bg8sMiFQM4X29Cb3ndezmxZRaB5
kIuOuu33UYOHgLAPLl1mWStTIDmw/s80VwI7eIHozc+TXJ7sEhI4rDEtU692
neabF6gzZXFo3s/l+tcqRASOFzz7j/pQaMvgq7FuBLIG8tB1H6Zrf5qlXorn
oh0TXsLRK6sJGPZdW6Ju2hPlVLrDnUD42Q3o4mj1TeModW902yK139OYgSr1
GgIb1yWh396mKhVvWUuAeNkWqNN8e+Y5/dQl1UVox0PNSI7Sg4A2iY8u48nz
E/w9CZiuVM5jfkvTba7Zk3C0U6HoFV8qE2W5YsLGHWp/SQ06uX7EzYuwroWp
6Lzreo3bfS+aVzc6R9226Qxf9Kk34UzPfI4WxeRtPinwIaDoWoUeeqO3v7DV
h3BKOq/PUhtuMP42uYTAdEoIer8+TCRZRrO/OKhPqG8ph2p9ab7Ovei7Y5Jy
wU4p4RgCJu3UGQmTAfW7pQTij46jfVpbDbuSqYc7nqHPXdzXcSGd9guzLOis
sGszKwupFbU96PUq92jnatoPwffQg5N//VZdR/+1xfXokuTG/ZENUsIN6a1F
s0EJn6lbcT63Cj3Ud/GGUz+1qbEUXbr9QGDVAHU871t07HdvGj+wYJ5EDfrH
Y486lePUwlk1OnekItFvitoQeRK9cedhq8lOTa5+hR5u2p6tWKD7ev8uQl+V
ujhYljonvAD9P0nID/A=
       "]]},
     Annotation[#, "Charting`Private`Tag$283151#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFzX1Q03UcB/BtwICGYxsP48Gx0JEZSAiox1J/E8RNHgJEEjpCWTdQhJKJ
EnidjDZNHsK6HXGhMjGQh8MtGlPDQGGlTVMISjjZENjRgDUcMWiytuqPvp8/
3ve+1z/vdzD/wwMCAg6HE/6b/zpBYBi+OyfZ3cU3EXxEY5jMJ+Vclb8S+98i
t283XfBXI2dmXZW/MI8ikxyibG7QJHJImskwWK1HLn0cgzUszyHTlVQdHr+I
rJqOe/Rk5xLyQMHlwCzjMrLltV2eXUWryARrJyUw5CXydscRVfoNG/IjcfTj
H99wILPHDEI/Ebgt9DK94CnYVxWVFD0NFnM0FXYjeElzpOfBKljRsVayH4/j
dE+ljejYz7CgbV+0e3mAq/tf12l9wXmjGVxhGDh2rlJBjAUrdu7IyGwAMy8u
WNtNYBe1wNhfh0deWJ3U/RpBQOaZfz4onAR/Pd+rIX/mhGxOzaqbuwXefXMl
XT0D/oUS5HLGBBYUxKu2WsHh9HFyrR3812BhvsHJmcN/V3he8vA5NnACdzfO
HVzDkPo1kcHdQ9PlHizw+CdbtWUx4JLUwrw368BkxvVFvR6cHBfeOSB2gf1j
PXkyFhF5hdOpP3rWFfYi1UrfQTfkyRvq6uHgV5DXCkYbN5eTkO/9EMBLawaf
fzV3+SMNeD5ZrKnRgZPPXJfJlsCt+yLqW1bBdurt6g4b+JB2j0iO9+CwT6e8
k12hxRRtmtNKIpiPTeT2UcBev/2R9CAA3FRd3kI/Dg7d42rP6wXfLpZG1hxb
h8xtDs7/hk5GLmUc3jCV7YkcZswgPU2mwJ/nCzf1S7DH7/ETJxOpyM79jfKN
l8A5lzaytffBt8o61fV/gt8/ZbOss4LJxcmbJHaw3mTp5+BpnFaWmbfXNIV9
V3gl0+YEvji/z3yTCBYcXbxw0h185/DnxlxvMO1QVEoqE9wXX+q9ZRv4eHTv
uHsimNRP3qWXgTv382V9K2DLQgBltt4LuSed6yTd6418lidpUs6Cg7UJY9ck
PshtUVncewpweFW+SvcMPMQMpbXOgot7TEVFZnBsxVDg8AqYltj9U7QNXB5x
TTZrB8/4SEsb8L6chcG3WhqtM1jSmvjtBGew8vmpEBsRvEr6e6JqPZi9Qyz1
jwQ/7Nh8v7YSnB30xIofAVs0tdMnRHTkBueckgMsP2QvXU8zQQ12+Vh0MKbY
HxnXniOfpgUgC7+S19IGwN+HfupG/SAQmZogDKskr0ee2DI0UnYHrLiCsfQ5
DOT35NupDDu4QnJVNNERhNxlYDSSk5jIG8TePNdW8JdMksXhAP8DsEN2Rg==

       "]]},
     Annotation[#, "Charting`Private`Tag$283151#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.3828785446762975},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8}, {0.3828785446762975, 0.6242197253433209}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7257819860754137`*^9},ExpressionUUID->"cbf62598-e7a2-4526-95ac-\
d4bfa6af8ec8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}],
     "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a\>\"", ",", "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<a\>\"", ",", 
      "\"\<b\>\"", ",", "\"\<b\>\"", ",", "\"\<b\>\""}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.72578201395224*^9, 
  3.7257820140019245`*^9}},ExpressionUUID->"4650668a-091c-4aff-83a4-\
67159155756f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logistic", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725782020693943*^9, 
  3.725782020752102*^9}},ExpressionUUID->"5e6b4dd2-b7e1-44e6-97df-\
711b253c94af"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["7", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257820237882357`*^9},ExpressionUUID->"5a834723-356a-4b7b-9a58-\
7edd908d3730"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rf", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725782028116893*^9, 
  3.7257820281720467`*^9}},ExpressionUUID->"13f1d004-cbcd-4728-9e80-\
35276e7ac2a4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["7", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725782030297763*^9},ExpressionUUID->"c3654760-e1e7-4657-b932-\
adc6b8392f01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"logistic", "[", 
      RowBox[{"x", ",", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<a\>\""}]}], "]"}], ",", 
     RowBox[{"rf", "[", 
      RowBox[{"x", ",", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<a\>\""}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257820347036304`*^9, 
  3.725782034758282*^9}},ExpressionUUID->"4395ddf0-0aff-4eed-9e1d-\
80041f49fdff"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVzn9Q03UYB/BnY8YSb2yIwoAxMUhBC84QWVbfT+EBgR6IIHDi3HFIhJZA
JEIWTjfz15KUUxTQKQYNTjZk0F1A7WRHYsiPsBMu3IgmQYhAt4H8iG+f54/n
Pve6z/Pj7Zd+JOEgFwAiaeEbc3CszzSufg/O2H/gwTDz1s2yikZxPgP8uGZ0
7KMn9yrFKgZO6Izo5Iy5tkviUgaOyRvQT4O/jtCI7zCgeFCL1q6JO31ObGQg
vKISreQ3bjgrNjMwHHEKnZJ6Sz8985hha/xj0C6sMi3K10r3dbujA3a/GGs/
b2NgnWrYibqgW8aU2ccZNvjXGrSHUWThcKYYNu6PPHTzSERXzzv/MjBwXIa+
n13pnfrcTu8HcdCO1991vfvJHANabReXmjtfJ/QOWKD3vr+MDmMVzXvqlxhI
KZSju1Sh3R1BLAOee4PQ0pKJed0LIOxW8wyHemLOavk9hEsge7EVfeefloeC
b5wIu8J8Ci2Q1EzZbDwCR8ti0Rc+bsrU+r9C4OVWD/QsqbNlFTsTGMmwAHX+
FrNxbTufwECaDm2tN5/v81tJQDZ6BL2Y/bg8sMiFQM4X29Cb3ndezmxZRaB5
kIuOuu33UYOHgLAPLl1mWStTIDmw/s80VwI7eIHozc+TXJ7sEhI4rDEtU692
neabF6gzZXFo3s/l+tcqRASOFzz7j/pQaMvgq7FuBLIG8tB1H6Zrf5qlXorn
oh0TXsLRK6sJGPZdW6Ju2hPlVLrDnUD42Q3o4mj1TeModW902yK139OYgSr1
GgIb1yWh396mKhVvWUuAeNkWqNN8e+Y5/dQl1UVox0PNSI7Sg4A2iY8u48nz
E/w9CZiuVM5jfkvTba7Zk3C0U6HoFV8qE2W5YsLGHWp/SQ06uX7EzYuwroWp
6Lzreo3bfS+aVzc6R9226Qxf9Kk34UzPfI4WxeRtPinwIaDoWoUeeqO3v7DV
h3BKOq/PUhtuMP42uYTAdEoIer8+TCRZRrO/OKhPqG8ph2p9ab7Ovei7Y5Jy
wU4p4RgCJu3UGQmTAfW7pQTij46jfVpbDbuSqYc7nqHPXdzXcSGd9guzLOis
sGszKwupFbU96PUq92jnatoPwffQg5N//VZdR/+1xfXokuTG/ZENUsIN6a1F
s0EJn6lbcT63Cj3Ud/GGUz+1qbEUXbr9QGDVAHU871t07HdvGj+wYJ5EDfrH
Y486lePUwlk1OnekItFvitoQeRK9cedhq8lOTa5+hR5u2p6tWKD7ev8uQl+V
ujhYljonvAD9P0nID/A=
       "]]},
     Annotation[#, "Charting`Private`Tag$298989#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFzX1QEnYcBnDwBXUYCr7gS0C+rTVNTa1Or4Q003xZmnnpnbN0h5ZpS9Qx
7bbEQStfZlueebOSbJnCFcwh1WxSylZjZjrdygtwIudQCcOJjCTc9sd+3z+e
e+7zz/MEFH14kGmHwWAq/81/ncrUjT+Y58VHBG5atKim6HyvA2cbfCX0/81x
/m7zeV85cm7eNdEr4yQyfp2Tn0ydRg7JMuiGG7XI7NFYevvKPDJZQlRjsUvI
Uk3iyNNdy8hDpVf88/QryKa3d7vdKjcj21mE7v4hr5F3rB+VZt+2Io9wY0Z/
encdOe65juXDAfeEXiGXPgN7S6PTYzRgLkNRZ9ODlxVH+x+bwWLBWtV+LIbR
N5M1oY57Qadu/6rXwxXcKHtHrfIGF0/mJLPCwAnz9WJcAli8a2dObjuYdmHR
0msAO8qZelkLFnnRPK3+LdIOOcX45BBrGvzNwoCC8IU9sjEzr2X+Ljj+zmq2
fBb8qzvV8bQBzCxNkm6zgMPJU4RmG/jv4bISnb0DozvYmLLXMEMfOoV5kOgC
bqK0+nQSwH1jmlrXYPDUZ9tUNbHgqsyy4ogWMIFyc0mrBWckhguHuI6wf7y/
mB+MQ15lCLXHzjjBXpRc4j3sjDx9W944HvAW8sumkYtvnoDXSic7ttTikR/+
6JeS1QX+fFPhyscK8EIGV9GkBmecvsnnL4O790W23TCDbcR7jQIr+LBqD0eE
dWVIpZST7CAlXdyj+EiCAxfRlYWD7mCP31+mP/YDdzbW3iCfAIfucbIVD4Dv
VbRGNR3fgJzcFVDyLZmAzKYcCZzJd0MO0+fgn2W4w5/bK2f5a7Drn0nKyjQi
soOsQxR0GVxwOShO9Qh8t0Yob/sL/EG11bTBAiZUZGzm2cBag0nGwJIYzIj4
QKpkhv592dVcqz34wsI+4x0cmHls6XylC/j+kS/1hZ5g0uHoA5k08GAS23Pr
dvCJmIEplzQwXkbYreWDhfuL+IOrYNOin/tcmwdyf3ayfeteT+QzKbxOyRw4
QJX6/DrPC7knOi/5oRgc3lAiVb8Aj9FCSd1z4Ip+Q3m5EZxQN+Y/vgompfX9
HGMF10Ze58/ZwLNerex2rDdDMHru02rZLD19jfteqgNY8kd1iBUHNuPfKBs2
guN2clt9o8C/CLY8aq4H51OfWrATYJOiWXOKQ0ZudyioOhjsg+yh7u+yk4Md
P+Eciq3wRcb0Fog0JD9k1teiZtIQ+IfQc87Ek/7IxFRWWD1hI7Jy69hEzX2w
+Co9WFtAQX5ftINIsYHreNc4SgEV+ZaO0kFIpyEHcj1TnLrBl2h40/o6+B8H
/G15
       "]]},
     Annotation[#, "Charting`Private`Tag$298989#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.4041733547351524},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8}, {0.4041733547351524, 0.6171214553237026}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7257820389447775`*^9},ExpressionUUID->"baa67ce5-8029-464f-8cec-\
342553d7171f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"logistic", "[", 
     RowBox[{"x", ",", 
      RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<a\>\""}]}], "]"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7257820473929214`*^9, 
  3.725782053102318*^9}},ExpressionUUID->"3c5dde99-25b0-4edb-88b5-\
774af22d53ab"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVzn9Q03UYB/BnY8YSb2yIwoAxMUhBC84QWVbfT+EBgR6IIHDi3HFIhJZA
JEIWTjfz15KUUxTQKQYNTjZk0F1A7WRHYsiPsBMu3IgmQYhAt4H8iG+f54/n
Pve6z/Pj7Zd+JOEgFwAiaeEbc3CszzSufg/O2H/gwTDz1s2yikZxPgP8uGZ0
7KMn9yrFKgZO6Izo5Iy5tkviUgaOyRvQT4O/jtCI7zCgeFCL1q6JO31ObGQg
vKISreQ3bjgrNjMwHHEKnZJ6Sz8985hha/xj0C6sMi3K10r3dbujA3a/GGs/
b2NgnWrYibqgW8aU2ccZNvjXGrSHUWThcKYYNu6PPHTzSERXzzv/MjBwXIa+
n13pnfrcTu8HcdCO1991vfvJHANabReXmjtfJ/QOWKD3vr+MDmMVzXvqlxhI
KZSju1Sh3R1BLAOee4PQ0pKJed0LIOxW8wyHemLOavk9hEsge7EVfeefloeC
b5wIu8J8Ci2Q1EzZbDwCR8ti0Rc+bsrU+r9C4OVWD/QsqbNlFTsTGMmwAHX+
FrNxbTufwECaDm2tN5/v81tJQDZ6BL2Y/bg8sMiFQM4X29Cb3ndezmxZRaB5
kIuOuu33UYOHgLAPLl1mWStTIDmw/s80VwI7eIHozc+TXJ7sEhI4rDEtU692
neabF6gzZXFo3s/l+tcqRASOFzz7j/pQaMvgq7FuBLIG8tB1H6Zrf5qlXorn
oh0TXsLRK6sJGPZdW6Ju2hPlVLrDnUD42Q3o4mj1TeModW902yK139OYgSr1
GgIb1yWh396mKhVvWUuAeNkWqNN8e+Y5/dQl1UVox0PNSI7Sg4A2iY8u48nz
E/w9CZiuVM5jfkvTba7Zk3C0U6HoFV8qE2W5YsLGHWp/SQ06uX7EzYuwroWp
6Lzreo3bfS+aVzc6R9226Qxf9Kk34UzPfI4WxeRtPinwIaDoWoUeeqO3v7DV
h3BKOq/PUhtuMP42uYTAdEoIer8+TCRZRrO/OKhPqG8ph2p9ab7Ovei7Y5Jy
wU4p4RgCJu3UGQmTAfW7pQTij46jfVpbDbuSqYc7nqHPXdzXcSGd9guzLOis
sGszKwupFbU96PUq92jnatoPwffQg5N//VZdR/+1xfXokuTG/ZENUsIN6a1F
s0EJn6lbcT63Cj3Ud/GGUz+1qbEUXbr9QGDVAHU871t07HdvGj+wYJ5EDfrH
Y486lePUwlk1OnekItFvitoQeRK9cedhq8lOTa5+hR5u2p6tWKD7ev8uQl+V
ujhYljonvAD9P0nID/A=
       "]]},
     Annotation[#, "Charting`Private`Tag$310655#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.49999725000975564`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8}, {0.49999725000975564`, 0.5000022499918941}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7257820548763723`*^9},ExpressionUUID->"e9d9f5b2-519e-4c89-83b5-\
20906764c754"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<UCILetter\>\""}], 
      "}"}], ",", " ", "\"\<TrainingData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7257820823785477`*^9, 
  3.725782112888842*^9}},ExpressionUUID->"8a6b706a-ed3e-48de-8794-\
499cf7b693cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"traingingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<NearestNeighbours\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257823087599287`*^9, 
  3.725782336051182*^9}},ExpressionUUID->"b1d5302a-7bb5-4756-941e-\
e1c370a7094d"],

Cell[BoxData[
 TemplateBox[{
  "Classify","mlnasethl",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"NearestNeighbours\\\\\\\\\\\
\\\\\"\\\\\\\"\\\"}]\\) is not an available \
\\!\\(\\*RowBox[{\\\"\\\\\\\"method\\\\\\\"\\\"}]\\). Did you mean \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"NearestNeighbors\\\\\\\\\\\\\\\"\
\\\\\\\"\\\"}]\\) instead? Possible \
\\!\\(\\*RowBox[{\\\"\\\\\\\"methods\\\\\\\"\\\"}]\\) also include \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"DecisionTree\\\\\\\\\\\\\\\", \\\
\\\\\\\\\\\\\"GradientBoostedTrees\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"LogisticRegression\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Markov\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"NaiveBayes\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"NeuralNetwork\\\\\
\\\\\\\\\\\", \\\\\\\\\\\\\\\"PriorBaseline\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"RandomForest\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"SupportVectorMachine\\\\\\\\\\\\\\\", and Automatic\\\\\\\"\\\
\"}]\\).\"",2,134,24,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257823527705092`*^9},ExpressionUUID->"8a88e7dc-5888-4cc2-ae74-\
92ac024530ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}],
     "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a\>\"", ",", "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<a\>\"", ",", 
      "\"\<b\>\"", ",", "\"\<b\>\"", ",", "\"\<b\>\""}], "}"}]}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<NearestNeighbors\>\""}]}], "]"}]], \
"Input",
 CellChangeTimes->{{3.725782374508704*^9, 
  3.725782374528328*^9}},ExpressionUUID->"df606142-d5ed-4c62-8cee-\
511a60c426c3"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["7", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725782375869049*^9},ExpressionUUID->"1ce84b4c-1c06-475e-8014-\
c0dba5f65e0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"traingingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<NearestNeighbors\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.7257823934343696`*^9},ExpressionUUID->"69c0cf14-0a6f-48bd-b192-\
b7de1771ed65"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["7", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725782394806103*^9},ExpressionUUID->"23fcd7c6-1ca5-4a91-b4f8-\
68b3ab9ba0b3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"testset", " ", "=", " ", 
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<UCILetter\>\""}], 
       "}"}], ",", " ", "\"\<TestData\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7257824426832905`*^9, 
  3.72578247096688*^9}},ExpressionUUID->"b330034c-0dd4-41a7-836e-\
5c44395434a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c1", ",", " ", "testset", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.725782475341601*^9, 
  3.7257824895324626`*^9}},ExpressionUUID->"a5e96f59-40b3-4f82-8c3d-\
97d05e4a4719"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierMeasurements","mlincfttp",
   "\"Incompatible variable type \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"Numerical\\\\\\\"\\\"}]\\)) and variable value \
(\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\"}], \\\"}\\\"}]\\)).\"",2,138,25,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.72578249310872*^9},ExpressionUUID->"fc347e90-093b-42c5-b287-cd6c4d1f9cd6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"ClassifierMeasurements", "[", 
          RowBox[{
           TagBox[
            TemplateBox[{RowBox[{
                StyleBox[
                 TagBox["ClassifierFunction", "SummaryHead"], 
                 "NonInterpretableSummary"], 
                StyleBox["[", "NonInterpretableSummary"], 
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                 TemplateBox[{
                   PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["7", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                  "SummaryPanel", 
                  DisplayFunction -> (
                   ButtonBox[#, Active -> False, Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> 7, BaseStyle -> {}, 
                    DefaultBaseStyle -> {"Panel", Background -> None}, 
                    BaselinePosition -> Baseline]& )], 
                 DynamicModuleValues :> {}], 
                StyleBox["]", "NonInterpretableSummary"]}]},
             "CopyTag",
             DisplayFunction->(#& ),
             InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
            False,
            Editable->False,
            SelectWithContents->True,
            Selectable->False], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "4", ",", "10", ",", "6", ",", "7", ",", "9", ",", "9", ",", 
                "6", ",", "4", ",", "3", ",", "6", ",", "7", ",", "7", ",", 
                "9", ",", "8", ",", "5", ",", "6"}], "}"}], 
              "\[Rule]", "\<\"U\"\>"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "6", ",", "9", ",", "8", ",", "4", ",", "3", ",", "8", ",", 
                "7", ",", "3", ",", "4", ",", "13", ",", "5", ",", "8", ",", 
                "6", ",", "8", ",", "0", ",", "8"}], "}"}], 
              "\[Rule]", "\<\"N\"\>"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "6", ",", "9", ",", "8", ",", "8", ",", "10", ",", "7", ",", 
                "7", ",", "5", ",", "4", ",", "7", ",", "6", ",", "8", ",", 
                "7", ",", "9", ",", "7", ",", "10"}], "}"}], 
              "\[Rule]", "\<\"V\"\>"}], ",", 
             TemplateBox[{"3994"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "6", ",", "9", ",", "6", ",", "7", ",", "5", ",", "6", ",", 
                "11", ",", "3", ",", "7", ",", "11", ",", "9", ",", "5", ",", 
                "2", ",", "12", ",", "2", ",", "4"}], "}"}], 
              "\[Rule]", "\<\"T\"\>"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "2", ",", "3", ",", "4", ",", "2", ",", "1", ",", "8", ",", 
                "7", ",", "2", ",", "6", ",", "10", ",", "6", ",", "8", ",", 
                "1", ",", "9", ",", "5", ",", "8"}], "}"}], 
              "\[Rule]", "\<\"S\"\>"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "4", ",", "9", ",", "6", ",", "6", ",", "2", ",", "9", ",", 
                "5", ",", "3", ",", "1", ",", "8", ",", "1", ",", "8", ",", 
                "2", ",", "7", ",", "2", ",", "8"}], "}"}], 
              "\[Rule]", "\<\"A\"\>"}]}], "}"}], ",", "\<\"Accuracy\"\>"}], 
          "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 138, 24706359309246942329, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 138, 24706359309246942329, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 138, 24706359309246942329, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24706359309246942329 === $SessionID, 
   Out[138], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.7257824933819847`*^9},ExpressionUUID->"20aae7b8-5fd4-4ee0-8037-\
ca35f5e41146"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<UCILetter\>\""}], "}"}], 
     ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"c1", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<NearestNeighbors\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.725782542642027*^9, 
  3.7257825508404713`*^9}},ExpressionUUID->"a294063c-9ea3-496a-8eed-\
6bf882f7e03f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "16", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["26", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", "\"E\"",
                     "\"F\"", "\"G\"", "\"H\"", "\"I\"", "\"J\"", "\"K\"", 
                    "\"L\"", "\"M\"", "\"N\"", "\"O\"", "\"P\"", "\"Q\"", 
                    "\"R\"", "\"S\"", "\"T\"", "\"U\"", "\"V\"", "\"W\"", 
                    "\"X\"", "\"Y\"", "\"Z\""}, "RowWithSeparators"], 
                    Short[#, 20]& ]], Annotation[#, 
                    Short[
                    
                    Row[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", 
                    "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", 
                    "V", "W", "X", "Y", "Z"}, ","], 20], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "16", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["26", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", "\"E\"",
                     "\"F\"", "\"G\"", "\"H\"", "\"I\"", "\"J\"", "\"K\"", 
                    "\"L\"", "\"M\"", "\"N\"", "\"O\"", "\"P\"", "\"Q\"", 
                    "\"R\"", "\"S\"", "\"T\"", "\"U\"", "\"V\"", "\"W\"", 
                    "\"X\"", "\"Y\"", "\"Z\""}, "RowWithSeparators"], 
                    Short[#, 20]& ]], Annotation[#, 
                    Short[
                    
                    Row[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", 
                    "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", 
                    "V", "W", "X", "Y", "Z"}, ","], 20], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["16000", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257825829640346`*^9},ExpressionUUID->"e00fb4c9-c58d-4469-b96a-\
41432faf5bb8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<UCILetter\>\""}], "}"}], 
     ",", "\"\<TestData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7257825845129395`*^9, 
  3.7257825845675926`*^9}},ExpressionUUID->"d0333af0-c194-43ea-9daf-\
d759a280c72e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c1", ",", "testset", ",", "\"\<Accuracy\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257825929317636`*^9, 
  3.7257825929849005`*^9}},ExpressionUUID->"d5bb8f1e-a7e8-463d-9892-\
865bb38487d0"],

Cell[BoxData["0.93925`"], "Output",
 CellChangeTimes->{
  3.7257825987369537`*^9},ExpressionUUID->"61168f3f-05bc-4aa7-8051-\
95888f4298eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<NaiveBayes\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257826236832237`*^9, 
  3.725782623740882*^9}},ExpressionUUID->"4ba67e4e-dc6a-45c6-abba-\
05a506980fce"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "16", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["26", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", "\"E\"",
                     "\"F\"", "\"G\"", "\"H\"", "\"I\"", "\"J\"", "\"K\"", 
                    "\"L\"", "\"M\"", "\"N\"", "\"O\"", "\"P\"", "\"Q\"", 
                    "\"R\"", "\"S\"", "\"T\"", "\"U\"", "\"V\"", "\"W\"", 
                    "\"X\"", "\"Y\"", "\"Z\""}, "RowWithSeparators"], 
                    Short[#, 20]& ]], Annotation[#, 
                    Short[
                    
                    Row[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", 
                    "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", 
                    "V", "W", "X", "Y", "Z"}, ","], 20], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "16", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["26", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"A\"", "\"B\"", "\"C\"", "\"D\"", "\"E\"",
                     "\"F\"", "\"G\"", "\"H\"", "\"I\"", "\"J\"", "\"K\"", 
                    "\"L\"", "\"M\"", "\"N\"", "\"O\"", "\"P\"", "\"Q\"", 
                    "\"R\"", "\"S\"", "\"T\"", "\"U\"", "\"V\"", "\"W\"", 
                    "\"X\"", "\"Y\"", "\"Z\""}, "RowWithSeparators"], 
                    Short[#, 20]& ]], Annotation[#, 
                    Short[
                    
                    Row[{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", 
                    "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", 
                    "V", "W", "X", "Y", "Z"}, ","], 20], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NaiveBayes\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["16000", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257826687560225`*^9},ExpressionUUID->"141c7cf8-4738-4d07-8007-\
1c8f857aad61"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c2", ",", " ", "testset", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257826779521675`*^9, 
  3.7257826927115307`*^9}},ExpressionUUID->"480c90de-9258-4859-b11e-\
0832bd10b83d"],

Cell[BoxData["0.73125`"], "Output",
 CellChangeTimes->{
  3.7257826941764283`*^9},ExpressionUUID->"fce43d27-7159-4068-bedb-\
5b88ec51d13e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{"c1", "[", 
    RowBox[{"testset", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257827070574193`*^9, 
  3.7257827460257225`*^9}},ExpressionUUID->"f7fea9cc-2075-440e-ae18-\
7159b4b29309"],

Cell[BoxData["3.432011493616094`"], "Output",
 CellChangeTimes->{
  3.7257827530373297`*^9},ExpressionUUID->"e74c1726-503a-47d9-9748-\
70dfa917be99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{"c2", "[", 
    RowBox[{"testset", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257827070574193`*^9, 3.7257827460257225`*^9}, {
  3.7257828008685703`*^9, 
  3.7257828045987935`*^9}},ExpressionUUID->"ba70b0c6-fc55-4674-85b8-\
97709571d3cf"],

Cell[BoxData["0.8774071734970542`"], "Output",
 CellChangeTimes->{
  3.725782806628729*^9},ExpressionUUID->"5d6b2a04-890d-4b38-a4b2-\
96ab0108be1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{"c1", "[", 
    RowBox[{"testset", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257827070574193`*^9, 3.7257827460257225`*^9}, {
  3.7257828008685703`*^9, 
  3.725782824497939*^9}},ExpressionUUID->"1cc3678f-6cec-4ea7-b1d3-\
d788bb928311"],

Cell[BoxData["3.66365948233587`"], "Output",
 CellChangeTimes->{
  3.7257828297858796`*^9},ExpressionUUID->"fde4badb-5a20-4238-8651-\
6dc84adb33b5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "\[Rule]", 
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"#", ",", " ", "1"}], "]"}], " ", "==", " ", "1"}]}], "&"}], 
     ",", 
     RowBox[{"Tuples", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4"}], "}"}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2"}], "}"}]}], "}"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7257829135518827`*^9, 3.725782916272888*^9}, {
  3.7257830673800845`*^9, 3.725783155544428*^9}, {3.7257831861027102`*^9, 
  3.7257831978082485`*^9}},ExpressionUUID->"e67b8be9-c94e-4167-964b-\
c011441d8159"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"data", ",", " ", "169"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7257832731278973`*^9, 
  3.725783292363758*^9}},ExpressionUUID->"d7bce849-aeb1-4d5b-b1e4-\
a861fc7e3083"],

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{"ClassifierMeasurements", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Classify", "[", 
     RowBox[{"trainingset", ",", " ", 
      RowBox[{"Method", "\[Rule]", "#"}]}], "]"}], ",", " ", "data", ",", " ", 
    RowBox[{"\"\<Accuracy\>\"", "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<RandomForest\>\"", ",", "\[IndentingNewLine]", "\"\<NaiveBayes\>\"",
       ",", " ", "\"\<SupportVectorMachine\>\"", ",", " ", 
      "\"\<NearestNeighbours\>\"", ",", " ", "\"\<LogisticRegression\>\""}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725783306245442*^9, 3.7257833535094547`*^9}, {
  3.725783383900037*^9, 3.7257834406043653`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"6f09776a-18e7-483a-8f84-75e63dd119cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ClassifierMeasurements", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Classify", "[", 
       RowBox[{"trainingset", ",", " ", 
        RowBox[{"Method", "\[Rule]", "#"}]}], "]"}], ",", " ", "data", ",", 
      " ", "\"\<Accuracy\>\""}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<RandomForest\>\"", ",", "\[IndentingNewLine]", "\"\<NaiveBayes\>\"", 
     ",", " ", "\"\<SupportVectorMachine\>\"", ",", " ", 
     "\"\<NearestNeighbors\>\"", ",", " ", "\"\<LogisticRegression\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.72578347292749*^9, 
  3.725783636898675*^9},ExpressionUUID->"5375150a-53b7-4865-938b-\
02cefbaf60de"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"RandomForest\"\>", "\[Rule]", "0.7870370370370371`"}], ",", 
   RowBox[{"\<\"NaiveBayes\"\>", "\[Rule]", "0.7870370370370371`"}], ",", 
   RowBox[{"\<\"SupportVectorMachine\"\>", "\[Rule]", "0.7870370370370371`"}],
    ",", 
   RowBox[{"\<\"NearestNeighbors\"\>", "\[Rule]", "0.7638888888888888`"}], 
   ",", 
   RowBox[{"\<\"LogisticRegression\"\>", "\[Rule]", "0.8310185185185185`"}]}],
   "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7257835141886797`*^9, 
  3.725783689124504*^9},ExpressionUUID->"5b22eab3-244c-4301-8d70-\
439c1b6077e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"traininset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<Satellite\>\""}], 
      "}"}], ",", " ", "\"\<TrainingData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"c1", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<TrainingSpeed\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7257837369100547`*^9, 
  3.725783793211252*^9}},ExpressionUUID->"445e6b19-dd54-43c6-bdfa-\
95e88224b707"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["169", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257838080778093`*^9},ExpressionUUID->"4596bade-081c-4f46-889e-\
21835b73b4cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c", ",", " ", "\"\<TrainingTime\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257838176760516`*^9, 
  3.725783826154808*^9}},ExpressionUUID->"7ad0f411-2254-496e-9397-\
00d3e604cddd"],

Cell[BoxData[
 TemplateBox[{"1.5208662398007904`","\"s\"","seconds","\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.7257838268924904`*^9},ExpressionUUID->"87c20077-9a00-462a-ac33-\
9f1b17ad9cc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<Satellite\>\""}], 
      "}"}], ",", " ", "\"\<TestData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c1", ",", " ", "testset", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.725783933455641*^9, 
  3.725784002294422*^9}},ExpressionUUID->"db73cc0c-2ac3-4e3d-a1c8-\
f1ea7ded6f7c"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierMeasurements","mlbftlgth2",
   "\"Example \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"80\\\", \\\",\\\", \
\\\"102\\\", \\\",\\\", \\\"102\\\", \\\",\\\", \\\"79\\\", \\\",\\\", \\\"76\
\\\", \\\",\\\", \\\"102\\\", \\\",\\\", \\\"102\\\", \\\",\\\", \\\"79\\\", \
\\\",\\\", \\\"76\\\", \\\",\\\", \\\"102\\\", \\\",\\\", \\\"106\\\", \
\\\",\\\", \\\"83\\\", \\\",\\\", \\\"76\\\", \\\",\\\", \\\"99\\\", \
\\\",\\\", \\\"108\\\", \\\",\\\", \\\"85\\\", \\\",\\\", \\\"76\\\", \\\",\\\
\", \\\"103\\\", \\\",\\\", \\\"118\\\", \\\",\\\", \\\"88\\\", \\\",\\\", \\\
\"80\\\", \\\",\\\", \\\"107\\\", \\\",\\\", \\\"118\\\", \\\",\\\", \\\"88\\\
\", \\\",\\\", \\\"79\\\", \\\",\\\", \\\"107\\\", \\\",\\\", \\\"109\\\", \\\
\",\\\", \\\"87\\\", \\\",\\\", \\\"79\\\", \\\",\\\", \\\"107\\\", \
\\\",\\\", \\\"109\\\", \\\",\\\", \\\"87\\\", \\\",\\\", \\\"79\\\", \\\",\\\
\", \\\"107\\\", \\\",\\\", \\\"113\\\", \\\",\\\", \\\"87\\\"}], \\\"}\\\"}]\
\\) should have \\!\\(\\*RowBox[{\\\"6\\\"}]\\) features instead of \
\\!\\(\\*RowBox[{\\\"36\\\"}]\\).\"",2,155,34,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257840064073687`*^9},ExpressionUUID->"5dab05db-1c47-44f8-8834-\
5526e72a151f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"ClassifierMeasurements", "[", 
          RowBox[{
           TagBox[
            TemplateBox[{RowBox[{
                StyleBox[
                 TagBox["ClassifierFunction", "SummaryHead"], 
                 "NonInterpretableSummary"], 
                StyleBox["[", "NonInterpretableSummary"], 
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                 TemplateBox[{
                   PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["169", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                  "SummaryPanel", 
                  DisplayFunction -> (
                   ButtonBox[#, Active -> False, Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> 7, BaseStyle -> {}, 
                    DefaultBaseStyle -> {"Panel", Background -> None}, 
                    BaselinePosition -> Baseline]& )], 
                 DynamicModuleValues :> {}], 
                StyleBox["]", "NonInterpretableSummary"]}]},
             "CopyTag",
             DisplayFunction->(#& ),
             InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
            False,
            Editable->False,
            SelectWithContents->True,
            Selectable->False], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "80", ",", "102", ",", "102", ",", "79", ",", "76", ",", "102",
                 ",", "102", ",", "79", ",", "76", ",", "102", ",", "106", 
                ",", "83", ",", "76", ",", "99", ",", "108", ",", "85", ",", 
                "76", ",", "103", ",", "118", ",", "88", ",", "80", ",", 
                "107", ",", "118", ",", "88", ",", "79", ",", "107", ",", 
                "109", ",", "87", ",", "79", ",", "107", ",", "109", ",", 
                "87", ",", "79", ",", "107", ",", "113", ",", "87"}], "}"}], 
              "\[Rule]", "\<\"gray soil\"\>"}], ",", 
             TemplateBox[{"1998"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "60", ",", "71", ",", "91", ",", "81", ",", "60", ",", "64", 
                ",", "104", ",", "99", ",", "56", ",", "64", ",", "108", ",", 
                "96", ",", "63", ",", "79", ",", "93", ",", 
                TemplateBox[{"6"},
                 "OutputSizeLimit`Skeleton"], ",", "75", ",", "109", ",", 
                "96", ",", "59", ",", "83", ",", "92", ",", "74", ",", "59", 
                ",", "83", ",", "92", ",", "70", ",", "63", ",", "79", ",", 
                "108", ",", "92"}], "}"}], "\[Rule]", 
              TemplateBox[{"30"},
               "OutputSizeLimit`Skeleton"]}]}], "}"}], 
           ",", "\<\"Accuracy\"\>"}], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 24706359309246942329, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 24706359309246942329, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 24706359309246942329, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24706359309246942329 === $SessionID, 
   Out[155], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.725784006647539*^9},ExpressionUUID->"0f0fac10-fdb8-48ef-be2f-\
28ecb50d60d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"c1", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"trainingset", ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<TrainingSpeed\>\""}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7257841009149876`*^9, 
  3.725784105090412*^9}},ExpressionUUID->"8f39e82f-8a03-43cb-b7b0-\
8e3dccc245ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<Satellite\>\""}], 
      "}"}], ",", " ", "\"\<TestData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c1", ",", " ", "testset", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.725783933455641*^9, 
  3.725784027342651*^9}},ExpressionUUID->"499ba886-6e6d-45e2-9941-\
569f03a21d27"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierMeasurements","mlbftlgth2",
   "\"Example \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"80\\\", \\\",\\\", \
\\\"102\\\", \\\",\\\", \\\"102\\\", \\\",\\\", \\\"79\\\", \\\",\\\", \\\"76\
\\\", \\\",\\\", \\\"102\\\", \\\",\\\", \\\"102\\\", \\\",\\\", \\\"79\\\", \
\\\",\\\", \\\"76\\\", \\\",\\\", \\\"102\\\", \\\",\\\", \\\"106\\\", \
\\\",\\\", \\\"83\\\", \\\",\\\", \\\"76\\\", \\\",\\\", \\\"99\\\", \
\\\",\\\", \\\"108\\\", \\\",\\\", \\\"85\\\", \\\",\\\", \\\"76\\\", \\\",\\\
\", \\\"103\\\", \\\",\\\", \\\"118\\\", \\\",\\\", \\\"88\\\", \\\",\\\", \\\
\"80\\\", \\\",\\\", \\\"107\\\", \\\",\\\", \\\"118\\\", \\\",\\\", \\\"88\\\
\", \\\",\\\", \\\"79\\\", \\\",\\\", \\\"107\\\", \\\",\\\", \\\"109\\\", \\\
\",\\\", \\\"87\\\", \\\",\\\", \\\"79\\\", \\\",\\\", \\\"107\\\", \
\\\",\\\", \\\"109\\\", \\\",\\\", \\\"87\\\", \\\",\\\", \\\"79\\\", \\\",\\\
\", \\\"107\\\", \\\",\\\", \\\"113\\\", \\\",\\\", \\\"87\\\"}], \\\"}\\\"}]\
\\) should have \\!\\(\\*RowBox[{\\\"6\\\"}]\\) features instead of \
\\!\\(\\*RowBox[{\\\"36\\\"}]\\).\"",2,158,35,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257841225796084`*^9},ExpressionUUID->"81cb7c4d-a4ad-4363-980b-\
bec13a837f62"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"ClassifierMeasurements", "[", 
          RowBox[{
           TagBox[
            TemplateBox[{RowBox[{
                StyleBox[
                 TagBox["ClassifierFunction", "SummaryHead"], 
                 "NonInterpretableSummary"], 
                StyleBox["[", "NonInterpretableSummary"], 
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                 TemplateBox[{
                   PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["169", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                  "SummaryPanel", 
                  DisplayFunction -> (
                   ButtonBox[#, Active -> False, Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> 7, BaseStyle -> {}, 
                    DefaultBaseStyle -> {"Panel", Background -> None}, 
                    BaselinePosition -> Baseline]& )], 
                 DynamicModuleValues :> {}], 
                StyleBox["]", "NonInterpretableSummary"]}]},
             "CopyTag",
             DisplayFunction->(#& ),
             InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
            False,
            Editable->False,
            SelectWithContents->True,
            Selectable->False], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "80", ",", "102", ",", "102", ",", "79", ",", "76", ",", "102",
                 ",", "102", ",", "79", ",", "76", ",", "102", ",", "106", 
                ",", "83", ",", "76", ",", "99", ",", "108", ",", "85", ",", 
                "76", ",", "103", ",", "118", ",", "88", ",", "80", ",", 
                "107", ",", "118", ",", "88", ",", "79", ",", "107", ",", 
                "109", ",", "87", ",", "79", ",", "107", ",", "109", ",", 
                "87", ",", "79", ",", "107", ",", "113", ",", "87"}], "}"}], 
              "\[Rule]", "\<\"gray soil\"\>"}], ",", 
             TemplateBox[{"1998"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "60", ",", "71", ",", "91", ",", "81", ",", "60", ",", "64", 
                ",", "104", ",", "99", ",", "56", ",", "64", ",", "108", ",", 
                "96", ",", "63", ",", "79", ",", "93", ",", 
                TemplateBox[{"6"},
                 "OutputSizeLimit`Skeleton"], ",", "75", ",", "109", ",", 
                "96", ",", "59", ",", "83", ",", "92", ",", "74", ",", "59", 
                ",", "83", ",", "92", ",", "70", ",", "63", ",", "79", ",", 
                "108", ",", "92"}], "}"}], "\[Rule]", 
              TemplateBox[{"30"},
               "OutputSizeLimit`Skeleton"]}]}], "}"}], 
           ",", "\<\"Accuracy\"\>"}], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 158, 24706359309246942329, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 158, 24706359309246942329, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 158, 24706359309246942329, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24706359309246942329 === $SessionID, 
   Out[158], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.725784122806289*^9},ExpressionUUID->"daa5d3fb-226c-4877-9f22-\
861e16ca4acb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", "=", 
  RowBox[{"Classify", "[", "trainingset", "]"}]}]], "Input",
 CellChangeTimes->{{3.7257842410443096`*^9, 
  3.725784241087931*^9}},ExpressionUUID->"5d8ae69c-e5d2-4aab-95b6-\
000803461190"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["169", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257842535081267`*^9},ExpressionUUID->"18c5bd9f-a470-4893-a3ba-\
170ca7941523"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c1", ",", " ", "\"\<TrainingTime\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257842521723995`*^9, 
  3.725784269042365*^9}},ExpressionUUID->"ade5e141-59d4-4dfa-839f-\
05796426c5a6"],

Cell[BoxData[
 TemplateBox[{"10.784996989943085`","\"s\"","seconds","\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.7257842718821845`*^9},ExpressionUUID->"88ef9c0c-098d-43fa-a042-\
9fa8c5115e19"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"c2", " ", "=", " ", 
  RowBox[{"Classify", "[", "trainingset", "]"}]}]], "Input",
 CellChangeTimes->{{3.725784293111354*^9, 
  3.7257843105588245`*^9}},ExpressionUUID->"eb74d5b7-9370-4cb6-b516-\
bf011bf9f4a9"],

Cell[CellGroupData[{

Cell[BoxData[{
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["169", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False], "\[IndentingNewLine]", 
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c2", ",", " ", "\"\<Accuracy\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.725784335636349*^9, 
  3.725784355487526*^9}},ExpressionUUID->"9382996b-be5a-40b8-ad39-\
1def61a22aa2"],

Cell[BoxData[
 TemplateBox[{
  "General","noinfo",
   "\"Input expression \
\\!\\(\\*TagBox[\\\"ClassifierFunction[\[Ellipsis]]\\\", False, \
Rule[Editable, False], Rule[SelectWithContents, True], Rule[Selectable, \
False]]\\) contains insufficient information to interpret the result.\"",2,
   162,36,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257843597773795`*^9},ExpressionUUID->"d5e40bde-719c-4502-890c-\
171927dafda4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "False", "True"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["169", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False], "\[IndentingNewLine]", 
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c2", ",", " ", "testset", ",", "\"\<Accuracy\>\""}], "]"}]}], \
"Input",
 CellChangeTimes->{{3.725784335636349*^9, 
  3.7257844183085227`*^9}},ExpressionUUID->"2c92a39f-0954-4e54-ace0-\
6c0aae31ccfe"],

Cell[BoxData[
 TemplateBox[{
  "General","noinfo",
   "\"Input expression \
\\!\\(\\*TagBox[\\\"ClassifierFunction[\[Ellipsis]]\\\", False, \
Rule[Editable, False], Rule[SelectWithContents, True], Rule[Selectable, \
False]]\\) contains insufficient information to interpret the result.\"",2,
   162,37,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257844194099455`*^9},ExpressionUUID->"6469b301-80e6-49c6-ae5d-\
b7c20db0535b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Satellite\>\""}], "}"}], 
     ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2", "=", 
   RowBox[{"Classify", "[", "trainingset", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c2", ",", "\"\<TrainingTime\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c2", ",", "testset", ",", "\"\<Accuracy\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.725784437696126*^9, 
  3.7257844713156414`*^9}},ExpressionUUID->"71ed5b64-0f22-455c-b841-\
6c0f6839996b"],

Cell[BoxData[
 TemplateBox[{"19.277500983859774`","\"s\"","seconds","\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.725784494573205*^9},ExpressionUUID->"bf0d00b2-6863-4170-bb4c-\
d43ba3ac56a6"],

Cell[BoxData["0.8925`"], "Output",
 CellChangeTimes->{
  3.7257844956792917`*^9},ExpressionUUID->"6df49d7c-01fd-447e-9479-\
524ccd9ec5b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c3", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<TrainingSpeed\>\"", ",", "\"\<Memory\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257845798645763`*^9, 
  3.7257845799081984`*^9}},ExpressionUUID->"9f62dff3-883d-4b63-8f05-\
4ac2b4926c15"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "36", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["6", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"cotton crop\"", "\"damp gray soil\"", 
                    "\"gray soil\"", "\"red soil\"", 
                    "\"soil with vegetation stubble\"", 
                    "\"very damp gray soil\""}, "RowWithSeparators"], 
                    Short[#, 20]& ]], Annotation[#, 
                    Short[
                    
                    Row[{"cotton crop", "damp gray soil", "gray soil", 
                    "red soil", "soil with vegetation stubble", 
                    "very damp gray soil"}, ","], 20], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "36", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["6", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"cotton crop\"", "\"damp gray soil\"", 
                    "\"gray soil\"", "\"red soil\"", 
                    "\"soil with vegetation stubble\"", 
                    "\"very damp gray soil\""}, "RowWithSeparators"], 
                    Short[#, 20]& ]], Annotation[#, 
                    Short[
                    
                    Row[{"cotton crop", "damp gray soil", "gray soil", 
                    "red soil", "soil with vegetation stubble", 
                    "very damp gray soil"}, ","], 20], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4435", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725784596910364*^9},ExpressionUUID->"8f4f9cc6-3125-45ae-ad11-\
148fff42eff1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteCount", "/@", 
  RowBox[{"{", 
   RowBox[{"c2", ",", "c3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7257846023974824`*^9, 
  3.7257846024401693`*^9}},ExpressionUUID->"4754a0cc-e692-44c2-989c-\
d6964bae234c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1648728", ",", "314936"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257846058405385`*^9},ExpressionUUID->"e517036c-e52a-4f3f-ba6f-\
d7ec932d892e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c3", ",", "testset", ",", "\"\<Accuracy\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257846192483854`*^9, 
  3.725784619298023*^9}},ExpressionUUID->"28a20796-c038-440e-9bb8-\
285b94e939db"],

Cell[BoxData["0.8365`"], "Output",
 CellChangeTimes->{
  3.725784622089563*^9},ExpressionUUID->"5d385932-2b6d-4589-b317-\
e8e8301d0d54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<A\>\"", ",", "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<B\>\""}], 
      "}"}]}], ",", 
    RowBox[{"TimeGoal", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257847805043583`*^9, 
  3.7257847805559616`*^9}},ExpressionUUID->"bf820eac-3e59-4493-80ff-\
46ddd9defdaf"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725784820474976*^9},ExpressionUUID->"c4dfa45d-638a-4eba-8ece-\
f47180b28a56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c", ",", " ", "\"\<TrainingTime\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257848521504965`*^9, 
  3.7257848699009166`*^9}},ExpressionUUID->"a2c7163f-efcc-4ccc-bd24-\
70995b494260"],

Cell[BoxData[
 TemplateBox[{"5.793647979691657`","\"s\"","seconds","\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.7257848704377327`*^9},ExpressionUUID->"2d938ade-ed43-43a4-a2ce-\
8583db702beb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<Mushroom\>\""}], 
      "}"}], ",", " ", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7257848763423505`*^9, 
  3.725784908735218*^9}},ExpressionUUID->"e7718132-6479-4485-8a6c-\
3a7e4f52c290"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"dataset", ",", " ", 
    RowBox[{"TimeGoal", "\[Rule]", ".1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257849401639056`*^9, 
  3.725784958967789*^9}},ExpressionUUID->"a0bb3565-8da9-4232-9915-\
5a7fc1a59d49"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "22", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Boolean\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Boolean", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"edible\"", "\"poisonous\""},
                     "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "22", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Boolean\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Boolean", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"edible\"", "\"poisonous\""},
                     "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["8124", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725784977439469*^9},ExpressionUUID->"b3cda334-1396-4a6a-b6a7-\
754f41257b02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", "c", "]"}]], "Input",
 CellChangeTimes->{{3.725784982060027*^9, 
  3.725784989960656*^9}},ExpressionUUID->"d3ebe5cc-a32f-4c49-94c0-\
60678fca41a3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Input type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"\"Mixed\"",StyleBox[
                   
                   TemplateBox[{"\" (number: \"", "22", "\")\""}, 
                    "RowDefault"], 
                   GrayLevel[0.5], StripOnInput -> False]},
                 "RowDefault"],
                TagBox[
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Boolean\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                 Short[#, 10]& ]],
               Annotation[#, 
                
                Short[{"Nominal", "Nominal", "Nominal", "Boolean", "Nominal", 
                  "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                  "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                  "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                  "Nominal", "Nominal"}, 10], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Classes\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",","\",\"","\"edible\"","\"poisonous\""},
               "RowWithSeparators"]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"LogisticRegression\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 3, "InitialType" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"L1Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "L2Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[60], {
                    "OptimizationMethod"} -> 
                    TypeSystem`PackageScope`AtomShape[48.00000000000001]], 1],
                     "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[828117763], "Type" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], "HandleQ" -> True, "RowTarget" -> 
                    20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[828117763]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 492602367][{
                    Key["L1Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    492602367][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    492602367][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 492602367][{
                    Key["L2Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    492602367][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["100000."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    492602367][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 492602367][{
                    Key["OptimizationMethod"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    492602367][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["LBFGS", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    492602367][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 492602367][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    492602367]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    492602367][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    492602367][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                  "OptimizationMethod" -> "LBFGS"], 
                 
                 TypeSystem`Struct[{
                  "L1Regularization", "L2Regularization", 
                   "OptimizationMethod"}, {
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[String]}], 
                 Association["ID" -> 147454945468063]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Accuracy\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                TemplateBox[{
                 TemplateBox[{
                   "89.0479461739048190339`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod],
                  StyleBox[
                   TemplateBox[{"\" \[PlusMinus] \"", 
                    
                    TemplateBox[{
                    "0.7756110013337506048`2.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod]}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.8749672417123732782`3.",
                   "\", \"", "0.9059916817657232002`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.8749672417123732782`3., 
                  ", ", 0.9059916817657232002`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.6507454974416686522`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0007583512032799545`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.6492287950351087744`3.",
                   "\", \"", "0.6522621998482285299`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.6492287950351087744`3., 
                  ", ", 0.6522621998482285299`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "53.5`",
                RowBox[{
                 "\"\[Micro]s\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"example\""}],
                "microseconds per example",FractionBox[
                "\"Microseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Classifier memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"1.57`","\"MB\"","megabytes","\"Megabytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"8124","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"15.4`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]},
             {
              
              DynamicModuleBox[{
               MachineLearning`file5Automation`PackagePrivate`pos$$ = 1}, 
               DynamicBox[ToBoxes[
                 Show[
                  Part[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3666261629602693}, {
                    3.912023005428146, -0.3670669361596375}, {
                    5.521460917862246, -0.36878059305930033`}, {
                    7.313220387090301, -0.3815038668510196}, {
                    8.77940359789435, -0.429636654160721}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, -0.548947719754224}, {
                    2.302585092994046, -0.24731509736676632`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.3666261629602693}}, {{
                    3.912023005428146, -0.3670669361596375}}, {{
                    5.521460917862246, -0.36878059305930033`}}, {{
                    7.313220387090301, -0.3815038668510196}}, {{
                    8.77940359789435, -0.429636654160721}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.548947719754224}}, {{
                    2.302585092994046, -0.24731509736676632`}}}]}, {}}}, {}, \
{}, {}, {}}}, {{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.3666485001247921}, {
                    2.302585092994046, -0.36660382629468424`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.912023005428146, -0.367126945202854}, {
                    3.912023005428146, -0.3670069307172902}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.521460917862246, -0.368975490862118}, {
                    5.521460917862246, -0.3685857332342346}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.313220387090301, -0.3820782024883165}, {
                    7.313220387090301, -0.3809298608858137}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.77940359789435, -0.43080269130584603`}, {
                    8.77940359789435, -0.42847197507482593`}}]}}}, {}, {}, \
{}, {}}}}, {DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.061206759062522, -0.5708404100887974}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-0.5657050876646382, -0.24731509736676632`}},
                     PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, -0.5708404100887974}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-0.5657050876646382, -0.24731509736676632`}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.7}, {3.912023005428146, 
                    0.83}, {5.521460917862246, 0.83}, {7.313220387090301, 
                    0.9046224613059289}, {8.77940359789435, 
                    0.8904794617390481}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 0.7538520510882741}, {
                    2.302585092994046, 0.84}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.7}}, {{3.912023005428146, 0.83}}, {{
                    5.521460917862246, 0.83}}, {{7.313220387090301, 
                    0.9046224613059289}}, {{8.77940359789435, 
                    0.8904794617390481}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.7538520510882741}}, {{
                    2.302585092994046, 0.84}}}]}, {}}}, {}, {}, {}, {}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, 
                    AxesOrigin -> {2.061206759062522, 0.6857894736842104}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {0.7, 1}}, PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, 0.6857894736842104}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {0.7, 1}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3666261629602693}, {
                    3.912023005428146, -0.3670669361596375}, {
                    5.521460917862246, -0.36878059305930033`}, {
                    7.313220387090301, -0.3815038668510196}, {
                    8.77940359789435, -0.429636654160721}}]}, 
                    "LogisticRegression"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.061206759062522, -0.43420999626397966`}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-0.4331372370051905, -0.3666261629602693}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, -0.43420999626397966`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-0.4331372370051905, -0.3666261629602693}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}, 
                   MachineLearning`file5Automation`PackagePrivate`pos$$], 
                  PlotLabel -> Grid[{{
                    Button[
                    
                    MachineLearning`file5Automation`PackagePrivate`\
buttonGraphics[
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]], 
                    MachineLearning`file5Automation`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file5Automation`PackagePrivate`pos$$ - 
                    1, 1], Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file5Automation`PackagePrivate`pos$$], 
                    Button[
                    
                    MachineLearning`file5Automation`PackagePrivate`\
buttonGraphics[
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]], 
                    MachineLearning`file5Automation`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file5Automation`PackagePrivate`pos$$ + 
                    1, 
                    Length[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3666261629602693}, {
                    3.912023005428146, -0.3670669361596375}, {
                    5.521460917862246, -0.36878059305930033`}, {
                    7.313220387090301, -0.3815038668510196}, {
                    8.77940359789435, -0.429636654160721}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, -0.548947719754224}, {
                    2.302585092994046, -0.24731509736676632`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.3666261629602693}}, {{
                    3.912023005428146, -0.3670669361596375}}, {{
                    5.521460917862246, -0.36878059305930033`}}, {{
                    7.313220387090301, -0.3815038668510196}}, {{
                    8.77940359789435, -0.429636654160721}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.548947719754224}}, {{
                    2.302585092994046, -0.24731509736676632`}}}]}, {}}}, {}, \
{}, {}, {}}}, {{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.3666485001247921}, {
                    2.302585092994046, -0.36660382629468424`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.912023005428146, -0.367126945202854}, {
                    3.912023005428146, -0.3670069307172902}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.521460917862246, -0.368975490862118}, {
                    5.521460917862246, -0.3685857332342346}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.313220387090301, -0.3820782024883165}, {
                    7.313220387090301, -0.3809298608858137}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.77940359789435, -0.43080269130584603`}, {
                    8.77940359789435, -0.42847197507482593`}}]}}}, {}, {}, \
{}, {}}}}, {DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.061206759062522, -0.5708404100887974}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-0.5657050876646382, -0.24731509736676632`}},
                     PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, -0.5708404100887974}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-0.5657050876646382, -0.24731509736676632`}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.7}, {3.912023005428146, 
                    0.83}, {5.521460917862246, 0.83}, {7.313220387090301, 
                    0.9046224613059289}, {8.77940359789435, 
                    0.8904794617390481}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 0.7538520510882741}, {
                    2.302585092994046, 0.84}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.7}}, {{3.912023005428146, 0.83}}, {{
                    5.521460917862246, 0.83}}, {{7.313220387090301, 
                    0.9046224613059289}}, {{8.77940359789435, 
                    0.8904794617390481}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.7538520510882741}}, {{
                    2.302585092994046, 0.84}}}]}, {}}}, {}, {}, {}, {}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, 
                    AxesOrigin -> {2.061206759062522, 0.6857894736842104}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {0.7, 1}}, PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, 0.6857894736842104}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {0.7, 1}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3666261629602693}, {
                    3.912023005428146, -0.3670669361596375}, {
                    5.521460917862246, -0.36878059305930033`}, {
                    7.313220387090301, -0.3815038668510196}, {
                    8.77940359789435, -0.429636654160721}}]}, 
                    "LogisticRegression"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.061206759062522, -0.43420999626397966`}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-0.4331372370051905, -0.3666261629602693}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, -0.43420999626397966`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-0.4331372370051905, -0.3666261629602693}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}]], Appearance -> 
                    "Frameless"]}}, Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                ImageSizeCache->{330., {117., 121.}}],
               DynamicModuleValues:>{}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{5, 5}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.7257849926924086`*^9},ExpressionUUID->"c2448ead-91d4-4f3b-9948-\
c66d8de77497"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"dataset", ",", " ", 
    RowBox[{"TimeGoal", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257851263195515`*^9, 
  3.7257851385514593`*^9}},ExpressionUUID->"89a3cf91-2b32-4c51-90a6-\
7652651839d1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "22", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Boolean\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Boolean", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"edible\"", "\"poisonous\""},
                     "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "22", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Boolean\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Boolean", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"edible\"", "\"poisonous\""},
                     "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["8124", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257851625812416`*^9},ExpressionUUID->"a08f1e9c-f3a9-4301-b647-\
08cb802379d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", "c", "]"}]], "Input",
 CellChangeTimes->{{3.725785220294159*^9, 
  3.725785226705616*^9}},ExpressionUUID->"561c685b-9970-4501-9a84-\
57397eb367eb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Input type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"\"Mixed\"",StyleBox[
                   
                   TemplateBox[{"\" (number: \"", "22", "\")\""}, 
                    "RowDefault"], 
                   GrayLevel[0.5], StripOnInput -> False]},
                 "RowDefault"],
                TagBox[
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Boolean\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                 Short[#, 10]& ]],
               Annotation[#, 
                
                Short[{"Nominal", "Nominal", "Nominal", "Boolean", "Nominal", 
                  "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                  "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                  "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                  "Nominal", "Nominal"}, 10], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Classes\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",","\",\"","\"edible\"","\"poisonous\""},
               "RowWithSeparators"]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"DecisionTree\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 2, "Length" -> 2, "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[
                    TypeSystem`Enumeration[
                    "DistributionSmoothing", "FeatureFraction"]], 
                    TypeSystem`Atom[Integer], 2], "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[189.], 
                    TypeSystem`PackageScope`AtomShape[34]]], 2, {}], 
                    "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[176371552], "Type" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[
                    TypeSystem`Enumeration[
                    "DistributionSmoothing", "FeatureFraction"]], 
                    TypeSystem`Atom[Integer], 2], "HandleQ" -> True, 
                    "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[176371552]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["DistributionSmoothing", 
                    Style[
                    "DistributionSmoothing", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 759057731][{
                    Key["DistributionSmoothing"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    759057731][
                    GeneralUtilities`Slice[
                    Key["DistributionSmoothing"]]], "Mouse"], 
                    ImageSize -> {{189., Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    759057731][
                    GeneralUtilities`Slice[
                    Key["DistributionSmoothing"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["FeatureFraction", 
                    Style[
                    "FeatureFraction", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 759057731][{
                    Key["FeatureFraction"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    759057731][
                    GeneralUtilities`Slice[
                    Key["FeatureFraction"]]], "Mouse"], 
                    ImageSize -> {{189., Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    759057731][
                    GeneralUtilities`Slice[
                    Key["FeatureFraction"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 759057731][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    759057731]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    759057731][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    759057731][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 "DistributionSmoothing" -> 1, "FeatureFraction" -> 1], 
                 TypeSystem`Assoc[
                  TypeSystem`Atom[
                   TypeSystem`Enumeration[
                   "DistributionSmoothing", "FeatureFraction"]], 
                  TypeSystem`Atom[Integer], 2], 
                 Association["ID" -> 8031717105548]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Accuracy\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                TemplateBox[{
                 TemplateBox[{"99.`3.", "\"%\"", "percent", "\"Percent\""}, 
                   "QuantityPostfix", SyntaxForm -> Mod],StyleBox[
                   TemplateBox[{"\" \[PlusMinus] \"", 
                    
                    TemplateBox[{
                    "0.707106781186563893`2.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod]}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.9758578643762687577`3.",
                   "\", \"", "1.0041421356237312246`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.9758578643762687577`3., 
                  ", ", 1.0041421356237312246`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.0322138722128250399`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0114440434260295269`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.0093257853607659862`3.",
                   "\", \"", "0.0551019590648840901`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.0093257853607659862`3., 
                  ", ", 0.0551019590648840901`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "288.`",
                RowBox[{
                 "\"\[Micro]s\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"example\""}],
                "microseconds per example",FractionBox[
                "\"Microseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Classifier memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"1.58`","\"MB\"","megabytes","\"Megabytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"8124","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"22.4`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]},
             {
              
              DynamicModuleBox[{
               MachineLearning`file5Automation`PackagePrivate`pos$$ = 1}, 
               DynamicBox[ToBoxes[
                 Show[
                  Part[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.5755120735370465}, {
                    3.912023005428146, -1.8531649604077363`}, {
                    5.521460917862246, -0.5535946032567249}, {
                    7.313220387090301, -3.435358105142619}, {
                    8.77940359789435, -1.0531423954775088`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, -0.7359161600506795}, {
                    2.302585092994046, -3.2530365483486645`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.5755120735370465}}, {{
                    3.912023005428146, -1.8531649604077363`}}, {{
                    5.521460917862246, -0.5535946032567249}}, {{
                    7.313220387090301, -3.435358105142619}}, {{
                    8.77940359789435, -1.0531423954775088`}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.7359161600506795}}, {{
                    2.302585092994046, -3.2530365483486645`}}}]}, {}}}, {}, \
{}, {}, {}}}, {{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.6337448578702686}, {
                    2.302585092994046, -0.5204845508413551}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.912023005428146, -2.0685509101494506`}, {
                    3.912023005428146, -1.6760487745629766`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.521460917862246, -0.5843324828967649}, {
                    5.521460917862246, -0.5237734331745382}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.313220387090301, -3.8742538844215195`}, {
                    7.313220387090301, -3.131370669749975}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.77940359789435, -1.0827738093999923`}, {
                    8.77940359789435, -1.0243637928421891`}}]}}}, {}, {}, {}, \
{}}}}, {DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.061206759062522, -3.644518359311757}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-3.595456077469613, -0.5535946032567249}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, -3.644518359311757}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-3.595456077469613, -0.5535946032567249}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.7791075159355966}, {
                    3.912023005428146, 0.962402088772846}, {5.521460917862246,
                     0.68}, {7.313220387090301, 0.99}, {8.77940359789435, 
                    0.8332918404032983}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 0.8250000000000001}, {
                    2.302585092994046, 0.8160000000000001}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.7791075159355966}}, {{
                    3.912023005428146, 0.962402088772846}}, {{
                    5.521460917862246, 0.68}}, {{7.313220387090301, 0.99}}, {{
                    8.77940359789435, 0.8332918404032983}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.8250000000000001}}, {{
                    2.302585092994046, 
                    0.8160000000000001}}}]}, {}}}, {}, {}, {}, {}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, 
                    AxesOrigin -> {2.061206759062522, 0.664842105263158}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {0.68, 1}}, PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, 0.664842105263158}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {0.68, 1}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3666261629602693}, {
                    3.912023005428146, -0.36708208333757775`}, {
                    5.521460917862246, -0.36878059305930033`}, {
                    7.313220387090301, -0.3815886967257939}}]}, 
                    "LogisticRegression"], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.5755120735370465}, {
                    3.912023005428146, -1.8531649604077363`}, {
                    5.521460917862246, -0.5535946032567249}, {
                    7.313220387090301, -3.435358105142619}, {
                    8.77940359789435, -1.0531423954775088`}}]}, 
                    "DecisionTree"], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.36651292058166435`}, {
                    2.302585092994046, -0.36651292058166435`}}]}, 
                    "GradientBoostedTrees"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.061206759062522, -3.658096868538173}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[
                    8124]}, {-3.6058495042848944`, -0.36651292058166435`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, -3.658096868538173}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-3.6058495042848944`, -0.36651292058166435`}}
                    , PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}, 
                   MachineLearning`file5Automation`PackagePrivate`pos$$], 
                  PlotLabel -> Grid[{{
                    Button[
                    
                    MachineLearning`file5Automation`PackagePrivate`\
buttonGraphics[
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]], 
                    MachineLearning`file5Automation`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file5Automation`PackagePrivate`pos$$ - 
                    1, 1], Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file5Automation`PackagePrivate`pos$$], 
                    Button[
                    
                    MachineLearning`file5Automation`PackagePrivate`\
buttonGraphics[
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]], 
                    MachineLearning`file5Automation`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file5Automation`PackagePrivate`pos$$ + 
                    1, 
                    Length[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.5755120735370465}, {
                    3.912023005428146, -1.8531649604077363`}, {
                    5.521460917862246, -0.5535946032567249}, {
                    7.313220387090301, -3.435358105142619}, {
                    8.77940359789435, -1.0531423954775088`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, -0.7359161600506795}, {
                    2.302585092994046, -3.2530365483486645`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.5755120735370465}}, {{
                    3.912023005428146, -1.8531649604077363`}}, {{
                    5.521460917862246, -0.5535946032567249}}, {{
                    7.313220387090301, -3.435358105142619}}, {{
                    8.77940359789435, -1.0531423954775088`}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.7359161600506795}}, {{
                    2.302585092994046, -3.2530365483486645`}}}]}, {}}}, {}, \
{}, {}, {}}}, {{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.6337448578702686}, {
                    2.302585092994046, -0.5204845508413551}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.912023005428146, -2.0685509101494506`}, {
                    3.912023005428146, -1.6760487745629766`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.521460917862246, -0.5843324828967649}, {
                    5.521460917862246, -0.5237734331745382}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.313220387090301, -3.8742538844215195`}, {
                    7.313220387090301, -3.131370669749975}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.77940359789435, -1.0827738093999923`}, {
                    8.77940359789435, -1.0243637928421891`}}]}}}, {}, {}, {}, \
{}}}}, {DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.061206759062522, -3.644518359311757}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-3.595456077469613, -0.5535946032567249}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, -3.644518359311757}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {-3.595456077469613, -0.5535946032567249}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.7791075159355966}, {
                    3.912023005428146, 0.962402088772846}, {5.521460917862246,
                     0.68}, {7.313220387090301, 0.99}, {8.77940359789435, 
                    0.8332918404032983}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 0.8250000000000001}, {
                    2.302585092994046, 0.8160000000000001}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.7791075159355966}}, {{
                    3.912023005428146, 0.962402088772846}}, {{
                    5.521460917862246, 0.68}}, {{7.313220387090301, 0.99}}, {{
                    8.77940359789435, 0.8332918404032983}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.8250000000000001}}, {{
                    2.302585092994046, 
                    0.8160000000000001}}}]}, {}}}, {}, {}, {}, {}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, 
                    AxesOrigin -> {2.061206759062522, 0.664842105263158}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {0.68, 1}}, PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, 0.664842105263158}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[8124]}, {0.68, 1}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3666261629602693}, {
                    3.912023005428146, -0.36708208333757775`}, {
                    5.521460917862246, -0.36878059305930033`}, {
                    7.313220387090301, -0.3815886967257939}}]}, 
                    "LogisticRegression"], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.5755120735370465}, {
                    3.912023005428146, -1.8531649604077363`}, {
                    5.521460917862246, -0.5535946032567249}, {
                    7.313220387090301, -3.435358105142619}, {
                    8.77940359789435, -1.0531423954775088`}}]}, 
                    "DecisionTree"], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.36651292058166435`}, {
                    2.302585092994046, -0.36651292058166435`}}]}, 
                    "GradientBoostedTrees"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.061206759062522, -3.658096868538173}, 
                    PlotRange -> {{2.165850545449021, 
                    Log[
                    8124]}, {-3.6058495042848944`, -0.36651292058166435`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.061206759062522, -3.658096868538173}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.165850545449021, 
                    Log[
                    8124]}, {-3.6058495042848944`, -0.36651292058166435`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}]], Appearance -> 
                    "Frameless"]}}, Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                ImageSizeCache->{330., {117., 121.}}],
               DynamicModuleValues:>{}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{5, 5}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.7257852288821077`*^9},ExpressionUUID->"44148d35-ace6-4c89-b168-\
d7c0b75311f6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<UCILetter\>\""}], 
      "}"}], ",", " ", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7257854306659274`*^9, 
  3.7257854712642465`*^9}},ExpressionUUID->"b29a0db9-92cb-46d9-9337-\
a0715b7abae8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Classify", "[", 
   RowBox[{"dataset", ",", " ", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Classify", "[", 
   RowBox[{"dataset", ",", " ", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<SimplePanel\>\""}]}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Classify", "[", 
   RowBox[{"dataset", ",", " ", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Print\>\""}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.725785480439727*^9, 
  3.725785590317572*^9}},ExpressionUUID->"48822820-779c-4d55-9960-\
4a37c60d409c"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
  "  |  ","\"  |  \"","\"Time elapsed\"","\"Training example used\"",
   "\"Current best method\"","\"Current accuracy\"","\"Current loss\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785875074856*^9},ExpressionUUID->"d74c3a46-fd85-4d09-9098-\
1b58c4a7e9b0"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"8.6s\"","\"20/20000\"","\"DecisionTree\"",
   "\"0.0400\"","\"3.26\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.72578587563242*^9},ExpressionUUID->"5db62608-521b-47c4-aaaf-06d99b14d2c9"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"9.2s\"","\"20/20000\"",
   "\"GradientBoostedTrees\"","\"0.0211\"","\"3.26\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257858762621784`*^9},ExpressionUUID->"08028b0f-14b9-4a52-aca4-\
d83eca245fcc"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"9.8s\"","\"100/20000\"",
   "\"LogisticRegression\"","\"0.220\"","\"3.09\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257858767961674`*^9},ExpressionUUID->"76f99f3a-3d79-4a62-b4a7-\
39dfc1ef11a8"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"10s\"","\"100/20000\"",
   "\"NearestNeighbors\"","\"0.389\"","\"2.93\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257858773522167`*^9},ExpressionUUID->"d24d7a11-8d4d-460d-abe4-\
485b13e3c667"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"10s\"","\"500/20000\"",
   "\"NearestNeighbors\"","\"0.389\"","\"2.93\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785877964425*^9},ExpressionUUID->"c812c354-f75c-44b5-a32a-\
7b11274113a3"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"15s\"","\"500/20000\"",
   "\"GradientBoostedTrees\"","\"0.530\"","\"1.84\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785882613893*^9},ExpressionUUID->"13c7a9f6-4461-4e97-9fec-\
44248b353786"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"16s\"","\"500/20000\"",
   "\"GradientBoostedTrees\"","\"0.530\"","\"1.84\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785883276741*^9},ExpressionUUID->"fdc08ee7-8c86-4d6b-9cf0-\
8c387f0e7430"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"17s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257858845412693`*^9},ExpressionUUID->"c3857985-e8e6-4c99-b0c7-\
9188089d858b"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"31s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785898210723*^9},ExpressionUUID->"0e9512f9-ce4e-40e8-bc49-\
1ee9c7cc4c65"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"32s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257858991293173`*^9},ExpressionUUID->"d96eac29-8036-4bea-8739-\
f849e86ef592"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"32s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785899847324*^9},ExpressionUUID->"29148152-c826-49cb-b212-\
88d32b7b63b6"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"33s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785900725273*^9},ExpressionUUID->"5eb370e4-410f-42ed-ad10-\
60295c0ff7d6"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"34s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785901392635*^9},ExpressionUUID->"7af87aa3-8321-479a-af3d-\
ffcd22130225"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"35s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859020645094`*^9},ExpressionUUID->"c4c28a05-1cd4-4a5a-bf22-\
e6637c5210c8"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"35s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859026556587`*^9},ExpressionUUID->"42e99ba9-a4a8-4783-a718-\
12d5f40205eb"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"36s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859033350554`*^9},ExpressionUUID->"d4218f22-8e4a-4045-9e1c-\
22bad815cf19"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"37s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785904398023*^9},ExpressionUUID->"23ce1950-2f1d-40dc-b288-\
5eed3495f509"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"37s\"","\"3000/20000\"",
   "\"LogisticRegression\"","\"0.768\"","\"0.835\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859050037265`*^9},ExpressionUUID->"33bf6950-a252-4fda-8780-\
05457f022c1c"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"39s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785906700979*^9},ExpressionUUID->"ba88e474-e05d-4862-8273-\
a904562d4320"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m07s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785934066784*^9},ExpressionUUID->"675e686d-c771-484e-a7e3-\
955b021378ca"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m07s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859346900196`*^9},ExpressionUUID->"90368680-993b-46d1-8927-\
c2ec1e99d08c"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m08s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785935284176*^9},ExpressionUUID->"aacfd430-52f7-4eb7-bd69-\
f4b9f289d8af"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m08s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859358743215`*^9},ExpressionUUID->"957f05af-705c-4a2b-90fd-\
418f4f870ae6"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m09s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785936450933*^9},ExpressionUUID->"688dd855-a331-4376-b091-\
20d6b8bdd5ea"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m09s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859369944506`*^9},ExpressionUUID->"4cd7d02c-3123-4ab4-8f66-\
9eac142ae8c2"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m10s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785937540473*^9},ExpressionUUID->"f0cca1f5-69fa-45c7-951f-\
e9a4f464a2ce"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m11s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785938091014*^9},ExpressionUUID->"5991db21-cfcb-445a-b42e-\
13b152d95937"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m11s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859386701202`*^9},ExpressionUUID->"95e38e85-c0db-4609-b1de-\
d2f8eb53c2d5"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m12s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859392261724`*^9},ExpressionUUID->"991eeb20-23c8-4f2d-b865-\
447647768a31"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m12s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785939787237*^9},ExpressionUUID->"9492bdfd-af02-438d-ad74-\
a4b6d61a763d"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m13s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859403362637`*^9},ExpressionUUID->"053d33b2-6424-4081-9cc8-\
a8a483b7e193"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m13s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785940892316*^9},ExpressionUUID->"483de004-f417-4679-947d-\
fba929dd4843"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m14s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859414338264`*^9},ExpressionUUID->"acb73559-9ef5-4f12-9061-\
04ac6cf6fa25"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m14s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785941959794*^9},ExpressionUUID->"c924c324-6b85-4287-b39b-\
f564673c8529"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m15s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859429761243`*^9},ExpressionUUID->"62887801-0741-4512-ae6e-\
39fcf07163b7"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m21s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785948296961*^9},ExpressionUUID->"36d2292f-dc1a-42fb-8bc3-\
f6cacd8ca9ae"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m21s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859488720646`*^9},ExpressionUUID->"7f329fc6-d78e-43b0-b395-\
264f5912f41f"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m22s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.725785949595583*^9},ExpressionUUID->"23605e6f-0852-4993-ae45-\
a35ae78f7056"],

Cell[BoxData[
 TemplateBox[{
  "    |    ","\"    |    \"","\"1m23s\"","\"16000/20000\"",
   "\"NearestNeighbors\"","\"0.935\"","\"0.256\""},
  "RowWithSeparators"]], "Print",
 CellChangeTimes->{
  3.7257859503953156`*^9},ExpressionUUID->"a7d26c20-d94c-4257-a04e-\
9d14bce996fb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4"}], "}"}], " ", 
    "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<yes\>\"", ",", " ", "\"\<yes\>\"", ",", " ", "\"\<no\>\"", ",", 
      " ", "\"\<no\>\""}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"c1", " ", "=", " ", 
  RowBox[{
  "Classify", "[", "trainingset", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7257860387334814`*^9, 
  3.725786083059493*^9}},ExpressionUUID->"504e566f-3637-46cc-92bb-\
38904c5c401b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"no\"", "\"yes\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"no\"", "\"yes\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NaiveBayes\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.72578610541539*^9},ExpressionUUID->"18098499-1257-449d-886a-a8f517d2813c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1", "[", 
  RowBox[{"2.55", ",", " ", "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257861089525566`*^9, 
  3.7257861205779667`*^9}},ExpressionUUID->"7b4aa3c4-cd64-4a72-b181-\
da2c241acc46"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"no\"\>", "\[Rule]", "0.9545454545454545`"}], ",", 
   RowBox[{"\<\"yes\"\>", "\[Rule]", "0.04545454545454544`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7257861215255995`*^9},ExpressionUUID->"cd91f6a0-7488-4056-bcf9-\
43f1178d1cd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c1", ",", " ", "UtilityFunction"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257861526234317`*^9, 
  3.725786166787507*^9}},ExpressionUUID->"ecf214f7-3364-44e9-9c06-\
f2fb83c5ac37"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"no\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"no\"\>", "\[Rule]", "1.`"}], ",", 
      RowBox[{"\<\"yes\"\>", "\[Rule]", "0.`"}], ",", 
      RowBox[{"Indeterminate", "\[Rule]", "0.`"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"yes\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"no\"\>", "\[Rule]", "0.`"}], ",", 
      RowBox[{"\<\"yes\"\>", "\[Rule]", "1.`"}], ",", 
      RowBox[{"Indeterminate", "\[Rule]", "0.`"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7257861689970455`*^9},ExpressionUUID->"8b7090ba-c1e0-472e-9fd5-\
375b9f9a2af6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"UtilityFunction", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<no\>\"", "\[Rule]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<no\>\"", "\[Rule]", "1"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<yes\>\"", "\[Rule]", " ", "0"}]}], "|>"}]}], ",", " ", 
       RowBox[{"\"\<yes\>\"", "\[Rule]", " ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<no\>\"", "->", 
           RowBox[{"-", "10"}]}], ",", " ", 
          RowBox[{"\"\<yes\>\"", "->", "1"}]}], "|>"}]}]}], "|>"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257862125047626`*^9, 3.725786239794462*^9}, {
  3.7257863083073196`*^9, 
  3.7257864450729065`*^9}},ExpressionUUID->"ed1c8d2d-3dd9-4b5c-9100-\
73684e8f330e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"no\"", "\"yes\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"no\"", "\"yes\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NaiveBayes\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725786448648384*^9},ExpressionUUID->"bcd9070d-7675-4f79-8af2-\
44a79b91a0e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", "[", 
  RowBox[{"2.55", ",", " ", "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.725786470380046*^9, 
  3.725786478739732*^9}},ExpressionUUID->"82ef8342-8263-4e06-ad01-\
18be2f70c5a5"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"no\"\>", "\[Rule]", "0.9545454545454545`"}], ",", 
   RowBox[{"\<\"yes\"\>", "\[Rule]", "0.04545454545454544`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.72578647953896*^9},ExpressionUUID->"03dce10e-567f-49f6-b52a-e5e4bf9c3626"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c2", "[", "2.55", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.725786539111311*^9, 
  3.725786542908821*^9}},ExpressionUUID->"f2075cc4-b21f-4c0a-97c3-\
fe83623f9b0d"],

Cell[BoxData["\<\"no\"\>"], "Output",
 CellChangeTimes->{
  3.7257865441813135`*^9},ExpressionUUID->"33603a22-2d6d-4fd7-833a-\
41d8405d1986"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"UtilityFunction", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<no\>\"", "\[Rule]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<no\>\"", "\[Rule]", "1"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<yes\>\"", "\[Rule]", " ", "0"}]}], "|>"}]}], ",", " ", 
       RowBox[{"\"\<yes\>\"", "\[Rule]", " ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<no\>\"", "->", 
           RowBox[{"-", "100"}]}], ",", " ", 
          RowBox[{"\"\<yes\>\"", "->", "1"}]}], "|>"}]}]}], "|>"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.725786563829322*^9},ExpressionUUID->"a4a39744-fc57-43a8-b56b-\
41f7b91895b5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"no\"", "\"yes\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"no\"", "\"yes\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NaiveBayes\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725786566819548*^9},ExpressionUUID->"292ba669-8060-4fe3-a5fb-\
a749793f6e9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c2", "[", "2.55", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.72578657447546*^9, 
  3.725786576971792*^9}},ExpressionUUID->"07b7520a-33e6-41d3-995c-\
795b1649e8b1"],

Cell[BoxData["\<\"yes\"\>"], "Output",
 CellChangeTimes->{
  3.725786578118148*^9},ExpressionUUID->"dda0493b-c847-4759-8edd-\
374ef661a52a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", "[", 
  RowBox[{"2.55", ",", 
   RowBox[{"UtilityFunction", "\[Rule]", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<no\>\"", "\[Rule]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<no\>\"", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<yes\>\"", "\[Rule]", "0"}]}], "|>"}]}], ",", 
      RowBox[{"\"\<yes\>\"", "\[Rule]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<no\>\"", "\[Rule]", "0"}], ",", 
         RowBox[{"\"\<yes\>\"", "\[Rule]", "1"}]}], "|>"}]}]}], "|>"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257866321448135`*^9, 
  3.725786632193515*^9}},ExpressionUUID->"d4102107-788d-49e1-b489-\
04f4fe4bcb14"],

Cell[BoxData["\<\"no\"\>"], "Output",
 CellChangeTimes->{
  3.7257866338811483`*^9},ExpressionUUID->"53ab05c1-624b-4bd0-8cb0-\
478d7b964e13"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<FisherIris\>\""}], 
      "}"}], ",", " ", "\"\<TrainingData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7257875240231895`*^9, 
  3.7257875501319933`*^9}},ExpressionUUID->"1b7ba075-9ccd-4728-b490-\
489275529f69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"traingingset", ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", " ", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7257875580461383`*^9, 
  3.7257875915995536`*^9}},ExpressionUUID->"3944cd18-64d5-4524-a6a0-\
3a7844f86e44"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"a\"", "\"b\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["7", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725787593476677*^9},ExpressionUUID->"d96aade3-8fad-4d40-bea5-\
02bdab0a989f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
     ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"c1", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.72578769894452*^9, 
  3.725787704439474*^9}},ExpressionUUID->"60b957db-9099-44e6-b60c-\
e6741bbbabe9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725787711472151*^9},ExpressionUUID->"25fbe89a-5025-4eab-b537-\
cbecabfb5855"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c1", ",", " ", "\"\<L2Regularization\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257877259001017`*^9, 
  3.7257877433697715`*^9}},ExpressionUUID->"d971a203-9322-4940-88f2-\
5d5b8c0ec87d"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.7257877439478836`*^9},ExpressionUUID->"bbf7c90c-521a-4797-a4af-\
4829d920b3c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"validationset", " ", "=", " ", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<FisherIris\>\""}], 
       "}"}], ",", " ", "\"\<TestData\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", "10"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"c2", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"ValidationSet", "\[Rule]", "validationset"}], ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7257877806656003`*^9, 3.7257878181945157`*^9}, {
  3.725787854712637*^9, 
  3.72578788331909*^9}},ExpressionUUID->"07d10a16-c6af-4ef6-875e-\
d0df799a6dc3"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725787892511364*^9},ExpressionUUID->"1ff83ce5-b8e4-4fd8-87aa-\
2839a2461086"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c2", ",", " ", "\"\<L2Regularization\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7257878957428102`*^9, 
  3.7257879231276236`*^9}},ExpressionUUID->"f441b272-928a-4edf-af5d-\
badc3b496cd1"],

Cell[BoxData["0.01`"], "Output",
 CellChangeTimes->{
  3.72578792534696*^9},ExpressionUUID->"7f91b2f1-acf5-40d6-b9a0-6ed338b71d93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"digit", " ", "=", " ", 
  RowBox[{"Classify", "[", "\n", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT//6ln1Frx9z8cdDIBQcoPGPenF3dTOTtT3Fso/6FQ2P//HexM+TAF
U1+BNLGyTvmPDAwYpVH46xiF7qEIMDLNR+VLfEPmBqHq38/GMB2Je5yHKRiJ
+8mPSfUigvsxkEkPybDLpkwePxDcmwZMzreQ9AYySZ+AMN+tWrXqVDETU2aZ
qqqqiqqqPJOv80RuJghgdMxve/7z++84Jvnq6sdfvnz5BdEEANRq+sc=
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cCv69cyfZgknmGEDnbZsPMzMTMzHwVKvD3fAMXkMvMJCxh9Aoq9hKk
hMNp1upXCI1pzMwO/TeRDf8/g4lp5X9U0C/EbPQFVeggF7P8e1ShKwJM1ldR
hf6nMzMlTJ069RKS0EsmJkYmIGBoQhIDOk0+XJ6ZSeIMXOzvq1f7Pv7/+IqJ
ufE/OtDDIoZF3UEGpn0w9m0o7cYk/xHKrOcTF8/f+/PveXGmBJiyj+22QLc4
+TMzq19AGPT7qioodJmnwkUAW303kA==
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 45, 1, 66, 255, 255, 255, 255, 
         255, 255, 255}, {255, 255, 255, 255, 112, 3, 2, 127, 255, 255, 255, 
         255, 255, 255, 255}, {255, 255, 255, 111, 4, 2, 70, 252, 255, 255, 
         154, 14, 14, 14, 100}, {255, 255, 214, 20, 2, 34, 148, 255, 255, 152,
          7, 2, 2, 67, 184}, {255, 255, 39, 2, 35, 214, 255, 255, 151, 9, 2, 
         154, 230, 245, 255}, {255, 217, 18, 2, 133, 255, 255, 255, 66, 2, 18,
          201, 255, 255, 255}, {255, 107, 2, 80, 249, 255, 255, 155, 11, 2, 
         158, 255, 255, 255, 255}, {220, 14, 2, 93, 255, 190, 139, 12, 2, 29, 
         217, 255, 255, 255, 255}, {143, 2, 2, 67, 72, 11, 2, 2, 2, 2, 37, 
         188, 255, 255, 255}, {143, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 40, 151, 
         255, 255}, {143, 2, 2, 2, 52, 61, 14, 2, 46, 49, 2, 2, 27, 232, 
         255}, {224, 184, 117, 184, 244, 255, 53, 2, 190, 240, 160, 19, 2, 
         131, 255}, {255, 255, 255, 255, 255, 255, 76, 2, 190, 255, 255, 85, 
         2, 28, 255}, {255, 255, 255, 255, 255, 255, 183, 2, 190, 255, 255, 
         172, 2, 10, 185}, {255, 255, 255, 255, 255, 255, 183, 2, 174, 255, 
         255, 220, 13, 2, 151}, {255, 255, 255, 255, 255, 255, 227, 37, 24, 
         130, 255, 255, 92, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 141, 
         7, 23, 195, 245, 85, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 
         255, 73, 2, 2, 58, 2, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 
         255, 228, 111, 2, 2, 2, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 
         255, 255, 229, 109, 2, 2, 83, 204}}, {{0, 20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfyg4NdWR1xjG+X9muSUbAyMjZ+9rCH8+F6Nc+qzjDeGM5SDu39WM
rPmfQazfGQKngFQXI+NMmF7FoP//bzEy7oUbttX8//9iRlE4//82yVePhVkm
IwS+yPaeYBT5jwTcLU8whiILCKudYFyBLCCkeoKxFIm/m9nyAnsSksA2xob/
qsiGrmdc/l+V9ylCIEbzy/+djIpw/hGFwP///2Qwpj+H8NeogT33SJJRrPj4
rVvLJnPyHQFLvO6TYmEEAfNDcM1bYmwYzTrfg5gAPlYFyw==
         "], {{0, 20}, {17, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{17, 20},
       PlotRange->{{0, 17}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfzC4nZAgKMvGnDAHwj3pqSBbWbf/bJWoyHUQv1k49xZE5o2JPJA8
yjjh338o2MQKJL5t+QLj/7/B+h8VTFJD5e/kPYfCPy0fhcI/qBv0A5k/R2zp
LyTutwrJpcjSzzSVjiFxvy7gTXyExL8VJHLqDxJ/naXKBSTux3YBj5dI/H/h
zF0orjnB2ABlPX369P+X3We3cbLLQoCQkJCsBCPH/4vJxm6JQJBe3wok2w8C
AJoHGZQ=
         "], {{0, 20}, {17, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{17, 20},
       PlotRange->{{0, 17}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 252, 118, 33, 0, 1, 1, 1, 1, 1, 24, 155, 255}, {
         255, 165, 37, 22, 46, 60, 64, 137, 152, 120, 64, 25, 23, 212}, {174, 
         11, 85, 209, 247, 253, 255, 255, 255, 255, 255, 178, 1, 130}, {55, 
         80, 255, 255, 255, 255, 255, 255, 255, 255, 255, 175, 1, 206}, {178, 
         244, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 1, 220}, {255, 
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 1, 220}, {255, 
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 38, 244}, {255,
          255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 42, 55, 255}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 208, 5, 55, 255}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 174, 1, 133, 
         255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 174, 1, 144,
          255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 168, 1, 
         213, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 
         233, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 
         233, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 252, 34, 1, 
         233, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 78, 1, 
         233, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 251, 13, 36,
          244, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 209, 1, 68,
          255, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 161, 1, 
         135, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 161, 1,
          220, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 252, 150, 123, 123, 123, 65, 0, 2, 2, 25, 123, 
         156, 252}, {255, 255, 126, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 150}, {
         255, 255, 74, 3, 3, 3, 3, 20, 38, 39, 39, 39, 39, 39, 214}, {255, 
         255, 74, 3, 3, 3, 99, 211, 255, 255, 255, 255, 255, 255, 255}, {255, 
         220, 23, 3, 23, 63, 237, 255, 255, 255, 255, 255, 255, 255, 255}, {
         255, 206, 3, 3, 88, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}, {255, 166, 3, 3, 88, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 255}, {255, 86, 3, 3, 191, 255, 255, 255, 255, 255, 255, 255, 
         255, 255, 255}, {239, 50, 3, 3, 207, 255, 255, 255, 255, 255, 255, 
         255, 255, 255, 255}, {218, 3, 3, 3, 52, 134, 134, 134, 133, 145, 255,
          255, 255, 255, 255}, {255, 91, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 88, 
         223, 255}, {255, 211, 27, 9, 3, 3, 3, 3, 2, 3, 3, 3, 3, 184, 255}, {
         255, 255, 255, 181, 159, 159, 159, 159, 153, 39, 34, 3, 3, 30, 
         225}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 243, 59, 3, 
         3, 207}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 200, 26, 
         3, 3, 207}, {255, 255, 255, 164, 103, 244, 255, 255, 255, 248, 71, 3,
          3, 3, 207}, {255, 255, 255, 62, 3, 179, 255, 214, 164, 46, 3, 3, 3, 
         102, 246}, {255, 255, 255, 62, 3, 16, 38, 21, 2, 3, 3, 3, 26, 218, 
         255}, {255, 255, 255, 62, 3, 3, 3, 3, 2, 3, 3, 99, 237, 255, 255}, {
         255, 255, 255, 246, 106, 3, 3, 3, 2, 14, 198, 251, 255, 255, 
         255}}, {{0, 20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 219, 87, 139, 253}, {255, 255, 255, 
         255, 119, 1, 1, 212}, {255, 255, 255, 255, 62, 1, 46, 236}, {255, 
         255, 255, 218, 26, 1, 94, 255}, {255, 255, 255, 177, 1, 1, 206, 
         255}, {255, 255, 255, 68, 1, 1, 206, 255}, {255, 255, 255, 68, 1, 1, 
         206, 255}, {255, 255, 255, 68, 1, 15, 215, 255}, {255, 255, 255, 68, 
         1, 103, 255, 255}, {255, 255, 213, 18, 1, 138, 255, 255}, {255, 255, 
         165, 1, 1, 200, 255, 255}, {255, 255, 74, 1, 1, 200, 255, 255}, {255,
          239, 51, 1, 56, 244, 255, 255}, {255, 205, 1, 1, 69, 255, 255, 
         255}, {255, 205, 1, 1, 69, 255, 255, 255}, {255, 155, 1, 1, 118, 255,
          255, 255}, {255, 80, 0, 0, 193, 255, 255, 255}, {235, 45, 1, 1, 193,
          255, 255, 255}, {211, 1, 1, 60, 252, 255, 255, 255}, {232, 40, 89, 
         218, 255, 255, 255, 255}}, {{0, 20}, {8, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{8, 20},
       PlotRange->{{0, 8}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/f5a2/vwfCXwQYmz9fuKEsYhjXl77b6DAUUYuRSYmRnERIJH98//f
bkY2xfz8ky+enDypzzTlfzYT40yY3qlMDf83eO2FcY8wqF5EMnkZL2M9Encp
F3/VHzjvcyqX4CGE5F5pJttrcN6XfmmGyk9w7g45Jibp3MVQ3kVVViZWdT4m
9gsQ/iqRzDln/2/jYDqJZNk9oHnvEdyb0gzxEPOuTTnRPiVPnin+I0SmHuhL
JibWdphty8B8J4RTNsTGaMYijAIAQDnsvw==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 229, 134, 121, 2, 2, 0, 58, 242, 255, 255, 255, 
         255}, {255, 226, 47, 3, 3, 3, 3, 2, 3, 14, 218, 255, 255, 255}, {133,
          22, 3, 3, 3, 3, 3, 96, 57, 3, 67, 235, 255, 255}, {42, 3, 3, 3, 68, 
         216, 145, 255, 182, 54, 3, 69, 234, 255}, {63, 52, 3, 3, 162, 255, 
         255, 255, 255, 186, 13, 3, 189, 255}, {220, 188, 3, 33, 231, 255, 
         255, 255, 255, 255, 70, 3, 91, 255}, {255, 188, 3, 43, 255, 255, 255,
          255, 255, 255, 187, 11, 48, 242}, {255, 174, 3, 43, 255, 255, 255, 
         255, 255, 255, 255, 55, 3, 176}, {255, 55, 3, 43, 255, 255, 255, 255,
          255, 255, 255, 55, 3, 176}, {255, 55, 3, 43, 255, 255, 255, 255, 
         255, 255, 255, 55, 3, 176}, {255, 54, 2, 42, 255, 255, 255, 255, 255,
          255, 255, 54, 2, 175}, {255, 55, 3, 43, 255, 255, 255, 255, 255, 
         255, 255, 55, 3, 120}, {255, 55, 3, 43, 255, 255, 255, 255, 255, 255,
          255, 55, 3, 162}, {255, 98, 3, 9, 134, 255, 255, 255, 255, 255, 229,
          39, 3, 176}, {255, 188, 3, 3, 30, 255, 255, 255, 255, 255, 139, 3, 
         3, 176}, {255, 237, 52, 3, 24, 232, 255, 255, 255, 235, 34, 3, 14, 
         192}, {255, 255, 90, 3, 3, 128, 255, 255, 238, 136, 3, 3, 147, 
         255}, {255, 255, 235, 67, 3, 8, 95, 164, 56, 3, 3, 60, 231, 255}, {
         255, 255, 255, 217, 15, 3, 3, 2, 3, 3, 57, 233, 255, 255}, {255, 255,
          255, 255, 242, 59, 3, 2, 60, 136, 236, 255, 255, 255}}, {{0, 20}, {
         14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 246, 172, 89, 50, 1, 1, 0, 1, 76, 199, 255, 255, 
         255}, {178, 33, 1, 2, 41, 62, 127, 135, 75, 5, 71, 248, 255, 255}, {
         199, 135, 240, 240, 250, 255, 255, 255, 255, 130, 5, 227, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 255, 226, 27, 60, 255, 255,
          255}, {255, 255, 255, 255, 255, 255, 188, 97, 24, 2, 100, 255, 255, 
         255}, {255, 255, 255, 255, 204, 19, 1, 0, 8, 29, 1, 67, 246, 255}, {
         255, 255, 255, 165, 17, 2, 2, 35, 186, 252, 162, 27, 123, 255}, {255,
          255, 255, 50, 3, 30, 157, 246, 255, 255, 255, 131, 12, 226}, {255, 
         255, 255, 166, 173, 255, 255, 255, 255, 255, 255, 215, 1, 153}, {255,
          255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 45, 92}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 75, 
         37}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 76,
          2}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 76,
          2}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 76,
          2}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 54,
          77}, {129, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 149, 0,
          188}, {23, 239, 255, 255, 255, 255, 255, 255, 255, 255, 178, 20, 83,
          247}, {89, 37, 217, 247, 255, 255, 255, 244, 200, 113, 10, 55, 228, 
         255}, {231, 42, 1, 33, 61, 61, 61, 19, 2, 18, 95, 230, 255, 255}, {
         255, 246, 172, 112, 55, 77, 55, 85, 151, 231, 255, 255, 255, 
         255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 232, 127, 0, 2, 136, 255, 255, 255, 255, 
         255, 255}, {255, 255, 242, 46, 3, 2, 3, 68, 223, 255, 255, 255, 255, 
         255}, {255, 195, 46, 3, 3, 2, 3, 3, 116, 255, 255, 255, 255, 255}, {
         255, 14, 3, 3, 3, 115, 40, 3, 15, 255, 255, 255, 255, 255}, {141, 0, 
         2, 11, 180, 251, 76, 11, 68, 255, 255, 255, 255, 255}, {142, 2, 3, 
         162, 255, 226, 116, 149, 217, 255, 217, 86, 161, 255}, {55, 2, 85, 
         242, 217, 173, 236, 255, 179, 157, 46, 3, 78, 255}, {30, 2, 46, 55, 
         18, 17, 117, 30, 6, 2, 3, 3, 3, 204}, {92, 1, 2, 2, 2, 1, 2, 2, 2, 1,
          2, 2, 14, 255}, {217, 109, 21, 3, 28, 52, 3, 47, 84, 2, 3, 3, 140, 
         255}, {255, 255, 217, 199, 224, 248, 199, 242, 142, 2, 3, 3, 227, 
         255}, {255, 255, 255, 255, 255, 255, 255, 255, 92, 2, 3, 128, 252, 
         255}, {255, 255, 255, 255, 255, 255, 255, 195, 14, 1, 8, 205, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 2, 84, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 24, 236, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 30, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 57, 2, 141, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 217, 21, 3, 142, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 242, 46, 3, 142, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 192, 255, 255, 255, 
         255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 246, 129, 5, 105, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 112, 2, 2, 134, 255, 
         255}, {255, 255, 255, 255, 255, 255, 227, 15, 2, 64, 240, 255, 
         255}, {255, 255, 255, 255, 255, 255, 153, 2, 2, 134, 255, 255, 
         255}, {255, 255, 255, 255, 255, 182, 1, 2, 2, 158, 255, 255, 255}, {
         255, 255, 255, 255, 255, 106, 1, 2, 119, 252, 255, 255, 255}, {255, 
         255, 255, 255, 178, 4, 1, 5, 213, 255, 255, 255, 255}, {255, 255, 
         255, 247, 56, 2, 6, 148, 255, 255, 255, 255, 255}, {255, 255, 251, 
         99, 2, 2, 34, 255, 255, 255, 255, 255, 255}, {255, 255, 195, 2, 2, 2,
          178, 255, 255, 255, 255, 255, 255}, {255, 204, 10, 1, 1, 112, 250, 
         192, 111, 111, 135, 247, 255}, {255, 137, 2, 2, 2, 189, 116, 2, 2, 2,
          2, 100, 249}, {209, 11, 2, 2, 35, 53, 1, 2, 2, 2, 2, 2, 233}, {94, 
         2, 2, 2, 2, 2, 0, 2, 64, 65, 2, 2, 233}, {89, 2, 2, 2, 2, 2, 46, 167,
          240, 98, 2, 2, 233}, {59, 2, 2, 2, 2, 40, 231, 255, 220, 8, 2, 33, 
         241}, {2, 2, 2, 2, 39, 229, 248, 214, 33, 2, 4, 145, 255}, {17, 2, 2,
          2, 32, 100, 44, 2, 2, 5, 139, 255, 255}, {89, 2, 2, 2, 2, 2, 1, 2, 
         2, 139, 255, 255, 255}, {233, 135, 11, 2, 2, 2, 15, 112, 203, 253, 
         255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/weD122WjPY7/6OAuUxMTIwOX5BEntlxgcSYchFCT62YmLgi0xmZEhBi
XUxMShf+P0YWm8vD5Hb8/58mRqYauJg0E9Pe///vMDEKv4SLVbExrXzxJ5GJ
EcmK/0uLOOQSmZjYd6M4b/81oFsqUZ38P4CRkRFNyJeNickTVWgCB1Ark5T0
5IWvYUK7QD4D+Y2JSVFzIkSVGhNcDOhJMzOzp14gjTZ79+7ds9fVgpeJicOi
vhAowtP7DGrMgfXrd/z/zwBUPh/NGRxMfIvQhP4fa/+ELvQfADqYF6c=
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 244, 163, 41, 2, 173, 
         255, 255}, {255, 255, 255, 255, 255, 255, 173, 82, 3, 2, 3, 12, 215, 
         255}, {255, 255, 255, 255, 234, 123, 2, 1, 2, 1, 2, 1, 104, 255}, {
         255, 255, 255, 234, 52, 2, 3, 2, 125, 104, 23, 2, 104, 255}, {255, 
         255, 234, 123, 2, 1, 42, 214, 255, 224, 22, 1, 164, 255}, {255, 255, 
         153, 2, 3, 83, 245, 255, 255, 204, 3, 22, 225, 255}, {255, 255, 52, 
         1, 22, 255, 255, 255, 255, 255, 214, 21, 103, 173}, {255, 255, 52, 2,
          63, 255, 255, 255, 255, 234, 72, 2, 3, 52}, {255, 255, 72, 1, 2, 
         163, 224, 183, 103, 1, 2, 31, 133, 173}, {255, 255, 153, 2, 3, 2, 23,
          2, 3, 22, 104, 235, 255, 255}, {255, 255, 255, 41, 2, 1, 2, 1, 83, 
         214, 255, 255, 255, 255}, {255, 255, 173, 2, 3, 2, 3, 42, 245, 255, 
         255, 255, 255, 255}, {255, 204, 22, 1, 2, 1, 2, 1, 184, 255, 255, 
         255, 255, 255}, {255, 22, 3, 2, 125, 124, 3, 2, 104, 255, 255, 255, 
         255, 255}, {153, 1, 2, 72, 255, 255, 52, 1, 2, 234, 255, 255, 255, 
         255}, {113, 2, 3, 72, 255, 255, 52, 2, 3, 153, 255, 255, 255, 255}, {
         113, 0, 2, 92, 255, 203, 22, 1, 2, 255, 255, 255, 255, 255}, {235, 2,
          3, 12, 52, 22, 3, 2, 84, 255, 255, 255, 255, 255}, {255, 173, 32, 1,
          2, 1, 2, 52, 194, 255, 255, 255, 255, 255}, {255, 255, 235, 104, 23,
          2, 125, 235, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0,
          255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU////v7sphIEhc9F/JBDGBAaqD1GFtAr9mZha4UKnWZl073/+/9OQqRgu
tolF9xmQamVn2ofQ++AtiNRjQhYDgy4OJsuvqEKbOZgkDqApq2diykcT8udk
SviMKvRMlEnsDpoySyamIjShjexMTmg635hjKqtkYgpCU/afnYnp2X9MsSuv
geDX/1+vX9/KzMzM+QoSA4Pwgkgoq+V/IBMCsHFwhHV1Hfv/v7OlpQWkJKWl
5RrEOABHySpQ
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfxh4sz/TkJHB/SVc4JoKExh0wQTexgB5bNJMTHwfoSIFQAH5yRuA
5CIw/1MsKxNT+I3/N/hgIvZMTALFf4EMaajIDqCKXLAUVOStDBOT939kkW6g
odfBAn+lmLg+/P9/mpOJaTlEyWwmJkUgFcnEZP4WLHBKl4mp5P//+cxMTPch
SmyYmHiBzGImJsvvYIE8VibODWAJ1q1ggcmsTNztQPoRB5MMiP++A6i7AMRa
yAQWOZDBxMQZ/R0ucriCn4lJYwPEfKAIqyob0M9G76DBcIcdHFBS1W/ggTdT
lokpdu0TOP8/ADHi5B0=
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyRfa8rd/48EbjExHUbjb0Ljz0bj56LxveGc4x+R+ceCeTUeAfmVEO59
XiYmprW5cPuWMTGZMSUnwfifTZhsNjMlJzIyQvgPGBm3WDLehsvnMcnNYDL+
gMQXkWVa+B+Jz8Rk/B6FL7D+P4i/AMT97c/ENAtIH4a4b60eUPl2iPt52uca
MDNahjJ1gNQ1MoGA2dqvr6LYTwAF/syJ0Kp++RPE+vLn/38AlgPa0g==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfzg4xOD68T8S2CTJxLQdib9CholJ+B6C/1uaiYkpD8H/kcjExMP0
AiGwiIlJ7vzGX3D+Rx4m1hn//39YYnQRIjCRianq/5c57ExMks9B/P1sTKbv
/9QwgUALkP/Tnonv3v82MJ/JBKJh0v81PExMfOvsQAIfRZgE/77SZuLw//pJ
AqQllokp4b8zE5P//y9eTKbf/v93YWK6dYSFyezjfVemyC///z8RYWKaagF0
mB0T98zvQCPfKEGMZxKrewx2w48F7GC+RS/U1X//rwwDCjUe+YEUGCdBSlYh
CXwNYHLa8w/CBgByed3X
         "], {{0, 20}, {17, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{17, 20},
       PlotRange->{{0, 17}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 157, 22, 154}, {255, 255, 255, 255, 1,
          2, 39}, {255, 255, 255, 223, 0, 67, 205}, {255, 255, 221, 36, 1, 
         163, 255}, {255, 255, 162, 2, 1, 163, 255}, {255, 255, 151, 1, 23, 
         255, 255}, {255, 255, 47, 2, 98, 255, 255}, {255, 255, 47, 2, 139, 
         255, 255}, {255, 255, 47, 2, 234, 255, 255}, {255, 191, 6, 2, 255, 
         255, 255}, {255, 69, 1, 1, 255, 255, 255}, {255, 70, 2, 76, 255, 255,
          255}, {242, 51, 2, 118, 255, 255, 255}, {208, 2, 2, 212, 255, 255, 
         255}, {103, 2, 2, 232, 255, 255, 255}, {92, 1, 94, 255, 255, 255, 
         255}, {93, 2, 94, 255, 255, 255, 255}, {93, 2, 94, 255, 255, 255, 
         255}, {187, 2, 94, 255, 255, 255, 255}, {229, 33, 146, 255, 255, 255,
          255}}, {{0, 20}, {7, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{7, 20},
       PlotRange->{{0, 7}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{38, 78, 255, 255, 255, 255, 255, 255}, {39, 2, 143, 255, 
         255, 255, 255, 255}, {39, 1, 41, 229, 255, 255, 255, 255}, {39, 1, 1,
          142, 255, 255, 255, 255}, {189, 18, 1, 41, 230, 255, 255, 255}, {
         255, 159, 1, 1, 190, 255, 255, 255}, {255, 176, 1, 1, 146, 255, 255, 
         255}, {255, 176, 1, 1, 60, 255, 255, 255}, {255, 198, 15, 1, 60, 255,
          255, 255}, {255, 255, 52, 0, 14, 200, 255, 255}, {255, 255, 149, 1, 
         1, 153, 255, 255}, {255, 255, 197, 12, 1, 53, 255, 255}, {255, 255, 
         255, 58, 1, 53, 255, 255}, {255, 255, 255, 58, 1, 18, 203, 255}, {
         255, 255, 255, 58, 1, 1, 160, 255}, {255, 255, 255, 72, 1, 1, 18, 
         202}, {255, 255, 255, 228, 39, 1, 0, 160}, {255, 255, 255, 255, 72, 
         1, 1, 40}, {255, 255, 255, 255, 195, 1, 0, 43}, {255, 255, 255, 255, 
         195, 1, 92, 214}}, {{0, 20}, {8, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{8, 20},
       PlotRange->{{0, 8}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 223, 119, 34, 1, 52, 236}, {
         255, 255, 233, 141, 221, 179, 31, 2, 1, 2, 2, 103}, {255, 255, 64, 2,
          14, 23, 2, 53, 175, 96, 2, 95}, {255, 238, 31, 2, 1, 2, 53, 236, 
         255, 117, 2, 95}, {255, 149, 1, 1, 0, 131, 255, 255, 210, 10, 8, 
         205}, {242, 29, 2, 2, 131, 253, 255, 255, 185, 2, 25, 255}, {102, 2, 
         4, 127, 255, 255, 255, 255, 143, 2, 34, 255}, {1, 2, 127, 255, 255, 
         255, 255, 255, 26, 2, 151, 255}, {104, 121, 238, 255, 255, 255, 255, 
         162, 1, 14, 221, 255}, {255, 255, 255, 255, 255, 255, 255, 113, 1, 
         49, 255, 255}, {255, 255, 255, 255, 255, 255, 252, 64, 1, 124, 255, 
         255}, {255, 255, 255, 255, 255, 255, 198, 2, 1, 207, 255, 255}, {255,
          255, 255, 255, 255, 255, 139, 1, 45, 246, 255, 255}, {255, 255, 255,
          255, 255, 255, 123, 2, 88, 255, 255, 255}, {255, 255, 255, 255, 255,
          250, 43, 2, 162, 255, 255, 255}, {255, 255, 255, 255, 255, 208, 2, 
         36, 230, 255, 255, 255}, {255, 255, 255, 255, 255, 149, 1, 94, 255, 
         255, 255, 255}, {255, 255, 255, 255, 255, 117, 2, 95, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 117, 2, 95, 255, 255, 255, 255}, {
         255, 255, 255, 255, 255, 166, 27, 186, 255, 255, 255, 255}}, {{0, 
         20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/4eC348e1RszMTEd+A8HZ+qZmZmZgLgPyFkGEnkTzAnk+009flyi782q
r5+AQp9smZn5eh7/ATIDNtsyPwYpK2LibjoDMeOTMZPEM7AYs8sPiNAbWybN
N/8hYsz7wIy1Gszc6yCyjzWY+UF6/XmYmbfAXNLOxMTg68vEwMRUD3ddjTXI
LUD3hX5DOPl/Gch9x49/Qog87ZMDij1GUvNpsTqTdCM3E5IY0E3M+i//hzHP
gAtdArqpEGhOGHMJXCyJ2RTsJiSxR0zq78G0OsK8l6LMvseAQJ1Z7CVc71pI
WDKJHURY++NxfXEUc0Y9QtV/ANbjHlo=
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfzB4dnf+/AIzJiaj3v//f+5J9/cXY2ZiBgPlt/+NICyIQFzl5/+8
YJaYhGRJ27mv/4DagQJBy5d//g8DG1iZmS/9RwLpQPWvkAWkgQITbyEJBICM
5Jt6GS7wiRtsi2DCWrjQtgndyspsDExMy5GN2lMizsw57QOy0GERZmbvb8gi
p4WYmZeBGLei9r0EixwXY2bfB6Q/6zKrdAGdfidXlJm5HCSzkIWZWVRcgh9k
PdthkMg8uPeZuU6CBP6sEocKsM2D2vC8vkCFmaew8Pr//wDnH9Oj
         "], {{0, 20}, {17, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{17, 20},
       PlotRange->{{0, 17}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfwj4yLj///98xtr/cFDExLYrVy2QxQQuksPEOO/F2x+20negAt+8
mBg/AWkXJkOoSBUTk8I3IL2WSewRRIk3E9NUEOMkE9MUsMhBJiZxMOOdBUTk
jjwTM0TqfyBTG4g6xMTE/x8mIgYkbysyMYXBRUCKTRkZpWHuCmAAitxRYGKa
AxWYzMZ78P8dDSamiK8QgWfaTLL//y9kYtL/BFUykUkF6AtzJiYLqMB+Xia/
//9fiDExzYIInHNmcnv1/389E5PBKxD/2lwuJlcQi4+JSaq6PS4ujoGJyfn1
f4gIBDDwt78Da+4Ngwh4tv2Emg8AlT70Eg==
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/I4Ek4Rcgam3LPwi/kjEQRDkzroLwdzNqAsnfVoxnIfw73CD+C0bG
31ADxDhv/P+/DInPeO7//yBG67/IfFPGtf+R+K/E2e4i82czZvxH5mswJre2
7vwA4St9eyXOCALyrpO3fPolqvY7h5HRe8eOVH9WJkZxU0bGHmnGfIjevZ2B
CoyM0s9W/oUbt4NR8hmyfyH+QeazHUPlM5bi47/W5z8KAD608rc=
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyB4GMEQ9R8C9n4AEt+KOMX8WCRXnXDT0hBltnv//38XI2PGvTJp
IXZGMDj4/7+5q1///68r6uvnz56rysh/////ZQ+nt0BNeVjEmA2kfrUL10BF
yhkFH/7/n6zFmAYVOMbOqPX//3Vu7m3/IAJ/7RgZZwH1vPsAVfH/j70D453/
yGA3I2PBLyT+7yl8jOafkQSeOjNyH/2LJHBZmZExEcUMA0YrrefIAtlB9/8g
G/p/o8E+kJ8R4EzRtqXVyAKvzRgdl99FFuli9Jh0GcUeO3sUWwD4cB2A
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 175, 2, 
         174}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 85, 1, 
         143}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 69, 1, 
         113}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 1, 10, 
         190}, {255, 255, 255, 255, 255, 255, 255, 255, 239, 40, 1, 138, 
         255}, {255, 255, 255, 255, 255, 255, 255, 253, 79, 1, 32, 195, 
         255}, {255, 255, 255, 255, 255, 255, 255, 193, 1, 1, 142, 255, 
         255}, {255, 255, 255, 255, 255, 255, 242, 33, 1, 5, 253, 255, 255}, {
         255, 255, 255, 255, 255, 255, 106, 1, 1, 109, 255, 255, 255}, {255, 
         255, 255, 255, 255, 172, 4, 1, 73, 221, 255, 255, 255}, {255, 255, 
         255, 255, 198, 9, 6, 75, 224, 255, 255, 255, 255}, {255, 255, 255, 
         218, 3, 1, 90, 255, 255, 255, 255, 255, 255}, {255, 255, 250, 76, 1, 
         24, 235, 255, 255, 251, 218, 251, 255}, {255, 247, 76, 1, 52, 213, 
         255, 255, 249, 49, 1, 23, 212}, {255, 232, 1, 77, 250, 255, 255, 255,
          95, 3, 98, 3, 143}, {255, 181, 9, 248, 255, 255, 245, 85, 5, 137, 
         236, 202, 245}, {255, 66, 6, 226, 255, 196, 40, 1, 1, 104, 151, 255, 
         255}, {225, 11, 5, 138, 113, 4, 1, 1, 1, 73, 255, 255, 255}, {220, 
         40, 1, 1, 5, 5, 12, 14, 27, 237, 255, 255, 255}, {255, 174, 1, 62, 
         204, 206, 245, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {13, 0}}, {
         0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 160, 1, 57, 88, 189, 255, 255, 255}, {
         255, 255, 255, 250, 52, 1, 0, 1, 90, 246, 255, 255}, {255, 255, 255, 
         237, 1, 23, 180, 6, 238, 255, 255, 255}, {255, 255, 255, 140, 3, 184,
          255, 205, 90, 255, 255, 255}, {255, 255, 232, 10, 56, 255, 255, 255,
          42, 217, 255, 255}, {255, 255, 143, 10, 204, 255, 255, 255, 148, 92,
          250, 255}, {255, 239, 30, 19, 255, 255, 255, 255, 221, 13, 220, 
         255}, {255, 183, 1, 92, 255, 255, 255, 255, 255, 33, 184, 255}, {255,
          131, 2, 196, 255, 255, 255, 255, 255, 118, 68, 253}, {255, 72, 28, 
         255, 255, 255, 255, 255, 255, 220, 13, 211}, {226, 15, 54, 255, 255, 
         255, 255, 255, 255, 255, 35, 211}, {211, 1, 116, 255, 255, 255, 255, 
         255, 255, 255, 36, 211}, {211, 1, 116, 255, 255, 255, 255, 255, 255, 
         255, 36, 211}, {211, 1, 116, 255, 255, 255, 255, 255, 255, 244, 29, 
         211}, {211, 1, 145, 255, 255, 255, 255, 255, 255, 141, 9, 219}, {211,
          1, 104, 255, 255, 255, 255, 255, 213, 15, 100, 255}, {246, 45, 28, 
         255, 255, 255, 255, 238, 34, 34, 236, 255}, {255, 198, 8, 196, 255, 
         255, 209, 27, 39, 219, 255, 255}, {255, 245, 76, 6, 71, 71, 1, 34, 
         244, 255, 255, 255}, {255, 255, 237, 83, 1, 62, 116, 252, 255, 255, 
         255, 255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJyNUEEKAjEQC548CvoBf+FxPHpd8QG7WBcvFbqCeJqnzdN0OtuWVgQNtDBJ
mobZDrfusgAwLfXq+sc+hP55XOlw8tN19O588Hc3urAbom2jZ63nVSAEMLgi
GDMKR8AnFQdSbxWVVRNaUJ1vYPxDNUXncj9Mworv3al8U4GThdiMJooxbAyJ
LQiSxRRTxvg0BXPeXNMwrleawm8gkfaJ
         "], {{0, 20}, {19, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{19, 20},
       PlotRange->{{0, 19}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfzj4fXN9rjIjgyaMf67bkQkEos4AOX/TFN20eIE8NuGS+f+AAt+T
mAzdJLh1U2e8hij/m8Sk8+z//TMIA48xsa75jww+uDBloAj838wkcAVdROLy
NzQRJiad2PW/ECLvM8EOs7yLEPr3fl6zIztT4C1U0/ZqMnn8RhVazcR0DFXk
XyRTM5T5GErHwkWsIIqPCjKth4qEsLXcuze7iJcp5h9U5EUI2D1s8ecRZh7P
sxbLu4ywBACzIRxb
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/A8EsRSam3s//4UCOmZmZSVpOb9V5JD4QM0u9gvC56lbLsYEEn0D4
nTBFT2BGHPBnAoINUN6bWfxA/bzLoFx/PZB5yrtR7GNmtg6b/AfVPqapMCUb
ioojmZgYDJ8hXPnzNFDRCQT/UzIzUyqSL7Yhu+f//0YZZmZHhPQZQST3/T8W
Iwi0rgHI2mxlZWllJQo0Wv8EyDIrqFPk5uwDq+wA84X7YToB5WvL+w==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 229, 39, 20, 210}, {255, 
         255, 255, 255, 255, 255, 202, 1, 1, 164}, {255, 255, 255, 255, 255, 
         255, 202, 1, 1, 164}, {255, 255, 255, 255, 255, 255, 81, 1, 37, 
         248}, {255, 255, 255, 255, 255, 201, 7, 1, 158, 255}, {255, 255, 255,
          255, 255, 81, 1, 1, 170, 255}, {255, 255, 255, 255, 255, 65, 1, 1, 
         170, 255}, {255, 255, 255, 255, 255, 65, 1, 38, 240, 255}, {255, 255,
          255, 255, 202, 13, 1, 47, 255, 255}, {255, 255, 255, 255, 189, 1, 1,
          147, 255, 255}, {255, 255, 255, 200, 48, 1, 40, 235, 255, 255}, {
         255, 255, 255, 155, 1, 1, 80, 255, 255, 255}, {255, 255, 240, 43, 0, 
         11, 196, 255, 255, 255}, {255, 255, 155, 1, 1, 80, 255, 255, 255, 
         255}, {255, 255, 45, 1, 1, 190, 255, 255, 255, 255}, {255, 202, 18, 
         1, 41, 230, 255, 255, 255, 255}, {255, 159, 1, 6, 148, 255, 255, 255,
          255, 255}, {250, 37, 1, 80, 255, 255, 255, 255, 255, 255}, {162, 1, 
         3, 205, 255, 255, 255, 255, 255, 255}, {162, 1, 146, 255, 255, 255, 
         255, 255, 255, 255}}, {{0, 20}, {10, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{10, 20},
       PlotRange->{{0, 10}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPx//+T2mSZmJgCHBmYmHSe/QeBRBZmCGACYt4DQJFL3MxIQsx7gUJt
QNo5GASCgs2YnS9BhCRu/IeA16e+/IcIbYUIdLq65p/8CGTMZGXe9u3//+tB
QWCzVoAk+ZmZfZbGq0KNF98HFBJD2MjPw8ys+ev//zPhUCHHjs83U5mZY4HK
zlZZKTIxcRwA2+HCJHAGRP/49unTZ4i1N1WZp/5HA0EYQsv5mXPAjGyfwxCR
t8bMzIJgliszl2vXyT//L/oDbS4GC0WB3eUXBHQ2M/sysNB5KVjgMLPXQE19
N9UDIsRmhrDqRwdIKHchkAkAPQjWGw==
         "], {{0, 20}, {19, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{19, 20},
       PlotRange->{{0, 19}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyi4r8104D8yuG/AzJyPIlLHzMzchOD+e5XPxJw9GUlBJTMzk/I1
ZDNkmJkVLyH4P9t1mDmrkVW8d2Rm1kCx5RYTE5MaVHtd6MQP//9vZGaW2AER
aALasOn/KXFm5s0QJdpANzFJbN8GpO5ARJhAIswa25iYDF+DbXBgYEr9z8Ck
BlRTAFYRx8zk9LWJiTkQKJLwCyTixcy0+Wc8E9+hFGZmJ6CN/68qMTsci2d2
2PT/ajwTk85CoIgiEwPQZXlAyV8JzMwcaqpqvEB7mHXBllyr4gDZCvJ//wOo
RxbVg0TCJ38A8wBpr+qS
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyRXMjEwRRU9evTmPwTs5WRiZmZmYpa/DBWYDeEzS0P5/x8/7i4p1mBm
PvMfGaxikkXh7+XkPo4iUMa0GoXfh8Y/w2iFwv/PpP8Jlc+MaqAJ81QUfh2T
729k/ktR5lMoCsKY/VD4HczMKPynCkyoNgYzO6PwVzFz7EXmf/XluwAAHgkP
Ag==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/Q8AqBsaM71D2/wmFU1iT281tYPx31kxMiw+Gm8P4/6eymIsI+hyG
cT9qh/9/8Qwu+/8GU8//L/m6Be+g/F6mnedUtePFdR7B+B2izi/+P5DVeQyx
j4lJ/TmQfiwWDOY/YVKHmLZI+BWYnj4JovE2Y8d/ZHCbqRmFf4zzIgo/RB+F
e5Jj4f+r037BuLs1Y779L2E6BeUuk6wFkh+W6HrvBSm5rej/DWKJO4t5W4O7
TPADmMbtpkxMkzb+BLMBOPYEGg==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 235, 49,
          55}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
         20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
         20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
         20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 161, 1, 
         20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 20}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 20}, {255, 
         255, 255, 183, 172, 255, 255, 255, 255, 255, 86, 1, 77}, {255, 255, 
         238, 12, 37, 241, 255, 255, 255, 255, 86, 1, 159}, {255, 255, 201, 1,
          93, 255, 255, 255, 255, 251, 54, 1, 208}, {255, 255, 141, 1, 176, 
         255, 255, 255, 255, 245, 1, 0, 208}, {255, 230, 34, 1, 246, 255, 255,
          255, 255, 161, 1, 44, 250}, {255, 169, 1, 36, 249, 255, 255, 255, 
         236, 55, 1, 52, 255}, {232, 45, 7, 171, 255, 255, 255, 207, 52, 1, 1,
          142, 255}, {179, 1, 20, 255, 255, 255, 184, 7, 1, 1, 1, 142, 255}, {
         179, 1, 98, 255, 215, 61, 13, 37, 163, 47, 1, 219, 255}, {179, 1, 77,
          138, 4, 1, 65, 227, 255, 57, 1, 237, 255}, {224, 33, 1, 1, 14, 148, 
         252, 255, 255, 57, 18, 241, 255}, {255, 216, 124, 155, 226, 255, 255,
          255, 236, 30, 77, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 
         255, 147, 1, 77, 255, 255}}, {{0, 20}, {13, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 47, 2, 
         191}, {255, 255, 255, 255, 255, 255, 255, 255, 210, 19, 3, 160}, {
         255, 255, 255, 255, 255, 255, 255, 255, 102, 3, 34, 255}, {160, 255, 
         255, 255, 255, 255, 255, 217, 15, 3, 118, 255}, {244, 255, 255, 255, 
         255, 255, 255, 208, 3, 3, 118, 255}, {255, 255, 255, 255, 255, 255, 
         252, 85, 2, 2, 180, 255}, {255, 255, 255, 255, 255, 255, 210, 3, 3, 
         62, 247, 255}, {255, 255, 255, 255, 255, 255, 117, 3, 3, 178, 255, 
         255}, {255, 255, 255, 255, 255, 255, 117, 3, 3, 210, 255, 255}, {255,
          255, 255, 255, 255, 255, 64, 3, 3, 210, 255, 255}, {255, 255, 255, 
         255, 255, 244, 0, 2, 71, 255, 255, 255}, {255, 255, 255, 255, 255, 
         139, 2, 3, 72, 255, 255, 255}, {255, 255, 255, 255, 255, 139, 2, 3, 
         155, 255, 255, 255}, {255, 255, 255, 255, 255, 45, 2, 3, 186, 255, 
         255, 255}, {255, 255, 255, 255, 255, 25, 2, 45, 249, 255, 255, 
         255}, {255, 255, 255, 255, 255, 24, 0, 48, 255, 255, 255, 255}, {255,
          255, 255, 255, 195, 11, 2, 70, 255, 255, 255, 255}, {255, 255, 255, 
         255, 131, 3, 19, 230, 255, 255, 255, 255}, {255, 255, 255, 229, 31, 
         3, 120, 255, 255, 255, 255, 255}, {255, 255, 255, 185, 3, 3, 192, 
         255, 255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 234, 94, 32, 8, 131, 243, 255}, {255, 255, 
         223, 33, 40, 161, 104, 1, 170, 255}, {255, 235, 40, 91, 229, 255, 
         254, 94, 83, 234}, {255, 57, 80, 241, 255, 255, 255, 118, 1, 203}, {
         200, 9, 233, 255, 255, 255, 203, 41, 15, 237}, {128, 85, 255, 255, 
         255, 190, 18, 16, 38, 255}, {128, 159, 255, 247, 106, 7, 166, 90, 
         142, 255}, {141, 43, 124, 26, 56, 199, 232, 11, 170, 255}, {249, 179,
          151, 196, 255, 255, 159, 1, 193, 255}, {255, 255, 255, 255, 255, 
         255, 87, 64, 255, 255}, {255, 255, 255, 255, 255, 255, 3, 127, 255, 
         255}, {255, 255, 255, 255, 255, 176, 30, 240, 255, 255}, {255, 255, 
         255, 255, 245, 41, 104, 255, 255, 255}, {255, 255, 255, 255, 211, 27,
          225, 255, 255, 255}, {255, 255, 255, 254, 70, 87, 255, 255, 255, 
         255}, {255, 255, 255, 178, 13, 204, 255, 255, 255, 255}, {255, 255, 
         255, 68, 52, 255, 255, 255, 255, 255}, {255, 255, 201, 13, 200, 255, 
         255, 255, 255, 255}, {255, 249, 35, 38, 255, 255, 255, 255, 255, 
         255}, {255, 247, 19, 142, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {
         10, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{10, 20},
       PlotRange->{{0, 10}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 233, 141, 19, 1, 2, 2, 99, 212, 255, 
         255}, {255, 255, 255, 255, 128, 3, 3, 2, 3, 3, 3, 3, 82, 234}, {255, 
         255, 255, 255, 128, 3, 20, 128, 129, 110, 3, 3, 2, 139}, {255, 255, 
         255, 255, 204, 66, 241, 255, 255, 128, 3, 3, 2, 157}, {255, 255, 255,
          255, 255, 237, 255, 255, 255, 84, 3, 3, 2, 192}, {255, 255, 255, 
         255, 255, 255, 255, 247, 54, 2, 2, 2, 123, 255}, {255, 255, 255, 255,
          255, 255, 255, 132, 3, 3, 3, 3, 255, 255}, {255, 255, 255, 255, 255,
          249, 233, 54, 3, 3, 8, 156, 255, 255}, {255, 255, 255, 255, 255, 
         191, 3, 2, 3, 43, 192, 255, 255, 255}, {255, 255, 255, 255, 237, 34, 
         3, 2, 3, 173, 255, 255, 255, 255}, {255, 255, 255, 255, 246, 68, 2, 
         0, 37, 159, 241, 255, 255, 255}, {255, 255, 255, 255, 255, 212, 52, 
         2, 3, 3, 44, 109, 255, 255}, {255, 255, 255, 255, 255, 255, 246, 128,
          129, 75, 3, 3, 39, 223}, {255, 255, 255, 255, 255, 255, 255, 255, 
         255, 248, 59, 3, 2, 122}, {255, 255, 255, 255, 255, 255, 255, 255, 
         255, 193, 16, 3, 2, 87}, {255, 255, 255, 255, 255, 255, 255, 247, 
         132, 54, 2, 2, 0, 192}, {127, 109, 126, 234, 212, 170, 170, 54, 3, 3,
          3, 3, 16, 213}, {95, 3, 2, 18, 13, 3, 3, 2, 3, 3, 8, 24, 149, 
         255}, {234, 127, 110, 18, 3, 3, 3, 2, 3, 88, 192, 255, 255, 255}, {
         255, 255, 255, 144, 108, 82, 134, 108, 187, 234, 255, 255, 255, 
         255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cFnx5Nl+JDEbmZb8jELHYEWcRSlJmZqe0WklCjEBOzZsnjbwiRxepM
TAJNyAYdCwOak3cTWWitBjOT9UEU6zbzMDP7fkMR+sTIxI1iEtAsQyan4yDG
mWNA8BQs1sLMDRRaFW/FycTMzKywFyTLydz0/6YWiA/Ges/+//Zh4vs9XYqJ
kcOlr/fmVylGjrP/TzIz9/gwM8us3gcyZyIzU8j//0XMrguYmF0fgES+xvOD
zXZgDtdi8rsCtheonvkZkMHApM6nCQq3k74gMz+BJH2BcgZhYaBws3bfB3Hx
ZXmIG8IXIYXbm+6S4pKS68g+AwCMthGl
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 226, 125, 62, 26, 0, 
         64, 250, 255}, {255, 255, 255, 255, 255, 231, 159, 23, 2, 2, 2, 2, 2,
          148, 255}, {255, 255, 255, 255, 246, 44, 2, 2, 2, 8, 25, 2, 2, 69, 
         255}, {255, 255, 255, 255, 205, 2, 2, 19, 125, 199, 231, 175, 25, 7, 
         194}, {255, 255, 255, 255, 125, 2, 70, 239, 255, 255, 255, 255, 208, 
         14, 77}, {255, 255, 255, 255, 32, 19, 226, 255, 255, 255, 255, 255, 
         255, 27, 69}, {255, 255, 255, 255, 32, 64, 255, 255, 255, 255, 255, 
         255, 243, 25, 69}, {255, 255, 255, 255, 32, 64, 255, 255, 255, 255, 
         255, 229, 73, 7, 157}, {255, 255, 255, 255, 34, 12, 216, 249, 249, 
         232, 181, 37, 13, 67, 255}, {255, 255, 255, 255, 156, 2, 2, 2, 2, 2, 
         2, 2, 71, 205, 255}, {255, 255, 255, 255, 156, 2, 2, 2, 2, 2, 36, 
         155, 240, 255, 255}, {255, 255, 131, 111, 4, 2, 2, 2, 75, 146, 227, 
         255, 255, 255, 255}, {242, 90, 6, 2, 2, 2, 2, 2, 204, 255, 255, 255, 
         255, 255, 255}, {218, 2, 2, 10, 130, 240, 150, 2, 106, 255, 255, 255,
          255, 255, 255}, {218, 2, 95, 203, 255, 255, 251, 32, 70, 253, 255, 
         255, 255, 255, 255}, {218, 2, 123, 255, 255, 255, 255, 150, 2, 156, 
         255, 255, 255, 255, 255}, {243, 47, 10, 155, 191, 255, 255, 175, 2, 
         77, 255, 255, 255, 255, 255}, {255, 118, 2, 2, 4, 37, 37, 15, 2, 43, 
         255, 255, 255, 255, 255}, {255, 255, 111, 2, 2, 2, 2, 2, 2, 43, 255, 
         255, 255, 255, 255}, {255, 255, 250, 179, 14, 2, 2, 2, 42, 172, 255, 
         255, 255, 255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mSAQiwDxfzhYefPm4/P/kUHXMyYlpXIZyxq4yLEw+XomZiBgki/7ChWLAXGZ
IUQcRKg3gYmJiSG9uLi4yJeJqR8kdB6s5MkfEHsVM7MQkKqWYWIW8D4B0QIU
Y/7/9bA8M5PPPphts0BiIIn+z3AXyIHEcpiYHBHOZGAC2SHHLAtTtWdVDBOz
WMbndk7mXqi7p/MD3ed65f//BGbmGZ/ePz0cFgZ20OrjQNk+IMPJhB/iBeF+
iBeYQF5gYvItNi4uvgAx5bMXUEl4RPm3/x8Qtr9ZMfPEf1QAAMkk12Y=
         "], {{0, 17}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 17},
       PlotRange->{{0, 20}, {0, 17}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 221, 144, 69, 2, 2, 40,
          228}, {255, 255, 255, 255, 255, 234, 93, 2, 3, 3, 3, 3, 3, 124}, {
         255, 255, 255, 255, 194, 61, 3, 15, 102, 193, 193, 3, 3, 124}, {255, 
         255, 247, 79, 7, 9, 121, 246, 255, 255, 252, 79, 3, 124}, {255, 242, 
         83, 3, 12, 118, 255, 255, 255, 255, 232, 3, 3, 124}, {247, 83, 3, 3, 
         133, 255, 255, 255, 255, 176, 52, 3, 3, 37}, {131, 3, 3, 119, 246, 
         255, 255, 255, 255, 103, 3, 3, 3, 115}, {56, 3, 18, 237, 255, 255, 
         255, 255, 255, 94, 3, 3, 3, 142}, {13, 3, 64, 248, 255, 255, 255, 
         255, 172, 14, 3, 3, 30, 240}, {109, 3, 3, 132, 144, 144, 144, 144, 
         46, 3, 3, 3, 186, 255}, {187, 13, 2, 2, 2, 2, 2, 0, 2, 2, 2, 9, 207, 
         255}, {255, 181, 69, 69, 69, 69, 69, 68, 23, 3, 3, 87, 255, 255}, {
         255, 255, 255, 255, 255, 255, 255, 241, 49, 3, 21, 240, 255, 255}, {
         255, 255, 255, 255, 255, 255, 255, 154, 3, 3, 34, 255, 255, 255}, {
         255, 255, 255, 255, 255, 255, 255, 2, 3, 3, 158, 255, 255, 255}, {
         255, 255, 255, 255, 255, 255, 216, 2, 3, 37, 248, 255, 255, 255}, {
         255, 255, 255, 255, 255, 255, 92, 2, 3, 102, 255, 255, 255, 255}, {
         255, 255, 255, 255, 255, 241, 29, 2, 3, 169, 255, 255, 255, 255}, {
         255, 255, 255, 255, 255, 177, 3, 2, 23, 225, 255, 255, 255, 255}, {
         255, 255, 255, 255, 255, 211, 17, 2, 117, 255, 255, 255, 255, 
         255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfxD4cMKbiUG89PZ/CHh3IVaFmZmZiZlZZTlY4I0ziCPjUeMhyqwE
FolmZjYpufQIyCpkZl4ApK5wMpt/gWjfycx8ACTClws175cDkyOYcRUq8P8C
M3PZf2RwM4VZ5jyKiDcz814UgalAJ9gfQBI4w8PABAReb+Aim9nZDA0NZZiE
L8OFDoB03FdkTv+PCi4z89/6/7/8FULkObPSs//rmMy+wAS+mDIF/f8/h5vZ
pPjChacv/3+6YMfEfRwocVwY6BRmJXV3E2AgBYLVLoyDhhgzc+Y7qP4PL7vK
zHzLylaBOAD4LADx
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0eAw3vsGRkZtt9BElrNzwQGtnehAj8fWIoB+dw8rExM+yBCT71AKhT9
Pv9vZGVqAwt98QHrygKxuZiYQPre+IFE+PY+AXI+cjIJAKnNIBGe8IMgVTeM
web9BJvVBzG4F8jc971eFUh53/4JFroGtFzgaDlIEedUqJPOMzFJrP3PABIT
hbk7gonJ+v//J0/uysLE3t8UZGJ6DGZuholNB2rx+YUi9hToDv9n/5HFsoAa
g77+h4nxbv7/qdcMqAomBPKHtI8LyKxn8IA7Ig0JONNupNDcVgISCvj4Hxn8
2ucvse85nAsAzOUDGw==
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxVjq9zwjAUx5NvzO6omNiih2TYitnJ2ebmMHCUFFNuZXc7jk1iQeePKLp2
aGqLxhYL+q3pD1ZeLrl88t73m293NPMmYIzN74rDG369RtFwoe4LeA/nUx36
47fw09d+9DKyYw/Ftk2qa6250kne4ADCro+GY3Oi2ANLqFWXPoI27yX7rm6/
JibKpJDHSs3BoSVH7edW7vg51UrXsROPx6vVIU1TBdV2p4wjv3mAMHS+/DOH
oaW67eur5uxxZJQId1enFegT5U/sOSsz9tDZ2p8hnJUxAwdiW4Uvs3F0Vk22
TQAhg0MJf3Bb6HI=
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 231, 150, 107, 75, 36, 28, 76, 163, 255}, {255, 
         148, 17, 2, 2, 1, 20, 2, 2, 2, 215}, {82, 4, 21, 148, 232, 240, 244, 
         226, 2, 2, 180}, {121, 160, 251, 255, 255, 255, 255, 226, 2, 2, 
         237}, {255, 255, 255, 255, 255, 255, 255, 100, 2, 24, 255}, {255, 
         255, 255, 255, 255, 255, 230, 10, 1, 181, 255}, {255, 255, 255, 255, 
         255, 255, 94, 2, 26, 241, 255}, {255, 255, 255, 255, 255, 178, 4, 2, 
         143, 255, 255}, {255, 255, 255, 255, 255, 80, 2, 62, 241, 255, 
         255}, {255, 255, 255, 255, 166, 1, 2, 166, 255, 255, 255}, {255, 255,
          255, 214, 10, 0, 74, 250, 255, 255, 255}, {255, 255, 247, 43, 2, 35,
          221, 255, 255, 255, 255}, {255, 255, 117, 2, 6, 180, 255, 255, 255, 
         255, 255}, {255, 244, 14, 2, 112, 255, 255, 255, 255, 255, 255}, {
         255, 85, 2, 51, 234, 255, 255, 255, 255, 255, 255}, {224, 14, 1, 129,
          255, 255, 255, 255, 255, 255, 255}, {132, 2, 32, 244, 255, 255, 255,
          255, 255, 255, 255}, {50, 2, 118, 255, 255, 255, 255, 255, 255, 255,
          255}, {1, 2, 223, 255, 255, 255, 255, 255, 255, 255, 255}, {45, 59, 
         249, 255, 255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {11, 0}}, {
         0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{11, 20},
       PlotRange->{{0, 11}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 239, 26, 56, 239, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 122, 1, 1, 181, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 197, 45, 1, 1, 122, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 64, 1, 0, 1, 174, 255, 255, 255, 255,
          255}, {255, 255, 255, 150, 2, 1, 1, 1, 208, 255, 255, 255, 255, 
         255}, {255, 255, 240, 56, 1, 49, 102, 1, 208, 255, 255, 255, 255, 
         255}, {255, 255, 97, 1, 12, 190, 125, 1, 208, 255, 255, 255, 255, 
         255}, {255, 219, 10, 1, 128, 255, 125, 1, 190, 255, 255, 255, 255, 
         255}, {255, 115, 1, 30, 229, 255, 125, 1, 150, 255, 255, 255, 255, 
         255}, {255, 89, 1, 130, 255, 255, 125, 1, 122, 255, 255, 255, 255, 
         255}, {255, 17, 10, 219, 255, 255, 125, 1, 122, 255, 255, 255, 255, 
         255}, {221, 9, 103, 255, 255, 236, 108, 1, 64, 94, 47, 47, 89, 
         245}, {185, 1, 80, 60, 52, 25, 1, 1, 1, 1, 1, 1, 19, 217}, {239, 22, 
         1, 1, 0, 1, 1, 1, 0, 1, 12, 63, 200, 255}, {255, 167, 29, 22, 15, 22,
          4, 17, 149, 195, 221, 255, 255, 255}, {255, 255, 255, 255, 233, 235,
          23, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 
         207, 1, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 
         241, 28, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 255,
          255, 40, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 
         255, 255, 154, 99, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {14, 
         0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mTAQiwDxf1Tw9CaCvfsSmHpUZgQXusUjB6a7mNnXwMTSmAXBtDkz8yKYWBB+
MQcsYnJQoddeCDHpz///f6rKzZVnZubc9PHf//8tzMzMU//v52SGAqaSj//L
wGLuTDDAAKX5/zMxw9VBaUE8YgKJXcFBmsHB5akgMVWw1EqQQx4D8UmQ2AI2
ILkCHhgf7Zj5Tv6vYVddiRSA6czMEv//r/mAHKgf7Hgu/0cHa1P+AwAwwOhu

         "], {{0, 19}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 19},
       PlotRange->{{0, 20}, {0, 19}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 218, 92, 1, 1, 1, 0, 1, 32, 99, 136, 255, 
         255}, {255, 255, 246, 89, 22, 22, 60, 97, 13, 2, 2, 2, 85, 252}, {
         255, 255, 255, 255, 255, 255, 255, 255, 219, 177, 113, 2, 1, 148}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 252, 109, 1, 29}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 157, 1, 22}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 97, 0, 104}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 168, 11, 51, 
         249}, {255, 255, 255, 255, 255, 255, 255, 255, 248, 109, 8, 33, 157, 
         255}, {255, 255, 255, 255, 255, 255, 224, 118, 34, 2, 24, 161, 255, 
         255}, {255, 255, 255, 255, 255, 239, 38, 1, 2, 2, 176, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 179, 156, 25, 1, 138, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 242, 38, 2, 146, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 69, 2, 125, 249, 255, 255, 
         255}, {255, 255, 255, 255, 255, 248, 140, 1, 28, 219, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 103, 2, 1, 194, 255, 255, 255, 255, 
         255}, {255, 255, 255, 250, 99, 1, 1, 141, 255, 255, 255, 255, 255, 
         255}, {176, 78, 255, 144, 2, 28, 194, 255, 255, 255, 255, 255, 255, 
         255}, {89, 2, 117, 14, 27, 212, 255, 255, 255, 255, 255, 255, 255, 
         255}, {21, 2, 1, 73, 242, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}, {133, 2, 122, 224, 255, 255, 255, 255, 255, 255, 255, 255, 255,
          255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{213, 24, 0, 57, 158, 255, 255, 255, 255, 255, 255, 255}, {
         90, 1, 1, 1, 4, 77, 222, 255, 253, 192, 230, 255}, {54, 1, 1, 36, 1, 
         1, 14, 186, 152, 1, 41, 243}, {54, 3, 159, 243, 163, 29, 1, 81, 12, 
         1, 58, 251}, {54, 10, 247, 255, 255, 121, 1, 1, 1, 1, 68, 255}, {54, 
         1, 137, 254, 255, 220, 34, 1, 1, 1, 137, 255}, {116, 1, 1, 189, 255, 
         194, 15, 1, 1, 28, 249, 255}, {245, 125, 1, 4, 88, 14, 1, 1, 86, 222,
          255, 255}, {255, 251, 48, 1, 1, 1, 1, 91, 250, 255, 255, 255}, {255,
          255, 219, 4, 1, 1, 1, 150, 255, 255, 255, 255}, {255, 253, 87, 1, 1,
          1, 1, 20, 142, 255, 255, 255}, {255, 208, 1, 1, 1, 64, 26, 1, 2, 
         146, 254, 255}, {255, 124, 1, 1, 45, 246, 210, 57, 1, 1, 180, 255}, {
         255, 68, 1, 1, 176, 255, 255, 249, 77, 1, 68, 255}, {233, 3, 1, 46, 
         248, 255, 255, 255, 161, 1, 4, 234}, {245, 39, 1, 73, 255, 255, 255, 
         226, 71, 1, 1, 214}, {255, 82, 1, 36, 186, 255, 179, 42, 1, 1, 12, 
         224}, {255, 198, 10, 1, 12, 50, 10, 1, 1, 10, 213, 255}, {255, 255, 
         182, 8, 1, 1, 1, 13, 136, 212, 255, 255}, {255, 255, 255, 207, 76, 1,
          86, 211, 255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{254, 146, 22, 2, 2, 145, 240, 176, 146, 192, 255, 255, 
         255, 255, 255}, {130, 3, 3, 3, 3, 2, 33, 13, 3, 111, 255, 255, 255, 
         255, 255}, {34, 3, 3, 3, 3, 2, 3, 3, 3, 95, 250, 255, 255, 255, 
         255}, {65, 3, 87, 3, 3, 2, 3, 3, 3, 2, 96, 214, 255, 255, 255}, {172,
          112, 203, 44, 3, 2, 3, 3, 3, 2, 3, 122, 255, 255, 255}, {255, 255, 
         58, 3, 3, 33, 76, 24, 3, 2, 3, 8, 121, 255, 255}, {254, 156, 13, 3, 
         3, 130, 255, 177, 3, 2, 3, 3, 3, 255, 255}, {254, 3, 3, 3, 87, 255, 
         255, 239, 147, 2, 3, 3, 3, 171, 255}, {254, 2, 2, 18, 193, 255, 255, 
         255, 255, 145, 2, 2, 2, 110, 255}, {213, 3, 3, 40, 255, 255, 255, 
         255, 255, 146, 3, 3, 3, 17, 225}, {111, 3, 3, 143, 255, 255, 255, 
         255, 255, 224, 28, 3, 3, 2, 220}, {111, 3, 3, 101, 255, 255, 255, 
         255, 255, 255, 38, 3, 3, 2, 220}, {110, 2, 2, 23, 208, 255, 255, 255,
          255, 255, 37, 2, 2, 110, 255}, {111, 3, 3, 3, 147, 255, 255, 255, 
         255, 161, 8, 3, 3, 111, 255}, {130, 3, 3, 3, 44, 234, 255, 255, 255, 
         146, 3, 3, 3, 214, 255}, {254, 3, 3, 3, 3, 48, 235, 255, 255, 64, 3, 
         3, 3, 255, 255}, {254, 64, 2, 2, 2, 0, 2, 85, 2, 0, 2, 2, 64, 255, 
         255}, {255, 240, 75, 3, 3, 2, 3, 3, 3, 2, 3, 14, 178, 255, 255}, {
         255, 255, 234, 75, 3, 2, 3, 3, 3, 2, 14, 153, 255, 255, 255}, {255, 
         255, 255, 239, 65, 2, 3, 3, 3, 64, 178, 255, 255, 255, 255}}, {{0, 
         20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPxfxj4ksXEpPPpPxJ4Z8fEzMz8EknkjDMzmtA6fmZmLhVkoZfcQBXb
4pCEvpgyMdkf+B/LxPQCyWSXd///I1S9AZrMfxYoI83s9hOixhlo8gYg4zkz
cwdE0RyQySDGZmbmS2CRFUxMTGVAG/7/B9rR9fz5vNLSUqAindg4k7g4kFOB
7uWPLoUwYIRG7Nn/t/1APDsZVVMmZpm9l16BDPv18uXLF9/ffexmYq79jwoa
GNgOoAlJMrn9xxBajC7kzGT6DE3oSzbzLggLABFcBvg=
         "], {{0, 20}, {19, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{19, 20},
       PlotRange->{{0, 19}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 115, 1, 0, 54, 167, 255, 255, 255}, {255, 116, 2, 2, 
         2, 4, 144, 255, 255}, {255, 116, 2, 2, 2, 2, 101, 255, 255}, {255, 
         116, 2, 2, 2, 2, 101, 255, 255}, {255, 116, 2, 2, 2, 2, 101, 255, 
         255}, {213, 20, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2, 101,
          255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2,
          101, 255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 
         2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {242, 87, 
         2, 2, 2, 2, 91, 248, 255}, {255, 116, 2, 2, 2, 2, 2, 190, 255}, {255,
          137, 6, 2, 2, 2, 2, 190, 255}, {255, 255, 25, 2, 2, 2, 2, 190, 
         255}, {255, 255, 63, 2, 2, 2, 2, 47, 255}, {255, 255, 189, 2, 2, 2, 
         2, 12, 174}, {255, 255, 251, 138, 4, 2, 2, 2, 43}, {255, 255, 255, 
         255, 116, 2, 2, 2, 117}}, {{0, 20}, {9, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{9, 20},
       PlotRange->{{0, 9}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPxfxjQd5zyCcL6BBOyZmSUtm1sfvQbruj/HTlGMDiAEPq/K80CJKTy
Hxn83a7HyMh6ClnodyVI2UEkkRmOIBGNp3CBo14sIJHUVwg1BhALW5G0gcxR
ZGVkuYQQ+lPosvv9UWdGIyS3gkEtqo1AcIoVXeiuEiMj/y0kgU99skArIhEC
96dJMzIyMDp+hHB/nZtpzw1ylUAPmH9tdxkLxJmyLitBAr1mPBA+k1I41GBL
D9sIRtGMusRNcFMBw38Qig==
         "], {{0, 20}, {19, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{19, 20},
       PlotRange->{{0, 19}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/g0AWI0PY1f8IEMvExMTh7r4Nxv9So8cMFGJVVDwFE1qXpMsFFFqA
pKuRiUn5DxJ/BhPTbCTuUREm+3cI7ncrJrE3SNKBTExtSNw17EwOv5G4vEzi
JxF669mZmFchZBOBLlkG5/3q4GViKoO75NtqJib+SoTDJjIxSZxF6F3Hw8S0
CcF9p88kdvEvgu/IJHEGyVn/FZkakLn/AVgv/zY=
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 244, 105, 1, 175, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 238, 114, 5, 18, 92, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 78, 2, 55, 211, 236, 255, 255, 
         255, 255}, {255, 255, 255, 255, 229, 30, 2, 181, 255, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 132, 2, 55, 255, 255, 255, 255, 255, 
         255, 255}, {255, 255, 255, 197, 1, 9, 181, 255, 255, 255, 255, 255, 
         255, 255}, {255, 255, 219, 35, 2, 167, 255, 255, 255, 255, 255, 255, 
         255, 255}, {255, 255, 116, 2, 84, 242, 255, 255, 255, 255, 255, 255, 
         255, 255}, {255, 212, 21, 19, 211, 255, 255, 255, 255, 255, 255, 255,
          255, 255}, {255, 87, 1, 48, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 255}, {246, 21, 1, 171, 255, 255, 255, 252, 210, 116, 158, 242, 
         255, 255}, {162, 2, 24, 255, 255, 255, 233, 136, 2, 2, 2, 43, 255, 
         255}, {130, 2, 108, 255, 255, 255, 108, 1, 14, 155, 66, 2, 138, 
         255}, {47, 2, 139, 255, 255, 255, 24, 9, 176, 255, 238, 115, 15, 
         221}, {47, 2, 139, 255, 255, 118, 4, 181, 255, 255, 255, 87, 1, 
         163}, {161, 1, 127, 255, 255, 46, 106, 242, 236, 238, 147, 1, 97, 
         255}, {221, 16, 9, 175, 255, 47, 2, 42, 18, 26, 2, 23, 255, 255}, {
         255, 139, 0, 14, 70, 14, 2, 0, 2, 2, 2, 201, 255, 255}, {255, 255, 
         137, 2, 2, 2, 2, 1, 2, 27, 189, 251, 255, 255}, {255, 255, 252, 232, 
         148, 75, 108, 117, 191, 239, 255, 255, 255, 255}}, {{0, 20}, {14, 
         0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 141, 50, 255, 255, 255,
          255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 188, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 249, 255, 255, 
         255}, {255, 68, 255, 255, 255, 255, 255, 118, 1, 176, 255, 255, 
         255}, {218, 21, 255, 255, 255, 255, 255, 119, 2, 176, 255, 255, 
         255}, {176, 21, 255, 255, 255, 255, 255, 119, 2, 243, 255, 255, 
         255}, {176, 9, 219, 255, 255, 255, 255, 94, 2, 255, 255, 255, 255}, {
         176, 0, 157, 252, 255, 255, 255, 40, 1, 255, 255, 255, 255}, {188, 1,
          2, 69, 161, 215, 215, 34, 2, 191, 215, 215, 215}, {255, 104, 2, 2, 
         2, 1, 2, 2, 2, 1, 2, 2, 62}, {255, 253, 175, 92, 80, 50, 2, 2, 2, 80,
          104, 164, 247}, {255, 255, 255, 255, 255, 255, 209, 1, 56, 255, 255,
          255, 255}, {255, 255, 255, 255, 255, 255, 137, 2, 117, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 255, 137, 2, 158, 255, 255, 255,
          255}, {255, 255, 255, 255, 255, 255, 90, 2, 158, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 59, 1, 212, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 60, 11, 239, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 244, 29, 127, 255, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 247, 38, 138, 255, 255, 255, 255, 
         255}}, {{0, 20}, {13, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfzC4FsTECIFa//+/KjQxMeFhYobBa680wTKFM8FgLQPT2kNMzMFn
z36FaP4/k4n5///C1//h4IwYg/1/FJDOLHYWRWAtI5MHisArBSbt1ygi1UyM
S1D1MDHXfEUWOCPGKIZqjx26PQcZmVpQ7TFh0kbVE8Qkj2rxNSbmWBSBL1qM
9mh60O35z8g0E1XgPxPzIQQHAFuMHkc=
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPxfzBY02bFxMDExNT9HwoeVbAzMzMzATGbE0TkoSEzM1SI2RIiZMfM
LBAcdeNGHULoUqLbShCtDRRa9B8ZPOVlZg58hyzysgio/zKYuXYFmPqby8TM
mwZm7nT7AhaZB7QxA6L+2C4wNRfoCJvPyAZNB7rc6geyyGSg621QRA5xMTNz
bIHxzgLxbmtmZh6YGz9FK/7//0yBmZlvPoj7bM+eKH1mwf//7YH+6AUGx8mJ
OmDvC/7fyg3ybVCQBjgkmLm0a/9PYYYCoBCPXMNGUDhIQkS4+AU7tkPtuCQB
MqDjONxNALyI8OM=
         "], {{0, 20}, {19, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{19, 20},
       PlotRange->{{0, 19}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxf2TwfTsXYz2I8Xw/mH+8yZaJiWkOiLmMufHB7B5dTiCfKegzUGC5
AhMzJxMjE5MoE5PgBaBAvwJITsrCcspZJqbJQDOqWZiYdKLWPADKVTExvfz/
35iJidP4FdjkUwJMhl/+/+dnMrsDtVuXSRmo5P/FvX+gAqt5maJRXPdBl4n7
LIrIPEbGVhSBh0pMTJdRRCYwMtX/RRb4ocyg8gpFSSYTxxwUgfc6TEooAv9m
MjEJ3UIW+Qz0quhDZJGFTEzKR1F0bWViWgDnAAB3qBCc
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfwj4GsbAyBD58z8C1DOBQN0zuMANAbmSkihWJv9/MJE7c0DkdSnZ
Q//+o4CL0kxtqCL/w5mU0ESeych8QBPS4T2LLoKuC1PkuSyayJ8gpigY+ymY
DGWSug6it9oYGsp6vvr/wo2ZKRPI/2DOAvYlJzcnE5PBc6BILxMCOBwGCjxQ
QxL5CjLEE0mAyQYkkgrlCHrUb9nyByTyuRLIFcvL2w13FADANwKZ
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 96, 39, 99, 143, 196, 228, 232, 173, 107, 237, 255, 
         255, 255, 255}, {194, 7, 2, 1, 2, 2, 23, 26, 1, 2, 177, 255, 255, 
         255, 255}, {255, 119, 2, 20, 81, 56, 33, 63, 80, 126, 231, 255, 255, 
         255, 255}, {255, 200, 2, 60, 255, 249, 243, 250, 255, 255, 255, 255, 
         255, 255, 255}, {255, 155, 2, 60, 255, 255, 255, 255, 255, 255, 255, 
         255, 255, 255, 255}, {255, 193, 1, 59, 227, 196, 143, 136, 209, 255, 
         255, 255, 255, 255, 255}, {255, 119, 2, 33, 38, 2, 2, 2, 10, 124, 
         205, 253, 255, 255, 255}, {255, 51, 2, 1, 2, 27, 96, 140, 62, 2, 2, 
         138, 255, 255, 255}, {255, 21, 2, 1, 126, 242, 255, 255, 250, 183, 
         14, 5, 186, 255, 255}, {255, 96, 2, 159, 246, 255, 255, 255, 255, 
         255, 184, 10, 25, 217, 255}, {255, 239, 157, 255, 255, 255, 255, 255,
          255, 255, 255, 103, 1, 83, 246}, {255, 255, 255, 255, 255, 255, 255,
          255, 255, 255, 255, 188, 29, 1, 209}, {255, 255, 255, 255, 255, 255,
          255, 255, 255, 255, 255, 225, 90, 1, 120}, {255, 255, 255, 230, 249,
          255, 255, 255, 255, 255, 255, 255, 120, 1, 120}, {255, 255, 217, 24,
          51, 195, 255, 255, 255, 255, 255, 255, 82, 1, 120}, {255, 255, 120, 
         0, 29, 195, 255, 255, 255, 255, 255, 255, 120, 0, 81}, {255, 255, 
         164, 1, 20, 138, 246, 255, 255, 255, 255, 229, 48, 1, 164}, {255, 
         255, 255, 100, 2, 2, 44, 154, 255, 255, 230, 83, 2, 42, 243}, {255, 
         255, 255, 250, 183, 29, 2, 2, 20, 21, 15, 2, 18, 202, 255}, {255, 
         255, 255, 255, 255, 237, 107, 25, 1, 2, 2, 55, 197, 255, 255}}, {{0, 
         20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 233, 178, 131, 79, 0, 65, 149, 
         252, 255, 255}, {255, 255, 255, 255, 255, 121, 1, 1, 53, 91, 1, 1, 
         139, 255, 255}, {255, 255, 255, 255, 255, 222, 160, 229, 250, 253, 
         162, 1, 8, 235, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 252, 55, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 
         255, 255, 254, 97, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 255, 
         255, 255, 255, 250, 1, 51, 249, 255}, {255, 255, 255, 255, 255, 255, 
         255, 255, 255, 255, 250, 1, 129, 255, 255}, {255, 255, 255, 255, 255,
          255, 255, 255, 255, 255, 137, 1, 245, 255, 255}, {255, 255, 255, 
         255, 255, 255, 255, 255, 255, 238, 6, 69, 251, 255, 255}, {255, 255, 
         255, 255, 255, 255, 255, 255, 255, 142, 4, 215, 255, 255, 255}, {255,
          255, 255, 255, 255, 255, 255, 255, 218, 11, 59, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 236, 47, 22, 239, 255, 255,
          255, 255}, {255, 255, 255, 255, 255, 255, 253, 175, 13, 194, 255, 
         255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 168, 1, 121, 255,
          255, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 187, 11, 1, 93, 
         192, 255, 255, 255, 255, 255}, {255, 255, 250, 166, 82, 9, 1, 1, 1, 
         3, 58, 201, 253, 255, 255}, {255, 176, 52, 1, 1, 13, 94, 130, 130, 
         90, 1, 1, 35, 136, 249}, {232, 23, 1, 1, 50, 219, 255, 255, 255, 251,
          205, 118, 31, 4, 107}, {205, 1, 3, 53, 235, 255, 255, 255, 255, 255,
          255, 255, 255, 117, 190}, {240, 29, 87, 255, 255, 255, 255, 255, 
         255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cFfy4pMs1HFbrSyczM7IskcGlnNCcTM7PMbITQGVugGqBYPEKXMg9Q
yLxMh3ky1OR5ikxMDExGr/7/z2Dq+gMSehkKVKJrUP0MyJ7DrPsZSB0zYmI2
LfoJ0bKRWeb9/3eL5Jm5Sj5Bjf1my9wBNACobxvcqs3MzHP/P2di4mqEC+03
BVm0l5m/Bi50s5iJe9L//4rMHnChN8rMTC1AWox5Gcz4XmVm3bnvgCwm5l0Q
oalezMxJL8FMUyaQcR9OlPIw63W/gkibMcu0X5ioAnSQHtxcR2ZIaMhsuA8X
++AHFOOK3/QIOWh/vewqe4Ua2gDMqh37
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 249, 149, 92, 40, 14, 99, 234, 255}, {
         255, 255, 255, 162, 38, 2, 1, 2, 2, 2, 80, 255}, {255, 255, 149, 7, 
         2, 2, 12, 39, 20, 2, 2, 255}, {255, 158, 6, 2, 4, 86, 216, 255, 199, 
         2, 2, 183}, {255, 27, 2, 2, 118, 255, 255, 255, 218, 2, 2, 164}, {
         106, 0, 1, 96, 255, 255, 255, 255, 218, 1, 1, 163}, {74, 1, 2, 213, 
         255, 255, 255, 184, 17, 2, 2, 164}, {12, 1, 49, 250, 255, 255, 255, 
         97, 2, 2, 2, 83}, {2, 1, 14, 220, 255, 255, 223, 12, 2, 2, 2, 59}, {
         54, 1, 2, 38, 113, 164, 118, 2, 2, 2, 2, 107}, {157, 0, 1, 1, 1, 1, 
         0, 1, 1, 1, 27, 255}, {255, 153, 26, 2, 2, 2, 1, 2, 2, 6, 160, 
         255}, {255, 255, 234, 174, 128, 128, 1, 2, 2, 66, 255, 255}, {255, 
         255, 255, 255, 255, 215, 1, 2, 18, 205, 255, 255}, {255, 255, 255, 
         255, 255, 131, 1, 2, 71, 255, 255, 255}, {255, 255, 255, 255, 178, 1,
          0, 37, 209, 255, 255, 255}, {255, 255, 255, 247, 83, 2, 1, 76, 255, 
         255, 255, 255}, {255, 255, 255, 140, 2, 2, 38, 233, 255, 255, 255, 
         255}, {255, 255, 255, 89, 2, 2, 120, 255, 255, 255, 255, 255}, {255, 
         255, 255, 70, 2, 100, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {12, 
         0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 250, 128, 24, 61, 172, 255, 255, 255, 255, 
         255, 255}, {255, 255, 220, 52, 2, 2, 18, 18, 56, 249, 255, 202, 202, 
         255}, {255, 255, 31, 2, 27, 132, 237, 166, 8, 201, 242, 42, 19, 
         228}, {255, 164, 1, 13, 212, 255, 255, 205, 96, 255, 73, 2, 11, 
         222}, {255, 157, 1, 22, 255, 255, 255, 255, 255, 156, 7, 2, 135, 
         255}, {255, 217, 0, 9, 207, 255, 255, 255, 175, 1, 1, 122, 255, 
         255}, {255, 209, 1, 2, 29, 183, 160, 115, 23, 2, 2, 197, 255, 255}, {
         255, 187, 1, 2, 2, 2, 2, 1, 2, 2, 45, 215, 255, 255}, {255, 255, 236,
          153, 44, 2, 2, 1, 28, 206, 246, 255, 255, 255}, {255, 255, 255, 255,
          80, 2, 2, 47, 224, 255, 255, 255, 255, 255}, {255, 255, 255, 159, 
         31, 1, 1, 59, 255, 255, 255, 255, 255, 255}, {255, 255, 250, 38, 2, 
         21, 7, 10, 177, 255, 255, 255, 255, 255}, {255, 255, 128, 2, 57, 249,
          127, 1, 52, 255, 255, 255, 255, 255}, {255, 239, 9, 2, 170, 255, 
         210, 1, 19, 243, 255, 255, 255, 255}, {255, 120, 1, 55, 237, 255, 
         255, 77, 2, 140, 255, 255, 255, 255}, {230, 24, 0, 179, 255, 255, 
         255, 99, 1, 80, 255, 255, 255, 255}, {215, 2, 1, 216, 255, 255, 202, 
         16, 4, 169, 255, 255, 255, 255}, {243, 73, 1, 76, 176, 87, 20, 1, 22,
          255, 255, 255, 255, 255}, {255, 172, 1, 2, 2, 2, 2, 48, 185, 255, 
         255, 255, 255, 255}, {255, 255, 174, 17, 2, 55, 137, 232, 255, 255, 
         255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 251, 186, 19, 1, 37, 243, 255, 255, 
         255, 255}, {255, 255, 255, 255, 119, 3, 3, 2, 3, 234, 255, 255, 255, 
         255}, {255, 255, 255, 203, 13, 3, 11, 19, 3, 137, 255, 255, 255, 
         255}, {255, 228, 129, 23, 3, 19, 144, 212, 3, 103, 255, 255, 255, 
         255}, {255, 149, 2, 3, 56, 189, 255, 212, 3, 68, 255, 255, 255, 
         255}, {244, 36, 1, 16, 238, 255, 255, 212, 2, 146, 255, 255, 237, 
         255}, {156, 3, 16, 187, 255, 255, 255, 226, 87, 241, 233, 127, 70, 
         255}, {86, 3, 53, 255, 255, 255, 255, 255, 255, 244, 88, 3, 5, 
         197}, {65, 3, 175, 255, 255, 255, 255, 244, 156, 44, 3, 3, 2, 166}, {
         73, 3, 210, 255, 255, 184, 149, 36, 3, 3, 3, 3, 2, 131}, {86, 2, 18, 
         28, 2, 2, 2, 0, 2, 5, 78, 2, 0, 192}, {122, 3, 2, 3, 3, 3, 3, 2, 66, 
         189, 191, 3, 16, 213}, {249, 103, 23, 24, 33, 129, 129, 146, 250, 
         255, 95, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 2, 61, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 129, 47, 193, 255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxf2Sw35Sp7AOKSDcTM3M8iogFVOTKdAMguPL/fwc7RKScH0gzM0tc
/W/ADBZZx8TEwAQEDDqlIBbH1f/uzMxgNRCCe+5/sIj+7F27ICKB/8Eiou/+
/3cCi4BYIBG+q//LWcEi28CuYmNi8A4FG29/AOIsV5ihLe+gDn0mjDAUAsAu
BYq4wX3HDtVlCBV4qghzM1MNRGQ33LnMHhCROAyRPQiRIojIryllZUzM5kll
ZV0/ISIAhOa1sw==
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 103, 0, 
         221}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 168, 2, 2, 
         107}, {255, 255, 255, 255, 255, 255, 255, 255, 249, 47, 2, 2, 155}, {
         255, 255, 255, 255, 255, 255, 255, 255, 108, 2, 2, 2, 173}, {255, 
         255, 255, 255, 255, 255, 255, 246, 50, 2, 2, 74, 243}, {255, 255, 
         255, 255, 255, 255, 255, 186, 2, 2, 2, 218, 255}, {255, 255, 255, 
         255, 255, 255, 244, 94, 2, 2, 59, 242, 255}, {255, 255, 255, 255, 
         255, 255, 192, 2, 2, 2, 113, 255, 255}, {255, 255, 255, 255, 255, 
         255, 105, 2, 2, 59, 242, 255, 255}, {255, 255, 255, 255, 255, 183, 
         20, 2, 2, 173, 255, 255, 255}, {255, 255, 255, 255, 255, 75, 2, 2, 
         92, 243, 255, 255, 255}, {255, 255, 255, 255, 215, 18, 2, 2, 200, 
         255, 255, 255, 255}, {255, 255, 255, 241, 80, 2, 2, 24, 217, 255, 
         255, 255, 255}, {255, 255, 255, 168, 2, 2, 23, 194, 255, 255, 255, 
         255, 255}, {255, 255, 177, 14, 2, 2, 110, 255, 255, 255, 255, 255, 
         255}, {255, 242, 58, 2, 2, 100, 247, 255, 255, 255, 255, 255, 255}, {
         244, 71, 2, 2, 22, 212, 255, 255, 255, 255, 255, 255, 255}, {230, 2, 
         2, 2, 51, 255, 255, 255, 255, 255, 255, 255, 255}, {230, 2, 2, 2, 
         109, 255, 255, 255, 255, 255, 255, 255, 255}, {242, 50, 20, 146, 253,
          255, 255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 
         255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfwR4t/Se824k/v+T9oz+/1FAHKPUOxSBTCZGxsBvCP4fWxZGLnHG
pwiRSYwMWpsrxd/CBQ6yMvIe/u9eDxf47czIe+P//y/P4CJTGVm3oVhzS5Kx
GUT/OPUAar8fozHI2n5dRlHlnSCBGUzM8f//dxkCHaTGZ/b+//+HvAxAgU28
jPJpBz+aMS78/zqQkXPz/7dsjDlf//9fysh2+f8uRsYp/19bMRb//f//mRBj
2P/vwoyK3///iGTkmnjUS4hRa/v/BQyMTf/v7Z7KCAaFT/7/X8DIKKwiDOay
SEz+DbR6GzMjIwOIr1d2COrgw+6McplNFy9+hfkAAJGd+CI=
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 240, 54, 
         157}, {255, 167, 70, 212, 255, 255, 255, 255, 255, 156, 1, 66}, {253,
          86, 1, 196, 255, 255, 255, 255, 255, 154, 1, 160}, {173, 1, 9, 206, 
         255, 255, 255, 255, 255, 48, 5, 188}, {173, 1, 50, 255, 255, 255, 
         255, 255, 235, 33, 28, 255}, {123, 1, 50, 255, 255, 255, 255, 255, 
         190, 1, 28, 255}, {86, 1, 19, 180, 230, 255, 255, 255, 87, 1, 28, 
         255}, {173, 1, 1, 1, 29, 59, 99, 66, 20, 1, 28, 255}, {248, 229, 58, 
         17, 9, 1, 1, 1, 1, 1, 127, 255}, {255, 255, 255, 255, 210, 163, 78, 
         50, 1, 1, 206, 255}, {255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 
         245, 255}, {255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 245, 
         255}, {255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 173, 255}, {255,
          255, 255, 255, 255, 255, 255, 233, 1, 1, 136, 255}, {255, 255, 255, 
         255, 255, 255, 255, 233, 1, 1, 147, 255}, {255, 255, 255, 255, 255, 
         255, 255, 233, 0, 1, 217, 255}, {255, 255, 255, 255, 255, 255, 255, 
         233, 1, 1, 136, 255}, {255, 255, 255, 255, 255, 255, 255, 235, 12, 1,
          30, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 87, 1, 28, 
         255}, {255, 255, 255, 255, 255, 255, 255, 255, 158, 63, 171, 
         255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHx//8/TaULtm2bGhOTuW3bk/8gsJSJkQkIwASv+mKgSCuSCCOTCFDZ
Qw0gx3BF/uGTjU6MTKxngYqeOjExsa8GMi6KMzK5g03678vI6PTk/2ZRRgbB
pxCRr+FMTI6JrExMqlCB//8fyIJNtv0EE/j/QhEowpr8Hi5Qrga0WPMgnP/E
iREIGCzgAmfVgUYoxDNawgTugwytfbWR0fAnROC3GdB5c77/38DIdg8icgJo
KdC9H8XhuvIYGWP+//+SyciwBibCxKTZPsWOiUn7O1SkGhYQR+FWSYBFBPvh
rvl/e0KsTWzWNYQAAHaK2xo=
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mTAQiwDxfzTw59eD+3DO29h7TxYV+8szMspCRf4uUmMEAQ5e3rgNUEXZQD5L
VMWORwhTeoFCEXtRDfZkZMz4gmrZEka+ouuze12tFiLEchhNuYH2KfHznYAJ
veMFGqew6fv/GYzTYGK/J9UtufgNyPgiGozuh///Jc3/oAs94LECi72+ixCr
YewBUbt0xeBC9635n4FoDkZbmNBZMcYuMMOdsRwq1MPFmP0OzFqm9BRE3Vsd
zqy29y9Edhkjb0JCgjU7I2P2W7h7cwJAoHz9979wuwChbCmh
         "], {{0, 19}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 19},
       PlotRange->{{0, 20}, {0, 19}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU//////2FCyf9GRwm/PsPB1PVmYBAK946Ei60h42JSVrn4s//l8TuQoXu
CDAxmb8CM4NKoWJHmZi4dkGYFlFQMQUmplAIaxczTIwBLjaHCSbGyMRVD2E1
Mbn8hrD0mdgP/wHSZ4O4mJh0tNpvAtk3eZmYTBqOJAsCXTT3bTC7+Vmg4AZW
JjAQS1kO5J3w4rgFpH6t42Vi0a5fDTHrr4rMEyA1m42pGeFVVaY1QNKFSeMD
QmwvkxFYzAsh9P8KExNYTP05XOiqHJMpkFrAzqQxfQ9IYP/sEBkmwd0gZgnI
OapAwMLExGL/GKJhX5G1FdiR2nm7kYz+d3FF9cWLn8BsAKFFFFY=
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxdUDEOwjAMtJgYEeID/ILRjKxFPKAVoWIJUoqEmPw0Py04cRvsWnKUO93F
OR+HV/fYAMC0laPrP+eU+u91J+AWp+cYw/0S32EM6TQU2UF6L52XYgDKtoTw
lEAkxJWAEBxRC7lZRFE0AOynkFJ2LNU7zdK/3BAFUEbzb3W5n86MM6GwRsJr
E9VdYGMYNT3rO1wjaCzU1HY9S3K7Li7JG/oBdlL2Qg==
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxf2TwtoVJHJn/0oKJuQvB/V4vxOyz5C+cfzOEmTnlDkL+kj0z96Yf
CP4JYQaBqUjGnRZnNt6NxL/iyCxyCokPNE/4AbL99swiKPxmoHmPald8gfFX
8zJVAw1lKoTyv+gwx50X5eBnCod5gJl5fT/HXH+4wETm6P+OLv91mNZD+Ge5
mK4eYtpVwpQJVbCKmflqtloOM/MOqMBGFuacZGZm5hlwV1QwMzMxc8R+hAv8
7nNwyLmAcCYATP0GOA==
         "], {{0, 20}, {17, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{17, 20},
       PlotRange->{{0, 17}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyi432nAyMjIwFgKZG/tFgUCASYIkL71yIGbCQXMn4fKZ1J8sZod
wuJWUckD0dr//6+sUZoBBFv+//8AFYGDleYgkSKEwCsTkEDVX7jAMxuwcScR
ArYgvlzJV7iII0hA8gLCkBUgZ7JdhPO/57OABKIQKtaCDV2GEFgGdnbGL7jA
Ih6QgN03hBJ7kIDEPiTXr+AHeecpksj/OKDIRmSB/++bmTo+I7gA6Xnb6w==

         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         239, 29, 214}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 229, 1, 57}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 204, 1, 71}, {255, 255, 157, 249, 255, 255, 255, 255, 255, 255, 
         255, 83, 1, 123}, {255, 255, 25, 156, 255, 255, 255, 255, 255, 255, 
         234, 21, 1, 204}, {255, 246, 22, 86, 255, 255, 255, 255, 255, 255, 
         133, 1, 64, 250}, {255, 179, 1, 86, 255, 255, 255, 255, 255, 249, 57,
          1, 27, 242}, {243, 42, 1, 140, 255, 255, 255, 255, 255, 90, 1, 1, 
         81, 255}, {197, 1, 12, 211, 255, 255, 141, 62, 97, 10, 1, 1, 118, 
         255}, {36, 1, 1, 78, 89, 5, 1, 1, 1, 1, 1, 25, 253, 255}, {78, 1, 1, 
         1, 1, 1, 1, 85, 2, 1, 1, 107, 255, 255}, {239, 19, 8, 61, 61, 61, 
         177, 255, 119, 4, 61, 195, 255, 255}, {255, 228, 220, 255, 255, 255, 
         255, 252, 107, 3, 183, 255, 255, 255}, {255, 255, 255, 255, 255, 255,
          255, 182, 1, 1, 170, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         250, 96, 1, 73, 245, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         204, 1, 1, 215, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         204, 1, 1, 176, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         204, 1, 46, 245, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         213, 9, 61, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         255, 207, 139, 255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 
         255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 235, 217, 128, 97,
          0, 166}, {255, 255, 255, 255, 255, 255, 206, 139, 35, 2, 2, 2, 54, 
         225}, {255, 255, 255, 255, 253, 97, 13, 2, 2, 3, 49, 172, 245, 
         255}, {255, 255, 255, 255, 149, 2, 2, 2, 42, 140, 255, 255, 255, 
         255}, {255, 255, 255, 239, 41, 2, 19, 122, 251, 255, 255, 255, 255, 
         255}, {255, 255, 254, 151, 2, 2, 107, 255, 255, 255, 255, 255, 255, 
         255}, {255, 255, 244, 2, 2, 2, 142, 255, 255, 255, 255, 255, 255, 
         255}, {255, 255, 244, 2, 2, 2, 14, 60, 60, 131, 238, 255, 255, 
         255}, {255, 255, 144, 2, 2, 2, 2, 2, 2, 2, 18, 137, 249, 255}, {255, 
         255, 207, 22, 20, 155, 163, 163, 109, 20, 2, 2, 92, 245}, {255, 255, 
         255, 222, 220, 255, 255, 255, 255, 219, 125, 2, 2, 212}, {255, 255, 
         255, 255, 255, 255, 255, 255, 255, 255, 157, 2, 2, 157}, {255, 255, 
         255, 255, 255, 255, 255, 255, 255, 255, 131, 2, 2, 129}, {255, 223, 
         161, 255, 255, 255, 255, 255, 255, 164, 11, 2, 2, 212}, {250, 63, 70,
          255, 255, 255, 255, 255, 164, 5, 2, 2, 76, 253}, {137, 2, 121, 255, 
         255, 255, 255, 231, 13, 2, 2, 9, 195, 255}, {104, 2, 77, 255, 255, 
         204, 128, 29, 2, 2, 2, 162, 255, 255}, {163, 2, 2, 6, 6, 4, 2, 2, 2, 
         49, 183, 254, 255, 255}, {242, 77, 2, 2, 2, 2, 2, 57, 173, 229, 255, 
         255, 255, 255}, {255, 208, 68, 150, 110, 162, 218, 247, 255, 255, 
         255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/4eAL9u2NTHN3bYNzLman59/7f/qeBYWJhYgyDsIFJMGMuapCrNAxZgk
jv//D2GxsBgXFhQmgliSB6FiOTuugQzdYQ7kFv4/pcjExMSQte0qxC4GIG/7
/4MSYL1G+SDjpwFZzg///3/Yxwc1Xk0NyFJuAWuYUWAEt9f5NdTF//PhYlNg
Qtv8QRYxgYm5ENumgZXoTKkHKy4EihwFmcypsfLZ/193ooFiwof+/1cDyZZB
DNkA8tG1/9P4QP74ChJ54i0B1rsNZPKp///vA8MKbAfvjP/+IOMV8/MdoW5h
6f//fwUimIBYLvrOL6Aha4ThYkmF16AOPrRjR3POjh07tu/4ChUBAIxxtyc=

         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxf1SwibEUTUSb0R3CWDb5L5g+zAYR+ZEuAVUcyAgRucjIaPAcxHgl
ysiYBaR/BzNq7gIr8WdkFL0OpLMYGXPBAodYGBl7gfRdfkbBG2ARL0ZGxk3/
///LZGScCtT69d8koJIp//7/f8TIyH7naqqHxmsXoJIrQKXmjIzMZryMjBqb
gAISj4EiCoxgYMFuz8jIdxEocIYbxJfKPZuTy8goAzI/GshnXfr49/+TMoyM
c0Ei6xgZo7+CGEArTX+BGM8kQl+B6JuCjAz1EG/fglBzGBklH6EETAwjo9d/
NBH2A6giOxgXQlkAhSL11A==
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/weBTUuqGMyWHP+PAHe8ebltt4kLyUW/+wgVuqjEFLMXSP/KlWXShgh9
UmISugNhHmLi7v8FYrxjEtoD1fGMiYnpPojxZ5Lff7gYV8ev/6igG2YeHHyX
5FA4gyp0JoFJ8BSaMl4mJuaQNddRxAQF1s3j4tSp+PYTTfHTVD4mn///3z5D
kZjNJLqnW4sJ2e//jzIxLZvCx7QGXez/fCahmqloYn9m8TNx1MDMfKivkvMF
SM8Eer198WywWA0TRM/fD2k+vBzsgiDA6bwFbkxzRiETSPkykEYAXp00Cg==

         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{61, 230, 255, 255, 255, 255}, {69, 52, 255, 255, 255, 
         255}, {197, 12, 255, 255, 255, 255}, {220, 43, 182, 255, 255, 255}, {
         93, 4, 156, 255, 255, 255}, {118, 0, 156, 255, 255, 255}, {247, 36, 
         62, 251, 255, 255}, {255, 67, 1, 178, 255, 255}, {255, 147, 1, 100, 
         255, 255}, {255, 249, 1, 100, 255, 255}, {255, 253, 79, 100, 255, 
         255}, {255, 255, 99, 2, 233, 255}, {255, 255, 99, 1, 146, 255}, {255,
          255, 99, 1, 133, 255}, {255, 255, 99, 1, 42, 255}, {255, 255, 192, 
         1, 42, 255}, {255, 255, 202, 1, 14, 213}, {255, 255, 247, 96, 1, 
         193}, {255, 255, 255, 232, 4, 127}, {255, 255, 255, 196, 2, 89}}, {{
         0, 20}, {6, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{6, 20},
       PlotRange->{{0, 6}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cCjxcUFMgwcl8Fcx5Mq/aTlZEVYgSDvSChHn0Ih5FDj9vPreQDUOgF
H5Arx2hQt+ox3JjNjIxpxz6//YFs9BpG5p3/UcEPKUYRNKH/DxgZl6OLTWcU
PvUNQ4yRUX8TqtgVsOv0bMq/Iwl+y7TgBQlHoppw/Xi5AiNjOLpV92MYudHF
/pczOsCYRyaCPfW1iZGxACp0QZXR/+bOlUUajAwy76Bie4AWsjGDrOWvhmm9
IwkJOn7HuQijV8fI2SbU772LZBsANFYpUA==
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{172, 62, 53, 226, 255, 255}, {24, 1, 1, 56, 255, 255}, {
         24, 1, 1, 9, 255, 255}, {45, 1, 1, 9, 255, 255}, {188, 1, 1, 9, 255, 
         255}, {188, 1, 1, 9, 255, 255}, {188, 1, 1, 9, 255, 255}, {188, 1, 1,
          9, 255, 255}, {188, 1, 1, 4, 158, 255}, {188, 1, 1, 1, 100, 255}, {
         233, 67, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {255, 98, 1, 1, 
         100, 255}, {255, 98, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {
         255, 98, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {255, 189, 4, 1,
          100, 255}, {255, 255, 7, 1, 6, 145}, {255, 255, 7, 1, 1, 25}}, {{0, 
         20}, {6, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{6, 20},
       PlotRange->{{0, 6}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 173, 82, 2, 21, 103, 103, 143, 234, 
         255, 255}, {255, 255, 255, 92, 12, 2, 3, 205, 43, 2, 3, 52, 194, 
         255}, {255, 255, 193, 1, 22, 132, 255, 255, 214, 92, 32, 1, 2, 
         255}, {255, 255, 113, 2, 104, 255, 255, 255, 255, 255, 235, 83, 3, 
         173}, {255, 255, 72, 1, 104, 255, 255, 255, 255, 255, 255, 123, 2, 
         113}, {255, 255, 153, 2, 23, 214, 255, 255, 255, 255, 132, 2, 3, 
         235}, {255, 255, 255, 62, 2, 41, 224, 255, 173, 41, 2, 52, 235, 
         255}, {255, 255, 255, 204, 23, 2, 23, 52, 12, 2, 84, 235, 255, 
         255}, {255, 255, 255, 255, 214, 82, 2, 1, 2, 1, 104, 255, 255, 
         255}, {255, 255, 255, 255, 255, 245, 205, 2, 3, 2, 144, 255, 255, 
         255}, {255, 255, 255, 255, 255, 244, 123, 1, 2, 173, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 163, 3, 2, 84, 255, 255, 255, 255, 
         255}, {255, 255, 255, 255, 193, 1, 2, 31, 235, 255, 255, 255, 255, 
         255}, {255, 255, 255, 234, 52, 2, 3, 215, 255, 255, 255, 255, 255, 
         255}, {255, 255, 234, 82, 2, 11, 174, 255, 255, 255, 255, 255, 255, 
         255}, {255, 255, 72, 2, 3, 93, 255, 255, 255, 255, 255, 255, 255, 
         255}, {255, 123, 2, 1, 63, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}, {255, 2, 3, 2, 185, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}, {92, 0, 2, 113, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}, {93, 2, 43, 235, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 111, 99, 0, 9, 61, 114, 241, 255}, {
         255, 255, 253, 137, 8, 22, 81, 120, 52, 4, 152, 255}, {255, 255, 167,
          2, 139, 255, 255, 255, 255, 183, 207, 255}, {255, 223, 30, 139, 253,
          255, 255, 255, 255, 203, 21, 164}, {255, 158, 60, 255, 255, 255, 
         255, 255, 255, 43, 2, 195}, {194, 0, 179, 255, 255, 255, 255, 159, 
         31, 1, 1, 255}, {157, 51, 249, 255, 255, 247, 115, 70, 46, 2, 48, 
         255}, {187, 19, 228, 255, 212, 131, 139, 243, 109, 2, 100, 255}, {
         255, 153, 65, 142, 125, 250, 255, 255, 80, 2, 190, 255}, {255, 255, 
         255, 232, 255, 255, 255, 239, 20, 33, 241, 255}, {255, 255, 255, 255,
          255, 255, 255, 137, 1, 63, 255, 255}, {255, 255, 255, 255, 255, 255,
          255, 137, 2, 146, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 70,
          27, 242, 255, 255}, {255, 255, 255, 255, 255, 255, 147, 5, 96, 255, 
         255, 255}, {255, 255, 255, 255, 255, 255, 99, 10, 207, 255, 255, 
         255}, {255, 255, 255, 255, 255, 194, 0, 81, 255, 255, 255, 255}, {
         255, 255, 255, 255, 255, 113, 6, 167, 255, 255, 255, 255}, {255, 255,
          255, 255, 255, 60, 127, 255, 255, 255, 255, 255}, {255, 255, 255, 
         255, 203, 7, 157, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 119,
          40, 232, 255, 255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfxj4Nb02iIHBZBuU++d6uRwTGJj+AAt8agRxOERERJiZ1gL5v6ep
gvg124FsNaYDQIF2kALz7WDVU5k+/38JEpCufwbif8wxZ/r8TR0oIL8XrOCD
F5D9+RaQUNwJFnjvDWRLfI0FEk/A/OM+IPN6/gOJuK8HDhxIMwY7J+8XSITT
jAkGVv/8/38mEwJIV4EcfM8XIVIP8dLvKx2Rq1aDBFy/w739/50bUED2HELg
gytI4DxC4P9SoIAMssAjDqDIZiSB/1lMTJKT/iAJfCpkEr+MxAcAUX7Zpg==

         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 191, 175, 175, 175, 59, 48, 175, 247, 
         255, 255, 255}, {255, 255, 255, 177, 20, 1, 1, 1, 1, 1, 1, 87, 178, 
         255, 255}, {255, 255, 255, 161, 56, 1, 1, 1, 1, 1, 1, 1, 9, 215, 
         255}, {255, 255, 255, 255, 243, 83, 1, 1, 1, 1, 1, 1, 1, 115, 255}, {
         255, 255, 255, 255, 255, 240, 93, 45, 16, 1, 1, 1, 1, 36, 255}, {255,
          255, 255, 255, 255, 255, 255, 255, 87, 1, 1, 1, 1, 36, 255}, {255, 
         255, 255, 255, 255, 255, 255, 184, 18, 1, 1, 1, 1, 54, 255}, {255, 
         255, 255, 255, 255, 255, 251, 98, 1, 1, 1, 1, 1, 212, 255}, {255, 
         255, 255, 255, 255, 251, 115, 1, 1, 1, 1, 39, 185, 243, 255}, {255, 
         255, 255, 255, 255, 148, 1, 1, 1, 1, 1, 54, 255, 255, 255}, {255, 
         255, 255, 255, 255, 148, 1, 1, 1, 1, 1, 54, 255, 255, 255}, {255, 
         255, 255, 220, 165, 5, 1, 1, 1, 1, 1, 54, 255, 255, 255}, {255, 255, 
         255, 131, 1, 1, 1, 1, 1, 1, 1, 157, 255, 255, 255}, {255, 255, 178, 
         13, 1, 1, 1, 1, 1, 15, 157, 252, 255, 255, 255}, {255, 181, 17, 1, 1,
          1, 1, 1, 1, 34, 123, 123, 123, 140, 255}, {246, 98, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 36, 255}, {193, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          20, 191}, {240, 87, 1, 1, 1, 1, 1, 1, 1, 1, 1, 41, 194, 194, 221}, {
         255, 114, 1, 1, 1, 1, 1, 1, 1, 28, 98, 130, 255, 255, 255}, {255, 
         211, 177, 92, 1, 1, 1, 1, 1, 193, 255, 255, 255, 255, 255}}, {{0, 
         20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/I4FGhmsg6m/KHDD3jjJTO4huYxK4AaLDGMXOAqmfEoysJ4D0K17G
SBA3gokxDyTtwcS4FUjdZ2ISfwmkH4gyqfwA0mlMTLtAhkYzMdUB6YPMTHK/
QboZmTTeAOm9jIw5IN3TGBkng+h9jEz8Wcc/f9ViZNn9//+PT0A+EKhrMjGy
lO6dZnLgmT4jDDAxMqn8//+kVIobyAIjnnqwwx+tXq3AxOS8etUzuNcEGc1/
Ifn0IQuTHbLP5zMy2uLjOzAyrUPmpzCFQlkAmHHaJA==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/w8HvTnYGpTsw3pt+USYg2PL/6GYgsNBSAvGYRE4dFWBCAg7/93KB
aEUVlboVQDr4///JAgLhM74ATfjAxMR2BmH8B3MmptkI7v/HQOV3kfgZTEzh
LxHc60JMKl+RpLOYmOqQuN/tmJi7kfg5TEy8SNzLUkz8x5H4S5mYZP+j8r2Q
+c1MTMuQ+TJofHU0/lImmWsQFgAk0uwa
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHx////f6cu/I8Cnvowh///3xu2a/IbqEgfE7OoVY4oMzOT4xu4CJAH
xsfBAof5GJiY+GQz45kYFZ+BBA6IMjNpJl74/ymYmckarCQMqHo1UKUekOZf
BxLhYWbe+O3/fwewOTxNQBED7i0giSImJiZGILa/8L9mHcR8Uah9CXB33jwO
BK3MTBpv/iODrxuZmJNRffTfnikcTSSSGV2ECV3kDFzkQNFhIPljOhMjx1mY
/0Vrjh3LBLonBBFGEBeGH4eKfIKKmALZACzs8Yc=
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 41, 83, 255}, {255, 255, 2, 3, 255}, {255, 255, 
         21, 2, 153}, {255, 255, 103, 3, 153}, {255, 255, 41, 2, 214}, {255, 
         255, 2, 3, 255}, {255, 214, 1, 2, 255}, {255, 173, 2, 3, 255}, {255, 
         153, 1, 2, 255}, {255, 153, 2, 43, 255}, {255, 153, 1, 104, 255}, {
         255, 153, 2, 104, 255}, {255, 52, 1, 205, 255}, {234, 32, 22, 225, 
         255}, {183, 2, 52, 255, 255}, {103, 3, 52, 255, 255}, {103, 2, 152, 
         255, 255}, {22, 3, 235, 255, 255}, {0, 63, 255, 255, 255}, {2, 144, 
         255, 255, 255}}, {{0, 20}, {5, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{5, 20},
       PlotRange->{{0, 5}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 236, 192, 19, 10, 135, 
         233}, {255, 255, 255, 255, 255, 234, 140, 34, 2, 2, 2, 2, 67}, {255, 
         255, 255, 250, 88, 32, 2, 1, 2, 41, 6, 2, 36}, {255, 255, 208, 20, 2,
          2, 21, 148, 239, 92, 2, 2, 196}, {255, 218, 59, 2, 35, 91, 243, 255,
          116, 2, 2, 111, 236}, {247, 82, 2, 5, 190, 255, 255, 255, 78, 45, 6,
          81, 255}, {131, 2, 2, 167, 255, 255, 245, 229, 41, 2, 2, 62, 255}, {
         122, 2, 2, 233, 227, 128, 14, 1, 2, 2, 2, 167, 255}, {122, 2, 2, 62, 
         27, 2, 2, 140, 58, 2, 18, 232, 255}, {170, 2, 2, 2, 2, 35, 208, 240, 
         45, 2, 168, 255, 255}, {255, 230, 144, 144, 211, 255, 240, 48, 0, 57,
          250, 255, 255}, {255, 255, 255, 255, 255, 234, 59, 0, 19, 189, 255, 
         255, 255}, {255, 255, 255, 255, 237, 109, 2, 1, 159, 255, 255, 255, 
         255}, {255, 255, 255, 254, 96, 2, 2, 148, 251, 255, 255, 255, 255}, {
         255, 255, 255, 147, 2, 19, 153, 255, 255, 255, 255, 255, 255}, {255, 
         255, 224, 15, 2, 118, 255, 255, 255, 255, 255, 255, 255}, {255, 204, 
         15, 2, 28, 221, 255, 255, 255, 255, 255, 255, 255}, {251, 117, 2, 28,
          216, 255, 255, 255, 255, 255, 255, 255, 255}, {150, 2, 2, 205, 255, 
         255, 255, 255, 255, 255, 255, 255, 255}, {228, 64, 150, 252, 255, 
         255, 255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 
         255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyD4OsGbkdF+/6//MHBBmgkIGJkmwwSeqzPJh86fL8Sk+AkmlOj1
HkieFWNaDRN5+w5M5SFEoCCPyR9DxAhDZBaGCJo5n9nQRSoZVeHst4fzgMCE
SfnZs58g/s9OWSaIL4DAOymp8Fc5E5OAkZEsE6OckTS/pGbi+ZNMvNGn/z83
Y0p48P/O6ZsfQXb2/f//zJxJ9RHMWJD/nlkwqT2EW8TElO0uzaR+H+GM6SAr
1JAE/n+q1pKf+x3ZqQDJ/w48
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 219, 33, 2, 2, 0, 75, 148, 250, 255, 255}, {255,
          219, 36, 3, 3, 3, 2, 3, 3, 120, 250, 255}, {255, 85, 3, 3, 28, 72, 
         71, 72, 53, 3, 118, 255}, {160, 2, 3, 28, 205, 255, 255, 255, 185, 3,
          3, 212}, {139, 2, 3, 176, 255, 255, 255, 255, 248, 44, 3, 87}, {24, 
         0, 111, 255, 255, 255, 255, 255, 185, 2, 2, 34}, {25, 2, 163, 255, 
         255, 255, 255, 255, 185, 3, 3, 139}, {25, 2, 163, 255, 255, 255, 255,
          255, 102, 3, 3, 139}, {120, 2, 53, 230, 255, 255, 246, 89, 15, 3, 3,
          139}, {192, 2, 3, 19, 25, 25, 22, 3, 3, 3, 3, 192}, {255, 74, 2, 2, 
         2, 2, 0, 2, 2, 2, 2, 255}, {255, 246, 142, 49, 49, 49, 111, 134, 3, 
         3, 24, 255}, {255, 255, 255, 255, 255, 255, 255, 177, 3, 3, 118, 
         255}, {255, 255, 255, 255, 255, 255, 255, 135, 3, 3, 118, 255}, {255,
          255, 255, 255, 255, 255, 255, 208, 3, 3, 170, 255}, {255, 255, 255, 
         255, 255, 255, 255, 93, 2, 2, 222, 255}, {255, 255, 255, 255, 255, 
         255, 255, 94, 3, 3, 118, 255}, {255, 255, 255, 255, 255, 255, 255, 
         126, 3, 3, 34, 255}, {255, 255, 255, 255, 255, 255, 255, 208, 3, 3, 
         98, 255}, {255, 255, 255, 255, 255, 255, 255, 250, 118, 3, 170, 
         255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 59, 23, 231, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 176, 11, 1, 171, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 51, 2, 1, 149, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 129, 4, 2, 71, 252, 255, 255, 255, 
         255, 255}, {255, 255, 255, 239, 20, 2, 2, 157, 255, 255, 255, 255, 
         255, 255}, {255, 255, 255, 152, 1, 1, 24, 217, 255, 255, 255, 255, 
         255, 255}, {255, 255, 227, 23, 2, 2, 144, 255, 255, 255, 255, 255, 
         255, 255}, {255, 255, 136, 2, 2, 45, 215, 255, 255, 255, 255, 255, 
         255, 255}, {255, 239, 39, 2, 2, 117, 255, 255, 255, 255, 255, 255, 
         255, 255}, {255, 157, 1, 2, 2, 236, 255, 255, 255, 255, 255, 255, 
         255, 255}, {255, 134, 0, 1, 103, 255, 255, 255, 227, 128, 46, 77, 
         121, 246}, {176, 11, 1, 19, 243, 255, 255, 242, 90, 2, 2, 2, 1, 
         133}, {119, 2, 1, 52, 255, 255, 194, 31, 2, 2, 2, 2, 1, 120}, {81, 2,
          24, 224, 255, 181, 29, 1, 2, 2, 2, 2, 24, 186}, {119, 2, 1, 179, 
         255, 43, 2, 1, 2, 2, 2, 2, 84, 246}, {80, 1, 0, 84, 69, 1, 1, 0, 1, 
         1, 1, 122, 255, 255}, {166, 7, 1, 2, 2, 2, 2, 1, 2, 2, 51, 246, 255, 
         255}, {255, 60, 1, 2, 2, 2, 2, 1, 2, 33, 243, 255, 255, 255}, {255, 
         165, 116, 26, 14, 2, 2, 129, 21, 72, 208, 255, 255, 255}, {255, 255, 
         255, 232, 147, 10, 2, 84, 171, 255, 255, 255, 255, 255}}, {{0, 20}, {
         14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "6"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725788045700085*^9, 
  3.7257880457467136`*^9}},ExpressionUUID->"e22923f4-81ce-4955-9bd7-\
30e1f7a1ef74"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "0", "1", "2", "3", "4", "5", "6", "7", "8",
                     "9"}, "RowWithSeparators"], Short[#, 20]& ]], 
                    Annotation[#, 
                    Short[
                    Row[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, ","], 20], 
                    "Tooltip"]& ], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "0", "1", "2", "3", "4", "5", "6", "7", "8",
                     "9"}, "RowWithSeparators"], Short[#, 20]& ]], 
                    Annotation[#, 
                    Short[
                    Row[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, ","], 20], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["100", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257880571888323`*^9},ExpressionUUID->"f7897f78-cfb4-4dfa-885f-\
db281977b6b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"digit", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cCe9wZJ/1/PRlJZIcrF5Pmq6NCzAlwoVeGTExZz/8fYGLShgnN0WPi
aH/wHyTWDRVayMXE0QZiHGBinQUW+baKhYm3HczMZ5KDqMpgYjJ4AWZdkWGa
D9HIwsQ0DSJbyAQRm8PFxHT/D1joljhTxFcgfZCXia33L1jobj6TyUcQw5+J
qRSi8W82E9MSsOUCTOq3wUJ/JjExub8BMn4HMDGvBwv9BAo5fgCxOpmYLCE6
XZmY7H+AWexMTLtB9CINVt5ciNB/RiaX7//PpimzMgmlw/zOyCS0IEWciYnJ
ZN1/hBgYiMR8RIRkAjNQhE/8GHJ4/58iodB9AUXkPwDBoBwJ
       "], {{0, 20}, {20, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 20},
     PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 196, 106, 255}, {255, 144, 74, 255}, {252, 64, 74, 
       255}, {236, 2, 74, 255}, {204, 2, 74, 255}, {145, 1, 73, 255}, {237, 
       28, 74, 255}, {158, 2, 87, 255}, {146, 2, 164, 255}, {146, 2, 164, 
       255}, {145, 1, 163, 255}, {146, 2, 164, 255}, {146, 2, 164, 255}, {146,
        2, 126, 255}, {146, 2, 48, 248}, {145, 1, 0, 205}, {146, 2, 1, 237}, {
       191, 2, 64, 252}, {244, 40, 74, 255}, {255, 164, 74, 255}}, {{0, 20}, {
       4, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{4, 20},
     PlotRange->{{0, 4}, {0, 20}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/4eAAxMzmZgYmJiYJn74DwP5TMzMzGCcgBAT0tCortJQYmbygYsdPAim
biGLQYEXptgrM0yxhUA7ElGFDggxMzt8QBULAboPVeRUChMz3zwUoWRxZia+
mShCeSCzNiGLvHcA+tUBWeR+jyIzk9NmZBtf6QD9rvYQWdU0Q6BQOLLIBTGg
o5jUoLwNkw4srJs8iRkEONRU1dSAmJdZkIMZKgYNTxBW1lh8YbIOXGwyCABt
BwDO0xJ3
       "], {{0, 20}, {20, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 20},
     PlotRange->{{0, 20}, {0, 20}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/A8HXrqqqyjxGiaqqByDuVTEmJiZGJhBQewXkbwMyVFXV1NR4mJhu
A/nPVq9e/RukMJGJ6ch/BNhvwcS0E8a5sW2JKBOT8zcw556NoTjIuLT7EEkz
iPkp36CKVSF8T5jm3urq+i9xTCzHkEz/f4uBsfn//9/PfkD5b7SYNF7872da
CuWfZGKa+v9/EpMdhPvLn4n3HIgvfAXM7wdL/9/HxJQO4q6XZlJ/BzKViYl/
/f9bBYxMfBtA4j8rmJj4VMWYGLkroeaUg0OCbRvMHX/WMdmYVe+C8gC6b9R+

       "], {{0, 20}, {16, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{16, 20},
     PlotRange->{{0, 16}, {0, 20}}], ",", " ", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 110, 92, 255, 255, 255, 255, 230, 255, 255}, {255, 75, 
       57, 255, 255, 255, 235, 42, 211, 255}, {236, 17, 130, 255, 255, 255, 
       232, 23, 170, 255}, {141, 1, 151, 255, 255, 255, 255, 56, 170, 255}, {
       141, 1, 204, 255, 255, 255, 255, 56, 170, 255}, {141, 39, 250, 255, 
       255, 255, 255, 56, 170, 255}, {141, 86, 255, 255, 255, 255, 255, 56, 
       170, 255}, {40, 86, 255, 255, 255, 255, 255, 56, 98, 250}, {23, 13, 37,
        37, 37, 97, 118, 9, 111, 252}, {159, 95, 95, 95, 95, 70, 0, 1, 170, 
       255}, {255, 255, 255, 255, 255, 255, 255, 56, 170, 255}, {255, 255, 
       255, 255, 255, 255, 255, 56, 170, 255}, {255, 255, 255, 255, 255, 255, 
       255, 56, 97, 255}, {255, 255, 255, 255, 255, 255, 255, 56, 76, 255}, {
       255, 255, 255, 255, 255, 255, 247, 46, 76, 255}, {255, 255, 255, 255, 
       255, 255, 233, 25, 76, 255}, {255, 255, 255, 255, 255, 255, 255, 123, 
       51, 248}, {255, 255, 255, 255, 255, 255, 255, 150, 1, 236}, {255, 255, 
       255, 255, 255, 255, 255, 196, 1, 111}, {255, 255, 255, 255, 255, 255, 
       255, 249, 32, 83}}, {{0, 20}, {10, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{10, 20},
     PlotRange->{{0, 10}, {0, 20}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
GUhCBIj/o4J/T9cVT0QRebs2mZGRwQMhsCtOT4SRMWHXxV9woS18HKIh827/
QdJ2WigGmQsWElF/iyZ0ToTRIboaReFPVUZGWXWmKchiv3199339L6/wDVnw
L9D+GxwOf9GM/L+KeR6UdRUm9MWW8wmUaaYHYv38/yWKMQEmncEoVNASqmGp
xp7/Am5lGjsjCMTvRnHIeiC48Q9JBABCvQ8W
       "], {{0, 16}, {20, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 16},
     PlotRange->{{0, 20}, {0, 16}}], ",", " ", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 255, 255, 255, 232, 173, 54, 80, 255, 255, 
       255, 255}, {255, 255, 255, 255, 255, 251, 108, 1, 19, 198, 255, 255, 
       255, 255}, {255, 255, 255, 255, 255, 148, 2, 20, 198, 255, 255, 255, 
       255, 255}, {255, 255, 255, 255, 197, 18, 18, 202, 255, 255, 255, 255, 
       255, 255}, {255, 255, 255, 247, 50, 2, 175, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 255, 40, 1, 101, 255, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 115, 8, 2, 184, 255, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 1, 2, 125, 249, 255, 255, 255, 255, 255, 255, 
       255, 255}, {248, 103, 1, 13, 219, 255, 255, 255, 255, 255, 255, 255, 
       255, 255}, {215, 2, 1, 134, 255, 255, 255, 255, 255, 255, 255, 255, 
       255, 255}, {193, 1, 14, 225, 255, 255, 255, 255, 255, 255, 185, 61, 
       158, 246}, {73, 2, 68, 255, 255, 255, 255, 255, 253, 137, 5, 2, 1, 
       141}, {21, 2, 157, 255, 255, 255, 255, 206, 88, 2, 2, 2, 72, 243}, {21,
        2, 195, 255, 255, 233, 140, 9, 2, 2, 2, 2, 172, 255}, {59, 2, 37, 142,
        195, 74, 2, 1, 2, 2, 55, 175, 255, 255}, {224, 37, 0, 1, 1, 1, 1, 0, 
       59, 187, 255, 255, 255, 255}, {255, 240, 92, 2, 2, 13, 134, 216, 249, 
       255, 255, 255, 255, 255}, {255, 255, 99, 2, 27, 212, 255, 255, 255, 
       255, 255, 255, 255, 255}, {255, 255, 1, 28, 212, 255, 255, 255, 255, 
       255, 255, 255, 255, 255}, {255, 255, 1, 194, 255, 255, 255, 255, 255, 
       255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{14, 20},
     PlotRange->{{0, 14}, {0, 20}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPx//+PHv//f+zYylUrVxWVrFx17D8QWFmHhcvJM7FAYDhQjRUDEwgy
QqFs+P9VLDB5a+sSiKpj4WHHQdp7gXgVUFXYfxRgBVR1HFkApIbRGkON9WOE
ilUQ+xAm9cJslYNaBjEFDsNgpiAg3E4M246Fo9gGMw3N3asgvkMGlmiugqpC
UwfxXy+y0OM1TCyrYTYCANRP8Vg=
       "], {{0, 20}, {19, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{19, 20},
     PlotRange->{{0, 19}, {0, 20}}], ",", " ", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 252, 207, 207, 207, 226, 255, 255, 255, 189, 
       10, 68}, {255, 245, 130, 53, 1, 1, 1, 22, 174, 255, 255, 73, 1, 68}, {
       243, 68, 0, 1, 24, 125, 120, 23, 19, 220, 209, 3, 1, 83}, {95, 1, 1, 
       123, 231, 255, 255, 228, 188, 238, 43, 1, 1, 172}, {67, 1, 121, 252, 
       255, 255, 255, 255, 250, 114, 2, 1, 84, 248}, {67, 1, 177, 255, 255, 
       255, 255, 255, 183, 1, 1, 85, 247, 255}, {13, 1, 171, 255, 255, 255, 
       255, 208, 58, 1, 22, 216, 255, 255}, {67, 1, 56, 221, 255, 255, 242, 
       75, 1, 1, 204, 255, 255, 255}, {190, 54, 1, 26, 170, 247, 73, 1, 1, 
       121, 252, 255, 255, 255}, {255, 193, 38, 1, 1, 1, 1, 1, 64, 255, 255, 
       255, 255, 255}, {255, 255, 240, 148, 1, 1, 1, 1, 189, 255, 255, 255, 
       255, 255}, {255, 255, 255, 222, 1, 1, 1, 1, 20, 145, 252, 255, 255, 
       255}, {255, 255, 229, 46, 1, 2, 153, 76, 1, 1, 203, 255, 255, 255}, {
       255, 238, 117, 1, 1, 159, 255, 249, 17, 1, 38, 255, 255, 255}, {255, 
       93, 1, 1, 78, 243, 255, 255, 109, 1, 32, 255, 255, 255}, {171, 2, 1, 
       23, 246, 255, 255, 255, 109, 1, 32, 255, 255, 255}, {67, 1, 20, 198, 
       255, 255, 241, 146, 36, 1, 129, 255, 255, 255}, {67, 1, 41, 140, 140, 
       137, 29, 1, 1, 45, 246, 255, 255, 255}, {91, 1, 1, 1, 1, 1, 1, 23, 118,
        232, 255, 255, 255, 255}, {239, 60, 1, 1, 1, 3, 126, 226, 255, 255, 
       255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{14, 20},
     PlotRange->{{0, 14}, {0, 20}}], ",", " ", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 255, 210, 82, 0, 1, 0, 11, 190, 255, 255}, {
       255, 255, 255, 173, 3, 16, 123, 165, 114, 1, 58, 255, 255}, {255, 255, 
       191, 13, 16, 166, 255, 255, 166, 1, 82, 255, 255}, {255, 215, 14, 1, 
       187, 255, 255, 244, 69, 1, 114, 255, 255}, {255, 117, 1, 16, 233, 255, 
       255, 252, 45, 1, 17, 104, 194}, {238, 14, 1, 186, 255, 255, 255, 255, 
       176, 1, 1, 1, 26}, {185, 1, 35, 244, 255, 255, 255, 227, 84, 1, 1, 1, 
       97}, {185, 1, 109, 255, 255, 255, 123, 16, 1, 53, 31, 1, 123}, {185, 1,
        62, 207, 207, 87, 6, 9, 102, 248, 57, 1, 191}, {221, 10, 1, 1, 1, 1, 
       82, 208, 255, 249, 47, 5, 201}, {255, 141, 5, 1, 23, 115, 235, 255, 
       255, 211, 1, 23, 255}, {255, 255, 191, 170, 233, 255, 255, 255, 255, 
       68, 1, 105, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 250, 46, 1, 
       195, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 220, 1, 13, 221, 
       255}, {255, 255, 255, 255, 255, 255, 255, 255, 176, 1, 27, 255, 255}, {
       255, 255, 255, 255, 255, 255, 255, 255, 48, 1, 68, 255, 255}, {255, 
       255, 255, 255, 255, 255, 255, 255, 48, 1, 199, 255, 255}, {255, 255, 
       255, 255, 255, 255, 255, 224, 15, 1, 199, 255, 255}, {255, 255, 255, 
       255, 255, 255, 255, 129, 1, 24, 238, 255, 255}, {255, 255, 255, 255, 
       255, 255, 255, 188, 1, 146, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{13, 20},
     PlotRange->{{0, 13}, {0, 20}}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7257880643539925`*^9, 
  3.7257880644026976`*^9}},ExpressionUUID->"77384138-3407-4918-929a-\
61f0e7b775dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "1", ",", "0", ",", "7", 
   ",", "6", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7257880674563255`*^9},ExpressionUUID->"2348148f-8eb8-4435-9551-\
808a5fdeb341"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"digit", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[
     RasterBox[{{255, 255, 255, 255, 255, 255, 232, 173, 54, 80, 255, 255, 
      255, 255}, {255, 255, 255, 255, 255, 251, 108, 1, 19, 198, 255, 255, 
      255, 255}, {255, 255, 255, 255, 255, 148, 2, 20, 198, 255, 255, 255, 
      255, 255}, {255, 255, 255, 255, 197, 18, 18, 202, 255, 255, 255, 255, 
      255, 255}, {255, 255, 255, 247, 50, 2, 175, 255, 255, 255, 255, 255, 
      255, 255}, {255, 255, 255, 40, 1, 101, 255, 255, 255, 255, 255, 255, 
      255, 255}, {255, 255, 115, 8, 2, 184, 255, 255, 255, 255, 255, 255, 255,
       255}, {255, 255, 1, 2, 125, 249, 255, 255, 255, 255, 255, 255, 255, 
      255}, {248, 103, 1, 13, 219, 255, 255, 255, 255, 255, 255, 255, 255, 
      255}, {215, 2, 1, 134, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
      255}, {193, 1, 14, 225, 255, 255, 255, 255, 255, 255, 185, 61, 158, 
      246}, {73, 2, 68, 255, 255, 255, 255, 255, 253, 137, 5, 2, 1, 141}, {21,
       2, 157, 255, 255, 255, 255, 206, 88, 2, 2, 2, 72, 243}, {21, 2, 195, 
      255, 255, 233, 140, 9, 2, 2, 2, 2, 172, 255}, {59, 2, 37, 142, 195, 74, 
      2, 1, 2, 2, 55, 175, 255, 255}, {224, 37, 0, 1, 1, 1, 1, 0, 59, 187, 
      255, 255, 255, 255}, {255, 240, 92, 2, 2, 13, 134, 216, 249, 255, 255, 
      255, 255, 255}, {255, 255, 99, 2, 27, 212, 255, 255, 255, 255, 255, 255,
       255, 255}, {255, 255, 1, 28, 212, 255, 255, 255, 255, 255, 255, 255, 
      255, 255}, {255, 255, 1, 194, 255, 255, 255, 255, 255, 255, 255, 255, 
      255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSizeRaw->{14, 20},
    PlotRange->{{0, 14}, {0, 20}}], ",", " ", "\"\<TopProbabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257880747241664`*^9, 
  3.725788074784335*^9}},ExpressionUUID->"d9d38b1f-4d83-4218-a5e8-\
870bd819ffa2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"0", "\[Rule]", "0.37744429069236346`"}], ",", 
    RowBox[{"4", "\[Rule]", "0.3730188271127285`"}], ",", 
    RowBox[{"6", "\[Rule]", "0.14359140706073473`"}], ",", 
    RowBox[{"2", "\[Rule]", "0.05406991583377087`"}], ",", 
    RowBox[{"5", "\[Rule]", "0.04251059322208816`"}]}], "}"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.725788164414793*^9, 
  3.725788164434847*^9}},ExpressionUUID->"1893164f-419c-4cea-8539-\
6e18a9ec9b7c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.725788167175003*^9, 
  3.725788168284599*^9}},ExpressionUUID->"b9c856ba-78c7-47cf-bb41-\
dccc32b85d5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Input",
 CellChangeTimes->{{3.7257881736320057`*^9, 
  3.725788174865466*^9}},ExpressionUUID->"f9dc0835-d388-44cc-b60f-\
98e41e685c0f"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.725788175811603*^9},ExpressionUUID->"9d13046c-963a-40a5-a06e-\
a8e8bf34e4bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<FisherIris\>\""}], 
      "}"}], ",", " ", "\"\<TrainingData\>\""}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725788227092922*^9, 
  3.725788255303991*^9}},ExpressionUUID->"b39c9194-e4ec-4d45-9bb8-\
f2906c4c3d7a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.725788267414748*^9},ExpressionUUID->"afb6ba64-490f-4af0-a0c3-\
ba47bb909a65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"{", 
   RowBox[{"4.3", ",", " ", "3.1", ",", " ", "1.2", ",", " ", "0.3"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257882878444295`*^9, 
  3.7257882993604937`*^9}},ExpressionUUID->"d7e38114-c79c-46e8-add2-\
d41c24425e8d"],

Cell[BoxData["\<\"setosa\"\>"], "Output",
 CellChangeTimes->{
  3.725788301124731*^9},ExpressionUUID->"24e3981a-44da-451d-a31d-\
b807ad57f652"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", " ", "=", " ", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"c", ",", " ", 
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<FisherIris\>\""}], 
       "}"}], ",", " ", "\"\<TestData\>\""}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257883330400486`*^9, 
  3.7257883634419737`*^9}},ExpressionUUID->"20a316b6-b731-49c5-a835-\
fb5e34d0a36a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[
                
                RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                 0.4746151541446917}, {0.7191592194171378, 0.5062062867304069,
                  0.8158644505878024}, {0.47333333333333333`, 
                 0.7727052229508918, 
                 0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                ImagePadding -> 0.2, 
                PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                PlotRangePadding -> Automatic, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["45", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[
                
                RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                 0.4746151541446917}, {0.7191592194171378, 0.5062062867304069,
                  0.8158644505878024}, {0.47333333333333333`, 
                 0.7727052229508918, 
                 0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                ImagePadding -> 0.2, 
                PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                PlotRangePadding -> Automatic, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["45", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "0.9555555555555556024`4.426121284525932", "\[PlusMinus]",
                     "0.0310677909075349756`2."}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257883665527463`*^9},ExpressionUUID->"6063349e-ebcf-4f09-a891-\
a8fe5dd18227"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", " ", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7257883751501665`*^9, 
  3.7257883885259347`*^9}},ExpressionUUID->"a3587b80-5e9f-48fd-af37-\
2355aff0f931"],

Cell[BoxData["0.9555555555555556`"], "Output",
 CellChangeTimes->{
  3.725788396138644*^9},ExpressionUUID->"3ef7bad5-26df-4fde-b456-\
cf0de67626ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<confusionMatricPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.725788400186551*^9, 
  3.7257884107247972`*^9}},ExpressionUUID->"c0d6f5ca-f876-451d-8ffd-\
c73362e9b4e9"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierMeasurementsObject","mlnaseth",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"confusionMatricPlot\\\\\\\\\
\\\\\\\"\\\\\\\"\\\"}]\\) is not an available \
\\!\\(\\*RowBox[{\\\"\\\\\\\"property\\\\\\\"\\\"}]\\). Did you mean \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"ConfusionMatrixPlot\\\\\\\\\\\\\\\
\"\\\\\\\"\\\"}]\\) instead?\"",2,208,39,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725788412000799*^9},ExpressionUUID->"ecd24e1f-69d1-4280-8bb4-\
c605a5ce5814"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cm", "[", "\"\<confusionMatrixPlot\>\"", "]"}], 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[
                  
                  RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                   0.4746151541446917}, {0.7191592194171378, 
                   0.5062062867304069, 0.8158644505878024}, {
                   0.47333333333333333`, 0.7727052229508918, 
                   0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                  ImagePadding -> 0.2, 
                  PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                  PlotRangePadding -> Automatic, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["45", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[
                  
                  RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                   0.4746151541446917}, {0.7191592194171378, 
                   0.5062062867304069, 0.8158644505878024}, {
                   0.47333333333333333`, 0.7727052229508918, 
                   0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                  ImagePadding -> 0.2, 
                  PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                  PlotRangePadding -> Automatic, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["45", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "0.9555555555555556024`4.426121284525932", "\[PlusMinus]",
                     "0.0310677909075349756`2."}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "[", "\"\<confusionMatricPlot\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7257884156796465`*^9, 
  3.725788418354025*^9}},ExpressionUUID->"2f4bcd42-cee9-4d6a-89b0-\
45edda9f339d"],

Cell[BoxData[
 TemplateBox[{
  "General","noinfo",
   "\"Input expression \\!\\(\\*TagBox[\\\"ClassifierMeasurementsObject[\
\[Ellipsis]]\\\", False, Rule[Editable, False], Rule[SelectWithContents, \
True], Rule[Selectable, False]]\\) contains insufficient information to \
interpret the result.\"",2,209,40,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725788419098332*^9},ExpressionUUID->"b6cdf469-e13e-41eb-9500-\
cfaed7a69afc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}], 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[
                  
                  RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                   0.4746151541446917}, {0.7191592194171378, 
                   0.5062062867304069, 0.8158644505878024}, {
                   0.47333333333333333`, 0.7727052229508918, 
                   0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                  ImagePadding -> 0.2, 
                  PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                  PlotRangePadding -> Automatic, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["45", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[
                  
                  RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                   0.4746151541446917}, {0.7191592194171378, 
                   0.5062062867304069, 0.8158644505878024}, {
                   0.47333333333333333`, 0.7727052229508918, 
                   0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                  ImagePadding -> 0.2, 
                  PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                  PlotRangePadding -> Automatic, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["45", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "0.9555555555555556024`4.426121284525932", "\[PlusMinus]",
                     "0.0310677909075349756`2."}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel",
           DisplayFunction -> (
           ButtonBox[#, Active -> False, Alignment -> Left, 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
            FrameMargins -> 7, BaseStyle -> {}, 
            DefaultBaseStyle -> {"Panel", Background -> None}, 
            BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "[", "\"\<confusionMatricPlot\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7257884156796465`*^9, 
  3.725788440647911*^9}},ExpressionUUID->"0f210ccd-5bdc-452b-9787-\
3338e121b38f"],

Cell[BoxData[
 TemplateBox[{
  "General","noinfo",
   "\"Input expression \\!\\(\\*TagBox[\\\"ClassifierMeasurementsObject[\
\[Ellipsis]]\\\", False, Rule[Editable, False], Rule[SelectWithContents, \
True], Rule[Selectable, False]]\\) contains insufficient information to \
interpret the result.\"",2,209,41,24706359309246942329,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725788441686737*^9},ExpressionUUID->"8cc3d2de-691d-4821-bb18-\
f569ecfc71dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"c", ",", 
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
      ",", "\"\<TestData\>\""}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7257885433726587`*^9, 
  3.7257885466088824`*^9}},ExpressionUUID->"cf065395-4676-433e-bb6d-\
144ffe975c9d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[
                
                RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                 0.4746151541446917}, {0.7191592194171378, 0.5062062867304069,
                  0.8158644505878024}, {0.47333333333333333`, 
                 0.7727052229508918, 
                 0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                ImagePadding -> 0.2, 
                PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                PlotRangePadding -> Automatic, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["45", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[
                
                RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                 0.4746151541446917}, {0.7191592194171378, 0.5062062867304069,
                  0.8158644505878024}, {0.47333333333333333`, 
                 0.7727052229508918, 
                 0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                ImagePadding -> 0.2, 
                PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                PlotRangePadding -> Automatic, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["45", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "0.9555555555555556024`4.426121284525932", "\[PlusMinus]",
                     "0.0310677909075349756`2."}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257885475639806`*^9},ExpressionUUID->"fd4166c3-18f5-46e9-8435-\
77cfb54d75ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.725788553377702*^9, 
  3.7257885534313517`*^9}},ExpressionUUID->"98c36061-73ec-4ae4-a135-\
63c6ceb5fde0"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{1., 1., 1.}, {0.930891358753435, 0.8573005998883996, 
   0.6362113603614415}, {0.9161459677080646, 0.5032984334031332, 
   0.004174857650284698}}, {{1., 1., 1.}, {0.9161459677080646, 
   0.5032984334031332, 0.004174857650284698}, {0.930891358753435, 
   0.8573005998883996, 0.6362113603614415}}, {{1., 0.42, 0.}, {1., 1., 1.}, {
   1., 1., 1.}}}, {{0, 0}, {3, 3}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["15", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "15", "\" examples of \"", "\"setosa\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{15, " examples of ", "setosa", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"versicolor\"", 
             "\" misclassified as \"", "\"setosa\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "versicolor", " misclassified as ", "setosa"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"virginica\"", 
             "\" misclassified as \"", "\"setosa\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "virginica", " misclassified as ", "setosa"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"setosa\"", "\" misclassified as \"", 
             "\"versicolor\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "setosa", " misclassified as ", "versicolor"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["14", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "14", "\" examples of \"", "\"versicolor\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9333333333333333`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9333333333333333`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{14, " examples of ", "versicolor", " correctly classified"}], 
         Row[{"Precision = ", 0.9333333333333333}], 
         Row[{"Recall = ", 0.9333333333333333}], 
         Row[{"FScore = ", 0.9333333333333333}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"virginica\"", 
             "\" misclassified as \"", "\"versicolor\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.06666666666666667`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.06666666666666667`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          1, " example of ", "virginica", " misclassified as ", 
           "versicolor"}], 
         Row[{"Column fraction = ", 0.06666666666666667}], 
         Row[{"Row fraction = ", 0.06666666666666667}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"setosa\"", "\" misclassified as \"", 
             "\"virginica\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "setosa", " misclassified as ", "virginica"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"versicolor\"", 
             "\" misclassified as \"", "\"virginica\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.06666666666666667`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.06666666666666667`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          1, " example of ", "versicolor", " misclassified as ", 
           "virginica"}], 
         Row[{"Column fraction = ", 0.06666666666666667}], 
         Row[{"Row fraction = ", 0.06666666666666667}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["14", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "14", "\" examples of \"", "\"virginica\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9333333333333333`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9333333333333333`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{14, " examples of ", "virginica", " correctly classified"}], 
         Row[{"Precision = ", 0.9333333333333333}], 
         Row[{"Recall = ", 0.9333333333333333}], 
         Row[{"FScore = ", 0.9333333333333333}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "15", "\" example\"", "\"s\"", "\" of class \"", "\"setosa\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{15, " example", "s", " of class ", "setosa"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "15", "\" example\"", "\"s\"", "\" of class \"", "\"versicolor\""},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{15, " example", "s", " of class ", "versicolor"}], 
        Row[{"Recall = ", 0.9333333333333333}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "15", "\" example\"", "\"s\"", "\" of class \"", "\"virginica\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{15, " example", "s", " of class ", "virginica"}], 
        Row[{"Recall = ", 0.9333333333333333}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "15", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"setosa\""}, "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{15, " example", "s", " classified as ", "setosa"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "15", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"versicolor\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9333333333333333`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{15, " example", "s", " classified as ", "versicolor"}], 
        Row[{"Precision = ", 0.9333333333333333}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "15", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"virginica\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9333333333333333`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{15, " example", "s", " classified as ", "virginica"}], 
        Row[{"Precision = ", 0.9333333333333333}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{2.5, 
       FormBox[
        RotationBox["\"setosa\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"versicolor\"", BoxRotation -> 0.], TraditionalForm]}, {
      0.5, 
       FormBox[
        RotationBox["\"virginica\"", BoxRotation -> 0.], 
        TraditionalForm]}}, {{2.5, 
       FormBox["15", TraditionalForm]}, {1.5, 
       FormBox["15", TraditionalForm]}, {0.5, 
       FormBox["15", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["15", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["15", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["15", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"setosa\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"versicolor\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"virginica\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.7257885546966276`*^9},ExpressionUUID->"62cdd65d-8026-4972-9d4d-\
d99d3a2314e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<Titanic\>\""}], "}"}],
      ",", " ", "\"\<Data\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomSample", "[", 
   RowBox[{"dataset", ",", " ", "10"}], "]"}], " ", "//", " ", 
  "TableForm"}]}], "Input",
 CellChangeTimes->{{3.7257886623802323`*^9, 
  3.7257887269074144`*^9}},ExpressionUUID->"d55dac61-e2b9-4a3c-b385-\
b949437fcf4e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"2nd\"\>", ",", "23.`", ",", "\<\"male\"\>"}], "}"}], 
       "\[Rule]", "\<\"died\"\>"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"1st\"\>", ",", "41.`", ",", "\<\"male\"\>"}], "}"}], 
       "\[Rule]", "\<\"died\"\>"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"1st\"\>", ",", "33.`", ",", "\<\"male\"\>"}], "}"}], 
       "\[Rule]", "\<\"died\"\>"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3rd\"\>", ",", "19.`", ",", "\<\"male\"\>"}], "}"}], 
       "\[Rule]", "\<\"died\"\>"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"2nd\"\>", ",", "34.`", ",", "\<\"male\"\>"}], "}"}], 
       "\[Rule]", "\<\"died\"\>"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3rd\"\>", ",", "4.`", ",", "\<\"male\"\>"}], "}"}], 
       "\[Rule]", "\<\"survived\"\>"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"2nd\"\>", ",", "42.`", ",", "\<\"male\"\>"}], "}"}], 
       "\[Rule]", "\<\"died\"\>"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3rd\"\>", ",", "37.`", ",", "\<\"female\"\>"}], "}"}], 
       "\[Rule]", "\<\"died\"\>"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"3rd\"\>", ",", "9.`", ",", "\<\"male\"\>"}], "}"}], 
       "\[Rule]", "\<\"died\"\>"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"2nd\"\>", ",", "28.`", ",", "\<\"female\"\>"}], "}"}], 
       "\[Rule]", "\<\"survived\"\>"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.72578873094726*^9},ExpressionUUID->"e0517bed-03bb-42e1-87d0-d0f20881fa04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"dataset", ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", " ", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.725788980699522*^9, 
  3.7257889990027647`*^9}},ExpressionUUID->"f520f799-603c-4cb9-97ce-\
c5c5896960e2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["1309", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257890148259645`*^9},ExpressionUUID->"71248623-ec7d-467e-8253-\
64fddcda83a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<3rd\>\"", ",", " ", "10", ",", " ", "\"\<female\>\""}], 
    "}"}], ",", " ", 
   RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<survived\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.72578903298777*^9, 
  3.72578906962901*^9}},ExpressionUUID->"ec9feadc-d2c7-4d10-b597-\
24975feee581"],

Cell[BoxData["0.688381204030766`"], "Output",
 CellChangeTimes->{
  3.725789072002674*^9},ExpressionUUID->"883ead9d-eae5-4ffa-8aa0-\
dfce8e2dc2ed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"class_", ",", " ", "age_", ",", " ", "sex_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"c", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"class", ",", " ", "age", ",", " ", "sex"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<survived\>\""}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.725789098089243*^9, 
  3.7257892028811736`*^9}},ExpressionUUID->"9fe95af2-6561-4b63-8ddb-\
1292ce37eafa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"class_", ",", " ", "age_", ",", " ", "sex_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"c", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"class", ",", " ", "age", ",", " ", "sex"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<survived\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"\"\<1st\>\"", ",", " ", "x", ",", " ", "\"\<female\>\""}], 
      "]"}], ",", " ", 
     RowBox[{"p", "[", 
      RowBox[{"\"\<3rd\>\"", ",", " ", "x", ",", " ", "\"\<female\>\""}], 
      "]"}], ",", " ", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"\"\<1st\>\"", ",", " ", "x", ",", " ", "\"\<male\>\""}], 
       "]"}], ".", " ", 
      RowBox[{"p", "[", 
       RowBox[{"\"\<3rd\>\"", ",", " ", "x", ",", " ", "\"\<male\>\""}], 
       "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<female, 1st class\>\"", ",", " ", "\"\<female, 3rd class\>\"", ",", 
      " ", "\"\<male, 1st class\>\"", ",", " ", "\"\<male, 3rd class\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Age(years)\>\"", ",", " ", "\"\<Survival probability\>\""}],
      "}"}]}], ",", " ", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.72578920935832*^9, 
  3.7257894497612133`*^9}},ExpressionUUID->"df3e1585-67df-4fe6-9e91-\
2c07d18b971a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVj2s0lAkYgIdcO9nFVi47p+SWceyGHLfF+2Zd0wwzUZ86qaUx41Iu4xI7
KWnFmpbuilEqojZTZIsSg5qiUiqbS+UjjDEzSWqWVtb+eM5znp/PqsgEFlud
QqHQF/jf5oVzF8pWiL3Y1uOnpFlKuKlDW7mLexaq7iQLTiy0eE/NRRuuCBrX
fU7wXuj79kkcLW4zhFS/WVS6VwkPBN0Bnzhd0PXkdQSDr4SH7jkNcs5bqLPq
fyPKUELHkf4kKec9nM159JmdooT1TdqMUc48WA2Rt4QxSnis56yrsU0fi430
rf2YSvAu9G25FGyMiT6BlQw3JbDXzOo56Jlh0HPjmmIzJdBp7A/L/S3xSUvz
nQgNJdS+2Jv60NUGx+NrWeelCvjJ0Faksc8OE5JSTeceKIDz5aiwgrBHiaQ0
0atKAQn3x9aK6I64g2GTZpGngN+3aFnNxTth62Gm+uEoBURJfo124Drjstz4
4mpQgFjbhBkX7oqFSS95naYKcDDYf3I8xR3/lNHfv5yUw46PnnaMeA80/xD+
VSKRQ3nZParqsBe2DfQ0rjoth7o/3Pu7WYhVjKyjy2PkkNLoGSLcsA57Lr02
cnaXQ3NHxVT+Vm+k7m4LXKwphxh/t6YY4me8ynO0sn02AaVVDvVxsT4Y6Rjh
knhyAo58bMpOTPdFrV6qld2WCRi9nJrGTfbD5LYr6kdWTkC739HiAwf8kZM+
ELb9tQzUgvuGCvcHINXRoExHKAPKur/UzmUEouhuZXjBVhnkGano3YfWY4lb
enurgQwSt0S1qnKCMFf/ZmFwxziQ2U474cQG/GQh5WlmjsPSY6f78svpWP3I
o2eDzThU6ttmSEoYqCx17eX3SkGcvNJ39ZVgdHnnw1+bLYUys3NUz9AQ1O3b
xLexk0ITf5bCfRqCGhNsSXjPGKwK0v7XYjMTKw5G8wRpY3Cji1bQ+4KJmTKK
hch0DAT3v9qbbWNh8CE3ceqNUTjGG4/dMcDCzqg05WnWKPCXrfjWPHwjrs+8
GsqfHIFqmmZHyuBG1FjSotmYMwJa02om4ohQvGdWam5BHYFL9tezysZC8e6k
7ENT9TugRV5mzO0Kw+nt+3bGuryD/sCG2rCJMAy6HjXyfecwdF/I/AF4m7Cd
rsvUDh2Gf+qYHuZTm1A9rEKUMTwE87eS63N3b0ZuvjyBkjIEQfZ+vvxPm7G+
vctjdoYEybY1MXE8Ao2PT573P0SCYRT3tjCVQB1pg8r3NxIiuOV6T9MJnHq1
Gn1ySPic/F2tE59ANX5YKe4jwTJPNTt3kED7M5Ztrukk7K9tFhSdJPB9tfCV
NYcEd+2Qa/UNBAYMJtTN+pGQuyRfXXqbwLrjmgKVDwnPDFpDTe8SGLiUFjvt
TQKX6jST1UogK0KsUniRcMrB2Dugk0CRTVb1oDMJ01sHn/cNELjob9mydmsS
8BcTa723BOrWVGKLJQkF0aw9QBLIvzycfcecBPOkdurFEQLpCeXSGytIYOZW
sXcpCbQeM6FVLCehtIC8eXaSwDjLLtvypSRIi0wXd08RGOZZayE0XPgpEdQ4
qwgUf4nuP/4NCY/O3aPEzBDoO+PUWLSEBKPKr6ySLwQ+M0wuEiwmIfKKS8Xj
OQLnzvwYkadDQs21RNX8PIEpI5kWB7VI+A/7qFBF
          "]]}, Annotation[#, "Charting`Private`Tag$1072267#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxXk01AkcAPDRipTZUNaxHqJidDDy1A71/VKG0jiGzC9iRcyIcbfUKtQ+
m0ylvNoKE+vI5i1FVrKS3zCiDA0dmI2ZZOhSzpJjd//4vM+akBh22BIKhcL6
z/+bnZ8vEho37bi51NDCfUgJtctoJnzedaBz2jLeKZTQlFxRbMmrhFZ5UONZ
uRLENnFcNV4j9Bxi1ne+VMJDgdRtitsJ1d/sfendq4Q2xqm6d9wB6NQ82O0h
UUL7hf64Ee4Y+Kk4FW+4q4Q9Deoew9xFGPssGY/NUkIH1V5DNVALbxfsEnIt
leB83uXBDU99NA9a/DuubRjCrGepdKopLsCbO6sPDwOLFvbpO9e16DP3xdaa
MgxVPcePtG2zxOnpiZx1ua/BQceqUjV1I4blCd0ObHgN3K8X80sIG6Q/ik7i
1w9BjFi5pZJli4YyYoTuPQRn/NXWzUfZ4XKxJd1K9gpCW38Op/PsUQV0s/z4
r6BJ3cA7cv82HFLVMgxaVABdO+3yaCID1Se+DbqfoYDgie0bPaIcUdPYocJc
VwGFwhajmbM7MLCwOJl6VQ7V5xj9UjaiT6/R/ePGcki8t90rf68T8jo/jdSW
D0Jje8l4ZoAzXtMK9B/bPAgRrj80RBA7kd7xLFuUOAB5ZfSayMO78EfdEnZc
8ku4MNGQHpvkglvrGFti0v+B4ZtHfuLFM9EgZ9WCRp4MmpkXr5w86YoF5ul8
RXE/qHj2Kc6nueFDrbjOmcY+oDj9pVJwdDdWJl9KFMp74bTeDEv66x4MddST
6k28gFj/UHLmlDs+fV4ZE6D3AuTpdofg0l68y5GtLt/4HFbnXO3LLGThrJ3i
kcGeZ1CqZXW0NdcDI0fTXI8dewpN8SYuFuWeODDNyCvM7wGhaYHRdl8vTF06
V/OguxsaUmYpvC4vPE4pcaDqdMMad/U5c443Jk2bZIp2SeFOJy2rt8cb309p
u89mPgGBeMHGNJCNsm7hemlzF+QkjB4OlrHx49Sdlc+1uyBF13il2X4fTDvR
7JkmkcAftKXtiYM+2PBn51gqtwPUJlUMmoJ8cSy35el7s8dww+b2CaHSF684
Go/ekrQDLeSmxzx/HzYKz+m4C9qgf3dd1b63+1CdmvrhbcRDkBYd2wQJfsha
tl6VzWiFz9XejmbjfkgGayz408SweDe+JiOag0yZWkKSRQu42zBdUqY4WJ0U
/ybMsBlaA60jIhMILJrkhTNoItAJ5dXnHyFQHkVofr9OBEG8QmpXEoEBF6L5
c6YimI5fVWWXQmC4WBLcpC+CtadnZud/IdA8sqPNZ5kI0qoaBdmXCWRVf7yW
qySBoe51q6aOwPQyI/XaUhIyNDOXjNQTKJqcrKr4nYQn2qSv4X0Cxewizg0h
CTwjuy8nSAKtuSseX7tMwm90fWe3RwRabnpiciaDhMmAwe4+GYGS8NmQrHAS
8KDBeuoAgVSHmKvnQkjICmcng5zAnbmT4otBJJjFNRsVvyaQ09u/O9+PBO+M
sjD+BwI9o7Mr7jFJyMuS117/SGAZ86xC5EzCSLbhcuk4gYKEFZKOHSSk5Qoq
7GcItDVsE7yyJ+FxQQsl4guBNaXRwjFbEvRKF9i5XwmctfLizm0mIaR8a0nH
PIFRzgeUGhtIqLgVO7O4SKDmqXRjfQsS/gXJm0/c
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1072267#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.14181806077524362`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.14181806077524362`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Survival probability\"", TraditionalForm], None}, {
        FormBox["\"Age(years)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 100}, {0.14181806077524362`, 0.95299176855151}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"female, 1st class\"", "\"female, 3rd class\"", "\"male, 1st class\"",
        "\"male, 3rd class\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7257894619451103`*^9},ExpressionUUID->"a5af5436-3eda-4515-b3ef-\
d27d983d5655"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"class_", ",", " ", "age_", ",", " ", "sex_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"c", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"class", ",", " ", "age", ",", " ", "sex"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<survived\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"\"\<1st\>\"", ",", " ", "x", ",", " ", "\"\<female\>\""}], 
      "]"}], ",", " ", 
     RowBox[{"p", "[", 
      RowBox[{"\"\<3rd\>\"", ",", " ", "x", ",", " ", "\"\<female\>\""}], 
      "]"}], ",", " ", 
     RowBox[{"p", "[", 
      RowBox[{"\"\<1st\>\"", ",", " ", "x", ",", " ", "\"\<male\>\""}], "]"}],
      ",", " ", 
     RowBox[{"p", "[", 
      RowBox[{"\"\<3rd\>\"", ",", " ", "x", ",", " ", "\"\<male\>\""}], 
      "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<female, 1st class\>\"", ",", " ", "\"\<female, 3rd class\>\"", ",", 
      " ", "\"\<male, 1st class\>\"", ",", " ", "\"\<male, 3rd class\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Age(years)\>\"", ",", " ", "\"\<Survival probability\>\""}],
      "}"}]}], ",", " ", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.72578920935832*^9, 
  3.72578947169975*^9}},ExpressionUUID->"07f901f2-66a5-42cf-9f7b-\
b6ca80336539"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVj2s0lAkYgIdcO9nFVi47p+SWceyGHLfF+2Zd0wwzUZ86qaUx41Iu4xI7
KWnFmpbuilEqojZTZIsSg5qiUiqbS+UjjDEzSWqWVtb+eM5znp/PqsgEFlud
QqHQF/jf5oVzF8pWiL3Y1uOnpFlKuKlDW7mLexaq7iQLTiy0eE/NRRuuCBrX
fU7wXuj79kkcLW4zhFS/WVS6VwkPBN0Bnzhd0PXkdQSDr4SH7jkNcs5bqLPq
fyPKUELHkf4kKec9nM159JmdooT1TdqMUc48WA2Rt4QxSnis56yrsU0fi430
rf2YSvAu9G25FGyMiT6BlQw3JbDXzOo56Jlh0HPjmmIzJdBp7A/L/S3xSUvz
nQgNJdS+2Jv60NUGx+NrWeelCvjJ0Faksc8OE5JSTeceKIDz5aiwgrBHiaQ0
0atKAQn3x9aK6I64g2GTZpGngN+3aFnNxTth62Gm+uEoBURJfo124Drjstz4
4mpQgFjbhBkX7oqFSS95naYKcDDYf3I8xR3/lNHfv5yUw46PnnaMeA80/xD+
VSKRQ3nZParqsBe2DfQ0rjoth7o/3Pu7WYhVjKyjy2PkkNLoGSLcsA57Lr02
cnaXQ3NHxVT+Vm+k7m4LXKwphxh/t6YY4me8ynO0sn02AaVVDvVxsT4Y6Rjh
knhyAo58bMpOTPdFrV6qld2WCRi9nJrGTfbD5LYr6kdWTkC739HiAwf8kZM+
ELb9tQzUgvuGCvcHINXRoExHKAPKur/UzmUEouhuZXjBVhnkGano3YfWY4lb
enurgQwSt0S1qnKCMFf/ZmFwxziQ2U474cQG/GQh5WlmjsPSY6f78svpWP3I
o2eDzThU6ttmSEoYqCx17eX3SkGcvNJ39ZVgdHnnw1+bLYUys3NUz9AQ1O3b
xLexk0ITf5bCfRqCGhNsSXjPGKwK0v7XYjMTKw5G8wRpY3Cji1bQ+4KJmTKK
hch0DAT3v9qbbWNh8CE3ceqNUTjGG4/dMcDCzqg05WnWKPCXrfjWPHwjrs+8
GsqfHIFqmmZHyuBG1FjSotmYMwJa02om4ohQvGdWam5BHYFL9tezysZC8e6k
7ENT9TugRV5mzO0Kw+nt+3bGuryD/sCG2rCJMAy6HjXyfecwdF/I/AF4m7Cd
rsvUDh2Gf+qYHuZTm1A9rEKUMTwE87eS63N3b0ZuvjyBkjIEQfZ+vvxPm7G+
vctjdoYEybY1MXE8Ao2PT573P0SCYRT3tjCVQB1pg8r3NxIiuOV6T9MJnHq1
Gn1ySPic/F2tE59ANX5YKe4jwTJPNTt3kED7M5Ztrukk7K9tFhSdJPB9tfCV
NYcEd+2Qa/UNBAYMJtTN+pGQuyRfXXqbwLrjmgKVDwnPDFpDTe8SGLiUFjvt
TQKX6jST1UogK0KsUniRcMrB2Dugk0CRTVb1oDMJ01sHn/cNELjob9mydmsS
8BcTa723BOrWVGKLJQkF0aw9QBLIvzycfcecBPOkdurFEQLpCeXSGytIYOZW
sXcpCbQeM6FVLCehtIC8eXaSwDjLLtvypSRIi0wXd08RGOZZayE0XPgpEdQ4
qwgUf4nuP/4NCY/O3aPEzBDoO+PUWLSEBKPKr6ySLwQ+M0wuEiwmIfKKS8Xj
OQLnzvwYkadDQs21RNX8PIEpI5kWB7VI+A/7qFBF
          "]]}, Annotation[#, "Charting`Private`Tag$1081770#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxXk01AkcAPDRipTZUNaxHqJidDDy1A71/VKG0jiGzC9iRcyIcbfUKtQ+
m0ylvNoKE+vI5i1FVrKS3zCiDA0dmI2ZZOhSzpJjd//4vM+akBh22BIKhcL6
z/+bnZ8vEho37bi51NDCfUgJtctoJnzedaBz2jLeKZTQlFxRbMmrhFZ5UONZ
uRLENnFcNV4j9Bxi1ne+VMJDgdRtitsJ1d/sfendq4Q2xqm6d9wB6NQ82O0h
UUL7hf64Ee4Y+Kk4FW+4q4Q9Deoew9xFGPssGY/NUkIH1V5DNVALbxfsEnIt
leB83uXBDU99NA9a/DuubRjCrGepdKopLsCbO6sPDwOLFvbpO9e16DP3xdaa
MgxVPcePtG2zxOnpiZx1ua/BQceqUjV1I4blCd0ObHgN3K8X80sIG6Q/ik7i
1w9BjFi5pZJli4YyYoTuPQRn/NXWzUfZ4XKxJd1K9gpCW38Op/PsUQV0s/z4
r6BJ3cA7cv82HFLVMgxaVABdO+3yaCID1Se+DbqfoYDgie0bPaIcUdPYocJc
VwGFwhajmbM7MLCwOJl6VQ7V5xj9UjaiT6/R/ePGcki8t90rf68T8jo/jdSW
D0Jje8l4ZoAzXtMK9B/bPAgRrj80RBA7kd7xLFuUOAB5ZfSayMO78EfdEnZc
8ku4MNGQHpvkglvrGFti0v+B4ZtHfuLFM9EgZ9WCRp4MmpkXr5w86YoF5ul8
RXE/qHj2Kc6nueFDrbjOmcY+oDj9pVJwdDdWJl9KFMp74bTeDEv66x4MddST
6k28gFj/UHLmlDs+fV4ZE6D3AuTpdofg0l68y5GtLt/4HFbnXO3LLGThrJ3i
kcGeZ1CqZXW0NdcDI0fTXI8dewpN8SYuFuWeODDNyCvM7wGhaYHRdl8vTF06
V/OguxsaUmYpvC4vPE4pcaDqdMMad/U5c443Jk2bZIp2SeFOJy2rt8cb309p
u89mPgGBeMHGNJCNsm7hemlzF+QkjB4OlrHx49Sdlc+1uyBF13il2X4fTDvR
7JkmkcAftKXtiYM+2PBn51gqtwPUJlUMmoJ8cSy35el7s8dww+b2CaHSF684
Go/ekrQDLeSmxzx/HzYKz+m4C9qgf3dd1b63+1CdmvrhbcRDkBYd2wQJfsha
tl6VzWiFz9XejmbjfkgGayz408SweDe+JiOag0yZWkKSRQu42zBdUqY4WJ0U
/ybMsBlaA60jIhMILJrkhTNoItAJ5dXnHyFQHkVofr9OBEG8QmpXEoEBF6L5
c6YimI5fVWWXQmC4WBLcpC+CtadnZud/IdA8sqPNZ5kI0qoaBdmXCWRVf7yW
qySBoe51q6aOwPQyI/XaUhIyNDOXjNQTKJqcrKr4nYQn2qSv4X0Cxewizg0h
CTwjuy8nSAKtuSseX7tMwm90fWe3RwRabnpiciaDhMmAwe4+GYGS8NmQrHAS
8KDBeuoAgVSHmKvnQkjICmcng5zAnbmT4otBJJjFNRsVvyaQ09u/O9+PBO+M
sjD+BwI9o7Mr7jFJyMuS117/SGAZ86xC5EzCSLbhcuk4gYKEFZKOHSSk5Qoq
7GcItDVsE7yyJ+FxQQsl4guBNaXRwjFbEvRKF9i5XwmctfLizm0mIaR8a0nH
PIFRzgeUGhtIqLgVO7O4SKDmqXRjfQsS/gXJm0/c
          "]]}, Annotation[#, "Charting`Private`Tag$1081770#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxX081HccAHBPI3ILrYkucWmLtTkxi8Xno/KQp7iufEleHtKdZESihQlT
J+WpTuahvIRKJLL6nXTd5XmULlN5KC5XrGZCO7TLtj/er7dJSBQrTEVJScnz
P//PyFaUlxqJHIbr7pKtpjK4tcRsTST3AgSZckbKGTIQJdReWs+9Dkt7x7ar
mcigjXmIo84VgoptkrhltQw6siSu7zkPYbk+y2+bvgw67dKot5wXQJ4ECu21
ZNCVO3honPMXRD5oOGE4NQZuzRperziL8Geh4EZi0xj00Gw01fbqIM8Apa9d
xmBLttO9qh0r0faJINBx4CWEWSzQLGnGWBujz3SJfAmeZmHvPncxRQ2dRvuz
76VQ35cU17lpPabzjdiX0qXwvZ75dbWfNmBm98OldE0pcD7klVQQJtrqVPtL
z4xCVNtrq+ueG/Haxki1TfRRyPRXX6c4aI1veA/6gi6MQGj7sf2WXBuU3yjx
yDYfAZGGgU+E3yZcG+Bv8S7qBVjqpvAnDtthY7lGYVb8cwiasd/gdXAzqla6
eUTkDENZaStdftoB71UWB6gVDEHDGbtBCQtx0l5vnah8EA4L7L1LPBwx9kgN
v1o8AMKuimneni0YHaXiK+19BuEuts3hZCv27KOpit49heLLlo0RB7ZhXpSj
nbHqU8idaT4eHe+E/fMz3SH0J/DqatwRbowzlhcEahe49kOLc9751FQX7J6S
KZZwfgflHQPS7BRXfJtR6pBxvg+UHH9Vvnh0O9o4THxLlzyGk/pyT8kJN1y6
/PZk4aIEov1DxfI0d8xiTnd1gARGj1vvg3Me6M4svEqPewSf5RcO8Mo8sUL7
l4S8hl6o1DE/2l7kha35wzxVtV4Qxaxx+rJ6BwYHWJo48R9AqfFFuj3bG7el
XPmY59IDzYkLStxeb2SfVeoK0OwGE3eNf9b6+uAZ3XUBVk1dcPOh2alnfT7o
9c2neSOnOyGr7SPTeC8Ld/ZTRoWsDsiPnTgQNMTCCnVzkNi0Q+IKo2UMv52Y
euUp7Zh5G1wx+6Tr8MhOFKfZFfjqtYL6rLKBKJCNysKOKWX9Fqhi3kgufc1G
UTFbK1n3PpiFXPVSRO5C72cOvLRVYhjcTtXverMLcz3OTiSACCTlP34NsbvR
ZNS7acL/Hsw1+GxmTO/G54pZcfRqISzejmnM+MEXQ1ZbTA2WNIM709kp8b0v
DnmdXju77A6077UIj4gluOGAwMatRgB6odymkjiCWnFBgQ5VAgjkltF64wn6
ZxjesSoTwN8xy+utEwkmraIbMM4JwPSkfEGRTtBxOI+vnSSAlHphVg6f4B5P
P0u6pwDsNLzrGimCM/nTsYxJCjK0eSrjTQTvsCuvbR6n4JGumG14l2DNH1/F
EikFXLr1fLKYYMx8hHV+PwUFliu3uP5GULPtfp2+kILZPSOPB4YIClIFnSSH
Agw2+IL2gmCZ8tzcz5kUnNrPSoBRgsrW9Pqb6RQwDrXQL8kI0oqca1YcpcAn
43JY5CTBbsbQflkwBcWnRm9dmCJoWOkYQA+gYDzHUEsyTfC4HSOZvZuClKKs
Whs5QesP8W/a3SjovtiqFD5PMHvsca6qEwX6lR9ZRR8ITvAXQhEoCKn+rqJH
QbBKIQxOtqWgti5avrhIUKoyl9lsRcG/OaFAcQ==
          "]]}, Annotation[#, "Charting`Private`Tag$1081770#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVz3081AccwPGj5qq5lWgSJbJFZdzyUKjvN+WO5OGuu/x60tG48zRPKSSj
awpXfkjIs8hDcfJQnYZcnl0PlLWwSpmUaiva5fHW/vi83n9/9DwD2V7KFArF
6Uv/q580eyl3VfPWmmey2nvWMrixwEg3QJAHGdNZ5CMLGTSHVxYZCsRwwvDX
zQN0GbSZBvNVBE1AOCdffLNWBh2iXvtP/PvQvnGqYYmGDDqthJK3/GcQaSu8
Gfm2G7qSB4JH+X9D6zvW8o6cbtjZQHUe4StggRtbzFDuhrs0i4XzDy7BW3Gi
UKmkE2yT7G6XuCzHlK5o/6rkDvAymaLRaavRveJxhWdEOzgZeX34lmmAIVz9
HZ6cNqh+dCKsc5Mh+ppnk+ZOrWC9dJ14/i8bUDeeulTVugX40yk5xYQpNsqo
4qFNdyCw7dVGsdOP6CLjqtexpJCwT+W7WX8zDJriOHI8muFw+3FvusACKfeV
CnkJt6GZqsXy27sJF+pfEl6MaQK6WsyF10es8ID8BcoHG4A3vmWDs78NkpP0
lQXev0FBbquO/OxWTPihZ1r9ZT3UnLMa6GUj/t7BHD0aLoEj9Vtcc3Ztw3M2
71RrzW9CU1fxx/j9tjjw5wHJ81fXwYe5ucGH2I5nmXyPeU11kF1Kr/Pz3YFh
xnclnaJaSB5viA06ZocRztRD6wNrYKQ87KgghIHBwwlvcoKroYWRknHyJBMh
bv+Mpf81UHLpf5EUY4+GY/WJnFNVQNl2XSk/wgG3J5VYPnUTwxlNuVPv6Z3o
71Nv0JNZAUH7DkvlQkdcdGbOpeSbqzAUa/YTpO3CNRmfnTnh5aCRmtkfX+CE
FDXvqMK5Uri8ZF1Ee5YzHm/pLPOvKoHmEF27tVdcUGwWk99BXIbc1fk6Wziu
yJaG9fUZFkND1BRF8MAVB120W0ZpRaDnSJ1Z48ZCB0uN9Ik3hVB73yjxySMW
1mjwRvpeF4Cobc509UE2ZugaV08O5UNq6Gtf3iAb02z9ljV8yIOoZasW6+/d
jRYK6cgezIUyo6+6jjzfjW370sd8hdmgMqGk1ezOQV5p2trCqYtQYnotOvcV
B6nM2EwzQSYYeZY7zwZw8b360AmP8XQYcJBUc8e4uMx6WBFafgF6L0UaQ+ge
PKBT6c7cmwafa1g2+h/34CnPxt1/mJwHxc2Qurif3fCewcaJq9qp4GjKsIv6
5IaWwrEWX0oKtB808fELJfBxZJ1DmUoyLD0suJUTRmBqUYZxgHIyuAsKaA+O
EShcP3yePkfCvyHq1WZRBOYqZuY1fiLB4Ix8avYUgYTmSsbLYRJiqptE5AUC
g/sr8tzvkGBFda2qkxAYYBOtqhVLQpxqvPLoLQIzFj3Uno0ioUdNylnRSODb
8cDKF+EkCHTMJqOlBDbdCOBWBZGQTl9ua99NoAVl4To3HgkT+58/7B8kUINr
C31AAnpofU97RmDi9CHHTmsSEr3Z4TBEIMNhfl+jJQn6wS06RX8R2JNZw7tq
QgIrrtQr4D2BlWu8H6bokpCdOHQj7x8C1Wh6jCRtEkbJFYt6PxJ45/RTc5Hm
l58sUaWFnMCZ9o64+MUkyPJbKT6TBJY9HRHEf02C5uU5dtY0gee07FsSqCR4
XrEsvjtL4Fm9ldmieSRUVgXJFQoCR1SUnugqkuA/2BlAfA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1081770#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Survival probability\"", TraditionalForm], None}, {
        FormBox["\"Age(years)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 100}, {0., 0.95299176855151}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"female, 1st class\"", "\"female, 3rd class\"", "\"male, 1st class\"",
        "\"male, 3rd class\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7257894806222506`*^9},ExpressionUUID->"2529fc5d-d094-456a-a7dc-\
c7774de50cad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<MovieReview\>\""}], 
      "}"}], ",", " ", "\"\<TrainingData\>\""}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725789601221133*^9, 
  3.7257896375814915`*^9}},ExpressionUUID->"472ec6e7-7106-4d0b-b5c5-\
e1331ce3e81c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"negative\"", "\"positive\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"negative\"", "\"positive\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Markov\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["7462", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7257896792228184`*^9},ExpressionUUID->"03a1a593-4841-4d8f-acf5-\
016779cfbdc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", 
  "\"\<the gorgeously elaborate continuation of \\\" the lord of the rings \\\
\" trilogy is so huge that a column of words cannot adequately describe \
co-writer/director peter jackson's expanded vision of j . r . r . tolkien's \
middle-earth . \>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7257897380098352`*^9, 
  3.725789738056025*^9}},ExpressionUUID->"1f244b9c-033c-4ef1-b265-\
d78ffd0ceaf7"],

Cell[BoxData["\<\"positive\"\>"], "Output",
 CellChangeTimes->{
  3.7257897397792006`*^9},ExpressionUUID->"e7c4143f-0b86-4b0f-8e23-\
715743600a91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c", ",", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MovieReview\>\""}], "}"}], 
     ",", "\"\<TestData\>\""}], "]"}], ",", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7257897780354457`*^9, 
  3.725789778091158*^9}},ExpressionUUID->"d50a57f0-9992-493f-bd07-\
e6265c1cf57c"],

Cell[BoxData["0.75125`"], "Output",
 CellChangeTimes->{
  3.7257897901953373`*^9},ExpressionUUID->"9d02f396-0cea-4bec-915b-\
85e9cae8e75a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gaussian", "[", 
    RowBox[{"\[Mu]_", ",", " ", "\[Sigma]_", ",", " ", "n_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", " ", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
     " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"positions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", " ", "1", ",", " ", "5", ",", " ", "0.5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1.", ",", "0.77", ",", "0."}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nums", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"100", ",", " ", "100", ",", " ", "50", ",", " ", "20"}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clusters", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{"gaussian", ",", " ", 
     RowBox[{"{", 
      RowBox[{"positions", ",", " ", "sizes", ",", " ", "nums"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clusters", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"BinormalDistribution", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "2"}], "]"}], ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5", ",", "2"}], "}"}], ",", "2"}], "]"}], ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.8"}], "}"}], "]"}]}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"30", ",", "40"}], "}"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", "4", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"clusters", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"Darker", "[", 
       RowBox[{"colors", ",", " ", "0.1"}], "]"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ".", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<data\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.725790317327263*^9, 3.725790344768306*^9}, {
  3.7257903909318447`*^9, 3.7257904361039896`*^9}, {3.725790480730565*^9, 
  3.725790537936957*^9}, {3.7257905941402407`*^9, 
  3.7257912005979996`*^9}},ExpressionUUID->"ccd0b1cf-1ba1-4aa7-aeb4-\
7eb2a38629e6"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","prng",
   "\"Value of option PlotRange -> \\!\\(\\*RowBox[{\\\"{\\\", \\\"50\\\", \\\
\"}\\\"}]\\) is not All, Full, Automatic, a positive machine number, or an \
appropriate list of range specifications.\"",2,237,45,24706359309246942329,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725791201502528*^9},ExpressionUUID->"14584f12-2d19-400a-97bc-\
e0321ca8dc4a"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0., 0.], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAONNzsA+VAEAkQcSCeRTYP5gFdhnR
PgpA/PwJwoNv5L/aYs6t88ECQIh4Omb4pPE/FgvuSRwqC0DE92xB2nH9v3Gf
pVXguwFAlmktLb405j91CMrExksRQLWaiRFsD+I/+QafzEP1+z9c1MI29J3j
P+YvwzynVQRAeIaKrr8C2j/IAghDbwoBQH5vbhxiceS/UfFJmiNnBUDYlocj
kKnNv/KO6kgElQtA/EdBGEs7uL9jGTjxwBUKQJwl/JxPguC/aJhhXBXDC0CY
euTlE3esP14IOJwB5glAUPvSYpg09L+nAPlqzZ3/P/txX78zDeO/fi95WxiX
A0A5rF/qhMb8P06G9NNYYPY/4qpJvc3aAkDQBgSDRG8KQJ0pVYKC2wTAJH+4
JDQyA0DH3Nhhl2nBvzLlx84tCgZA1KDNWrzt6L+BVHA+q9cIQC1/xi+wOvw/
ZmbqSr+k+j8uL5K7BvT4v+4UmL86nw9ABIJ1Q4qB4L8CqbMlhnABQHLII0ny
6/c/tEBdpNdxCkBgtx6HOzGsv5T1wvMpAv0/2Jen4bVR4b/Xe5KXn8cFQJRA
QaOtE/I/TBWslUudBUBXyZGoUrXpv38IxLTB4gtAydm5tpjG4D8pgRgbiF4H
QLhpBmlU/dQ/qhx2bskVDkDPKvinkYnkP3DlPznMTQtA1MNEiANlvj8FSBSd
u3gIQNK+KeXUHdS/BID2st00AUDJHio5rTDovwWZylShxgdABIMSVX+o97/b
vRbIhTYFQM/fklNCq/+/WgW42i/5CUBsNBCrCsajPxkRKtsfdgBAhtzN4VGF
5L+d1CWe
      "]]}, 
    {RGBColor[0., 0., 0.9], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAz8Ml9tnP/T8L+6SBub4QwGlftAbY
HgFAyXytaEm+BcBAhI/1tUj+Pxe5yGbO5xLA/2XvRUwMC0A6ZnGaSWQPwFr6
ze5IkPs/1WfpNhv0CMABk+p2AIryP0l3YbDSYA7A0gp4mxwE/z/VkwNubIAH
wGyh3vuXaQ5AFiEgB//FA8B8OAhwv5EPQNix3x+pNwDAcN5fQq1yCkCGzOJ6
z/n4v2vz4ZrtKPw/ddz5yr2DEcDZQPHmjR8GQOg58eiMBPy/n9lZcXFSBkDF
D9Gmp1cHwFquzBm8NwZA+DiImiVhAcBhgtfNl8wFQBbj+xw+XQHARssSSoOB
CUCLai6SdUT4vzOnLeoAnAlAzo7ap8GGCMDOnouC1H3xPwgf8rWZhBDAGNB5
aNQUBkCekbslebcLwCb2c5bIDgBAfwL8PRBEDcAyKqCdNEcDQLnRcZQrBwbA
0ge+APSW/D96eZhHliwHwBxwZSAOwwNAySdNZs5nC8BzWOKc6i4BQGFZFVKr
uQXAZEkWfX9SCUAFQ4+5GfYHwOUIPWZzFwRAgto87ZCYAMBy8j1AWKgEQO4M
TYD2sAnAPoHQJUpp/j+NtTtCDVoRwAWpfqwnEAhAGoitb7GuBsC88lPEU6Pi
P1ip/ZsDTwvAc4QmHThWBUBK67AqDOEOwLJSBUYSIgBAuZfxqIqvCcB7cmG8
VqAAQN8kzkuiKgLAuUjwB4St8z8Kw1QhCJIIwGNHnPa33vY/qskCehLnEMBg
4JQGDzgAQBiOq8yPaAvAYEVogwi1C0Byg0ICG93+v8aOj3YXdghARQh+nTOi
+b8qOxms
      "]]}, 
    {RGBColor[0., 0.9, 0.], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAkyPM50in+r/Qtvt3qXbgv3hIeNFz
4Pa/AEo/6NGBoj/9/J4y1HoCwAaqq8J53fS/PhPEWLDYCMAUsm8BME/dv0Lg
BqyelBDAOqhSd1qi3r+Sp1c/223uv7CT8lGAK/W/u3I27H4cAMCd131/ue/y
vwd3YPW1IwfA0mM7G5K0+7+ypbFSvjb7v9ukeJZv5eS/fomJ9S2zCsBjvACF
EOz0v/NnmhxVavm/BDGK9Rfk5r8ILNDV78oBwHPd30zKdOq/RVnl2o/UCcBK
kVAzSVfzv2DiXaKxLA3A2Pi/Uwk/5D+KKQNcGH4NwA+JCEPyhf2/ijZHFjHl
DsCiYuqNeunbv4btg9JeigvADF94F1WzBsA+TyjlPwwBwNznzl0o4uq/AFSR
7LPDYb/Md/IRPlDdv4B4L5eSHv+/S56KYvbG879gFMwYUl0SwJQpxigIo/m/
Qm/gVgu9BMC4/tjEALHqv1uZRZvwWgXAKK6DfNQzwb/AeTfxWPsRwPLcckB5
key/L1YgRETNEMBvHhSN3tgNwEWJwBGf0ADAd68lzzsF8L/KmH9eh6wEwOCC
NJIh+ue/8Q4JTu7a8L/IBxanuDH3v9A7Nf2zFArAWIPfrAeExb+zbXuzWfj1
vywIMFSgF9y/g3f85N9eAcBu6QzYWp7jv5FqWdMB8QvAPBWB6BYY+r/EOFxr
f1sOwBexC/XhGv6/AjNGdQSHBMBo53It/Wfhv+8RKw0lgQPAOo43dr6N5b+S
8iWuV6gCwHP329cO6O6/7nqPUonh/78kXR+fxK/Zv0XS7L+gGBHABpKQhEje
AcBMU0ZM
      "]]}, 
    {RGBColor[0.9, 0.6930000000000001, 0.], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAcL2VxGzg3z97NV08Ny/sv/dW8/Y0
/fM/CIs48MCkuT8zrAD91KAPQGXSovuG+uq/woXTbgaL4j80p89RjHrPv/Bc
Mn/Dsdu/YsgQOjxx5L9sutOZIw72P9QBbX55SMG/ZRcYEmCe+D9uzIBJJXLm
v4nDecRnzPY/xj+sShD42L/M3jWyjzboP24iMtiTWPi/ZNaQRGem9j/MLPyh
MKjvv9XLpQBe0/k/3XpK3q9a+78KtvwzXioBQApXcnVpVNK/lj+FOSb7+j/g
uVNJDVwAwKjksLhRUdo/uI7OOhx79r/o3tvuprIDQIM8w/4Ub+y/EDcgl5kt
/D9Q1r9vSAXMvwxOaDPS4vU/dAyUO+a/77/dTgVyM1oCQIQaZeo+A82/OgH9
f9lGDUA8uxQuBC/Rv6i8IAzUVOg/srnUspgA07+amqqa4NP0PwC/w+1Gsom/
t7AH8+/EDEB6ipTgzIPyv6eqYITKb+s/lkFAGJd54r+0/5OdqbP0P9OnI0Eo
++C/WuiJ8+4y/z/I8l/nb6jPv7T8Heru0P8/zUpn+6hH7b8ZTPI1YSkNQPWS
hPLwz9u/uodyeTlS6z/EZYnzc0PYPwBBX2Wlmr6/NlqlitcZ9r8uUY8evU/e
P6waa2QWbda/IBgKuujDoD+x9+aMEon9vyBt3uezN/U/AS/moYbA6L/hT9zC
iMD3PzPdDO3L6u6/wn4oHKdK+D+AgvF8OPbyv7G1ns04tPA/OolQzkC69L+W
GU80oXHiP6AB1ldVUKY/UZk7hg==
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->200,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"data\"", TraditionalForm],
  PlotRange->{{-4.5911334871826455`, 4.324000429946058}, {-4.726373296738777, 
   2.356837729273466}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7257912015406322`*^9},ExpressionUUID->"691296a9-af30-4a52-a68a-\
e440fc385803"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gaussian", "[", 
    RowBox[{"\[Mu]_", ",", " ", "\[Sigma]_", ",", " ", "n_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", " ", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
     " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"positions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", " ", "1", ",", " ", "5", ",", " ", "0.5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1.", ",", "0.77", ",", "0."}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nums", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"100", ",", " ", "100", ",", " ", "50", ",", " ", "20"}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clusters", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{"gaussian", ",", " ", 
     RowBox[{"{", 
      RowBox[{"positions", ",", " ", "sizes", ",", " ", "nums"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clusters", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"BinormalDistribution", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "2"}], "]"}], ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5", ",", "2"}], "}"}], ",", "2"}], "]"}], ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.8"}], "}"}], "]"}]}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"30", ",", "40"}], "}"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", "4", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"clusters", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"Darker", "[", 
       RowBox[{"colors", ",", " ", "0.1"}], "]"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ".", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<data\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.725790317327263*^9, 3.725790344768306*^9}, {
  3.7257903909318447`*^9, 3.7257904361039896`*^9}, {3.725790480730565*^9, 
  3.725790537936957*^9}, {3.7257905941402407`*^9, 
  3.725791211454797*^9}},ExpressionUUID->"bf67cd52-b0d5-4ba3-8f40-\
a0d3afa84cad"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","prng",
   "\"Value of option PlotRange -> \\!\\(\\*RowBox[{\\\"{\\\", \\\"50\\\", \\\
\"}\\\"}]\\) is not All, Full, Automatic, a positive machine number, or an \
appropriate list of range specifications.\"",2,245,46,24706359309246942329,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7257912143649254`*^9},ExpressionUUID->"46e464ea-51fc-4fba-af7e-\
ef5614f9097c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0., 0.], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAniWV9qk7AMDi6jjf/WDvP7RDlViA
0QHAm0npCwQ4BUBul/bFKSXlv/sGEkEpjAlAdjgHoioJCsCE5W5YLrr8P/+x
JaB0I+u/Z9uIw650EkCAgLWSXaugP/556qfgaRZAYW+p+hgqAcBr15fVZjv6
P6nnRanc8Pi/rtQ2ofAl8T87dqfMeQHlv6vJNgW70QFASh4Jw7Kd+7/2x6Gt
kN7yPwgBHqBdxQHAAlIKwWjD/D+nMaAXQnLkv2r9Q8NeJRJAaDepcfCD+b+J
/ASZsy0QQAPx0UuiqP6/Yq49cj5DBkAWNeg8n3z1v5YTH3wFfQ1AiABGE0Ew
9L+edpZDUBb6P2jHltKliNi/3mseR+gjEkDMOns5V4vzv3LYlJZYEQlAy9O1
LUFS879kDgdv6gEJQClGGA7DCeK/i1o/ugpBBUAzqvx+LN/wv/tNLIbf5vw/
xBtLJdlBEcDEENiHx0ToP/xJoW5f5gPA2F0QK6pM1T8e6TobEHQTwChNvvGW
WuI/XPUi4NT+A8CHAmRYbboKQHx9HSKmhALAty0VAEU8+j8lq42mqXPkvyHw
97YjrgtAZSbK9RDx6b9GrtvtDO0NQBX/RdRoZfW/NJuFqKFHBkBCfHjBtQHw
v2BUuFD3wdc/nNi8V/64/r/ClsyENREWQF2xK3fp3gfAVI6HcaoUFUDkxOXr
aTAKwKYWNNCtrwJArtCdp5np/b92jo+c5sEFQLdo1Fxm6Pu/2gXDaCzTDkB4
a6VtYjvWv/JZKw0ByhBA9zxgC9c/AMCSHMqebhALQD0b9fSlcfq/VtFu6+jZ
BUAURsg5T78BwGI+ZdfgcQdAJo80JQ==
      "]]}, 
    {RGBColor[0., 0., 0.9], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAnkq7IB9Nu78mmEAoyzIBwAiahyIF
tui//DEeK2oiA8BAyHXsovHKv0QRGpEZtwDAxK1aBRgkF0CU2JquyDbhP34P
Jb3Fu+i/uNtMMxSN+r+dAaBZw7v6PyhFMrCBSgHAQoZwNMlACcCyGOH+sP4K
wL04E1UKNAHA5gOcPf6+BMDASyIZU+8CwELb3Z1guwDAfewEVu8p+b92kXSM
Sv3zv5t3Yk562eO/0viXb02A+7+lKmg9kr8FwGbHPiZwbgLA6NDGaBda8D9Q
lKAcSW0BwIYGvuhMkc4/YDDt7TMgzr8Q0OJiuqjWv5UsoYWBLw3AwhFXWTDz
+z/S0PTQmZX1vzw4uvrb6QNAiCOXIPVy5L+QA2r6tGyRv0iB8xnc6Pe/b3l5
P2S0AUAgIphVfFMBwI+yq326Uvu/fyymO4hNCsBEql7doyz3v1Uv/bGY+gzA
L51G1QBewT97GyWKZ9L8v80HLV9ECQtAwB3ORLw04z8jzzIR/X/4v+MrWOTg
DwLAR+AajIITCsCCUexhW80GwMBIXxvbCOY/Kkh5xMuR778wurWcWOMAQOBu
lpAZ9sy/GsKqMFQezz9u9vsx68MCwDbVkP0Mn+8/kJmDCMhk4L848wrYFInv
v14ByxJrtALAwZ6c8HuC2T/83pkdDo7Yv9cU/Bo=
      "]]}, 
    {RGBColor[0., 0.9, 0.], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAytYEgMqK97/ykv00JwQYwGDcvhyC
Y5o/XNLZIzYh5r+k97SsYKLoP2XiBpHuUv2/lpkoeqUb/j8AKGWbEg2oP08G
+CxSFvS/EtQia6xNEsD6gH6TXKn4v2y1yrQxZRTAPyTSJ61Y8L8CIHn/dEoa
wMbWPjIY8u0/3n4os9blCcAuoTD40Qjwv4Z9Xs9ELRTAK+RaUT/08L/EPbvV
Xd8HwL2jPeL0MwzACmfR+ljNEsD0zjFpLermP3wNrO8ZFQbAUAzIC5kW1r8X
jIzeWgEGwLPPBPDy+Nq/tMavr9roEcDdy/BFALbwPy3Sg7Ml3QnAJm9o4eTp
4T9dEYuFDHgLwAKBls6L8PO/me54onggB8BC12qk1L/Dv4j1dS5LwQvAiOVr
xAmi0r9qaFV10/7tv6zoDR4gF8I/ucGn7EycDcAjNrdmok0FwJ/TrXH6uQXA
N5HaJYDL+L/MNwRZRckLwAAbAuVAqe4/9AkerR/CB8DGNwkAdg/uvwQET98g
gfi/rNd29a+p+r/42JwPCfUAwIiPemDO5sE/cmJvLtCJDMBiI4ChGEnkvwZb
2zGABQ/AdiWjuaJ97T+TFi6LTcvxvwhy4d4rw/W/vwljcvIDBsAA4P+sQ4ab
PwwxsxFPhgTA8aPFsExN5L83wCG/D3X7v+RqAgE=
      "]]}, 
    {RGBColor[0.9, 0.6930000000000001, 0.], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAASCTwyejWsj9UXs2q33Phv5ppTx5K
kf2/RKrA3NarAUCA5Czz+liHP6VtIi/74QJA1rrbzhYw0b+7zv+Dwmv7P2n9
6syGuey/aIBjyRxMuD+ORh3YQW/3vzLKmQf59/U/WNvkyWfE3T8yba2mfJsL
QNjG2Fmo+cg/LsvvLFM67z/Q6rcRn3y0v1TFAVl8kvM/zD2mDn8j4j/It0Gs
gA/PP0Qke62pOsK/kvdNazRw/L883idtb1X9P0wyeZgg3+0/jYz1jAPC979o
6T3OBZ7Fv66q2+O+m+c/SE/a3K7O7T/e/m1d4RLwv9hwBMG5ttC/oEyORj5z
9b9yF4KgcWPyv6TiIQBAWvK/Fu6mZipc5r8UocpcCAnCP3CG4UaVUNG/KBgP
3YWT8L/wrY73Nfq1P9yhCcdlKPy/BLs51S9K/j+9Q0WcrHjxv9aSzVUMzPu/
WsIAvxEx9b+QfjSXMtGyv76fjIMO8ty/UM09iXSuBUA8FLxPRFDVvzTnIq4F
ggLAwJeYONpC5T8XvMvWelvmP/47/R4fEPC/8uir60oi5T9mpOG/+FbsPxDk
DD6xa8q/6E+fb1Jz/D+WlPqep0zlP3un16v389+/izz0xlKa8j/JiWLyEuT9
vwZyyXpNYQRA8H3q765qvz+SFHjuwkH0P7CFbICAv9Y/YNmQ7YN47b+yYPEh
QLL1v4oM5yLpn+0/zM0ncg==
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->200,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"data\"", TraditionalForm],
  PlotRange->{{-4.863342690916651, 5.78524788251838}, {-6.572711936729322, 
   5.60339605682975}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7257912143990192`*^9},ExpressionUUID->"dba0c615-2432-43ee-89e2-\
117abbb8abcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"line", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "5"}], ",", " ", "5", ",", " ", "0.25"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{"Tuples", "[", 
    RowBox[{"line", ",", " ", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makecolormap", "[", "probs_", "]"}], " ", ":=", " ", 
   RowBox[{"Transpose", " ", "@", " ", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Blend", "[", 
          RowBox[{"Keys", "[", "#", "]"}], "]"}], "&"}], ",", " ", "probs"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Length", "[", "line", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{"colors", ",", " ", "clusters"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methods", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<LogisticRegression\>\"", ",", " ", "\"\<NaiveBayes\>\"", ",", " ", 
     "\"\<NearestNeighbors\>\"", ",", "\[IndentingNewLine]", 
     "\"\<NeuralNetwork\>\"", ",", " ", "\"\<RandomForest\>\"", ",", " ", 
     "\"\<SupportVectorMachine\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ArrayPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"makecolormap", " ", "@", " ", 
       RowBox[{"Classify", "[", 
        RowBox[{
        "data", ",", " ", "points", ",", " ", "\"\<Probabilities\>\"", ",", 
         " ", 
         RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", "\[Rule]", "method"}], ",", " ", 
      RowBox[{"DataReversed", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"ImageSize", " ", "\[Rule]", " ", "150"}]}], "]"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"method", ",", " ", "methods"}], "}"}]}], "]"}], "~", 
  "Multicolumn", "~", "2", "~", "Legended", "~", "plot"}]}], "Input",
 CellChangeTimes->{{3.7257912444794226`*^9, 3.7257912890688124`*^9}, {
  3.7257913804123287`*^9, 
  3.7257916807346344`*^9}},ExpressionUUID->"9940ae31-af6b-441d-90e5-\
6ded4b3153b0"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[
        RasterBox[CompressedData["
1:eJztyEEJgEAUBNAP9hA8muJncCMIe94UdjKGATx4t4TIGsHjGxiYedPaSh0i
Yv767p4ryz5u93Jm/0dyzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPO+V/+AB8ksqw=
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"LogisticRegression\"", TraditionalForm]], 
       GraphicsBox[
        RasterBox[CompressedData["
1:eJztyEEJgEAUBNAP9hA8muJncCMIe94UdjKGATx4t4TIGsHjGxiYedPaSh0i
Yv767p4ryz5u93Jm/0dyzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPO+V/+AB8ksqw=
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"NeuralNetwork\"", TraditionalForm]]}, {
       GraphicsBox[
        RasterBox[CompressedData["
1:eJztyEEJgEAUBNAP9hA8muJncCMIe94UdjKGATx4t4TIGsHjGxiYedPaSh0i
Yv767p4ryz5u93Jm/0dyzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPO+V/+AB8ksqw=
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"NaiveBayes\"", TraditionalForm]], 
       GraphicsBox[
        RasterBox[CompressedData["
1:eJztyEEJgEAUBNAP9hA8muJncCMIe94UdjKGATx4t4TIGsHjGxiYedPaSh0i
Yv767p4ryz5u93Jm/0dyzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPO+V/+AB8ksqw=
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"RandomForest\"", TraditionalForm]]}, {
       GraphicsBox[
        RasterBox[CompressedData["
1:eJztyEEJgEAUBNAP9hA8muJncCMIe94UdjKGATx4t4TIGsHjGxiYedPaSh0i
Yv767p4ryz5u93Jm/0dyzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPO+V/+AB8ksqw=
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"NearestNeighbors\"", TraditionalForm]], 
       GraphicsBox[
        RasterBox[CompressedData["
1:eJztyEEJgEAUBNAP9hA8muJncCMIe94UdjKGATx4t4TIGsHjGxiYedPaSh0i
Yv767p4ryz5u93Jm/0dyzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPO+V/+AB8ksqw=
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"SupportVectorMachine\"", TraditionalForm]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    GraphicsBox[{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0.9, 0., 0.]], 
         PointBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAniWV9qk7AMDi6jjf/WDvP7RDlViA
0QHAm0npCwQ4BUBul/bFKSXlv/sGEkEpjAlAdjgHoioJCsCE5W5YLrr8P/+x
JaB0I+u/Z9uIw650EkCAgLWSXaugP/556qfgaRZAYW+p+hgqAcBr15fVZjv6
P6nnRanc8Pi/rtQ2ofAl8T87dqfMeQHlv6vJNgW70QFASh4Jw7Kd+7/2x6Gt
kN7yPwgBHqBdxQHAAlIKwWjD/D+nMaAXQnLkv2r9Q8NeJRJAaDepcfCD+b+J
/ASZsy0QQAPx0UuiqP6/Yq49cj5DBkAWNeg8n3z1v5YTH3wFfQ1AiABGE0Ew
9L+edpZDUBb6P2jHltKliNi/3mseR+gjEkDMOns5V4vzv3LYlJZYEQlAy9O1
LUFS879kDgdv6gEJQClGGA7DCeK/i1o/ugpBBUAzqvx+LN/wv/tNLIbf5vw/
xBtLJdlBEcDEENiHx0ToP/xJoW5f5gPA2F0QK6pM1T8e6TobEHQTwChNvvGW
WuI/XPUi4NT+A8CHAmRYbboKQHx9HSKmhALAty0VAEU8+j8lq42mqXPkvyHw
97YjrgtAZSbK9RDx6b9GrtvtDO0NQBX/RdRoZfW/NJuFqKFHBkBCfHjBtQHw
v2BUuFD3wdc/nNi8V/64/r/ClsyENREWQF2xK3fp3gfAVI6HcaoUFUDkxOXr
aTAKwKYWNNCtrwJArtCdp5np/b92jo+c5sEFQLdo1Fxm6Pu/2gXDaCzTDkB4
a6VtYjvWv/JZKw0ByhBA9zxgC9c/AMCSHMqebhALQD0b9fSlcfq/VtFu6+jZ
BUAURsg5T78BwGI+ZdfgcQdAJo80JQ==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0., 0., 0.9]], 
         PointBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAnkq7IB9Nu78mmEAoyzIBwAiahyIF
tui//DEeK2oiA8BAyHXsovHKv0QRGpEZtwDAxK1aBRgkF0CU2JquyDbhP34P
Jb3Fu+i/uNtMMxSN+r+dAaBZw7v6PyhFMrCBSgHAQoZwNMlACcCyGOH+sP4K
wL04E1UKNAHA5gOcPf6+BMDASyIZU+8CwELb3Z1guwDAfewEVu8p+b92kXSM
Sv3zv5t3Yk562eO/0viXb02A+7+lKmg9kr8FwGbHPiZwbgLA6NDGaBda8D9Q
lKAcSW0BwIYGvuhMkc4/YDDt7TMgzr8Q0OJiuqjWv5UsoYWBLw3AwhFXWTDz
+z/S0PTQmZX1vzw4uvrb6QNAiCOXIPVy5L+QA2r6tGyRv0iB8xnc6Pe/b3l5
P2S0AUAgIphVfFMBwI+yq326Uvu/fyymO4hNCsBEql7doyz3v1Uv/bGY+gzA
L51G1QBewT97GyWKZ9L8v80HLV9ECQtAwB3ORLw04z8jzzIR/X/4v+MrWOTg
DwLAR+AajIITCsCCUexhW80GwMBIXxvbCOY/Kkh5xMuR778wurWcWOMAQOBu
lpAZ9sy/GsKqMFQezz9u9vsx68MCwDbVkP0Mn+8/kJmDCMhk4L848wrYFInv
v14ByxJrtALAwZ6c8HuC2T/83pkdDo7Yv9cU/Bo=
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0., 0.9, 0.]], 
         PointBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAytYEgMqK97/ykv00JwQYwGDcvhyC
Y5o/XNLZIzYh5r+k97SsYKLoP2XiBpHuUv2/lpkoeqUb/j8AKGWbEg2oP08G
+CxSFvS/EtQia6xNEsD6gH6TXKn4v2y1yrQxZRTAPyTSJ61Y8L8CIHn/dEoa
wMbWPjIY8u0/3n4os9blCcAuoTD40Qjwv4Z9Xs9ELRTAK+RaUT/08L/EPbvV
Xd8HwL2jPeL0MwzACmfR+ljNEsD0zjFpLermP3wNrO8ZFQbAUAzIC5kW1r8X
jIzeWgEGwLPPBPDy+Nq/tMavr9roEcDdy/BFALbwPy3Sg7Ml3QnAJm9o4eTp
4T9dEYuFDHgLwAKBls6L8PO/me54onggB8BC12qk1L/Dv4j1dS5LwQvAiOVr
xAmi0r9qaFV10/7tv6zoDR4gF8I/ucGn7EycDcAjNrdmok0FwJ/TrXH6uQXA
N5HaJYDL+L/MNwRZRckLwAAbAuVAqe4/9AkerR/CB8DGNwkAdg/uvwQET98g
gfi/rNd29a+p+r/42JwPCfUAwIiPemDO5sE/cmJvLtCJDMBiI4ChGEnkvwZb
2zGABQ/AdiWjuaJ97T+TFi6LTcvxvwhy4d4rw/W/vwljcvIDBsAA4P+sQ4ab
PwwxsxFPhgTA8aPFsExN5L83wCG/D3X7v+RqAgE=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0.9, 0.6930000000000001, 0.]], 
         PointBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAASCTwyejWsj9UXs2q33Phv5ppTx5K
kf2/RKrA3NarAUCA5Czz+liHP6VtIi/74QJA1rrbzhYw0b+7zv+Dwmv7P2n9
6syGuey/aIBjyRxMuD+ORh3YQW/3vzLKmQf59/U/WNvkyWfE3T8yba2mfJsL
QNjG2Fmo+cg/LsvvLFM67z/Q6rcRn3y0v1TFAVl8kvM/zD2mDn8j4j/It0Gs
gA/PP0Qke62pOsK/kvdNazRw/L883idtb1X9P0wyeZgg3+0/jYz1jAPC979o
6T3OBZ7Fv66q2+O+m+c/SE/a3K7O7T/e/m1d4RLwv9hwBMG5ttC/oEyORj5z
9b9yF4KgcWPyv6TiIQBAWvK/Fu6mZipc5r8UocpcCAnCP3CG4UaVUNG/KBgP
3YWT8L/wrY73Nfq1P9yhCcdlKPy/BLs51S9K/j+9Q0WcrHjxv9aSzVUMzPu/
WsIAvxEx9b+QfjSXMtGyv76fjIMO8ty/UM09iXSuBUA8FLxPRFDVvzTnIq4F
ggLAwJeYONpC5T8XvMvWelvmP/47/R4fEPC/8uir60oi5T9mpOG/+FbsPxDk
DD6xa8q/6E+fb1Jz/D+WlPqep0zlP3un16v389+/izz0xlKa8j/JiWLyEuT9
vwZyyXpNYQRA8H3q765qvz+SFHjuwkH0P7CFbICAv9Y/YNmQ7YN47b+yYPEh
QLL1v4oM5yLpn+0/zM0ncg==
          "]]}, {}}}, {}, {}, {}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{-4.863342690916651, 
       5.78524788251838}, {-6.572711936729322, 5.60339605682975}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> 1, Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 200, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> 
      FormBox["\"data\"", TraditionalForm], 
      PlotRange -> {{-4.863342690916651, 
       5.78524788251838}, {-6.572711936729322, 5.60339605682975}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.725791751092183*^9},ExpressionUUID->"2aa1f1c8-339d-4034-8e7b-\
5988b0098067"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"line", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "5", ",", "0.25"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"Tuples", "[", 
    RowBox[{"line", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makecolormap", "[", "probs_", "]"}], ":=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"Keys", "[", "#", "]"}], ",", 
           RowBox[{"Values", "[", "#", "]"}]}], "]"}], "&"}], ",", "probs"}], 
       "]"}], ",", 
      RowBox[{"Length", "[", "line", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{"colors", ",", "clusters"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"methods", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<LogisticRegression\>\"", ",", "\"\<NaiveBayes\>\"", ",", 
     "\"\<NearestNeighbors\>\"", ",", "\"\<NeuralNetwork\>\"", ",", 
     "\"\<RandomForest\>\"", ",", "\"\<SupportVectorMachine\>\""}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ArrayPlot", "[", 
     RowBox[{
      RowBox[{"makecolormap", "@", 
       RowBox[{"Classify", "[", 
        RowBox[{"data", ",", "points", ",", "\"\<Probabilities\>\"", ",", 
         RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "method"}], ",", 
      RowBox[{"DataReversed", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "150"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"method", ",", "methods"}], "}"}]}], "]"}], "~", "Multicolumn", 
  "~", "2", "~", "Legended", "~", "plot"}]}], "Input",
 CellChangeTimes->{{3.7257917746330833`*^9, 
  3.725791794568675*^9}},ExpressionUUID->"952fdfdd-d5df-4a93-a3fc-\
c1b0160c524e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[
        RasterBox[CompressedData["
1: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
vQEwcpe08GGmIyxjF6sgqYdPQiZ8FQaRuCzHlLnHcRqH7FXn+FUG8FfeLmdt
QgKCtqzXUy6awqRUTwNb/hDqY3Mm5FgyYacnuTf00yQKxflrVTaMYN2RrHT7
sLdQ8/+QbhD3BfnnJZNoKSNYWfSb4LB+h40enbqGChOg4RL9Kfn3DilXzX/W
Uw6NMLfSta9p0DeV37uHzJ0zJ/yFDu7/BBH592fye8bAquqnbOo2DJWaeE2K
RCMs3L2LeltH8djqacJqzyFU8Foo3hxpwRYHCXv2+GHMskuy3yDznv6Amkut
QQcamqOcJ64M4nzdD05VshfYSjS/CvzWjdVr0jMqRD5DO/zWXOqyz+hKeU+X
suwD//yqce93nbBNMPP7r6IbO0e8K+N0BzFuZ5lzKaEVRU7sjy/XdKLp19sb
OzqGEL3Da6PvbCOKM9P+9vF14IwGD02aewR6mmmrVgZ+AsuWVSpBTW34EmOt
38Izih0J9+P+7v+IlHlTS4nuVsiWupj9HR/F8FH7G0lupXjw5NdUilQr4i2Z
rgQ+oMDT0+vgdb18fDaIfBfa3YK9rl/Kywco2FzIpl/8Jhu30z0zD5W04JGL
kkce1xhmzm3I+uyehjNjoi5TbS2g1Qsf9t9LciFpDeH4BNBkXbpYuFqhuEdj
oEVwDE0xFnR7nVj8K0ysVHFsxdYp5UN7Vo8hYLEc118+Q0vi8uvlf1oRrn/7
iFI7BSXHLcoOOAeBr5xfd9C/DSc6AmRXhlJwRc3vy96Sx9jnb850VKYdwgJb
u3XPUTCru0HEs8wN0deCd2pPtIPrsMNI0dwoeLUj1u5d9ghPtE7d8E7uwI7U
1Qm/okZx+OyhejdeW6S8clRKudeJ85ur+j1lR7FTueBcx5F7yJavidp8ogvz
4t4pPp0jSAv7b/n0S1NEpO0yuMnZjRVzHe2jd0ZwXVzRxm2TEZyjzAwTZrpR
XeOHcytHwLuSpbWZ1LXZUNf++OOOSJmd6bs2+oNI3PA3NJLkT21ezUlaeID9
+JD7yqI1qHwgclOY5G/iNZ973gwCa1GezIoXW3HHnw1ipA/wGBsIh26MwZsO
hYznrmJIHSCiucicX7N+u+j1M6+wynz57LkTcjB79q2tmuz1jyq5qLfU36Bn
ZNsD5jhVrDundZKXToduqmey86Z3kOlsv2avpYeg0+UrHPvpyJ9Urm4Oq0T8
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
hDUMH9jsuj82U8AU1g2N5W7f0omKZaxv/5L8rkXc+9CPVkgDj2BcaxmReaTu
9U+S+37c7BfL54zl3GxHSk+2EMf7OOq+kFxAdD5iWMwXu1X5ioQrRoizq91u
tJH8pvxh+Z2sYWBqVDU2VvlBKM0oxL4kue3hCJ7FkpdIPVh++nP1amgpJv93
lOSsFZ2BMtvTMddfeX+KgxtTXZELxoz3d9VyTlrv8pCfIrPv4DJRPDr98WYZ
qfdZGcOHrw9/wDGRP7/vHz+C3tl+gddkr//TX//tMK0GLCEyP4a8z8BDqHjs
HJnz+yTbdqcPt+Bp1bq7tJSLeBGiuSLiCx0hLDl2DeTnaZFDbevrPCOcrj/e
/KKf9JmutOzvc/14bzD91oL7Lka/O3b719Hxl34jMZ3MkZvHM5iKP9hBtrrg
r08OHR/Wdm9k5R8FYSm4TJTXBZK3gtVMQ+jgHz/lsiGAgqZHn502+Hjj8AmB
HXdvk8/zWeX9RAdSd7tZhza6BSL6LMes+FGyd7jfudpCzo9Nbt+2lgWHofH7
/F7jX4zv47s8Gi1HxfFvt855X3yOKzULGt/jppHrVCqofIqKm1+feHyPjUfQ
2NFtzYemMThzOT6SjwoFi513Wr6ngLYuc3b+9RTSP8QdNOsag9VOK7HAh1mY
t81SSfw3iRLexu1Wt8eQxSlq+sjvLWZ/K1+wF5rE8vBAs+5+CraX7ykJ7ikG
73y/Jri/ICM1arXVHgpOGtR3Pjv3AXdFb64YbB7HodQKKp/qKJnPlZoDf1Si
ypfP/YMqDQur5qRYz47g9aNrx+Ss63BvJ4ubkf8Yno6INmwk53F3WOFpL8Nm
2A8cj34XPorZb6/XezcOgk04Td+T0gbFS8Ylf+yHUewmxr6irR87EplSr6d2
Yc6w0aXjxCDqXvyr3/CtF3tHTTW3BH0GXTHvP4WNn/HC4oL2fTIPiNyZHKg7
PIjx1w5NBsWM7+FgM7O40QEZqaZYOuswMt5ZGcjktcLrv+vXfX62grrTO1Kh
bATHWvn5M7Y2YW8Vu0JhRzNsbzLTYo9SsPONf1/R2Cew9d9O28fWRPaJRfeX
9mMQHVyXrxnwEdcT7VM5NOoxIp9Rcvo+Fb+RIfBaqAwRzZEvUw7U4l4877EE
BRr8WI/uesdXgHVi4tsD0z/h05+Tfma9NDhLuXUw9PsvvdFBK+csbv5na7jW
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

         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"LogisticRegression\"", TraditionalForm]], 
       GraphicsBox[
        RasterBox[CompressedData["
1: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
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"NeuralNetwork\"", TraditionalForm]]}, {
       GraphicsBox[
        RasterBox[CompressedData["
1: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
zXHXuGsqOmodoea4a9w1Ff0/f5plaA==
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"NaiveBayes\"", TraditionalForm]], 
       GraphicsBox[
        RasterBox[CompressedData["
1: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
V3R4e19zPJZHGrKb3G5VXNHHRu5NC+GLn6lorMQH8rPqv9aJ/m55/g/vX0y+
53y3HZpTlDet3FwO2pxzzVZZCYTzbaI8EtXnRPsA0X03L9e8XP+/ONFciOf/
cKJ7rqHml2jORjRPI+zTCfYTxT77rOjiZmTmqcVufkrHWaN7Kk/By/W/a65H
Wj87Wpyobh+u+/eh1g9E/TjRfkK0P4w0DzeP/zywrhnhVeq7BzIoCLHUHntW
KH/InqXguMGujgtfby2pyQ/JmJ6Qg/ylpX+tj7S8jBYnyulwzduHWj8Mdf5G
VG+MND/yNnXqsYJmqDzx+t5wh4wFh8v4f77OHbLHnHHxrbJrxPh1x6L5A2qR
V7ndyPBHyV/rIy0vo8V5uebleiT7SMvLaHGiXA/bPRpB3onqdsWKIo/Oae24
b1b+weloBUKb1nXtt3pJmHeiOfxIcxX+cWInslogvfVz/6yXtWizMLfN7c8e
stPCkjYqyDZBX85yh7VG7WAfIyNLYhf9tT7S8jJanOj5tOFahyjvROc40f04
0T070VxupHnoIvEZBv0toJvdMFWaVgvjhsm1/XbZQ/Y1RWnONRZN6OX7Ebfq
Vg18X3CujjUu+mt9pOVltPhw5ZrIh/rcLFF9TjRnI5qnjTRvoqns80hthYbw
+alf3Kuhc+O8ebxb1pB91mQLNWWhFkz3W+9VZ1ONe2Tp97udc/9aH2l5GS3O
yzUv1yPZR1peRovzcs3L9Uj2kZaX0eL/qlwTOdF9t/shZpoaox1sqUCjAyFl
GLhjlnex4znh/6GMNOflmpdrXq55uebl+h/+H2MvNtI=
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"RandomForest\"", TraditionalForm]]}, {
       GraphicsBox[
        RasterBox[CompressedData["
1:eJzt3GtsFUUUB/AKQsAUDCRipBbEUAiFlgTEmIoOWAoGFEuJQFseWiICH+yD
Rww2pohgMUINbwgiRlFeRjAKQsUQoBGoQF9ooQ/a2xZuSyskoEI0xBjm7Ie5
Oc7O7syd2XY/mJh/Jnv37s5vz5nZWwZkZKa80TkiImII/e+//5/5+sHb5Mti
Uvno1N5zbp0l6aPe+2Dr5wGydfQDpXdbfiI5bWMf7rWunKTRvOvldwPnY7aR
O5PTNubsvWSN15VH0Dz3QE5UxYkrZHj31vzS+CtoDsfptLqoZFtbgOz9qrxT
Vp9LpBPNi46Uri++20Rixhfm9rxXxs3zW2qm/dOlmYw+k9SWWnwmbPmkqJbH
4nq3ktmRsSfiRhUam2PnL3qd2Ry7j6Lzwen8YechnOci6qXfvLUTz37TpC3H
XHvdOy9n54NT775rta5F71dH8yvLNZbrdqrKu+/anV/fte/axNzU/lyWO9V+
7boW9SvLtdP5YIpf1a5Ve1d9HbxWx1l3W+j6qK56QW7h7Ovt3rXv13etwnW4
vLPH2U79Ru+fdeTDlCBJoOOduhb17tZ1e63LuuYtzIftWWMr4oaWkegwudbV
t8u6L6L76qpzzDWWdzTXquePrnqE+cXyEb2z85ZfLycXqTu4PljuFdeyrrOo
a1n7NnC/0t6Z8mfqeH695o1n83C5Dvc62tT+8Dc6/+s3bevxd2EQzUX9plJf
p2+N2TrxVIlj17K863pfJqtey953xeoy5nTzxKSRQxICZA8z3m6uer3QUf3a
dS3qVDSX5Vo0x1zr2mfQ5Rru7+6ROXU302tDcswpOx7u78VD2bt6/FHNPQ5v
f8D091amuZZVZ73u2jTvTtfX7HieR7v1F+5XfGTRxsOr6q15jvl1mrPHl/17
PFl1PNx+TXPqdddwnuDarXe76xrRecKrm6wX0T6Z5/qVV1P776/+1boOPL92
x2PPMdX9ti7XXnEqmh9etLprQ+fLlq/d9HpiuWmu4f0OOHW7XzGwLDWtILHS
Oj6W8xzdHF06I7iukQyk85/n3W5f7TRnXY+k1z8iIXth7NqqkL4duw52+3ld
fnnn3978ynKt2rss16K5U9esU/Cy8l5y4dIrDZZryE+eG3cnqbzOum6YLyyX
5Ve0jvP2Adhc9e8zvd4ne8W1au/Yvrqo3zR6nB30vsN8hs+dTOc5z9dR+n1T
C06lVfSvC3GN+RV1zY4Xrdeizw1ZfQvm3fcbnnxHS/L4J3vWWY6gvqj2Dvm6
PeMin1l5zLrvWK7L9RF6PsOOZQ2fMPiylX9Kr9vB5cl5698OWNdtbtSs7lP7
NpCHFlfvSilttN4vY+Ox5wN87uPHS6K7DGvg9vOYL97x2e/ldJ0uWvfZ54PT
9S/2uab4Ms01lsP83EDdwTwRzUVdi3qHegTzge0HWL9YvpOeP8x/OH/ML5bH
vLTglxWDrpKdo2Z2q49utN4TYd4hX/ztzMRT7zdZx8H6fOw5wOsr7PYJstYL
vLov+tzwXYu5luVXtXfwuInm7LqSdf0DPc7LdD7AvAW/yypnNJ5ectE6nwzq
FFzD9cGcNucuKfhuRDO5OzgYt3PpVev3WqK5LtfYeNHjyK77vmtvu8Zy8AV5
DOc8wWl8v5TtW2JOW/kg6rG5Le/H80fPW8eB44NruA4wHlyDr/1fL09per6V
1DyYnHSgV73lEfKn/6pamLmwIcQvPAfY8eA6dsS4yc99sso6H3AN4yE/90Vw
/oqaa+Q15jmA1X27/T+Mr/4sf1lRZa21743lTvsBu/lTNM+l9yXd92srN82p
aA51E+p4AlM3Ew+98MS+5sNWDk4hh3kO48E71N991N20MVm35x6vDPFo1zUv
Z13D+cydN7+4V+w1bi7qmpfbdc3L7T5PfNdyc1m+nHpsXfPRhZ/XbgjxdYPm
zzJORXPWNZaDr5UDpwwqm14U4m5X+ow9TT0rQvJuMfkkkF1DMmieWbvmkT6T
blh+wR3kBc1vfhx/sombi3qXtd6HHJ5XTr3L2j/k9fmmODIt1+UR5u3vNJ/D
eGFz0eOAF/AL8/8tmoNfNg/Ses3m4Jr1OJ3WccizaA4u2PGqvMN9Ae/w/OH5
tesanMJzjNe3Y65hXk1ILAkMKOI/NzDvfh3//xxzqssvzykcfygz/7E83K4h
h/lv17Vb79j+G29/Dz6X7WfYHPPOew64dY3lmGvf+/1cVt8r26OsXJZrNue5
duudV/exOo6t32F8BtP/uHWNjcf88vpzu66x9+++9/t5uOpme3Ot2jvm2ql3
1rWod1HXov2/aB3HXIt6N82jate6PepyjeVsH+60P1flXbSfl+WdN97uukCX
6/bqXbc701zbXV/r8q6rjmM5fN9rVbe+b4sKkiEO1/uy1t2+947hms1l9dui
fp0+B7D1uNs6jnmUlcNzIKXv4qlzLgRD9u1VuVa9HveKd9Pchateq3LtNBdd
v3vVtWgdl/07GVX77aZ51+1OlV9d+2ZO/do9H13v12S5FvWO1XHV9V2Wa13e
dXvU1YeL7pvJ8o45FX3+qO7bvepa9TrdK95Nc6e7P1f9/stuX+F0HeHWu+jv
YVT357Jcy9pvV+1alnfdvrxSr93msl2reh+nq457xbVXvJvmTnddluXUK/sD
qrzz3q+53U8zrT83zbtud6bsp8nOde0Hhnuf3+n7dHa/jvf3LKpcq67jurzr
ducV16Z/L937fm5/PwOuwS/k8PfyL1J37N/Rs7lX6rhq77rnp2m571puP293
Hx5cg1O2Pwd38Dtnnmtwx/q1m/uu/dwLrr1ex1nvTuu4Ktemedc9P/1cr2vV
zwG37914rsGRbNdYjv37tKZ51z0//bx9u3b7eznMdZD25+BlNtOfs95VuxbN
fdd+bvJ7edXv1zDvmGvV3mW5Vu39XzWtVq0=
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"NearestNeighbors\"", TraditionalForm]], 
       GraphicsBox[
        RasterBox[CompressedData["
1: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
lwtkXH2zQTrxGR3/A2ch6h0=
         "], {{0, 0}, {41, 41}}, {0, 1}], Frame -> Automatic, 
        FrameLabel -> {None, None}, 
        FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 150, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}, PlotLabel -> 
        FormBox["\"SupportVectorMachine\"", TraditionalForm]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    GraphicsBox[{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0.9, 0., 0.]], 
         PointBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAniWV9qk7AMDi6jjf/WDvP7RDlViA
0QHAm0npCwQ4BUBul/bFKSXlv/sGEkEpjAlAdjgHoioJCsCE5W5YLrr8P/+x
JaB0I+u/Z9uIw650EkCAgLWSXaugP/556qfgaRZAYW+p+hgqAcBr15fVZjv6
P6nnRanc8Pi/rtQ2ofAl8T87dqfMeQHlv6vJNgW70QFASh4Jw7Kd+7/2x6Gt
kN7yPwgBHqBdxQHAAlIKwWjD/D+nMaAXQnLkv2r9Q8NeJRJAaDepcfCD+b+J
/ASZsy0QQAPx0UuiqP6/Yq49cj5DBkAWNeg8n3z1v5YTH3wFfQ1AiABGE0Ew
9L+edpZDUBb6P2jHltKliNi/3mseR+gjEkDMOns5V4vzv3LYlJZYEQlAy9O1
LUFS879kDgdv6gEJQClGGA7DCeK/i1o/ugpBBUAzqvx+LN/wv/tNLIbf5vw/
xBtLJdlBEcDEENiHx0ToP/xJoW5f5gPA2F0QK6pM1T8e6TobEHQTwChNvvGW
WuI/XPUi4NT+A8CHAmRYbboKQHx9HSKmhALAty0VAEU8+j8lq42mqXPkvyHw
97YjrgtAZSbK9RDx6b9GrtvtDO0NQBX/RdRoZfW/NJuFqKFHBkBCfHjBtQHw
v2BUuFD3wdc/nNi8V/64/r/ClsyENREWQF2xK3fp3gfAVI6HcaoUFUDkxOXr
aTAKwKYWNNCtrwJArtCdp5np/b92jo+c5sEFQLdo1Fxm6Pu/2gXDaCzTDkB4
a6VtYjvWv/JZKw0ByhBA9zxgC9c/AMCSHMqebhALQD0b9fSlcfq/VtFu6+jZ
BUAURsg5T78BwGI+ZdfgcQdAJo80JQ==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0., 0., 0.9]], 
         PointBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAnkq7IB9Nu78mmEAoyzIBwAiahyIF
tui//DEeK2oiA8BAyHXsovHKv0QRGpEZtwDAxK1aBRgkF0CU2JquyDbhP34P
Jb3Fu+i/uNtMMxSN+r+dAaBZw7v6PyhFMrCBSgHAQoZwNMlACcCyGOH+sP4K
wL04E1UKNAHA5gOcPf6+BMDASyIZU+8CwELb3Z1guwDAfewEVu8p+b92kXSM
Sv3zv5t3Yk562eO/0viXb02A+7+lKmg9kr8FwGbHPiZwbgLA6NDGaBda8D9Q
lKAcSW0BwIYGvuhMkc4/YDDt7TMgzr8Q0OJiuqjWv5UsoYWBLw3AwhFXWTDz
+z/S0PTQmZX1vzw4uvrb6QNAiCOXIPVy5L+QA2r6tGyRv0iB8xnc6Pe/b3l5
P2S0AUAgIphVfFMBwI+yq326Uvu/fyymO4hNCsBEql7doyz3v1Uv/bGY+gzA
L51G1QBewT97GyWKZ9L8v80HLV9ECQtAwB3ORLw04z8jzzIR/X/4v+MrWOTg
DwLAR+AajIITCsCCUexhW80GwMBIXxvbCOY/Kkh5xMuR778wurWcWOMAQOBu
lpAZ9sy/GsKqMFQezz9u9vsx68MCwDbVkP0Mn+8/kJmDCMhk4L848wrYFInv
v14ByxJrtALAwZ6c8HuC2T/83pkdDo7Yv9cU/Bo=
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0., 0.9, 0.]], 
         PointBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAytYEgMqK97/ykv00JwQYwGDcvhyC
Y5o/XNLZIzYh5r+k97SsYKLoP2XiBpHuUv2/lpkoeqUb/j8AKGWbEg2oP08G
+CxSFvS/EtQia6xNEsD6gH6TXKn4v2y1yrQxZRTAPyTSJ61Y8L8CIHn/dEoa
wMbWPjIY8u0/3n4os9blCcAuoTD40Qjwv4Z9Xs9ELRTAK+RaUT/08L/EPbvV
Xd8HwL2jPeL0MwzACmfR+ljNEsD0zjFpLermP3wNrO8ZFQbAUAzIC5kW1r8X
jIzeWgEGwLPPBPDy+Nq/tMavr9roEcDdy/BFALbwPy3Sg7Ml3QnAJm9o4eTp
4T9dEYuFDHgLwAKBls6L8PO/me54onggB8BC12qk1L/Dv4j1dS5LwQvAiOVr
xAmi0r9qaFV10/7tv6zoDR4gF8I/ucGn7EycDcAjNrdmok0FwJ/TrXH6uQXA
N5HaJYDL+L/MNwRZRckLwAAbAuVAqe4/9AkerR/CB8DGNwkAdg/uvwQET98g
gfi/rNd29a+p+r/42JwPCfUAwIiPemDO5sE/cmJvLtCJDMBiI4ChGEnkvwZb
2zGABQ/AdiWjuaJ97T+TFi6LTcvxvwhy4d4rw/W/vwljcvIDBsAA4P+sQ4ab
PwwxsxFPhgTA8aPFsExN5L83wCG/D3X7v+RqAgE=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0.9, 0.6930000000000001, 0.]], 
         PointBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAASCTwyejWsj9UXs2q33Phv5ppTx5K
kf2/RKrA3NarAUCA5Czz+liHP6VtIi/74QJA1rrbzhYw0b+7zv+Dwmv7P2n9
6syGuey/aIBjyRxMuD+ORh3YQW/3vzLKmQf59/U/WNvkyWfE3T8yba2mfJsL
QNjG2Fmo+cg/LsvvLFM67z/Q6rcRn3y0v1TFAVl8kvM/zD2mDn8j4j/It0Gs
gA/PP0Qke62pOsK/kvdNazRw/L883idtb1X9P0wyeZgg3+0/jYz1jAPC979o
6T3OBZ7Fv66q2+O+m+c/SE/a3K7O7T/e/m1d4RLwv9hwBMG5ttC/oEyORj5z
9b9yF4KgcWPyv6TiIQBAWvK/Fu6mZipc5r8UocpcCAnCP3CG4UaVUNG/KBgP
3YWT8L/wrY73Nfq1P9yhCcdlKPy/BLs51S9K/j+9Q0WcrHjxv9aSzVUMzPu/
WsIAvxEx9b+QfjSXMtGyv76fjIMO8ty/UM09iXSuBUA8FLxPRFDVvzTnIq4F
ggLAwJeYONpC5T8XvMvWelvmP/47/R4fEPC/8uir60oi5T9mpOG/+FbsPxDk
DD6xa8q/6E+fb1Jz/D+WlPqep0zlP3un16v389+/izz0xlKa8j/JiWLyEuT9
vwZyyXpNYQRA8H3q765qvz+SFHjuwkH0P7CFbICAv9Y/YNmQ7YN47b+yYPEh
QLL1v4oM5yLpn+0/zM0ncg==
          "]]}, {}}}, {}, {}, {}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{-4.863342690916651, 
       5.78524788251838}, {-6.572711936729322, 5.60339605682975}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> 1, Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 200, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> 
      FormBox["\"data\"", TraditionalForm], 
      PlotRange -> {{-4.863342690916651, 
       5.78524788251838}, {-6.572711936729322, 5.60339605682975}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.725791864770442*^9},ExpressionUUID->"e9001ee1-ebe2-4dd0-9408-\
e2822ed81397"]
}, Open  ]]
},
WindowSize->{733, 840},
WindowMargins->{{Automatic, 4}, {Automatic, 42}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 571, 14, 48, "Input",ExpressionUUID->"732d1703-6569-4b16-bb64-3b50ccf614aa"],
Cell[1154, 38, 9592, 193, 71, "Output",ExpressionUUID->"5a325016-2a64-4d51-977e-851d8ecee71a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10783, 236, 183, 4, 28, "Input",ExpressionUUID->"74deb4e2-c234-4c65-b709-9f1f72d19a69"],
Cell[10969, 242, 140, 3, 32, "Output",ExpressionUUID->"5af06164-5cbf-4ff7-94eb-7d553875fa4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11146, 250, 224, 5, 48, "Input",ExpressionUUID->"3a903a18-c119-42b9-85cb-97b91a433cf8"],
Cell[11373, 257, 135, 2, 32, "Output",ExpressionUUID->"21c2c1f7-378f-438f-873c-7fb159670f16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11545, 264, 236, 5, 28, "Input",ExpressionUUID->"8e293a2d-dc0b-49ef-810a-cb4d697c26eb"],
Cell[11784, 271, 328, 8, 32, "Output",ExpressionUUID->"ef2e35ac-2a84-473f-a7b6-88aac6a12914"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12149, 284, 276, 7, 28, "Input",ExpressionUUID->"615bab61-9e09-4fc4-b4f0-b478540071af"],
Cell[12428, 293, 9302, 136, 106, "Message",ExpressionUUID->"3cd48358-9f6f-4355-a2ce-05551f349ed4"],
Cell[21733, 431, 9855, 196, 71, "Output",ExpressionUUID->"0b77ee70-aec9-4726-9d64-44231677ff8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31625, 632, 271, 7, 48, "Input",ExpressionUUID->"a078fa04-8c7e-4947-a6fe-aa48b8d45f46"],
Cell[31899, 641, 9223, 136, 106, "Message",ExpressionUUID->"18b90c28-dd39-4eaf-858c-fb4b8c94713c"],
Cell[41125, 779, 9824, 195, 71, "Output",ExpressionUUID->"b28aad14-96d1-4967-b35d-61cc07ea7305"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50986, 979, 314, 8, 28, "Input",ExpressionUUID->"fee673b1-b273-440b-98a8-e46b6f8ff7bd"],
Cell[51303, 989, 805, 20, 52, "Output",ExpressionUUID->"01d9836f-d892-4fd9-bdbf-5f586e52eab1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52145, 1014, 391, 10, 28, "Input",ExpressionUUID->"499afbd2-6fe9-4c4f-8db2-5719ca9887a9"],
Cell[52539, 1026, 303, 8, 21, "Message",ExpressionUUID->"f57a42c9-0d4e-45ca-aa04-9d1b8488307c"],
Cell[52845, 1036, 301, 8, 21, "Message",ExpressionUUID->"5f7f24cc-d65a-409a-8f44-cd5ba4ccfec7"],
Cell[53149, 1046, 298, 7, 21, "Message",ExpressionUUID->"4936033b-49bd-483d-9360-5929df6d51ef"],
Cell[53450, 1055, 413, 9, 21, "Message",ExpressionUUID->"8a967a72-3af4-4ed7-bdc8-b3e6d5681e7d"],
Cell[53866, 1066, 1271, 38, 230, "Output",ExpressionUUID->"7b4374eb-ab08-48e5-99e4-8436a0c422a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55174, 1109, 405, 11, 28, "Input",ExpressionUUID->"cf411184-cfe2-472f-af44-2ce1d7f8eb09"],
Cell[55582, 1122, 2338, 57, 238, "Output",ExpressionUUID->"a5c938d7-0c69-48d2-9d4d-79889e440ae1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57957, 1184, 231, 5, 28, "Input",ExpressionUUID->"6b1a3476-e706-42ff-bbe5-7fa58717f006"],
Cell[58191, 1191, 138, 3, 32, "Output",ExpressionUUID->"5bb7cb4b-d08f-4ebb-aa42-3d667643fdf1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58366, 1199, 320, 7, 28, "Input",ExpressionUUID->"6a924de1-50a9-4082-96cc-37f6dec4aa86"],
Cell[58689, 1208, 329, 8, 32, "Output",ExpressionUUID->"d282bf22-f281-40d7-809c-003c1756c5dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59055, 1221, 328, 6, 28, "Input",ExpressionUUID->"311a58b5-d052-48a9-99f6-e57ad5bce488"],
Cell[59386, 1229, 140, 3, 32, "Output",ExpressionUUID->"ddc50ea6-6942-4050-9edf-05dd66c6c327"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59563, 1237, 1082, 32, 48, "Input",ExpressionUUID->"316deaad-1a87-4ebb-afcf-258dbf54b244"],
Cell[60648, 1271, 1324, 21, 41, "Message",ExpressionUUID->"8ec58a9b-d36b-4a92-a788-c5c8550c7d6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62009, 1297, 1045, 31, 67, "Input",ExpressionUUID->"7765d299-c76f-471e-9967-093baa2fb932"],
Cell[63057, 1330, 9828, 199, 71, "Output",ExpressionUUID->"f85a0102-6845-4875-96e6-ca7910a6f12f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72922, 1534, 240, 6, 28, "Input",ExpressionUUID->"4c80434b-fc51-428a-a8d8-c720079cdcfe"],
Cell[73165, 1542, 140, 3, 32, "Output",ExpressionUUID->"3de98325-a70e-462f-a333-77c713d5f296"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73342, 1550, 268, 7, 28, "Input",ExpressionUUID->"a1bb5af8-3b84-44f9-be15-65f8173e743f"],
Cell[73613, 1559, 138, 3, 32, "Output",ExpressionUUID->"2a875a1d-e43d-412c-bfff-5e81f201d53f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73788, 1567, 297, 8, 28, "Input",ExpressionUUID->"702ecc5b-92c0-4b8b-b562-78727881d166"],
Cell[74088, 1577, 360, 9, 32, "Output",ExpressionUUID->"ae322969-9721-4b2b-8d56-018b80664281"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74485, 1591, 24304, 415, 84, "Input",ExpressionUUID->"68945cc4-5e14-4c65-9fed-52226fbfcdd2"],
Cell[98792, 2008, 33946, 599, 87, "Output",ExpressionUUID->"8217f4de-ca02-4295-ad8d-054bc588a656"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132775, 2612, 11234, 257, 60, "Input",ExpressionUUID->"1d38d0ee-04fc-497b-b2f4-e132e6cc4bbe"],
Cell[144012, 2871, 15772, 379, 64, "Output",ExpressionUUID->"613bf6bd-5337-48ed-ab3b-a26f2e806ef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159821, 3255, 11224, 257, 60, "Input",ExpressionUUID->"7091e52e-10cd-4281-8f07-a95378a9278f"],
Cell[171048, 3514, 21545, 411, 71, "Output",ExpressionUUID->"7e08239e-f4ef-47d1-a7e1-82579349d521"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192630, 3930, 2586, 63, 35, "Input",ExpressionUUID->"d9a5157e-da31-42a7-be76-a7031cde45b7"],
Cell[195219, 3995, 251, 6, 36, "Output",ExpressionUUID->"efc1ce1d-e3b9-4efd-8970-d2a107bfbbf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195507, 4006, 720, 20, 48, "Input",ExpressionUUID->"e8a2762c-e8b1-44b8-a6ef-040fe61da42f"],
Cell[196230, 4028, 9599, 192, 71, "Output",ExpressionUUID->"95457106-e862-4deb-b08e-2e607c4701a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205866, 4225, 197, 4, 28, "Input",ExpressionUUID->"10781f4b-5cb4-4ba6-9899-a54a16c11b51"],
Cell[206066, 4231, 431, 10, 23, "Message",ExpressionUUID->"3310ebe9-c64e-425c-b286-5c5548b08c4d"],
Cell[206500, 4243, 9805, 194, 71, "Output",ExpressionUUID->"aea1afe3-09b8-42a1-acfd-169cf46e4266"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216342, 4442, 218, 5, 28, "Input",ExpressionUUID->"87f8d70d-5f6d-48a1-83b3-8fd40ed126e4"],
Cell[216563, 4449, 141, 3, 32, "Output",ExpressionUUID->"1521f69e-9fd2-45c8-98dd-65ea5bddb090"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216741, 4457, 263, 7, 28, "Input",ExpressionUUID->"d2880e1a-bb13-4e72-98eb-5deaa625fc1f"],
Cell[217007, 4466, 140, 3, 32, "Output",ExpressionUUID->"95ace73d-6986-49de-8989-f5c1de8d9dee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217184, 4474, 272, 7, 28, "Input",ExpressionUUID->"12a94d00-d097-45b9-8c42-30f11dc81ddd"],
Cell[217459, 4483, 333, 8, 32, "Output",ExpressionUUID->"c7d9519d-4b88-451f-9e83-e6bfad7d6391"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217829, 4496, 220, 5, 28, "Input",ExpressionUUID->"f13933ec-a238-44ea-87af-a62bd2458e37"],
Cell[218052, 4503, 143, 3, 32, "Output",ExpressionUUID->"cbecea75-877a-4bbd-adbc-baeb1613fbc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218232, 4511, 150, 2, 28, "Input",ExpressionUUID->"471005ac-4176-41be-8add-1195da8996cc"],
Cell[218385, 4515, 230, 6, 32, "Output",ExpressionUUID->"65334ffc-e5b9-4e3e-b625-c391333e6b4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218652, 4526, 314, 8, 28, "Input",ExpressionUUID->"bd8da2fc-a6de-4bda-94ab-7723a530c3fe"],
Cell[218969, 4536, 331, 8, 32, "Output",ExpressionUUID->"0f3e9907-8e45-4f4c-8719-3851155f90af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219337, 4549, 202, 4, 28, "Input",ExpressionUUID->"68d8f77c-c999-4c44-b53a-a22bb79d2659"],
Cell[219542, 4555, 24635, 499, 321, "Output",ExpressionUUID->"fe790a41-9175-4420-a0aa-252379d3933c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244214, 5059, 586, 15, 28, "Input",ExpressionUUID->"8406772e-a927-4493-99fc-d7f44494ae0e"],
Cell[244803, 5076, 606, 12, 23, "Message",ExpressionUUID->"53cf6468-ab01-4839-9458-0a536f10e951"],
Cell[245412, 5090, 10333, 206, 104, "Output",ExpressionUUID->"ed60fcbd-a984-419c-a400-c2311c74f273"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255782, 5301, 462, 13, 28, "Input",ExpressionUUID->"2a0f77e2-37a3-4532-8fe9-b58f7fe199ae"],
Cell[256247, 5316, 9594, 193, 71, "Output",ExpressionUUID->"f85953ac-b75c-49ac-82d5-f7521f222f7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265878, 5514, 514, 12, 28, "Input",ExpressionUUID->"b00dcfac-f1a6-4af6-bbff-7bcb76a91a0b"],
Cell[266395, 5528, 7474, 150, 103, "Output",ExpressionUUID->"fca4143d-8bd5-4ed3-8ac4-6e687876ed12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273906, 5683, 200, 4, 28, "Input",ExpressionUUID->"4655f8c3-a5f0-41d3-8da4-1027b8074d97"],
Cell[274109, 5689, 133, 3, 32, "Output",ExpressionUUID->"29be1f73-e5fa-434b-ab4b-a811bbf90f97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274279, 5697, 211, 4, 28, "Input",ExpressionUUID->"694e2048-dcb6-4cce-83e8-023130e7ed2d"],
Cell[274493, 5703, 9000, 240, 332, "Output",ExpressionUUID->"de4b6cd1-b404-4f99-a9d2-70adc373736f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283530, 5948, 444, 9, 48, "Input",ExpressionUUID->"bdb8b719-75b0-49d2-94f6-22e08762d041"],
Cell[283977, 5959, 143, 3, 32, "Output",ExpressionUUID->"d6e4ab51-1704-4d82-9cfe-dedec0a40465"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284157, 5967, 1155, 34, 67, "Input",ExpressionUUID->"b261b4af-1f52-457e-b643-2d2ae6c4443c"],
Cell[285315, 6003, 9832, 199, 71, "Output",ExpressionUUID->"a0688e18-0b27-4cda-98fe-503374e43abd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295184, 6207, 247, 6, 28, "Input",ExpressionUUID->"2accf9c2-5215-4b6f-b43c-efc2ce0d6378"],
Cell[295434, 6215, 140, 3, 32, "Output",ExpressionUUID->"29521a45-5368-4d48-bedd-89354658dbc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295611, 6223, 428, 13, 28, "Input",ExpressionUUID->"1d1f515c-99d4-4f8c-b975-9acdd419cfbc"],
Cell[296042, 6238, 193, 5, 32, "Output",ExpressionUUID->"3ad6eb1c-834c-4499-a46c-20ade78ecda3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296272, 6248, 1642, 38, 124, "Input",ExpressionUUID->"51198d3a-660f-4eb7-93f7-2066ab37c02f"],
Cell[297917, 6288, 20061, 397, 209, "Output",ExpressionUUID->"2ae150ea-0bea-4807-b27a-b08c906616a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318015, 6690, 265, 6, 28, "Input",ExpressionUUID->"b785d99a-8cf4-478b-a3fd-ab7cdc0f9c0a"],
Cell[318283, 6698, 9840, 199, 71, "Output",ExpressionUUID->"45265cd6-66db-46fd-a53f-bbf3f1443b05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328160, 6902, 357, 9, 28, "Input",ExpressionUUID->"8585caf0-11bd-45a7-ad60-d7504273c3be"],
Cell[328520, 6913, 434, 10, 23, "Message",ExpressionUUID->"21452e2e-8d6d-47ea-bca3-727a2bea4bc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328991, 6928, 10636, 214, 114, InheritFromParent,ExpressionUUID->"7f8ea5a4-694e-4162-94b7-35fee2e88015"],
Cell[339630, 7144, 471, 10, 23, "Message",ExpressionUUID->"7f78ba42-27e3-40e2-8361-5da691d3d8c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340138, 7159, 253, 6, 28, "Input",ExpressionUUID->"1f5b597d-072b-49cc-8d78-9b79e2eb9bcf"],
Cell[340394, 7167, 145, 3, 32, "Output",ExpressionUUID->"22a910c2-f9c8-485a-a20a-39646d1ff697"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340576, 7175, 241, 5, 28, "Input",ExpressionUUID->"516a06d6-49ad-46ab-b5cc-41892c0f1944"],
Cell[340820, 7182, 200, 5, 32, "Output",ExpressionUUID->"18a43500-8a44-44ca-bc97-51eab3f58d9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341057, 7192, 237, 6, 28, "Input",ExpressionUUID->"c58cadcf-8de4-4b89-b998-828fc887c82c"],
Cell[341297, 7200, 140, 2, 32, "Output",ExpressionUUID->"67a4e04e-671c-4d52-8c08-34e3a0354772"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341474, 7207, 722, 20, 67, "Input",ExpressionUUID->"234b8801-ac74-47c6-8f90-3b8ac4c18c34"],
Cell[342199, 7229, 14145, 270, 135, "Output",ExpressionUUID->"e1b2dfa4-9b8a-4a6c-a3ff-a2e8887853a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356381, 7504, 183, 4, 28, "Input",ExpressionUUID->"c4f2b03c-ebec-4a2b-94aa-950deadc24ba"],
Cell[356567, 7510, 227, 6, 32, "Output",ExpressionUUID->"e2ef97d7-cf16-48a4-a5fe-351db05351bc"]
}, Open  ]],
Cell[356809, 7519, 444, 11, 122, "Text",ExpressionUUID->"6337ecfa-4e51-4ec7-ac99-965cf6b1fbb9"],
Cell[357256, 7532, 188, 3, 21, "Message",ExpressionUUID->"d8ed8772-85ee-4786-8e69-3a7ce364ea7d"],
Cell[357447, 7537, 154, 3, 28, "Input",ExpressionUUID->"ff2afb6e-6054-4d3c-88c3-f97ae9a95f75"],
Cell[357604, 7542, 448, 10, 48, "Input",ExpressionUUID->"c892356a-9fa6-4f4d-976c-d2fc189876eb"],
Cell[358055, 7554, 164, 3, 28, "Input",ExpressionUUID->"f261c791-bc1b-4ad1-9bd6-08a4dc674f17"],
Cell[CellGroupData[{
Cell[358244, 7561, 190, 4, 28, InheritFromParent,ExpressionUUID->"e63c413a-c858-4ee2-9a9d-f7f203878683"],
Cell[358437, 7567, 166, 4, 32, "Output",ExpressionUUID->"71fcb44a-15fc-457d-8dcb-9b9b1eb81d44"]
}, Open  ]],
Cell[358618, 7574, 612, 17, 28, "Input",ExpressionUUID->"729eddca-7df8-4a66-8a26-e7dd817baadf"],
Cell[CellGroupData[{
Cell[359255, 7595, 378, 10, 28, "Input",ExpressionUUID->"e244cf1e-7305-43b3-9bff-725d89897a66"],
Cell[359636, 7607, 3503, 56, 23, "Message",ExpressionUUID->"f4be7b84-6719-4d7e-859f-1ee5cafc33af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363176, 7668, 1383, 41, 70, InheritFromParent,ExpressionUUID->"d7793ad9-7ae4-4b75-a966-3c09f6d4ac45"],
Cell[364562, 7711, 2112, 64, 74, "Output",ExpressionUUID->"9c5786e4-2b6b-41c9-9072-88f0ed8c5c46"]
}, Open  ]],
Cell[366689, 7778, 462, 12, 48, "Input",ExpressionUUID->"f67c3320-7f0c-46fb-a2fb-7500d1d6f9cb"],
Cell[367154, 7792, 488, 14, 28, "Input",ExpressionUUID->"7f73055d-0e2d-4333-9b35-9ce3fe7835f1"],
Cell[CellGroupData[{
Cell[367667, 7810, 307, 7, 28, "Input",ExpressionUUID->"287f9227-a6bf-44e5-8b56-2871dcbf6180"],
Cell[367977, 7819, 14560, 263, 240, "Output",ExpressionUUID->"6f5a67cd-e6b1-42eb-8bbe-957579101bff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382574, 8087, 611, 16, 28, "Input",ExpressionUUID->"e396dbdb-69bc-463c-aafe-b3a0674e06bb"],
Cell[383188, 8105, 22210, 427, 71, "Output",ExpressionUUID->"cd3a3876-345e-4344-bfc1-ba90cd4da6e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405435, 8537, 214, 5, 28, "Input",ExpressionUUID->"963bcc7e-2288-4915-9c1a-e3e552742330"],
Cell[405652, 8544, 20097, 462, 983, "Output",ExpressionUUID->"bdbbf0d3-5cba-488f-92c3-d32b4772c44a"]
}, {2}]],
Cell[425761, 9009, 1732, 45, 162, "Input",ExpressionUUID->"d7d5325c-8cd0-4d66-aa67-ecfb33dfc339"],
Cell[CellGroupData[{
Cell[427518, 9058, 1814, 49, 162, "Input",ExpressionUUID->"0896adf9-77ab-4348-a1c2-c1e8f3d21c4b"],
Cell[429335, 9109, 207865, 3378, 328, "Output",ExpressionUUID->"29a4787a-eea0-41d2-aa28-8071a364a898"]
}, Open  ]],
Cell[CellGroupData[{
Cell[637237, 12492, 261, 6, 28, "Input",ExpressionUUID->"a426992a-d6ad-4dea-bedf-30eb4da4ec67"],
Cell[637501, 12500, 319, 7, 47, "Output",ExpressionUUID->"972ba074-8e33-4896-aa3a-8e7fe9ba7799"]
}, Open  ]],
Cell[CellGroupData[{
Cell[637857, 12512, 309, 7, 28, "Input",ExpressionUUID->"570e511b-8d80-4283-ba3b-aba653064768"],
Cell[638169, 12521, 669, 15, 47, "Output",ExpressionUUID->"e9cf33e8-02f9-4329-b577-aed90f2aab45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[638875, 12541, 790, 21, 86, "Input",ExpressionUUID->"ae987df7-d05f-40e4-9347-4455f9781c77"],
Cell[639668, 12564, 770, 17, 47, "Output",ExpressionUUID->"18c8ea5d-898c-4b5c-9c5b-d364e1f62c2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640475, 12586, 286, 7, 28, "Input",ExpressionUUID->"c36203aa-2a90-47ca-acd0-41ac02ba32a7"],
Cell[640764, 12595, 151, 3, 32, "Output",ExpressionUUID->"e4ab03e9-bed2-4385-a099-6c60003de353"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640952, 12603, 380, 9, 48, "Input",ExpressionUUID->"4f58bd00-6c11-4e3e-b7d6-368d4ee6a3b8"],
Cell[641335, 12614, 245, 6, 32, "Output",ExpressionUUID->"5b745b91-f97d-4cc4-906b-24847414b72b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[641617, 12625, 402, 10, 28, "Input",ExpressionUUID->"af9b3d71-1c47-403b-b675-2c94a913103e"],
Cell[642022, 12637, 311, 8, 32, "Output",ExpressionUUID->"4de1ccde-dc97-465f-9c11-01cded5beb5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[642370, 12650, 400, 10, 28, "Input",ExpressionUUID->"42ad3e3d-c45c-4380-8337-65f8b3937ee8"],
Cell[642773, 12662, 201, 5, 32, "Output",ExpressionUUID->"c549de20-a53a-46e7-8f91-0053532dc08c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643011, 12672, 29881, 512, 57, "Input",ExpressionUUID->"35c16216-e664-45d6-bd81-86ce04307f4b"],
Cell[672895, 13186, 1169, 24, 47, "Output",ExpressionUUID->"9bafd998-3210-46ac-8318-396962f3b627"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674101, 13215, 376, 9, 28, "Input",ExpressionUUID->"79fabb03-4bee-444b-a094-9f6617c6e023"],
Cell[674480, 13226, 249, 6, 32, "Output",ExpressionUUID->"a9179ef9-685c-458d-bab8-5fb3de17e065"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674766, 13237, 68257, 1125, 71, "Input",ExpressionUUID->"0129fddd-0566-4328-8e97-398a1d694acd"],
Cell[743026, 14364, 349, 7, 47, "Output",ExpressionUUID->"d8f4a247-d1a5-4099-b0cf-c948e3d5d3e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743412, 14376, 484, 10, 28, "Input",ExpressionUUID->"003aa18a-b946-415e-98f5-34599b4d787d"],
Cell[743899, 14388, 234, 6, 32, "Output",ExpressionUUID->"4eccd0cd-7c69-4c32-82fc-6c202b979f6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[744170, 14399, 326, 8, 28, "Input",ExpressionUUID->"76b7b5a8-c1ee-46df-8cb1-3013a47be51b"],
Cell[744499, 14409, 133, 3, 32, "Output",ExpressionUUID->"831bec51-9961-4b8f-aea5-089a521efe7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[744669, 14417, 417, 10, 48, "Input",ExpressionUUID->"5f7fbd38-83c1-4deb-9dc8-05449099d0be"],
Cell[745089, 14429, 135, 3, 32, "Output",ExpressionUUID->"6f93e539-4c1f-4962-bbd1-c7bcae24f171"]
}, Open  ]],
Cell[CellGroupData[{
Cell[745261, 14437, 415, 10, 48, "Input",ExpressionUUID->"eef18d32-861d-4f61-af1d-76937a5d3539"],
Cell[745679, 14449, 130, 2, 32, "Output",ExpressionUUID->"f61976ef-a892-47cb-abe6-4dfd84313f08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[745846, 14456, 1242, 20, 371, "Input",ExpressionUUID->"949877be-5a31-4874-a14b-5626f193a048"],
Cell[747091, 14478, 133, 3, 32, "Output",ExpressionUUID->"7b069c9b-8b72-448b-ba4e-b848ba870eed"]
}, Open  ]],
Cell[747239, 14484, 560, 13, 28, "Input",ExpressionUUID->"7b5d1b26-4466-44fa-b93b-9fd828327dec"],
Cell[CellGroupData[{
Cell[747824, 14501, 227, 5, 28, "Input",ExpressionUUID->"de05d253-ea23-4bc6-8e0b-b2eb6cfd44a7"],
Cell[748054, 14508, 9584, 193, 71, "Output",ExpressionUUID->"827f10eb-b2dc-442f-93d8-fee478de4dcd"]
}, Open  ]],
Cell[757653, 14704, 182, 4, 28, "Input",ExpressionUUID->"7d868b84-b727-455f-ba01-a6b49d3d6a36"],
Cell[CellGroupData[{
Cell[757860, 14712, 234, 5, 28, InheritFromParent,ExpressionUUID->"a4e45c69-24c9-48e6-ad62-db3413ca916e"],
Cell[758097, 14719, 204, 5, 32, "Output",ExpressionUUID->"bd8a47d7-0614-4f47-997c-20f6ffd34cdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[758338, 14729, 230, 5, 28, InheritFromParent,ExpressionUUID->"b04c82cc-bc5d-4010-9514-ab24c7d38eeb"],
Cell[758571, 14736, 316, 8, 32, "Output",ExpressionUUID->"dda8d8b4-6744-4c8a-b7d0-c945d87dd081"]
}, Open  ]],
Cell[CellGroupData[{
Cell[758924, 14749, 390, 10, 28, "Input",ExpressionUUID->"8c1c47fb-2810-4d9c-b0c4-48fd0d8e3c08"],
Cell[759317, 14761, 134, 3, 32, "Output",ExpressionUUID->"f79cc44b-eed9-4ae8-baee-91cc272da76f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[759488, 14769, 425, 10, 28, "Input",ExpressionUUID->"90f00933-3283-4550-a8ae-f13c4b73008b"],
Cell[759916, 14781, 318, 8, 32, "Output",ExpressionUUID->"78acd509-63db-4d07-a3a8-c89eb3dee853"]
}, Open  ]],
Cell[CellGroupData[{
Cell[760271, 14794, 414, 11, 28, "Input",ExpressionUUID->"7913cb2e-32e8-4332-b3d7-e0dd848bc60e"],
Cell[760688, 14807, 9582, 193, 71, "Output",ExpressionUUID->"fabe37dd-c696-4ca4-96e6-a399dff36755"]
}, Open  ]],
Cell[CellGroupData[{
Cell[770307, 15005, 180, 4, 28, "Input",ExpressionUUID->"288772fb-013b-4788-b661-faa851727cf4"],
Cell[770490, 15011, 136, 3, 32, "Output",ExpressionUUID->"d2fdc0d6-6fdb-4e40-b99b-1abc2e3cc362"]
}, Open  ]],
Cell[CellGroupData[{
Cell[770663, 15019, 232, 5, 28, "Input",ExpressionUUID->"c2135c68-884e-4ea2-ba3d-d103d17480f2"],
Cell[770898, 15026, 318, 8, 32, "Output",ExpressionUUID->"a314b097-3410-4db0-a370-d4b476415f43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[771253, 15039, 423, 11, 28, "Input",ExpressionUUID->"f4c92919-e336-4bcb-88b9-965005e3abb9"],
Cell[771679, 15052, 133, 3, 32, "Output",ExpressionUUID->"f54ae380-9215-4110-be75-3f96b92b07de"]
}, Open  ]],
Cell[771827, 15058, 570, 16, 28, "Input",ExpressionUUID->"175561d6-8560-4b6a-b12b-92eec2edf865"],
Cell[CellGroupData[{
Cell[772422, 15078, 240, 5, 28, "Input",ExpressionUUID->"d92b28c6-6ab9-4092-a252-802eaec6268c"],
Cell[772665, 15085, 55242, 1008, 71, "Output",ExpressionUUID->"bfb7a3ee-11de-43d5-9242-534f94c7124d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[827944, 16098, 437, 11, 28, "Input",ExpressionUUID->"b9a0d550-e3c7-4762-a899-42737e214596"],
Cell[828384, 16111, 9818, 199, 71, "Output",ExpressionUUID->"51efa3fe-5880-417d-9f22-639e35e4b1db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838239, 16315, 154, 3, 28, "Input",ExpressionUUID->"e43e68bf-0ee8-40ae-abb0-995b73d3aa5e"],
Cell[838396, 16320, 55239, 1008, 103, "Output",ExpressionUUID->"d2149c86-69b6-4c36-a065-6bc2a7d53637"]
}, Open  ]],
Cell[CellGroupData[{
Cell[893672, 17333, 24582, 421, 133, "Input",ExpressionUUID->"10e9fa69-9c02-4770-a37a-8e58271c3b8b"],
Cell[918257, 17756, 33946, 599, 87, "Output",ExpressionUUID->"d19ccb9d-2a7b-4114-8851-12d645e303f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[952240, 18360, 274, 7, 28, "Input",ExpressionUUID->"656c4424-3dbb-4efc-addb-b508a338a4b2"],
Cell[952517, 18369, 12004, 207, 50, "Output",ExpressionUUID->"a4754378-d72b-4a41-aa9e-ec1499d2ff74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[964558, 18581, 1155, 31, 105, "Input",ExpressionUUID->"7c65aea7-c599-499a-8fbe-cd43177d4e74"],
Cell[965716, 18614, 453, 10, 23, "Message",ExpressionUUID->"d7bc5d13-7654-4c7d-a2b6-4d374dc95331"],
Cell[966172, 18626, 10619, 212, 152, "Output",ExpressionUUID->"1073b441-f235-42bb-9116-0750cb9f83d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[976828, 18843, 337, 9, 28, "Input",ExpressionUUID->"5991e6a5-bfb1-4852-8a21-e3025c4ea37e"],
Cell[977168, 18854, 11025, 220, 152, "Output",ExpressionUUID->"879bc06c-08f4-4139-a5c9-9beb7a61bcbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[988230, 19079, 1031, 27, 105, "Input",ExpressionUUID->"c834ff22-735a-4377-9f05-27e243bdd2f8"],
Cell[989264, 19108, 9815, 198, 71, "Output",ExpressionUUID->"6231924a-fa06-49ae-94ee-2cb226341dee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[999116, 19311, 264, 6, 28, "Input",ExpressionUUID->"d42edcc3-2412-46e2-9eba-cf8ac453327e"],
Cell[999383, 19319, 140, 3, 32, "Output",ExpressionUUID->"3f5cc8f1-6955-47f5-a91b-9f5cd2ce68bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[999560, 19327, 245, 6, 28, "Input",ExpressionUUID->"f5862d7a-7bb2-429f-9288-5e34da07a0c9"],
Cell[999808, 19335, 140, 3, 32, "Output",ExpressionUUID->"2793e5dd-e1a5-415e-9378-e68bcb754135"]
}, Open  ]],
Cell[999963, 19341, 152, 3, 28, InheritFromParent,ExpressionUUID->"944145d5-a982-4004-853a-321a89c53182"],
Cell[CellGroupData[{
Cell[1000140, 19348, 1131, 32, 86, "Input",ExpressionUUID->"630fee12-817c-4d03-96e2-c3d421491e8b"],
Cell[1001274, 19382, 9818, 199, 71, "Output",ExpressionUUID->"42eebc77-56e9-403c-b1f4-8dd9847af22d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1011129, 19586, 241, 5, 28, "Input",ExpressionUUID->"f95c04f5-f811-4cc6-b808-115e89d6b924"],
Cell[1011373, 19593, 198, 5, 32, "Output",ExpressionUUID->"fc59ad92-5935-4ba7-b047-3a613a529436"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1011608, 19603, 251, 6, 28, "Input",ExpressionUUID->"1485da17-eb8d-44fc-9ec1-411e19de5d22"],
Cell[1011862, 19611, 140, 3, 32, "Output",ExpressionUUID->"185374b8-6a56-49f4-970d-ed43244662a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1012039, 19619, 758, 19, 86, "Input",ExpressionUUID->"2b5fa325-34b4-4352-86a6-6076e2b6a2b6"],
Cell[1012800, 19640, 9806, 199, 71, "Output",ExpressionUUID->"34f72746-1666-4029-9edf-3be320130e5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1022643, 19844, 241, 5, 28, "Input",ExpressionUUID->"b84947a2-5fd8-442a-8267-93e10fa64a93"],
Cell[1022887, 19851, 315, 8, 32, "Output",ExpressionUUID->"e5c48215-984c-4dcc-846d-69eadd7b62aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1023239, 19864, 269, 7, 28, "Input",ExpressionUUID->"b958f660-193e-4a68-9df7-3c746d8fded3"],
Cell[1023511, 19873, 9483, 139, 106, "Message",ExpressionUUID->"9d61e6d8-4850-4539-be23-fd9a0060caec"],
Cell[1032997, 20014, 10070, 202, 71, "Output",ExpressionUUID->"d398811f-0f7f-4c3b-89a6-94c3853a30b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1043104, 20221, 872, 22, 86, "Input",ExpressionUUID->"dc68e51e-10d3-4621-8682-91312ad2f6cf"],
Cell[1043979, 20245, 9602, 193, 71, "Output",ExpressionUUID->"9414453d-8d40-4315-91fc-6d50045346c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1053618, 20443, 242, 5, 28, "Input",ExpressionUUID->"8ca2cef6-17ba-455a-9007-bd5ca7fbd221"],
Cell[1053863, 20450, 250, 6, 32, "Output",ExpressionUUID->"9a07ea46-55e0-4082-b4f2-200fffa16ebc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1054150, 20461, 298, 8, 28, "Input",ExpressionUUID->"850aaa4a-6a4f-499b-9eac-9a990d14c672"],
Cell[1054451, 20471, 141, 3, 32, "Output",ExpressionUUID->"cf300e9d-3b2b-45c2-bc40-9542fadf9c8f"]
}, Open  ]],
Cell[1054607, 20477, 1079, 31, 67, "Input",ExpressionUUID->"821b0660-f703-4820-8c15-23a4c45e6e10"],
Cell[CellGroupData[{
Cell[1055711, 20512, 232, 5, 28, "Input",ExpressionUUID->"68622b16-58de-435d-93f2-eb8092bd6e32"],
Cell[1055946, 20519, 9836, 199, 71, "Output",ExpressionUUID->"ce125a07-7efa-4d8e-8327-221c8662a5c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065819, 20723, 241, 5, 28, "Input",ExpressionUUID->"2b99ffe0-bf90-45b0-a9c7-bc5ed6cb665d"],
Cell[1066063, 20730, 330, 8, 32, "Output",ExpressionUUID->"7790953e-cb1c-4cd6-a8df-8f174d0fcba7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1066430, 20743, 397, 10, 28, "Input",ExpressionUUID->"6da88979-6e22-41dd-a6e7-e6354c042e94"],
Cell[1066830, 20755, 9832, 199, 71, "Output",ExpressionUUID->"5828fd69-bd27-4469-8daf-d0d7042855a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1076699, 20959, 239, 5, 28, "Input",ExpressionUUID->"19ea79c4-ad7d-4dd8-9d5e-2bfbe11bc6c0"],
Cell[1076941, 20966, 326, 8, 32, "Output",ExpressionUUID->"64c99c5e-4b3e-40cf-a367-0a77efbafa96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1077304, 20979, 230, 5, 28, "Input",ExpressionUUID->"ec9a88ea-cf5e-49d2-9f42-92c8653cf230"],
Cell[1077537, 20986, 316, 8, 21, "Message",ExpressionUUID->"3fbfd46a-dba7-4db8-b7f6-584c0d56043f"],
Cell[1077856, 20996, 10063, 201, 71, "Output",ExpressionUUID->"e0f527d1-c425-4e83-ab88-ad37bcc63e4e"]
}, Open  ]],
Cell[1087934, 21200, 752, 15, 181, "Input",ExpressionUUID->"201b17e9-1b29-4e3c-a4ee-00e6b35cc900"],
Cell[CellGroupData[{
Cell[1088711, 21219, 306, 7, 28, "Input",ExpressionUUID->"ff8b5bb1-bf5b-4c9d-bcbb-1752e0e9fce6"],
Cell[1089020, 21228, 9586, 193, 71, "Output",ExpressionUUID->"e7d5f3e3-1d69-420a-a133-a76c9432f73b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1098643, 21426, 230, 5, 28, "Input",ExpressionUUID->"0d6863bd-d32a-4c12-ba42-39f3f5839acf"],
Cell[1098876, 21433, 325, 8, 32, "Output",ExpressionUUID->"7c14d676-30d9-4be8-89e5-ffd4d6050d79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1099238, 21446, 180, 4, 28, "Input",ExpressionUUID->"e0b89eb4-07d9-4b39-a1d5-e259c61308ef"],
Cell[1099421, 21452, 142, 3, 32, "Output",ExpressionUUID->"6650fa4e-e8e6-4aec-a237-67546844a367"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1099600, 21460, 263, 6, 28, "Input",ExpressionUUID->"8e76f73a-ee10-480a-a1be-574eb2c86d85"],
Cell[1099866, 21468, 138, 3, 32, "Output",ExpressionUUID->"74a44e2b-6417-41fe-8c12-71d5f9993d7f"]
}, Open  ]],
Cell[1100019, 21474, 597, 15, 28, "Input",ExpressionUUID->"58c4cf36-2cb6-4abb-8eed-e920dc678131"],
Cell[CellGroupData[{
Cell[1100641, 21493, 333, 8, 28, "Input",ExpressionUUID->"d983792b-ebed-4fe1-a2a5-8c42df89d1b3"],
Cell[1100977, 21503, 9836, 199, 71, "Output",ExpressionUUID->"fc86358d-60c5-4ada-a359-0fcf4f114564"]
}, Open  ]],
Cell[1110828, 21705, 322, 8, 28, "Input",ExpressionUUID->"516ebaf4-5b41-4f91-b4fa-cb1c1ca9af3b"],
Cell[CellGroupData[{
Cell[1111175, 21717, 10329, 211, 91, InheritFromParent,ExpressionUUID->"cf348120-46bb-4bae-837b-9ba73d38281b"],
Cell[1121507, 21930, 475, 11, 23, "Message",ExpressionUUID->"c13d0042-1b82-430f-ac6b-6cac93ce9c3d"]
}, Open  ]],
Cell[1121997, 21944, 593, 15, 28, "Input",ExpressionUUID->"c736c964-683f-4979-a1ff-1a15617c3319"],
Cell[CellGroupData[{
Cell[1122615, 21963, 260, 5, 28, "Input",ExpressionUUID->"7dcf133c-e51e-434c-b30f-fa32aae75f81"],
Cell[1122878, 21970, 9592, 193, 71, "Output",ExpressionUUID->"d4b7d9f6-3be5-423f-ba4f-008414e2d2fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1132507, 22168, 253, 5, 28, "Input",ExpressionUUID->"52cabd5f-749a-4b37-90db-135f8b90d7d2"],
Cell[1132763, 22175, 9586, 193, 71, "Output",ExpressionUUID->"9a4f2b24-ef3a-4414-a51f-c37d4f4b54b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1142386, 22373, 780, 19, 86, "Input",ExpressionUUID->"65caf135-d87d-4ed0-ba70-34bb539ed243"],
Cell[1143169, 22394, 4371, 93, 235, "Output",ExpressionUUID->"1ddbada4-cda0-4c2b-aee8-9095d8b8ee73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1147577, 22492, 619, 17, 48, "Input",ExpressionUUID->"173f46a4-1896-41e2-bd6f-4bc88f7e1aca"],
Cell[1148199, 22511, 4371, 93, 235, "Output",ExpressionUUID->"cbf62598-e7a2-4526-95ac-d4bfa6af8ec8"]
}, Open  ]],
Cell[1152585, 22607, 519, 15, 28, "Input",ExpressionUUID->"4650668a-091c-4aff-83a4-67159155756f"],
Cell[CellGroupData[{
Cell[1153129, 22626, 316, 8, 28, "Input",ExpressionUUID->"5e6b4dd2-b7e1-44e6-97df-711b253c94af"],
Cell[1153448, 22636, 9594, 193, 71, "Output",ExpressionUUID->"5a834723-356a-4b7b-9a58-7edd908d3730"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1163079, 22834, 302, 7, 28, "Input",ExpressionUUID->"13f1d004-cbcd-4728-9e80-35276e7ac2a4"],
Cell[1163384, 22843, 9586, 193, 71, "Output",ExpressionUUID->"c3654760-e1e7-4657-b932-adc6b8392f01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1173007, 23041, 617, 17, 48, "Input",ExpressionUUID->"4395ddf0-0aff-4eed-9e1d-80041f49fdff"],
Cell[1173627, 23060, 4375, 93, 235, "Output",ExpressionUUID->"baa67ce5-8029-464f-8cec-342553d7171f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1178039, 23158, 469, 13, 28, "Input",ExpressionUUID->"3c5dde99-25b0-4edb-88b5-774af22d53ab"],
Cell[1178511, 23173, 2833, 65, 221, "Output",ExpressionUUID->"e9d9f5b2-519e-4c89-83b5-20906764c754"]
}, Open  ]],
Cell[1181359, 23241, 406, 10, 28, "Input",ExpressionUUID->"8a6b706a-ed3e-48de-8794-499cf7b693cb"],
Cell[CellGroupData[{
Cell[1181790, 23255, 327, 8, 28, "Input",ExpressionUUID->"b1d5302a-7bb5-4756-941e-e1c370a7094d"],
Cell[1182120, 23265, 1130, 21, 56, "Message",ExpressionUUID->"8a88e7dc-5888-4cc2-ae74-92ac024530ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1183287, 23291, 582, 16, 48, InheritFromParent,ExpressionUUID->"df606142-d5ed-4c62-8cee-511a60c426c3"],
Cell[1183872, 23309, 9590, 193, 71, "Output",ExpressionUUID->"1ce84b4c-1c06-475e-8014-c0dba5f65e0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1193499, 23507, 302, 8, 28, "Input",ExpressionUUID->"69c0cf14-0a6f-48bd-b192-b7de1771ed65"],
Cell[1193804, 23517, 9590, 193, 71, "Output",ExpressionUUID->"23fcd7c6-1ca5-4a91-b4f8-68b3ab9ba0b3"]
}, Open  ]],
Cell[1203409, 23713, 442, 12, 48, "Input",ExpressionUUID->"b330034c-0dd4-41a7-836e-5c44395434a7"],
Cell[CellGroupData[{
Cell[1203876, 23729, 271, 6, 28, "Input",ExpressionUUID->"a5e96f59-40b3-4f82-8c3d-97d05e4a4719"],
Cell[1204150, 23737, 773, 13, 41, "Message",ExpressionUUID->"fc347e90-093b-42c5-b287-cd6c4d1f9cd6"],
Cell[1204926, 23752, 19921, 443, 266, "Output",ExpressionUUID->"20aae7b8-5fd4-4ee0-8037-ca35f5e41146"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1224884, 24200, 570, 15, 48, "Input",ExpressionUUID->"a294063c-9ea3-496a-8eed-6bf882f7e03f"],
Cell[1225457, 24217, 13886, 277, 71, "Output",ExpressionUUID->"e00fb4c9-c58d-4469-b96a-41432faf5bb8"]
}, Open  ]],
Cell[1239358, 24497, 379, 10, 28, "Input",ExpressionUUID->"d0333af0-c194-43ea-9daf-d759a280c72e"],
Cell[CellGroupData[{
Cell[1239762, 24511, 260, 5, 28, "Input",ExpressionUUID->"d5bb8f1e-a7e8-463d-9892-865bb38487d0"],
Cell[1240025, 24518, 139, 3, 32, "Output",ExpressionUUID->"61168f3f-05bc-4aa7-8051-95888f4298eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1240201, 24526, 300, 7, 28, "Input",ExpressionUUID->"4ba67e4e-dc6a-45c6-abba-05a506980fce"],
Cell[1240504, 24535, 13880, 277, 71, "Output",ExpressionUUID->"141c7cf8-4738-4d07-8007-1c8f857aad61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1254421, 24817, 273, 6, 28, "Input",ExpressionUUID->"480c90de-9258-4859-b11e-0832bd10b83d"],
Cell[1254697, 24825, 139, 3, 32, "Output",ExpressionUUID->"fce43d27-7159-4068-bedb-5b88ec51d13e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1254873, 24833, 358, 10, 28, "Input",ExpressionUUID->"f7fea9cc-2075-440e-ae18-7159b4b29309"],
Cell[1255234, 24845, 149, 3, 32, "Output",ExpressionUUID->"e74c1726-503a-47d9-9748-70dfa917be99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1255420, 24853, 411, 11, 28, "Input",ExpressionUUID->"ba70b0c6-fc55-4674-85b8-97709571d3cf"],
Cell[1255834, 24866, 148, 3, 32, "Output",ExpressionUUID->"5d6b2a04-890d-4b38-a4b2-96ab0108be1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1256019, 24874, 409, 11, 28, "Input",ExpressionUUID->"1cc3678f-6cec-4ea7-b1d3-d788bb928311"],
Cell[1256431, 24887, 148, 3, 32, "Output",ExpressionUUID->"fde4badb-5a20-4238-8651-6dc84adb33b5"]
}, Open  ]],
Cell[1256594, 24893, 1187, 31, 48, "Input",ExpressionUUID->"e67b8be9-c94e-4167-964b-c011441d8159"],
Cell[1257784, 24926, 290, 7, 28, "Input",ExpressionUUID->"d7bce849-aeb1-4d5b-b1e4-a861fc7e3083"],
Cell[1258077, 24935, 806, 17, 67, "Input",ExpressionUUID->"6f09776a-18e7-483a-8f84-75e63dd119cf"],
Cell[CellGroupData[{
Cell[1258908, 24956, 749, 18, 67, "Input",ExpressionUUID->"5375150a-53b7-4865-938b-02cefbaf60de"],
Cell[1259660, 24976, 626, 13, 52, "Output",ExpressionUUID->"5b22eab3-244c-4301-8d70-439c1b6077e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1260323, 24994, 604, 16, 48, "Input",ExpressionUUID->"445e6b19-dd54-43c6-bdfa-95e88224b707"],
Cell[1260930, 25012, 11252, 231, 71, "Output",ExpressionUUID->"4596bade-081c-4f46-889e-21835b73b4cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1272219, 25248, 249, 5, 28, "Input",ExpressionUUID->"7ad0f411-2254-496e-9397-00d3e604cddd"],
Cell[1272471, 25255, 213, 5, 40, "Output",ExpressionUUID->"87c20077-9a00-462a-ac33-9f1b17ad9cc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1272721, 25265, 545, 14, 48, "Input",ExpressionUUID->"db73cc0c-2ac3-4e3d-a1c8-f1ea7ded6f7c"],
Cell[1273269, 25281, 1282, 20, 58, "Message",ExpressionUUID->"5dab05db-1c47-44f8-8834-5526e72a151f"],
Cell[1274554, 25303, 20916, 462, 232, "Output",ExpressionUUID->"0f0fac10-fdb8-48ef-be2f-28ecb50d60d6"]
}, Open  ]],
Cell[1295485, 25768, 338, 9, 28, "Input",ExpressionUUID->"8f39e82f-8a03-43cb-b7b0-8e3dccc245ee"],
Cell[CellGroupData[{
Cell[1295848, 25781, 545, 14, 48, "Input",ExpressionUUID->"499ba886-6e6d-45e2-9941-569f03a21d27"],
Cell[1296396, 25797, 1282, 20, 58, "Message",ExpressionUUID->"81cb7c4d-a4ad-4363-980b-bec13a837f62"],
Cell[1297681, 25819, 20928, 463, 232, "Output",ExpressionUUID->"daa5d3fb-226c-4877-9f22-861e16ca4acb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1318646, 26287, 223, 5, 28, "Input",ExpressionUUID->"5d8ae69c-e5d2-4aab-95b6-000803461190"],
Cell[1318872, 26294, 11254, 231, 71, "Output",ExpressionUUID->"18c5bd9f-a470-4893-a3ba-170ca7941523"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1330163, 26530, 250, 5, 28, "Input",ExpressionUUID->"ade5e141-59d4-4dfa-839f-05796426c5a6"],
Cell[1330416, 26537, 213, 5, 40, "Output",ExpressionUUID->"88ef9c0c-098d-43fa-a042-9fa8c5115e19"]
}, Open  ]],
Cell[1330644, 26545, 233, 5, 28, "Input",ExpressionUUID->"eb74d5b7-9370-4cb6-b516-bf011bf9f4a9"],
Cell[CellGroupData[{
Cell[1330902, 26554, 11396, 233, 91, InheritFromParent,ExpressionUUID->"9382996b-be5a-40b8-ad39-1def61a22aa2"],
Cell[1342301, 26789, 477, 11, 23, "Message",ExpressionUUID->"d5e40bde-719c-4502-890c-171927dafda4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1342815, 26805, 11417, 234, 91, InheritFromParent,ExpressionUUID->"2c92a39f-0954-4e54-ace0-6c0aae31ccfe"],
Cell[1354235, 27041, 477, 11, 23, "Message",ExpressionUUID->"6469b301-80e6-49c6-ae5d-b7c20db0535b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1354749, 27057, 754, 18, 86, "Input",ExpressionUUID->"71ed5b64-0f22-455c-b841-6c0f6839996b"],
Cell[1355506, 27077, 211, 5, 40, "Output",ExpressionUUID->"bf0d00b2-6863-4170-bb4c-d43ba3ac56a6"],
Cell[1355720, 27084, 138, 3, 32, "Output",ExpressionUUID->"6df49d7c-01fd-447e-9479-524ccd9ec5b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1355895, 27092, 384, 10, 28, "Input",ExpressionUUID->"9f62dff3-883d-4b63-8f05-4ac2b4926c15"],
Cell[1356282, 27104, 15643, 305, 71, "Output",ExpressionUUID->"8f4f9cc6-3125-45ae-ad11-148fff42eff1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1371962, 27414, 237, 6, 28, "Input",ExpressionUUID->"4754a0cc-e692-44c2-989c-d6964bae234c"],
Cell[1372202, 27422, 188, 5, 32, "Output",ExpressionUUID->"e517036c-e52a-4f3f-ba6f-d7ec932d892e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1372427, 27432, 258, 5, 28, "Input",ExpressionUUID->"28a20796-c038-440e-9bb8-285b94e939db"],
Cell[1372688, 27439, 136, 3, 32, "Output",ExpressionUUID->"5d385932-2b6d-4589-b317-e8e8301d0d54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1372861, 27447, 499, 14, 28, "Input",ExpressionUUID->"bf820eac-3e59-4493-80ff-46ddd9defdaf"],
Cell[1373363, 27463, 9592, 193, 71, "Output",ExpressionUUID->"c4dfa45d-638a-4eba-8ece-f47180b28a56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1382992, 27661, 251, 5, 28, "Input",ExpressionUUID->"a2c7163f-efcc-4ccc-bd24-70995b494260"],
Cell[1383246, 27668, 212, 5, 40, "Output",ExpressionUUID->"2d938ade-ed43-43a4-a2ce-8583db702beb"]
}, Open  ]],
Cell[1383473, 27676, 393, 10, 28, "Input",ExpressionUUID->"e7718132-6479-4485-8a6c-3a7e4f52c290"],
Cell[CellGroupData[{
Cell[1383891, 27690, 296, 7, 28, "Input",ExpressionUUID->"a0bb3565-8da9-4232-9915-5a7fc1a59d49"],
Cell[1384190, 27699, 12695, 251, 71, "Output",ExpressionUUID->"b3cda334-1396-4a6a-b6a7-754f41257b02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1396922, 27955, 200, 4, 28, "Input",ExpressionUUID->"d3ebe5cc-a32f-4c49-94c0-60678fca41a3"],
Cell[1397125, 27961, 56895, 1107, 569, "Output",ExpressionUUID->"c2448ead-91d4-4f3b-9948-c66d8de77497"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1454057, 29073, 297, 7, 28, "Input",ExpressionUUID->"89a3cf91-2b32-4c51-90a6-7652651839d1"],
Cell[1454357, 29082, 12691, 251, 71, "Output",ExpressionUUID->"a08f1e9c-f3a9-4301-b647-08cb802379d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1467085, 29338, 200, 4, 28, "Input",ExpressionUUID->"561c685b-9970-4501-9a84-57397eb367eb"],
Cell[1467288, 29344, 56298, 1093, 569, "Output",ExpressionUUID->"44148d35-ace6-4c89-b168-d7c0b75311f6"]
}, Open  ]],
Cell[1523601, 30440, 396, 10, 28, "Input",ExpressionUUID->"b29a0db9-92cb-46d9-9337-a0715b7abae8"],
Cell[CellGroupData[{
Cell[1524022, 30454, 691, 18, 67, "Input",ExpressionUUID->"48822820-779c-4d55-9960-4a37c60d409c"],
Cell[CellGroupData[{
Cell[1524738, 30476, 307, 7, 43, "Print",ExpressionUUID->"d74c3a46-fd85-4d09-9098-1b58c4a7e9b0"],
Cell[1525048, 30485, 266, 6, 24, "Print",ExpressionUUID->"5db62608-521b-47c4-aaaf-06d99b14d2c9"],
Cell[1525317, 30493, 279, 7, 24, "Print",ExpressionUUID->"08028b0f-14b9-4a52-aca4-d83eca245fcc"],
Cell[1525599, 30502, 277, 7, 24, "Print",ExpressionUUID->"76f99f3a-3d79-4a62-b4a7-39dfc1ef11a8"],
Cell[1525879, 30511, 274, 7, 24, "Print",ExpressionUUID->"d24d7a11-8d4d-460d-abe4-485b13e3c667"],
Cell[1526156, 30520, 272, 7, 24, "Print",ExpressionUUID->"c812c354-f75c-44b5-a32a-7b11274113a3"],
Cell[1526431, 30529, 276, 7, 24, "Print",ExpressionUUID->"13c7a9f6-4461-4e97-9fec-44248b353786"],
Cell[1526710, 30538, 276, 7, 24, "Print",ExpressionUUID->"fdc08ee7-8c86-4d6b-9cf0-8c387f0e7430"],
Cell[1526989, 30547, 278, 7, 24, "Print",ExpressionUUID->"c3857985-e8e6-4c99-b0c7-9188089d858b"],
Cell[1527270, 30556, 276, 7, 24, "Print",ExpressionUUID->"0e9512f9-ce4e-40e8-bc49-1ee9c7cc4c65"],
Cell[1527549, 30565, 278, 7, 24, "Print",ExpressionUUID->"d96eac29-8036-4bea-8739-f849e86ef592"],
Cell[1527830, 30574, 276, 7, 24, "Print",ExpressionUUID->"29148152-c826-49cb-b212-88d32b7b63b6"],
Cell[1528109, 30583, 276, 7, 24, "Print",ExpressionUUID->"5eb370e4-410f-42ed-ad10-60295c0ff7d6"],
Cell[1528388, 30592, 276, 7, 24, "Print",ExpressionUUID->"7af87aa3-8321-479a-af3d-ffcd22130225"],
Cell[1528667, 30601, 278, 7, 24, "Print",ExpressionUUID->"c4c28a05-1cd4-4a5a-bf22-e6637c5210c8"],
Cell[1528948, 30610, 278, 7, 24, "Print",ExpressionUUID->"42e99ba9-a4a8-4783-a718-12d5f40205eb"],
Cell[1529229, 30619, 278, 7, 24, "Print",ExpressionUUID->"d4218f22-8e4a-4045-9e1c-22bad815cf19"],
Cell[1529510, 30628, 276, 7, 24, "Print",ExpressionUUID->"23ce1950-2f1d-40dc-b288-5eed3495f509"],
Cell[1529789, 30637, 278, 7, 24, "Print",ExpressionUUID->"33bf6950-a252-4fda-8780-05457f022c1c"],
Cell[1530070, 30646, 275, 7, 24, "Print",ExpressionUUID->"ba88e474-e05d-4862-8273-a904562d4320"],
Cell[1530348, 30655, 277, 7, 24, "Print",ExpressionUUID->"675e686d-c771-484e-a7e3-955b021378ca"],
Cell[1530628, 30664, 279, 7, 24, "Print",ExpressionUUID->"90368680-993b-46d1-8927-c2ec1e99d08c"],
Cell[1530910, 30673, 277, 7, 24, "Print",ExpressionUUID->"aacfd430-52f7-4eb7-bd69-f4b9f289d8af"],
Cell[1531190, 30682, 279, 7, 24, "Print",ExpressionUUID->"957f05af-705c-4a2b-90fd-418f4f870ae6"],
Cell[1531472, 30691, 277, 7, 24, "Print",ExpressionUUID->"688dd855-a331-4376-b091-20d6b8bdd5ea"],
Cell[1531752, 30700, 279, 7, 24, "Print",ExpressionUUID->"4cd7d02c-3123-4ab4-8f66-9eac142ae8c2"],
Cell[1532034, 30709, 277, 7, 24, "Print",ExpressionUUID->"f0cca1f5-69fa-45c7-951f-e9a4f464a2ce"],
Cell[1532314, 30718, 277, 7, 24, "Print",ExpressionUUID->"5991db21-cfcb-445a-b42e-13b152d95937"],
Cell[1532594, 30727, 279, 7, 24, "Print",ExpressionUUID->"95e38e85-c0db-4609-b1de-d2f8eb53c2d5"],
Cell[1532876, 30736, 279, 7, 24, "Print",ExpressionUUID->"991eeb20-23c8-4f2d-b865-447647768a31"],
Cell[1533158, 30745, 277, 7, 24, "Print",ExpressionUUID->"9492bdfd-af02-438d-ad74-a4b6d61a763d"],
Cell[1533438, 30754, 279, 7, 24, "Print",ExpressionUUID->"053d33b2-6424-4081-9cc8-a8a483b7e193"],
Cell[1533720, 30763, 277, 7, 24, "Print",ExpressionUUID->"483de004-f417-4679-947d-fba929dd4843"],
Cell[1534000, 30772, 279, 7, 24, "Print",ExpressionUUID->"acb73559-9ef5-4f12-9061-04ac6cf6fa25"],
Cell[1534282, 30781, 277, 7, 24, "Print",ExpressionUUID->"c924c324-6b85-4287-b39b-f564673c8529"],
Cell[1534562, 30790, 279, 7, 24, "Print",ExpressionUUID->"62887801-0741-4512-ae6e-39fcf07163b7"],
Cell[1534844, 30799, 277, 7, 24, "Print",ExpressionUUID->"36d2292f-dc1a-42fb-8bc3-f6cacd8ca9ae"],
Cell[1535124, 30808, 279, 7, 24, "Print",ExpressionUUID->"7f329fc6-d78e-43b0-b395-264f5912f41f"],
Cell[1535406, 30817, 277, 7, 24, "Print",ExpressionUUID->"23605e6f-0852-4993-ae45-a35ae78f7056"],
Cell[1535686, 30826, 279, 7, 24, "Print",ExpressionUUID->"a7d26c20-d94c-4257-a04e-9d14bce996fb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1536014, 30839, 617, 16, 67, "Input",ExpressionUUID->"504e566f-3637-46cc-92bb-38904c5c401b"],
Cell[1536634, 30857, 9587, 192, 71, "Output",ExpressionUUID->"18098499-1257-449d-886a-a8f517d2813c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1546258, 31054, 236, 5, 28, "Input",ExpressionUUID->"7b4aa3c4-cd64-4a72-b181-da2c241acc46"],
Cell[1546497, 31061, 331, 8, 32, "Output",ExpressionUUID->"cd91f6a0-7488-4056-bcf9-43f1178d1cd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1546865, 31074, 245, 5, 28, "Input",ExpressionUUID->"ecf214f7-3364-44e9-9c06-f2fb83c5ac37"],
Cell[1547113, 31081, 767, 19, 52, "Output",ExpressionUUID->"8b7090ba-c1e0-472e-9fd5-375b9f9a2af6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1547917, 31105, 891, 23, 48, "Input",ExpressionUUID->"ed1c8d2d-3dd9-4b5c-9100-73684e8f330e"],
Cell[1548811, 31130, 9590, 193, 71, "Output",ExpressionUUID->"bcd9070d-7675-4f79-8af2-44a79b91a0e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1558438, 31328, 232, 5, 28, "Input",ExpressionUUID->"82ef8342-8263-4e06-ad01-18be2f70c5a5"],
Cell[1558673, 31335, 326, 7, 32, "Output",ExpressionUUID->"03dce10e-567f-49f6-b52a-e5e4bf9c3626"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1559036, 31347, 220, 5, 48, "Input",ExpressionUUID->"f2075cc4-b21f-4c0a-97c3-fe83623f9b0d"],
Cell[1559259, 31354, 141, 3, 32, "Output",ExpressionUUID->"33603a22-2d6d-4fd7-833a-41d8405d1986"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1559437, 31362, 813, 22, 48, "Input",ExpressionUUID->"a4a39744-fc57-43a8-b56b-41f7b91895b5"],
Cell[1560253, 31386, 9590, 193, 71, "Output",ExpressionUUID->"292ba669-8060-4fe3-a5fb-a749793f6e9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1569880, 31584, 219, 5, 48, "Input",ExpressionUUID->"07b7520a-33e6-41d3-995c-795b1649e8b1"],
Cell[1570102, 31591, 140, 3, 32, "Output",ExpressionUUID->"dda0493b-c847-4759-8edd-374ef661a52a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1570279, 31599, 694, 19, 48, "Input",ExpressionUUID->"d4102107-788d-49e1-b489-04f4fe4bcb14"],
Cell[1570976, 31620, 141, 3, 32, "Output",ExpressionUUID->"53ab05c1-624b-4bd0-8cb0-478d7b964e13"]
}, Open  ]],
Cell[1571132, 31626, 409, 10, 28, "Input",ExpressionUUID->"1b7ba075-9ccd-4728-b490-489275529f69"],
Cell[CellGroupData[{
Cell[1571566, 31640, 340, 8, 28, "Input",ExpressionUUID->"3944cd18-64d5-4524-a6a0-3a7844f86e44"],
Cell[1571909, 31650, 9592, 193, 71, "Output",ExpressionUUID->"d96aade3-8fad-4d40-bea5-02bdab0a989f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1581538, 31848, 570, 15, 48, "Input",ExpressionUUID->"60b957db-9099-44e6-b60c-e6741bbbabe9"],
Cell[1582111, 31865, 10324, 211, 71, "Output",ExpressionUUID->"25fbe89a-5025-4eab-b537-cbecabfb5855"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1592472, 32081, 256, 5, 28, "Input",ExpressionUUID->"d971a203-9322-4940-88f2-5d5b8c0ec87d"],
Cell[1592731, 32088, 134, 3, 32, "Output",ExpressionUUID->"bbf7c90c-521a-4797-a4af-4829d920b3c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1592902, 32096, 809, 20, 48, "Input",ExpressionUUID->"07d10a16-c6af-4ef6-875e-d0df799a6dc3"],
Cell[1593714, 32118, 10324, 211, 71, "Output",ExpressionUUID->"1ff83ce5-b8e4-4fd8-87aa-2839a2461086"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1604075, 32334, 256, 5, 28, "Input",ExpressionUUID->"f441b272-928a-4edf-af5d-badc3b496cd1"],
Cell[1604334, 32341, 131, 2, 32, "Output",ExpressionUUID->"7f91b2f1-acf5-40d6-b9a0-6ed338b71d93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1604502, 32348, 120866, 2237, 432, "Input",ExpressionUUID->"e22923f4-81ce-4955-9bd7-30e1f7a1ef74"],
Cell[1725371, 34587, 10312, 211, 71, "Output",ExpressionUUID->"f7897f78-cfb4-4dfa-885f-db281977b6b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1735720, 34803, 11017, 201, 35, "Input",ExpressionUUID->"77384138-3407-4918-929a-61f0e7b775dc"],
Cell[1746740, 35006, 264, 7, 32, "Output",ExpressionUUID->"2348148f-8eb8-4435-9551-808a5fdeb341"]
}, Open  ]],
Cell[1747019, 35016, 2004, 34, 35, "Input",ExpressionUUID->"d9d38b1f-4d83-4218-a5e8-870bd819ffa2"],
Cell[1749026, 35052, 517, 12, 67, InheritFromParent,ExpressionUUID->"1893164f-419c-4cea-8539-6e18a9ec9b7c"],
Cell[1749546, 35066, 152, 3, 28, "Input",ExpressionUUID->"b9c856ba-78c7-47cf-bb41-dccc32b85d5b"],
Cell[CellGroupData[{
Cell[1749723, 35073, 177, 4, 28, "Input",ExpressionUUID->"f9dc0835-d388-44cc-b60f-98e41e685c0f"],
Cell[1749903, 35079, 130, 3, 32, "Output",ExpressionUUID->"9d13046c-963a-40a5-a06e-a8e8bf34e4bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1750070, 35087, 412, 10, 28, "Input",ExpressionUUID->"b39c9194-e4ec-4d45-9bb8-f2906c4c3d7a"],
Cell[1750485, 35099, 10318, 211, 71, "Output",ExpressionUUID->"afb6ba64-490f-4af0-a0c3-ba47bb909a65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1760840, 35315, 277, 7, 28, "Input",ExpressionUUID->"d7e38114-c79c-46e8-add2-d41c24425e8d"],
Cell[1761120, 35324, 143, 3, 32, "Output",ExpressionUUID->"24e3981a-44da-451d-a31d-b807ad57f652"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1761300, 35332, 461, 11, 48, "Input",ExpressionUUID->"20a316b6-b731-49c5-a835-fb5e34d0a36a"],
Cell[1761764, 35345, 7471, 151, 71, "Output",ExpressionUUID->"6063349e-ebcf-4f09-a891-a8fe5dd18227"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1769272, 35501, 205, 4, 28, "Input",ExpressionUUID->"a3587b80-5e9f-48fd-af37-2355aff0f931"],
Cell[1769480, 35507, 148, 3, 32, "Output",ExpressionUUID->"3ef7bad5-26df-4fde-b456-cf0de67626ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1769665, 35515, 209, 4, 28, "Input",ExpressionUUID->"c0d6f5ca-f876-451d-8ffd-c73362e9b4e9"],
Cell[1769877, 35521, 567, 11, 39, "Message",ExpressionUUID->"ecd24e1f-69d1-4280-8bb4-c605a5ce5814"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1770481, 35537, 7934, 158, 90, InheritFromParent,ExpressionUUID->"2f4bcd42-cee9-4d6a-89b0-45edda9f339d"],
Cell[1778418, 35697, 481, 10, 23, "Message",ExpressionUUID->"b6cdf469-e13e-41eb-9500-cfaed7a69afc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1778936, 35712, 7934, 158, 90, InheritFromParent,ExpressionUUID->"0f210ccd-5bdc-452b-9787-3338e121b38f"],
Cell[1786873, 35872, 481, 10, 23, "Message",ExpressionUUID->"8cc3d2de-691d-4821-bb18-f569ecfc71dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1787391, 35887, 435, 11, 48, "Input",ExpressionUUID->"cf065395-4676-433e-bb6d-144ffe975c9d"],
Cell[1787829, 35900, 7471, 151, 71, "Output",ExpressionUUID->"fd4166c3-18f5-46e9-8435-77cfb54d75ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1795337, 36056, 209, 4, 28, "Input",ExpressionUUID->"98c36061-73ec-4ae4-a135-63c6ceb5fde0"],
Cell[1795549, 36062, 17142, 448, 320, "Output",ExpressionUUID->"62cdd65d-8026-4972-9d4d-d99d3a2314e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1812728, 36515, 542, 14, 48, "Input",ExpressionUUID->"d55dac61-e2b9-4a3c-b385-b949437fcf4e"],
Cell[1813273, 36531, 2193, 68, 198, "Output",ExpressionUUID->"e0517bed-03bb-42e1-87d0-d0f20881fa04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1815503, 36604, 332, 8, 28, "Input",ExpressionUUID->"f520f799-603c-4cb9-97ce-c5c5896960e2"],
Cell[1815838, 36614, 9967, 203, 71, "Output",ExpressionUUID->"71248623-ec7d-467e-8253-64fddcda83a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1825842, 36822, 370, 10, 28, "Input",ExpressionUUID->"ec9feadc-d2c7-4d10-b597-24975feee581"],
Cell[1826215, 36834, 147, 3, 32, "Output",ExpressionUUID->"883ead9d-eae5-4ffa-8aa0-dfce8e2dc2ed"]
}, Open  ]],
Cell[1826377, 36840, 531, 15, 28, "Input",ExpressionUUID->"9fe95af2-6561-4b63-8ddb-1292ce37eafa"],
Cell[CellGroupData[{
Cell[1826933, 36859, 1846, 46, 162, "Input",ExpressionUUID->"df3e1585-67df-4fe6-9e91-2c07d18b971a"],
Cell[1828782, 36907, 18719, 375, 258, "Output",ExpressionUUID->"a5af5436-3eda-4515-b3ef-d27d983d5655"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1847538, 37287, 1820, 45, 162, "Input",ExpressionUUID->"07f901f2-66a5-42cf-9f7b-b6ca80336539"],
Cell[1849361, 37334, 25989, 513, 257, "Output",ExpressionUUID->"2529fc5d-d094-456a-a7dc-c7774de50cad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1875387, 37852, 415, 10, 28, "Input",ExpressionUUID->"472ec6e7-7106-4d0b-b5c5-e1331ce3e81c"],
Cell[1875805, 37864, 9645, 195, 71, "Output",ExpressionUUID->"03a1a593-4841-4d8f-acf5-016779cfbdc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1885487, 38064, 431, 8, 105, "Input",ExpressionUUID->"1f244b9c-033c-4ef1-b265-d78ffd0ceaf7"],
Cell[1885921, 38074, 147, 3, 32, "Output",ExpressionUUID->"e7c4143f-0b86-4b0f-8e23-715743600a91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1886105, 38082, 432, 11, 48, "Input",ExpressionUUID->"d50a57f0-9992-493f-bd07-e6265c1cf57c"],
Cell[1886540, 38095, 139, 3, 32, "Output",ExpressionUUID->"9d02f396-0cea-4bec-915b-85e9cae8e75a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1886716, 38103, 4026, 110, 295, "Input",ExpressionUUID->"ccd0b1cf-1ba1-4aa7-aeb4-7eb2a38629e6"],
Cell[1890745, 38215, 437, 10, 40, "Message",ExpressionUUID->"14584f12-2d19-400a-97bc-e0321ca8dc4a"],
Cell[1891185, 38227, 5127, 107, 233, "Output",ExpressionUUID->"691296a9-af30-4a52-a68a-e440fc385803"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1896349, 38339, 4024, 110, 295, "Input",ExpressionUUID->"bf67cd52-b0d5-4ba3-8f40-a0d3afa84cad"],
Cell[1900376, 38451, 439, 10, 40, "Message",ExpressionUUID->"46e464ea-51fc-4fba-af7e-ef5614f9097c"],
Cell[1900818, 38463, 4780, 100, 233, "Output",ExpressionUUID->"dba0c615-2432-43ee-89e2-117abbb8abcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1905635, 38568, 2358, 60, 238, "Input",ExpressionUUID->"9940ae31-af6b-441d-90e5-6ded4b3153b0"],
Cell[1907996, 38630, 10839, 229, 525, "Output",ExpressionUUID->"2aa1f1c8-339d-4034-8e7b-5988b0098067"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1918872, 38864, 1988, 55, 200, "Input",ExpressionUUID->"952fdfdd-d5df-4a93-a3fc-c1b0160c524e"],
Cell[1920863, 38921, 178773, 2983, 525, "Output",ExpressionUUID->"e9001ee1-ebe2-4dd0-9408-e2822ed81397"]
}, Open  ]]
}
]
*)

